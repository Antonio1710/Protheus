#INCLUDE "PROTHEUS.CH"
#INCLUDE "TOPCONN.ch"
#INCLUDE "FWMBROWSE.CH"
#INCLUDE "DBTREE.CH"
// #INCLUDE "ADFIS028R.CH"

//DEFINE ESTRUTURA DA TABELA ZFU (ARQUIVO DE FECHAMENTO)
/**********************
DEFINIÇÃO DE TABELAS
**********************/
#DEFINE T00PARAM	000
#DEFINE T01GIA		010
#DEFINE T02GIAST	020

#DEFINE T05DEMON	050
#DEFINE T06DIFNA	060
#DEFINE T06CFNCT	061

#DEFINE T08OUT01	080
#DEFINE T08OUT02	081
#DEFINE T08OUT03	082

#DEFINE T09OUT01	090
#DEFINE T09OUT02	091

#DEFINE T14GRAXA	140

#DEFINE T20NFCAN	200

#DEFINE T22REVTR	220
#DEFINE T22RVTRR	221

#DEFINE T26OUT01	090 //VALOR IGUAL T09OUT01
#DEFINE T26OUT02	091 //VALOR IGUAL T09OUT02

#DEFINE T27IVA		270
#DEFINE T27DETMP  271

#DEFINE T28CIAP   280

#DEFINE T29COMMP  300

#DEFINE T30VENFV  300

#DEFINE T31APICM	270
#DEFINE T31DETAI  271

#DEFINE T32NFSER  300

#DEFINE T33ENTSA  310

#DEFINE T36RESUM  320
#DEFINE T36DETAL  330
/**********************
//DEFINIÇÃO DE CAMPOS
000 000000
 |     |-> SEQUENCIAL DOS CAMPOS COM INTERVALO DE 10 EM 10 PARA PERMITIR CRIAR CAMPOS ENTRE AS LINHAS JÁ CRIADAS
 |-> NUMERO DA TABELA EX: 000 PARAMETROS, 001 ABERTURA GIA, 011 POLENTA
**********************/
#DEFINE C00100		'000000100' //DATA INICIAL
#DEFINE C00110		'000000110' //DATA FINAL
#DEFINE C00120		'000000120' //PERIODO
#DEFINE C00130		'000000130' //USUARIO
#DEFINE C00140		'000000140' //DATA FECHAMENTO
#DEFINE C00150		'000000150' //HORA FECHAMENTO
#DEFINE C00160		'000000160' //DATA REABERTURA
#DEFINE C00170		'000000170' //HORA REABERTURA

#DEFINE C05100		'005000100' //SALDO MES ANTERIOR
#DEFINE C05200		'005000200' //ESTORNO DEBITO
#DEFINE C05250		'005000250' //OUTROS DEBITOS
#DEFINE C05300		'005000300' //ESTORNO CREDITO
#DEFINE C05350		'005000350' //OUTROS CREDITOS
#DEFINE C05351		'005000351' //APROPR CRED ACUMUL OUTROS DEBITOS
#DEFINE C05352		'005000352' //APROPR CRED ACUMUL OUTROS CREDITOS
#DEFINE C05500		'005000500' //APROPRIAÇÃO MÊS ANTERIOR
#DEFINE C05600		'005000600' //SOLICITAÇÃO DGCA
#DEFINE C05999		'005000999' //SALDO MES ATUAL

#DEFINE C06100		'006000100' //% UF DESTINO
#DEFINE C06110		'006000110' //% UF ORIGEM

#DEFINE C09990		'009009900' //REGISTROS CLASSIFICADOS OUTRAS SAIDAS
#DEFINE C11110		'011001100' //REGISTROS CLASSIFICADOS OUTRAS ENTRADAS
#DEFINE C11111		'Outras Entr. Cesta Básica' //REGISTROS CLASSIFICADOS OUTRAS ENTRADAS
#DEFINE C11112		'Outras Entr. Remessa p Teste' //REGISTROS CLASSIFICADOS OUTRAS ENTRADAS
#DEFINE C11113		'Outras Entr. Retorno Criação' //REGISTROS CLASSIFICADOS OUTRAS ENTRADAS
#DEFINE C11114		'Outras Entr. 4' //REGISTROS CLASSIFICADOS OUTRAS ENTRADAS
#DEFINE C11115		'Outras Entr. 5' //REGISTROS CLASSIFICADOS OUTRAS ENTRADAS
#DEFINE C11116		'Outras Entr. 6' //REGISTROS CLASSIFICADOS OUTRAS ENTRADAS
#DEFINE C11117		'Outras Entr. 7' //REGISTROS CLASSIFICADOS OUTRAS ENTRADAS
#DEFINE C11118		'Outras Entr. 8' //REGISTROS CLASSIFICADOS OUTRAS ENTRADAS
#DEFINE C11119		'Outras Entr. 9' //REGISTROS CLASSIFICADOS OUTRAS ENTRADAS
#DEFINE C11120		'Outras Entr. 10' //REGISTROS CLASSIFICADOS OUTRAS ENTRADAS
#DEFINE C11121		'Outras Entr. 11' //REGISTROS CLASSIFICADOS OUTRAS ENTRADAS
#DEFINE C11122		'Outras Entr. 12' //REGISTROS CLASSIFICADOS OUTRAS ENTRADAS
#DEFINE C11123		'Outras Entr. 13' //REGISTROS CLASSIFICADOS OUTRAS ENTRADAS
#DEFINE C11124		'*** Sem Classificação ***' //REGISTROS CLASSIFICADOS OUTRAS ENTRADAS

#DEFINE P90000    '999999999' //PARAMETROS UTILIZADOS NO FECHAMENTO

/*/{Protheus.doc} User Function ADFIS028R
	Painel Fiscal de Apuração do ICMS
	@author Abel Babini Filho
	@since 21/01/2019
	@version 17
	@history Chamado n.040925 - OS n.042026 - Abel Babini - 30/04/2019 - Relatorio Embutidos
	@history Chamado n.040926 - OS n.042025 - Abel Babini - 01/04/2019 - Relatorio Polenta
	@history Chamado n.040927 - OS n.042024 - Abel Babini - 01/04/2019 - Relatorio Uniforme
	@history Chamado n.040928 - OS n.042023 - Abel Babini - 23/04/2019 - Relatorio Retorno Industrial.
	@history Chamado n.048575 - OS n.049846 - Abel Babini - 23/04/2019 - Relatorio Credito Presumido
	@history Chamado n.040924 - OS n.042027 - Abel Babini - 07/05/2019 - Relatorio Dif. de Alíquota
	@history Chamado n.040923 - OS n.042031 - Abel Babini - 20/08/2019 - Relatorio Crédito Outorgado
	@history Chamado n.040930 - OS n.042021 - Abel Babini - 24/06/2019 - Relatorio Indust. por Terceiros
	@history Chamado n.050629 - OS n.052800 - Abel Babini - 27/08/2019 - Relatorio Devolução de Compras
	@history Chamado n.050629 - OS n.052801 - Abel Babini - 02/12/2019 - Relatorio Outras Saídas
	@history Chamado n.050629 - OS n.052817 - Abel Babini - 01/10/2019 - Relatorio Apuração ICMS Frete
	@history Chamado Interno TI 						- Abel Babini - 20/09/2019 - Ajustes no Painel Fiscal para não permitir gerar mais do que 30 dias
	@history Chamado n.050629 - OS n.054316 - Abel Babini - 28/10/2019 - Relatorio Almondegas
	@history Chamado n.050629 - OS n.054314 - Abel Babini - 28/10/2019 - Relatorio Abertura GIA ST
	@history Chamado n.050629 - OS n.054353 - Abel Babini - 29/10/2019 - Relatorio Graxaria
	@history Chamado n.050629 - OS n.054354 - Abel Babini - 29/10/2019 - Relatorio Compra Lenha
	@history Chamado n.050629 - OS n.054355 - Abel Babini - 29/10/2019 - Relatorio Compra Aves
	@history Chamado n.040929 - OS n.042022 - Abel Babini - 12/11/2019 - Relatorio Legumes
	@history Chamado n.050629 - OS n.       - Abel Babini - 28/10/2019 - Relatorio Abertura GIA
	@history Chamado n.050629 - OS n.054356 - Abel Babini - 11/11/2019 - Relatorio Nao Comestiveis
	@history Chamado n.050629 - OS n.054821 - Abel Babini - 18/11/2019 - Relatório Demonstrativo
	@history Chamado n.050629 - OS n.054855 - Abel Babini - 19/11/2019 - Relatório Revenda Tributada
	@history Chamado n.050629 - OS n.055359 - Abel Babini - 06/01/2020 - Relatório Difal Nao Contribuinte
	@history Chamado n.055157 - OS n.056585 - Abel Babini - 28/01/2020 - Relatório Outras Entradas
	@history Chamado n.055548 - OS n.056953 - Abel Babini - 10/02/2020 - Painel Fiscal São Carlos e Ajustes em VP
	@history Chamado n.055548 - OS n.057704 - Abel Babini - 24/03/2020 - Painel Fiscal ICMS SC - Relatório Compra MP
	@history Chamado n.055548 - OS n.057705 - Abel Babini - 17/03/2020 - Painel Fiscal ICMS SC - Relatório Ind Uso e Consumo - Ajustes Filial SC
	@history Chamado n.055548 - OS n.058176 - Abel Babini - 27/03/2020 - Painel Fiscal ICMS GO - Ajustes na Apuração de ICMS GO
	@history Chamado n.040935 - OS n.042015 - Abel Babini - 03/04/2020 - Rel. Resumo Ceres - Entradas e Saidas por produto
	@history Chamado n.057231 - OS n.058702 - Abel Babini - 07/04/2020 - Correções no Rel. de Uniformes que apresentaram o valor de crédito errado
	@history Chamado n.058111 - OS n.059575 - Abel Babini - 07/05/2020 - Considerar também o CFOP 7105 no Rel. Cred. Outorgado
	@history Chamado n.058111 - OS n.059575 - Abel Babini - 07/05/2020 - Ajuste na query para considerar possibilidade do campo D1_PCIM estar zerado quando Fornecedores Optantes pelo Simples Nacional
	@history Chamado n.058111 - OS n.059575 - Abel Babini - 11/05/2020 - Ajuste na query para considerar toda operação de outras saídas, independente do campo F4_CREDICM, mas que o campo FT_VALICM > 0
	@history Chamado n.Interno- OS n.       - Abel Babini - 14/05/2020 - Correção de Error.log
	@history Chamado Interno TI - OS        - Abel Babini - 29/05/2020 - Painel Fiscal ICMS - Ajuste de Error.log no Modelo2 - Criação de variáveis
	@history Chamado Interno TI - OS        - Abel Babini - 13/07/2020 - Excluir rotina que causa erro na compilação no Release 12.1.27
	@history Chamado n.060037 - OS n.061528 - Abel Babini - 27/07/2020 - Excluir filtro de Formulário próprio do relatório de Lenha e incluir informação no Demonstrativo e Abertura da Gia
	@history Chamado n.060517 - OS n.062030 - Abel Babini - 17/08/2020 - Altera regra de calculo do ICMS sobre Frete para os modelos 2 e 4
	@history Ticket 1545                    - Abel Babini - 14/09/2020 - Ajuste no fechamento das tabelas temporárias
	@history Ticket 1707                    - Abel Babini - 16/09/2020 - Ajuste no fechamento das tabelas temporárias - Error.log
	@history Ticket 3037                    - Abel Babini - 16/09/2020 - Painel Fiscal Granja RNX2 - Diferencial de alíquota da granja não considerar CFOP 2251
	@history Ticket 3035                    - Abel Babini - 16/09/2020 - Painel Fiscal Ceres - Relatório de frete - Criar regra por produto para transporte de funcionários. Ajuste no calculo Difal não contribuinte.
	@history Ticket 4679                    - Abel Babini - 06/11/2020 - Painel Fiscal VP - Relatório Abertura da GIA - Correção no valor das exportações
	@history Ticket 5252                    - Abel Babini - 17/11/2020 - Painel Fiscal - Alteração de parâmetros pelo usuário
	@history Ticket 6216                    - Abel Babini - 07/12/2020 - Painel Fiscal - Acrescentar CFOP 6109 no relatório Credito Outorgado 7% Interestadual
	@history Ticket 6225                    - Abel Babini - 07/12/2020 - Painel Fiscal - Criar linha para anulação extemporânea de frete
	@history Ticket 7689                    - Leonardo P. - 07/01/2021 - Tratamento do error.log ao selecionar a opção 'Exp. Todas' na filial 08-Goiás.
	@history Ticket 8050                    - Abel Babini - 18/01/2021 - Alteração de alíquotas nos relatórios de crédito outorgado
	@history Ticket 10417										- Abel Babini - 05/03/2021 - Retirar filtro B1_TIPO NOT IN ('MO') para Relatório de Industrialização de PA, e acrescentado filtro no relatório de Poder de Terceiros, colocar 4 casas decimais no relatório de poder de 3os
	@history Ticket 10535										- Abel Babini - 09/03/2021 - Criar relatório de conferência de faturamento por tipo de cliente e regime de apuração.
	@history Ticket 12090										- Abel Babini - 09/04/2021 - Acrescentar CFOPs 6905 e 2906 como Outros Débitos e Outros Créditos respectivamente nas abas Demonstrativo e Abertura da Gia
	@history Ticket 12473                   - Abel Babini - 19/04/2021 - Alteração de alíquotas nos relatórios de crédito outorgado para o mês de abril/2021
	@history Ticket 18004                   - Abel Babini - 17/08/2021 - Alterações no Painel Fiscal - Apuração de Frete e criação do relatório Débito Serv. Industrialização
	@history Ticket 62140										- Abel Babini - 07/10/2021 - Ajustado relatório Porder 3 e adicionado Valores de Dev Serv Industr na Abertura da Gia para Safegg
	@history Ticket 64836										- Abel Babini - 07/12/2021 - Ajustar query do relatório de Poder de 3s no Relatório de Industriazação de PA para considerar data de digitação e não data de emissão
	@history Ticket 70142                   - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
	/*/

User Function ADFIS028R()
	Local aArea		:= GetArea()
	Local aPergs	:= {}
	Local oDlgMenu := Nil
	
	Private nOpMdl		:= 0
	Private cCadastr  := OemToAnsi("PAINEL FISCAL ICMS - v2.02")
	Private cPathRel
	//Definição de Fontes
	Private oFont001	:= TFont():New( "Arial",,14,,.f.,,,,,.f. )
	Private oFont002	:= TFont():New( "Arial",,16,,.T.,,,,,.f. )
	Private oFont003	:= TFont():New( "Arial",,18,,.T.,,,,,.f. )

	Private _mvpr01
	Private _mvpr02

	Private _cMesI		:= ""
	Private _cAnoI		:= ""
	Private _cMesAnt	:= ""
	Private _cAnoAnt	:= ""
	Private _cMesF		:= ""
	Private _cAnoF		:= ""
	Private aRet		:= {}

	Private _cEspMes	:= ""
	Private _cNomUse	:= Alltrim(substr(cUsuario,7,15))

	//LOG DE EXECUÇÃO DA ROTINA
	U_ADINF009P(SUBSTRING(ALLTRIM(PROCNAME()),3,LEN(ALLTRIM(PROCNAME()))) + '.PRW',SUBSTRING(ALLTRIM(PROCNAME()),3,LEN(ALLTRIM(PROCNAME()))),'Painel Fiscal de Apuração do ICMS')
	
	//Chama a User Function ADFIS038R apenas para registrar o uso do fonte, pois o mesmo possui várias outras static function do Painel Fiscal ICMS
	U_ADFIS038R()

	//-----------------------------------
	//INÍCIO DO PROGRAMA
	//-----------------------------------
	//Adiciona Perguntas / Parâmetros ao relatório
	aAdd( aPergs ,{1,"Data De "     ,Ctod(space(8)),"" ,'.T.',,'.T.',80,.T.})
	aAdd( aPergs ,{1,"Data Até"     ,Ctod(space(8)),"" ,'.T.',,'.T.',80,.T.})
	aAdd( aPergs ,{6,"Local de Gravação",Space(50),"","","",50,.T.,"Todos os arquivos (*.*) |*.*","C:\TEMP\",GETF_RETDIRECTORY + GETF_LOCALHARD + GETF_NETWORKDRIVE})

	//Executa as perguntas ao usuário e só executa o relatório caso o usuário confirme a tela de parâmetros;
	If ParamBox(aPergs ,"Parâmetros ",aRet,,,,,,,,.T.,.T.)
		_lPerg	:= .T.

		_mvpr01	:= aRet[1]
		_mvpr02	:= aRet[2]
		cPathRel:= alltrim(aRet[3])
		//Valida Informações das datas informadas:
		_cMesI	:= StrZero(Month(_mvpr01),2)
		_cAnoI	:= Alltrim(Str(Year(_mvpr01)))
		_cMesF	:= StrZero(Month(_mvpr02),2)
		_cAnoF	:= Alltrim(Str(Year(_mvpr02)))
		If !(_cMesI == _cMesF) .Or. !(_cAnoI == _cAnoF)
			Alert('É necessário que Mês e Ano inicial sejam iguais ao Mês e Ano final. Impossível continuar!')
			_lPerg = .F.
		Endif
	Else
		Alert("Não foram informados os parâmetros. Operação cancelada!")
		Return
	Endif

	//Interno TI- ABEL - 20/09/2019 || Ajustes no Painel Fiscal para não permitir gerar mais do que 30 dias
	if _lPerg
		//cPathRel	:= cGetFile("Arquivo XML", "Selecione o diretório para salvar o relatório",1,'C:\TEMP\',.T.,GETF_RETDIRECTORY + GETF_LOCALHARD + GETF_NETWORKDRIVE)
		//IF Alltrim(cPathRel) == ""
		//	cPathRel := "C:\TEMP\"
		//ENDIF

		//INICIO Chamado n.055548 - OS n.056953 - Painel Fiscal São Carlos e Ajustes em VP - Abel Babini - 10/02/2020
		DEFINE MSDIALOG oDlgMenu TITLE cCadastr OF oMainWnd PIXEL FROM 50,50 TO 150,500
			@ 001,001 TO 050,227 OF oDlgMenu PIXEL

			@ 004,008 SAY OemToAnsi("Ano")		FONT oFont002 SIZE 022,7 OF oDlgMenu PIXEL			 //"Ano"
			@ 004,036 SAY OemtoAnsi("Mês")		FONT oFont002 SIZE 030,7 OF oDlgMenu PIXEL			 //"Mês"
			@ 004,060 SAY OemToAnsi("Filial")	FONT oFont002 SIZE 021,7 OF oDlgMenu PIXEL			 //"Filial"

			@ 012,008 SAY OemToAnsi(_cAnoI)	FONT oFont001 SIZE 022,7 OF oDlgMenu PIXEL			 //"Ano"
			@ 012,036 SAY OemtoAnsi(_cMesI)	FONT oFont001 SIZE 030,7 OF oDlgMenu PIXEL			 //"Mês"
			@ 012,060 SAY OemToAnsi(SM0->M0_FILIAL)	FONT oFont001 SIZE 060,7 OF oDlgMenu PIXEL			 //"Filial"

			//Chamado n.040935 - OS n.042015 - Abel Babini - 03/04/2020 - Rel. Resumo Ceres - Entradas e Saidas por produto
			IF cEmpAnt $ '01/03/04/05/06/08/10'
				IF cFilAnt $'01/02/0B'
					@ 030,010 BUTTON OemToAnsi('Mod 01 - VP')	SIZE 42,13 FONT oDlgMenu:oFont ACTION (nOpMdl:=1, oDlgMenu:End()) OF oDlgMenu PIXEL //"Exportar Excel"
				ELSEIF cFilAnt $'08'
					@ 030,110 BUTTON OemToAnsi('Mod 03 - GO')	SIZE 42,13 FONT oDlgMenu:oFont ACTION (nOpMdl:=3, oDlgMenu:End()) OF oDlgMenu PIXEL //"Sair" //U_FNNAOIMP() OF oDlgMenu PIXEL //"Sair"
				ELSE
					@ 030,060 BUTTON OemToAnsi('Mod 02')	SIZE 42,13 FONT oDlgMenu:oFont ACTION (nOpMdl:=2, oDlgMenu:End()) OF oDlgMenu PIXEL //"Sair"
				ENDIF
			ELSEIF cEmpAnt == '02'
				@ 030,010 BUTTON OemToAnsi('Mod 04 - Ceres')	SIZE 42,13 FONT oDlgMenu:oFont ACTION (nOpMdl:=4, oDlgMenu:End()) OF oDlgMenu PIXEL //"Sair"
			ELSEIF cEmpAnt == '07'
				@ 030,010 BUTTON OemToAnsi('Mod 04 - RNX2')	SIZE 42,13 FONT oDlgMenu:oFont ACTION (nOpMdl:=4, oDlgMenu:End()) OF oDlgMenu PIXEL //"Sair"
			ELSEIF cEmpAnt == '09'
				@ 030,010 BUTTON OemToAnsi('Mod 02 - SafEgg')	SIZE 42,13 FONT oDlgMenu:oFont ACTION (nOpMdl:=2, oDlgMenu:End()) OF oDlgMenu PIXEL //"Sair"
			ENDIF

			@ 030,177 BUTTON OemToAnsi('Sair')			SIZE 42,13 FONT oDlgMenu:oFont ACTION oDlgMenu:End() OF oDlgMenu PIXEL //"Sair"
			
		ACTIVATE MSDIALOG oDlgMenu

		//Apresenta tela do Painel
		If nOpMdl == 1
			MsgRun( "Carregando dados - Painel Fiscal ICMS Modelo VP, aguarde...",,{ || PNCON001() } )
		Elseif nOpMdl == 2
			MsgRun( "Carregando dados - Painel Fiscal ICMS Modelo SC, aguarde...",,{ || PNCON001() } )
		Elseif nOpMdl == 3
			MsgRun( "Carregando dados - Painel Fiscal ICMS Modelo GO, aguarde...",,{ || PNCON001() } ) //U_FNNAOIMP()
			//MsgRun( "Carregando dados - Painel Fiscal ICMS, aguarde...",,{ || U_ADFIS038R() } )
		Elseif nOpMdl == 4
			MsgRun( "Carregando dados - Painel Fiscal ICMS Modelo Ceres, aguarde...",,{ || PNCON001() } ) //U_FNNAOIMP()
		Endif

		//FIM Chamado n.055548 - OS n.056953 - Painel Fiscal São Carlos e Ajustes em VP - Abel Babini - 10/02/2020
	endif

	RestArea(aArea)
Return

/*/{Protheus.doc} User Function PNCON001
	Rotina de Exibição do Painel Fiscal
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function PNCON001()
	Local aSize   	:= MsAdvSize(.f.)
	Local aInfo   	:= {aSize[1],aSize[2],aSize[3],aSize[4],3,3}
	Local aObjects	:= aPosObj := {}
	Local cHrIni, cHrFim
	Local i

	//---------------------------------------------
	//Variáveis do Browser04 - ABERTURA GIA ST
	//---------------------------------------------
	Local oFLr04p1, oPn04TE, oPn04DE, oPn04RE

	//---------------------------------------------
	//Variáveis do Browser05 - DEMONSTRATIVO
	//---------------------------------------------
	//Local oFLr05p1, oPn05TE, oPn05DE, oPn05RE
	Local oBrw05Rs

	//Variáveis do Browser06 - DIFAL NAO CONTRIBUINTES
	Local aFld06	:= {"Resumo","Conf. Cad. Clientes"}

	//---------------------------------------------
	//Variáveis do Browser07 - DIFERENCIAL DE ALIQUOTA //INICIO n.040924  - Relatorio Dif. de Alíquota - Abel Babini - 07/05/2019
	//---------------------------------------------
	Local oFWLr07, oPn07T1, oPn07DE, oPn07R1
	Local oBrw07Rs
	// FIM n.040924  - Relatorio Dif. de Alíquota - Abel Babini - 07/05/2019

	//---------------------------------------------
	//Variáveis do Browser08 - CREDITO OUTORGADO
	//---------------------------------------------
	Local oFLr08p1,oFLr08p2,oFLr08p3,oFLr08p4,oP08TE01,oP08D101,oP08RE01
	Local aFld08	:= {"Resumo","Créd. Interestadual 7%","Créd. Estadual 5%","Créd. Estadual 7%"}
	Local nColBr08	:= 0

	// INICIO Chamado n.050629 - OS n.052801 - Relatorio Outras Saídas - Abel Babini - 02/12/2019
	//---------------------------------------------
	//Variáveis do Browser09 - OUTRAS SAIDAS
	//---------------------------------------------
	Local oPn09T1,oPn09T2
	Local oPn09DE1,oPn09DE2
	Local oPn09R1,oPn09R2
	Local aFld09	:= {"Classif. Outras Saídas","Resumo Outras Saídas"}
	Local cClassif := ""
	//Local cChave := Space(255)
	Local nClassif := 1
	//Local nOpcao := 0
	// FIM Chamado n.050629 - OS n.052801 - Relatorio Outras Saídas - Abel Babini - 02/12/2019

	// INICIO n.050629  - Relatorio Devolução de Compras - Abel Babini - 27/08/2019
	//---------------------------------------------
	//Variáveis do Browser10 - DEVOLUCOES DE COMPRAS
	//---------------------------------------------
	Local oPn10T1, oPn10T2, oPn10DE1, oPn10DD1, oPn10R1
	Local oBrw10In, oBrw10Mc

	// FIM n.050629  - Relatorio Devolução de Compras - Abel Babini - 27/08/2019

	//---------------------------------------------
	//Variáveis do Browser11 - POLENTA
	//---------------------------------------------
	//Local cBrw11	:= 'Polenta'
	//Local oBrw11
	Local oFWLr11, oPn11TE,oPn11TD,oPn11DE,oPn11DD,oPn11CE,oPn11CD,oPn11RE,oPn11RD
	Local oBrw11Db, oBrw11Cr

	//---------------------------------------------
	//Variáveis do Browser12 - EMBUTIDOS
	//---------------------------------------------
	//Local cBrw12	:= 'Embutidos'
	//Local oBrw12
	Local oFWLr12, oPn12TE,oPn12TD,oPn12DE,oPn12DD,oPn12CE,oPn12CD,oPn12RE,oPn12RD
	Local oBrw12Db, oBrw12Cr

	//---------------------------------------------
	//Variáveis do Browser13 - ALMONDEGAS
	//---------------------------------------------
	Local oFWLr13, oPn13TE,oPn13TD,oPn13DE,oPn13DD,oPn13CE,oPn13CD,oPn13RE,oPn13RD
	Local oBrw13Db, oBrw13Cr

	//---------------------------------------------
	//Variáveis do Browser14 - GRAXARIA
	//---------------------------------------------
	Local oFLr14p1,oFLr14p2, oFLr14p3, oFLr14p4
	Local oP14TE01,oP14D101,oP14RE01
	Local oP14TE02,oP14D102,oP14RE02
	Local oP14TE03,oP14D103,oP14RE03
	Local aFld14	:= {"Resumo","Análise Vendas","Análise Transferências","Análise Devoluções"}

	//---------------------------------------------
	//Variáveis do Browser15 - COMPRA DE LENHA
	//---------------------------------------------
	Local oFLr15p1, oFLr15p2
	Local oP15TE01,oP15D101,oP15RE01
	Local oP15TE02,oP15D102,oP15RE02

	Local aFld15	:= {"Resumo","Detalhe"}

	//---------------------------------------------
	//Variáveis do Browser16 - COMPRA DE AVES
	//---------------------------------------------
	Local oFLr16p1, oFLr16p2
	Local oP16TE01,oP16D101,oP16RE01
	Local oP16TE02,oP16D102,oP16RE02

	Local aFld16	:= {"Resumo","Detalhe"}

		//---------------------------------------------
	//Variáveis do Browser17 - LEGUMES
	//---------------------------------------------
	Local oFld17
	Local oFLr17p1,oFLr17p2, oFLr17p3
	Local oP17TE01,oP17D101,oP17RE01
	Local oP17TE02,oP17D102,oP17RE02
	Local oP17TE03,oP17D103,oP17RE03

	Local aFld17	:= {"Resumo","Compras","Revendas"}

	//--------------------------------------------**
	//Variáveis do Browser18 - UNIFORMES
	//---------------------------------------------
	//Local cBrw18	:= 'Uniformes'
	Local oFLr18p1, oPn18T1,oPn18D1E,oPn18D1D

	//--------------------------------------------**
	//Variáveis do Browser19 - NAO COMESTIVEIS
	//---------------------------------------------
	Local oFLr19p1, oFLr19p2, oFLr19p3
	Local oP19TE01,oP19D101,oP19RE01
	Local oP19TE02,oP19D102,oP19RE02
	Local oP19TE03
	Local aFld19	:= {"Resumo","Mercado Interno","Mercado Externo","Devoluções"}

	//--------------------------------------------**
	//Variáveis do Browser21 - INDUSTR USO E CONSUMO
	//---------------------------------------------
	Local oFLr21p1, oPn21T1, oPn21D1E

	//--------------------------------------------**
	//Variáveis do Browser22 - REVENDA TRIBUTADA
	//---------------------------------------------
	Local oFLr22p1
	Local oPn22T1
	Local oPn22D1E
	Local oPn22R1

	//---------------------------------------------
	//Variáveis do Browser23 - INDUSTR EMBUTIDOS
	//---------------------------------------------
	Local oFLr23p1, oFLr23p2, oFLr23p3, oFLr23p4, oFLr23p5, oFLr23p6
	Local oP23TE01,oP23D101,oP23RE01
	Local oP23TE02,oP23D102
	Local oP23D104
	Local nColBr23
	Local aFld23	:= {"Resumo",;
										"Remessas",;
										"Retornos",;
										"Ordens de Produção",;
										"Saldo Poder de 3ºs",;
										"Insumos não Utiliz.",;
										"Resumo Por Produto"}

	//---------------------------------------------
	//Variáveis do Browser24 - APURACAO ICMS FRETE
	//---------------------------------------------
	Local oFLr24p1, oFLr24p2, oFLr24p3, oFLr24p4, oFLr24p5, oFLr24p6
	Local oP24TE01,oP24D101,oP24RE01
	Local oP24TE02,oP24D102,oP24RE02
	Local oP24TE03,oP24D103,oP24RE03
	Local oP24TE04,oP24D104,oP24RE04
	Local oP24TE05,oP24D105,oP24RE05
	Local oP24TE06,oP24D106,oP24RE06

	Local aFld24	:= {"Resumo","Detalhe","Exportação","Substituição Tributária Estadual","Substituição Tributária Interestadual","Transporte de Funcionários","Tributado","Anulação de Frete","Análise Fornecedores"}
	Local aFld24b	:= {"Resumo","Detalhe"}
	Local aFld24c	:= {"Resumo","Detalhe","Substituição Tributária Estadual","Substituição Tributária Interestadual","Transporte de Funcionários","Tributado","Anulação de Frete","Análise Fornecedores"}
	//--------------------------------------------
	//Variáveis do Browser25 - CELULARES
	//---------------------------------------------
	Local oFLr25p1, oPn25T1,oPn25D1E,oPn25D1D

	//INICIO Chamado n.055157 - OS n.056585 - Relatório Outras Entradas - Abel Babini - 28/01/2020
	//--------------------------------------------
	//Variáveis do Browser26 - Outras Entradas
	//---------------------------------------------
	Local oPn26T1,oPn26T2
	Local oPn26DE1,oPn26DE2
	Local oPn26R1,oPn26R2
	Local aFld26	:= {"Classif. Outras Entradas","Resumo Outras Entradas"}
	Local cClassOE := ""
	//Local cChave := Space(255)
	Local nClassOE := 1
	//FIM Chamado n.055157 - OS n.056585 - Relatório Outras Entradas - Abel Babini - 28/01/2020

	//---------------------------------------------
	//Variáveis do Browser35 - CREDITO OUTORGADO 2021
	//---------------------------------------------
	Local oFLr35p1,oFLr35p2,oFLr35p3,oFLr35p4,oP35TE01,oP35D101,oP35RE01
	Local aFld35	:= {}
	Local nColBr35	:= 0

	//INICIO Ticket 10535										- Abel Babini - 09/03/2021 - Criar relatório de conferência de faturamento por tipo de cliente e regime de apuração.
	//--------------------------------------------**
	//Variáveis do Browser36 - CONFERENCIA DO FATURAMENTO
	//---------------------------------------------
	// Local oFLr36p1, oFLr36p2
	// Local oP36TE01,oP36D101,oP36RE01
	// Local oP36TE02,oP36D102,oP36RE02
	// Local aFld36	:= {"Resumo","Detalhe das operações"}
	// Local nColBr36
	//FIM Ticket 10535										- Abel Babini - 09/03/2021 - Criar relatório de conferência de faturamento por tipo de cliente e regime de apuração.

	//Ticket 18004                   - Abel Babini - 17/08/2021 - Alterações no Painel Fiscal - Apuração de Frete e criação do relatório Débito Serv. Industrialização
	//---------------------------------------------
	//Variáveis do Browser37 - DÉBITO SERV INDUSTRIALIZAÇÃO
	//---------------------------------------------
	Local oFLr37p1, oFLr37p2
	Local oP37TE01,oP37D101,oP37RE01
	Local oP37TE02,oP37D102,oP37RE02
	Local aFld37	:= {"Resumo","Detalhe"}

	//---------------------------------------------
	//Variáveis Privadas
	//---------------------------------------------
	Private oDlg		:= Nil
	Private _lAbreEx	:= .T.
	Private oFLr05p1, oPn05TE, oPn05DE, oPn05RE
	Private oFolder030
	Private cFld01 := 'Informações Gerais'
	Private cFld02 := '*** Parâmetros ***'
	Private cFld03 := 'Abertura GIA'
	Private cFld031 := 'Detalhamento'
	Private cFld03t1 := cFld03 + ' - Detalhamento'+ ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'

	//-----------------------------------
	//Variáveis BROWSER 00 - PARÂMETROS
	//-----------------------------------
	Private cAlB00Es, cAlB00Rs, cAlB00Fc
	Private aBrw01Pr:={}
	Private oAlB00Rs

	//INICIO Ticket 5252                    - Abel Babini - 17/11/2020 - Painel Fiscal - Alteração de parâmetros pelo usuário
	Private _cMVUsPr	:= GETMV("MV_#PNUSPR",,"002047") //Usuário com permissão de alterar parâmetros
	Private _lMVUsPr	:= IIF(__cUserId $ Alltrim(_cMVUsPr),.T.,.F.)
	//FIM Ticket 5252                    - Abel Babini - 17/11/2020 - Painel Fiscal - Alteração de parâmetros pelo usuário

	//-----------------------------------
	//Variáveis BROWSER 03 - ABERTURA GIA
	//-----------------------------------
	Private aBrw03Rs	:= {}
	Private cAlB03Rs:=GetNextAlias()
	Private oAlB03Rs
	Private _cMVMstr	:= GETMV("MV_#PNUSMR",,"") //Usuário com permissão de fechamento do Período no 
	Private _lMsUser	:= IIF(__cUserID $ _cMVMstr, .T., .F.)
	Private aSldFcht	:= xSldFcht()
	Private _lPerFch	:= IIF(aSldFcht[16],.T.,.F.)
	//INICIO Ticket 12090										- Abel Babini - 09/04/2021 - Acrescentar CFOPs 6905 e 2906 como Outros Débitos e Outros Créditos respectivamente nas abas Demonstrativo e Abertura da Gia
	Private _cCfNM01 := GETMV("MV_#CFNM01",,"1101/1122/1126/1152/1201/1202/1208/1410/1503/1903/1907/1910/1949") //CFOP Mapeados Entradas Estaduais
	Private _cCfNM02 := GETMV("MV_#CFNM02",,"2101/2102/2122/2126/2201/2202/2203/2410/2503/2906/2910/2949") //CFOP Mapeados Entradas Interestaduais
	Private _cCfNM03 := GETMV("MV_#CFNM03",,"3201/3556") //CFOP Mapeados Entradas Importação
	Private _cCfNM04 := GETMV("MV_#CFNM04",,"5101/5102/5105/5116/5118/5122/5151/5201/5252/5401/5401/5501/5551/5553/5556/5557/5901/5910/5911/5913/5918/5922/5949") //CFOP Mapeados Saídas Estaduais
	Private _cCfNM05 := GETMV("MV_#CFNM05",,"6101/6102/6105/6107/6108/6109/6116/6118/6122/6201/6401/6551/6553/6556/6557/6901/6905/6909/6910/6911/6913/6918/6922/6949") //CFOP Mapeados Saídas Interestaduais
	Private _cCfNM06 := GETMV("MV_#CFNM06",,"7101/7102/7105/7556") //CFOP Mapeados Saídas Exportação
	
	//-----------------------------------
	//Variáveis BROWSER 04 - ABERTURA GIA ST
	//-----------------------------------
	Private aBrw04Rs := {}
	Private cAlB04Rs, cAlB04Tt
	Private oAlB04Rs
	Private cFld04 := 'Abertura GIA ST'
	//Private cFld042 := 'GIA ST Detalhes'
	Private cFld04t := cFld04 + ' - Resumo'+ ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'
	//Private cFld04t2 := cFld04 + ' - Detalhe'+ ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL)
	Private _cMVEIST	:= GETMV("MV_#ESTIST",,"MG,RS") //ESTADOS PARA DESTAQUE DO ICMS ST

	//-----------------------------------
	//Variáveis BROWSER 05 - DEMONSTRATIVO
	//-----------------------------------
	Private cFld05 := 'Demonstrativo'
	Private cFld051 := 'Detalhamento'
	Private cFld05t1 := cFld05 + ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'
	Private cAlB05Dt := GetNextAlias()
	Private cAlB05DQ
	Private oAlB05Dt
	Private nA05T01	:= 0		//Vl. Saldo Credor Mês Anterior
	Private nA05T02	:= 0		//Vl. Estorno de Débitos
	Private nA05T03	:= 0		//Vl. Estorno de Créditos
	Private nA05T04	:= 0		//Apropriação de Crédito Acumulado
	Private nA05T05	:= 0		//Vl. Saldo Credor Mês
	Private nA05T06	:= 0		//Solicitação DGCA
	Private nA05T07	:= 0		//Vl. Outros Débitos
	Private nA05T08	:= 0		//Vl. Outros Créditos
	Private nA05T09	:= 0		//Aprop. Cred Acumulado Outros Débitos
	Private nA05T10	:= 0		//Aprop. Cred Acumulado Outros Créditos
	Private cA05T02:=cA05T03:=cA05T04:=cA05T05:= space(80)		//Descrição Estorno de Débitos e Créditos, Outros Débitos, Outros Créditos respectivamente
	Private cMV05T01	:= '' //Max Versao
	Private aRecSd05	:= {}

	Private _cMVCFCE	:= GETMV("MV_#CMEXCF",,"1101,2101") //Códigos CFOP Considerado no Cálculo de Compra de Insumos para Exportação
	Private _cCFCmEx	:= '%'+FormatIn(_cMVCFCE,",")+'%'

	Private _cMVPRC1	:= GETMV("MV_#CMEXP1",,"300061,300108,300141,302292,302296,302297,302299,302300,302307,302309,302310,308774,308941,312715,313358,383104,384986,389228,389234,390019,390328,390486,392707,399603,383795,313045,302302,324248,325387,325389") //Códigos de Produtos Considerado no Cálculo de Compra de Insumos para Exportação
	Private _cPRCmE1	:= '%'+FormatIn(_cMVPRC1,",")+'%'

	Private _cMVPRC2	:= GETMV("MV_#CMEXP2",,"") //Códigos de Produtos Considerado no Cálculo de Compra de Insumos para Exportação
	Private _cPRCmE2	:= '%'+FormatIn(_cMVPRC2,",")+'%'

	//-----------------------------------
	//Variáveis BROWSER 06 - DIFAL NÃO CONTRIBUINTE
	//-----------------------------------
	Private cFld06 := 'DIFAL Não Contribuinte'
	Private cFld061 := 'Detalhamento'
	Private cFld062 := 'Clientes'
	Private cFld06t1 := cFld06 + ' - Detalhamento'
	Private cFld06t2 := cFld06 + ' - Análise de Clientes'
	//Private oAlB06Rs
	Private cAlB06Dt, cAlB06DQ, cAlB06Cf, cAlB06DC
	Private nA06T01	:= 0		//% Destino
	Private nA06T02	:= 0		//% Origem
	Private nA06T03	:= 0		//Valor Difal Dest
	Private nA06T04	:= 0		//Ticket 3035                    - Abel Babini - 09/10/2020 - Painel Fiscal - Acerto relatório Difal Não contribuinte
	//Private nA06T04	:= 0		//Valor Difal Orig
	Private cMV06T01	:= '' //Max Versao
	//Private cPV06T01	:= ''	//Prox Versao
	Private _cMVCFDN	:= GETMV("MV_#DFNCCF",,"6101,6102,6105,6107,6108,6118,6122,6401,6551,6922") //Códigos CFOP Considerados como venda para validar cadastro de clientes não contribuintes
	Private _cCFDFNC	:= '%'+FormatIn(_cMVCFDN,",")+'%'

	//-----------------------------------
	//Variáveis BROWSER 07 - DIFERENCIAL DE ALIQUOTA // INICIO n.040924  - Relatorio Dif. de Alíquota - Abel Babini - 07/05/2019
	//-----------------------------------
	Private aBrw07Cr:=aBrw07Db:=aBrw07Rs := {}
	Private cAlB07Cr,cAlB07Db,cAlB07Rs
	Private nA07T01:=nA07T02:=nA07T03:=nA07T04:=nA07T05 := 0
	Private nA07T11:=nA07T12:=nA07T13:=nA07T14:=nA07T15 := 0
	Private nA07T21:=nA07T22:=nA07T23:=nA07T24:=nA07T25 := 0
	Private nA07T91:=nA07T92:=nA07T93:= 0
	Private cFld07 := 'Dif. Aliquota'
	Private cFld072 := 'Dif. Aliquota - Créditos'
	Private cFld073 := 'Dif. Aliquota - Estornos'
	Private cFld07t1 := cFld07 + ' - Resumo'
	Private cFld07t2 := cFld07 + ' - Créditos'
	Private cFld07t3 := cFld07 + ' - Estornos'

	//Ticket 3037                    - Abel Babini - 16/09/2020 - Painel Fiscal Granja RNX2 - Diferencial de alíquota da granja não considerar CFOP 2251
	Private _cMVCFDA	:= GETMV("MV_#CFDFAL",,"2551,2556,2407") //Código CFOP considerados no relatório de diferencial de alíquota
	Private _cCFDFAL	:= '%'+FormatIn(_cMVCFDA,",")+'%'

	Private _cMVCPDA	:= GETMV("MV_#CPDFAL",,"") //Código de Produtos desconnsiderados no relatório de diferencial de alíquota
	Private _cCPDFAL	:= '%'+FormatIn(_cMVCPDA,",")+'%'
	
	// FIM n.040924  - Relatorio Dif. de Alíquota - Abel Babini - 07/05/2019
	
	//-----------------------------------
	//Variáveis BROWSER 08 - CREDITO OUTORGADO //CREDITO OUTORGADO // INICIO n.040923  ³ Relatorio Crédito Outorgadoa - Abel Babini - 20/08/2019
	//-----------------------------------
	Private aBrw08p1:=aBrw08p2:=aBrw08p3:=aBrw08dm:=aBrw08Nc:=aBrw08Rs:=aBrw08Cf:=aBrw08Rl:=aBrw08Rk:=aBrw08x1:=aBrw08x2:=aBrw08x3:=aBrw08x4:=aBrw08x5:=aBrw08x6:=aBrw08x7:=aBrw08x8 := {}
	Private cAlB08Rs
	Private cXvAux := ""
	Private nLenX1:=nLenX2:=nLenX3:=nLenX4:=nLenX5:=nLenX6:=nLenX7:=nLenX8	:= 0
	Private nA08T01	:= 0
	Private nA08T11:=nA08T12:=nA08T13:=nA08T14:=nA08T15:=nA08T16:=nA08T17 := 0
	Private cFld08 := 'Crédito Outorgado'
	Private cFld082 := 'CFOP x NCM'
	Private cFld083 := '5% Fat Estadual'
	Private cFld083b := 'Notas Fiscais de Saída'
	Private cFld084 := '5% Compra Aves Estadual'
	Private cFld084b := 'Notas Fiscais Entrada Aves'
	Private cFld085 := '5% Dev Estadual'
	Private cFld085b := 'Notas Fiscais de Devolução'
	Private cFld086 := '5% Exp Estadual'
	Private cFld086b := 'Exportação'
	Private cFld087 := '7% Fat Interestadual'
	Private cFld088 := '7% Dev Interestadual'
	Private cFld089 := '7% Fat Estadual'
	Private cFld080 := '7% Dev Estadual'
	Private oBrw08Rs
	//Private cFld08t := cFld08
	Private cFld08t1 := cFld08 + ' - Resumo'
	Private cFld08t2 := cFld08 + ' - CFOP X NCM'
	Private cFld08t3 := cFld08 + ' - 5% Faturamento Estadual'
	Private cFld08t4 := cFld08 + ' - 5% Compra de Aves Estadual'
	Private cFld08t5 := cFld08 + ' - 5% Devolução Estadual'
	Private cFld08t6 := cFld08 + ' - 5% Exportação Estadual'
	Private cFld08t7 := cFld08 + ' - 7% Faturamento Interestadual'
	Private cFld08t8 := cFld08 + ' - 7% Devolução Interestadual'
	Private cFld08t9 := cFld08 + ' - 7% Faturamento Estadual'
	Private cFld08t0 := cFld08 + ' - 7% Devolução Estadual'
	Private cFld08ta := cFld08 + ' - Demonstrativo'
	Private nQNCM := 0
	Private nQCFO	:= 0
	Private _cMVCFCO	:= GETMV("MV_#CROUCF",,"5101,5105,5118,5122,7101,7105,5151,1201,3201,1208,1209,1152,1151,6101,6105,6118,6122,6922,2201,2202,2203") //Códigos CFOP Considerado no Relatorio Credito Outorgado
	Private _cCFCrOu	:= '%'+FormatIn(_cMVCFCO,",")+'%'
	//FIM n.040923  - Relatorio Crédito Outorgadoa - Abel Babini - 20/08/2019

	//-----------------------------------
	//Variáveis BROWSER 09 - OUTRAS SAIDAS
	//-----------------------------------
	// INICIO Chamado n.050629 - OS n.052801 - Relatorio Outras Saídas - Abel Babini - 02/12/2019
	//Private aBrw09Dt:=aBrw09D2:=aBrw09D3:=aBrw09D4:=aBrw09D5:=aBrw09D6:=aBrw09D7:=aBrw09D8:=aBrw09D9 := {}
	Private cAlB09Dt, cAlB09Z1, cAlB09Z2
	Private oAlB09D1, oAlB09D2
	Private oBrw09Dt
	Private nA09T001:=nA09T002:=nA09T003	:= 0
	Private nA09T021:=nA09T022:=nA09T023	:= 0
	Private nA09T031:=nA09T032:=nA09T033	:= 0
	Private nA09T041:=nA09T042:=nA09T043	:= 0
	Private nA09T051:=nA09T052:=nA09T053	:= 0
	Private nA09T061:=nA09T062:=nA09T063	:= 0
	Private nA09T071:=nA09T072:=nA09T073	:= 0
	Private nA09T081:=nA09T082:=nA09T083	:= 0
	Private nA09T091:=nA09T092:=nA09T093	:= 0
	Private nA09T101:=nA09T102:=nA09T103	:= 0
	Private nA09T111:=nA09T112:=nA09T113	:= 0
	Private nA09T121:=nA09T122:=nA09T123	:= 0
	Private nA09T131:=nA09T132:=nA09T133	:= 0
	Private nA09T141:=nA09T142:=nA09T143	:= 0
	Private nA09T151:=nA09T152:=nA09T153	:= 0
	Private aClassif := {}
	Private cFld09 	 := 'Outras Saídas' // INICIO Chamado n.050629 - OS n.052801 - Relatorio Outras Saídas - Abel Babini - 02/12/2019
	Private cFld091 := 'Resumo'
	Private cFld092 := 'Detalhamento'
	Private cFld093 := 'Cesta Basica'
	Private cFld094 := 'Cesta Basica Frango'
	Private cFld095 := 'Dev Cesta Basica'
	Private cFld096 := 'Rem Est Análise'
	Private cFld097 := 'Rem Interest Análise'
	Private cFld098 := 'Rem Est Garantia'
	Private cFld099 := 'Rem Interest Garantia'
	Private cFld090 := 'Retorno de Aluguel'
	Private cFld09A := 'Remessa Degustação'
	Private cFld09B := 'Premiação'
	Private cFld09C := 'Remessa Integrado'
	Private cFld09D := 'Outras Remessas 2'
	Private cFld09E := 'Outros Retornos 2'
	Private cFld09Z := 'Outras Saídas não Clas'
	Private cFld09t1 := cFld09 + ' - Resumo'
	Private cFld09t2 := cFld09 + ' - Detalhamento'
	Private cFld09t3 := cFld09 + ' - Distr. Cesta Basica'
	Private cFld09t4 := cFld09 + ' - Distr. Cesta Basica Frango'
	Private cFld09t5 := cFld09 + ' - Dev. Cesta Basica'
	Private cFld09t6 := cFld09 + ' - Remessa Estadual Análise'
	Private cFld09t7 := cFld09 + ' - Remessa Interestadual Análise'
	Private cFld09t8 := cFld09 + ' - Remessa Estadual Garantia'
	Private cFld09t9 := cFld09 + ' - Remessa Interestadual Garantia'
	Private cFld09t0 := cFld09 + ' - Retorno de Aluguel'
	Private cFld09tA := cFld09 + ' - Remessa Degustação'
	Private cFld09tB := cFld09 + ' - Premiação'
	Private cFld09tC := cFld09 + ' - Remessa Integrado'
	Private cFld09tD := cFld09 + ' - Outras Remessas 2'
	Private cFld09tE := cFld09 + ' - Outros Retornos 2'
	Private cFld09tZ := cFld09 + ' - Outras Saídas não Classificadas'

	Private _cMVFrCB	:= GETMV("MV_#OSFRCB",,"015045") //Código do Fornecedor Padrão de Cesta Basica - Painel Fiscal ICMS
	Private _cMVLjCB	:= GETMV("MV_#OSLJCB",,"03") //Loja do Fornecedor Padrão de Cesta Basica - Painel Fiscal ICMS
	Private _cMVPrFr	:= GETMV("MV_#OSPRFR",,"128270") //Código do Produto Padrão para Frango na Cesta Básica - Painel Fiscal ICMS
	Private _cMVFDCB	:= GETMV("MV_#OSFDCB",,"015336") //Código Cliente Padrão para Devolução de Cesta Básica
	Private _cMVLDCB	:= GETMV("MV_#OSLDCB",,"01") //Loja do CLiente Padrão para Devolução de Cesta Básica
	// FIM Chamado n.050629 - OS n.052801 - Relatorio Outras Saídas - Abel Babini - 02/12/2019

	//-----------------------------------
	//Variáveis BROWSER 10 - DEVOLUCAO DE COMPRAS
	//-----------------------------------
	// INICIO n.050629  - Relatorio Devolução de Compras - Abel Babini - 27/08/2019
	Private aBrw10In:= aBrw10Mc:= aBrw10RI:= aBrw10RM:= aBrw10Cf := {}
	Private cAlB10In
	Private nA10T01:=nA10T02:=nA10T03:=nA10T04:=nA10T05:=nA10T06 := 0
	Private nA10T51:=nA10T52:=nA10T53:=nA10T54:=nA10T55:=nA10T56 := 0
	Private _cMVCFIn	:= GETMV("MV_#DCCFIN",,"5201,6201") //Códigos CFOP Dev. Compras de Insumos
	Private _cCFInsu	:= '%'+FormatIn(_cMVCFIn,",")+'%'
	Private _cMVCFMc	:= GETMV("MV_#DCCFMC",,"5413,6413,5553,6553,5556,6556") //Códigos CFOP Dev. Compras Mat. Consumo e Imobilizado
	Private _cCFMcim	:= '%'+FormatIn(_cMVCFMc,",")+'%'
	Private cFld10 := 'Dev. Compras' // INICIO n.050629  - Relatorio Devolução de Compras - Abel Babini - 27/08/2019
	Private cFld101 := 'Resumo' // INICIO n.050629  - Relatorio Devolução de Compras - Abel Babini - 27/08/2019
	Private cFld102 := 'Insumos' // INICIO n.050629  - Relatorio Devolução de Compras - Abel Babini - 27/08/2019
	Private cFld103 := 'Uso Conusmo e Imobil' // INICIO n.050629  - Relatorio Devolução de Compras - Abel Babini - 27/08/2019
	Private cFld104 := 'Resumo CFOP' // INICIO n.050629  - Relatorio Devolução de Compras - Abel Babini - 27/08/2019
	Private cFld10t1 := cFld10 + ' - Resumo'
	Private cFld10t2 := cFld10 + ' - Insumos'
	Private cFld10t3 := cFld10 + ' - Uso e Consumo / Imobilizado'
	Private cFld10t4 := cFld10 + ' - Resumo CFOP'
	// FIM n.050629  - Relatorio Devolução de Compras - Abel Babini - 27/08/2019

	//-----------------------------------
	//Variáveis BROWSER 11 - POLENTA
	//-----------------------------------
	Private aBrw11Cr := aBrw11Db := aBrw11Dt := {}
	Private cAlB11Cr,cAlB11Db,cAlsB11Dt
	Private nVlCrTot := nVlDbTot := nVlCrICM := nVlDbICM := nVCrICST := nVDbICST := nVCTCb11 := nVDTCb11 := 0
	Private nCMAntST := 0 //ZCT->ZCT_MANTST Saldo Credor ICMS ST Mês Anterior - Polenta
	Private nVlPgST := 0 //Saldo a Pagar ST - Polenta
	//Private _cPolent	:= GETMV("MV_#POLENT",,"125367|135578|") //Códigos de Produtos alterado para NCM
	Private _cPolent	:= GETMV("MV_#POLENT",,"19023000|") //NCM dos produtos considerados como Polenta
	Private _cInPol		:= '%'+FormatIn(_cPolent,"|")+'%'
	Private cFld11 := 'ICMS ST - Polenta'
	Private cFld112 := 'Polenta - Detalhes'
	Private cFld11t := cFld11 + ' - Resumo'+ ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'
	Private cFld11t2 := cFld11 + ' - Detalhe'+ ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'

	//-----------------------------------
	//Variáveis BROWSER 12 - EMBUTIDOS
	//-----------------------------------
	Private aBrw12Cr := aBrw12Db := aBrw12DT := {}
	Private cAlsB12Cr,cAlsB12Db,cAlsB12Dt
	Private nVCTot12 := nVDTot12 := nVCICM12 := nVDICM12 := nVCIST12 := nVDIST12 := nVCTCb12 := nVDTCb12 := nSICST12 := 0
	//Private _cEmbuti	:= GETMV("MV_#EMBUTI",,"100232|193229|182898|195562|810425|121615|142475|142477|137737|137734|137740|")
	Private _cEmbuti	:= GETMV("MV_#EMBUTI",,"16010000|") //NCM dos produtos considerados como Embutidos
	Private _cInEmbu	:= '%'+FormatIn(_cEmbuti,"|")+'%'
	Private cFld12 := 'ICMS ST - Embutidos'
	Private cFld122 := 'Embutidos - Detalhes'
	Private cFld12t := cFld12 + ' - Resumo'+ ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'
	Private cFld12t2 := cFld12 + ' - Detalhe'+ ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'

	//-----------------------------------
	//Variáveis BROWSER 13 - ALMONDEGAS
	//-----------------------------------
	Private aBrw13Cr:=aBrw13Db:=aBrw13Dt := {}
	Private cAlsB13Cr,cAlsB13Db,cAlsB13Dt
	Private nVCTot13:=nVDTot13:=nVCICM13:=nVDICM13:=nVCIST13:=nVDIST13:=nVCTCb13:=nVDTCb13:=NSICST13	:= 0
	Private _cAlmond	:= GETMV("MV_#ALMOND",,"16023210|") //NCM dos produtos considerados como Almondegas
	Private _cInAlmo	:= '%'+FormatIn(_cAlmond,"|")+'%'
	Private cFld13 := 'ICMS ST - Almondegas'
	Private cFld132 := 'Almondegas - Detalhes'
	Private cFld13t := cFld13 + ' - Resumo'+ ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'
	Private cFld13t2 := cFld13 + ' - Detalhe'+ ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'
	//INICIO Chamado n.050629 - OS n.054353 - Relatorio Graxaria - Abel Babini - 29/10/2019
	//-----------------------------------
	//Variáveis BROWSER 14 - GRAXARIA
	//-----------------------------------
	Private aBrw14Rs := aBrw14Sd := aBrw14Tr := aBrw14Dv := aBrw14Cp := aBrw14RV	:= aBrw14RT	:= aBrw14RD	:= {}
	Private cAlB14Rs
	Private oAlB14Rs
	Private nA14T01:=nA14T02:=nA14T03:=nA14T11:=nA14T12:=nA14T13:=nA14T21:=nA14T22:=nA14T23:=nA14T31:=nA14T32:=nA14T33:= 0
	Private _cMVGrax	:= GETMV("MV_#GRAXAR",,"05059000|15060000|15180090|23011090|") //NCM dos Produtos Graxaria
	Private _cGraxar	:= '%'+FormatIn(_cMVGrax,"|")+'%'
	Private cFld14 := 'Graxaria'
	Private cFld141 := 'Resumo'
	Private cFld142 := 'Vendas'
	Private cFld143 := 'Transferências'
	Private cFld144 := 'Devoluções'
	Private cFld145 := 'Compras'
	Private cFld146 := 'Detalhe Total'
	Private cFld14t1 := cFld14 + ' - Resumo'+ ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'
	Private cFld14t2 := cFld14 + ' - Vendas'+ ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'
	Private cFld14t3 := cFld14 + ' - Transferências'+ ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'
	Private cFld14t4 := cFld14 + ' - Devoluções'+ ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'
	Private cFld14t5 := cFld14 + ' - Compras'+ ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'
	Private cFld14t6 := cFld14 + ' - Detalhe'+ ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'
	//FIM Chamado n.050629 - OS n.054353 - Relatorio Graxaria - Abel Babini - 29/10/2019

	// INICIO n.050629  - Relatorio Compra Lenha - Abel Babini - 03/09/2019
	//-----------------------------------
	//Variáveis BROWSER 15 - COMPRA DE LENHA
	//-----------------------------------
	Private aBrw15Rs := aBrw15Dt := {}
	Private cAlB15Rs
	Private cFld15 := 'Compra Lenha'
	Private cFld151 := 'Resumo'	
	Private cFld152 := 'Detalhe'	
	Private cFld15t1 := cFld15 + ' - Resumo'+ ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'
	Private cFld15t2 := cFld15 + ' - Detalhe'+ ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'

	Private _cMVPrLn	:= GETMV("MV_#LENHPR",,"44012200,") //Código NCM dos produtos considerados Lenha no Painel Fiscal
	Private _cInPrLn	:= '%'+FormatIn(_cMVPrLn,",")+'%'
	
	//Chamado n.060037 - OS n.061528 - Abel Babini - 27/07/2020 - Excluir filtro de Formulário próprio do relatório de Lenha e incluir informação no Demonstrativo e Abertura da Gia
	Private _cMVCfLn	:= GETMV("MV_#LENHCF",,"1101,2101,") //Código CFOP para serem considerados no relatório Lenha no Painel Fiscal
	Private _cInCfLn	:= '%'+FormatIn(_cMVCfLn,",")+'%'
	
	Private nA15T01 := nA15T02 := nA15T03 := nA15T04 := nA15T05 := nA15T06 := 0 

	// FIM n.050629  - Relatorio Compra Lenha - Abel Babini - 03/09/2019

	// INICIO n.050629  - Relatorio Compra Aves - Abel Babini - 03/09/2019
	//-----------------------------------
	//Variáveis BROWSER 16 - COMPRA DE AVES
	//-----------------------------------
	Private aBrw16Rs := aBrw16Dt := {}
	Private cAlB16Rs
	Private cFld16 := 'Compra Aves'
	Private cFld161 := 'Resumo'	
	Private cFld162 := 'Detalhe'	
	Private cFld16t1 := cFld16 + ' - Resumo'+ ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'
	Private cFld16t2 := cFld16 + ' - Detalhe'+ ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'
	Private _cMVPrAv	:= GETMV("MV_#AVESPR",,"302209,300042") //Código dos produtos considerados Aves no Painel Fiscal
	Private _cInPrAv	:= '%'+FormatIn(_cMVPrAv,",")+'%'
	Private _cMVCfAv	:= GETMV("MV_#AVESCF",,"1151,2151,1949,2949") //Código CFOP não considerados para compra de Aves no Painel Fiscal
	Private _cInCfAv	:= '%'+FormatIn(_cMVCfAv,",")+'%'
	// FIM n.050629  - RRelatorio Compra Aves - Abel Babini - 03/09/2019

	// INICIO Chamado n.040929 - OS n.042022 - Relatorio Legumes - Abel Babini - 12/11/2019
	//-----------------------------------
	//Variáveis BROWSER 17 - LEGUMES
	//-----------------------------------
	Private aBrw17Dt, aBrw17Cp, aBrw17Dc, aBrw17Rv, aBrw17Dr := {}
	Private cAlB17Rs
	Private cFld17 := 'Legumes'
	Private cFld171 := 'Resumo'	
	Private cFld172 := 'Compras'	
	Private cFld173 := 'Dev Revenda'	
	Private cFld174 := 'Revenda'	
	Private cFld175 := 'Dev Compras'	
	Private cFld176 := 'Detalhes'	

	Private cFld17t1 := cFld17 + ' - Resumo'+ ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'
	Private cFld17t2 := cFld17 + ' - Compras'+ ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'
	Private cFld17t3 := cFld17 + ' - Dev. Revendas'+ ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'
	Private cFld17t4 := cFld17 + ' - Revendas'+ ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'
	Private cFld17t5 := cFld17 + ' - Dev. Compras'+ ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'
	Private cFld17t6 := cFld17 + ' - Detalhamento'+ ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'

	Private _cMVLegu	:= GETMV("MV_#LEGUME",,"125359,125361,125363,125365,127131,127262,127256,127259,127656,139925") //Código dos produtos considerados Legumes no Painel Fiscal
	Private _cInLegu	:= '%'+FormatIn(_cMVLegu,",")+'%'
	Private _cMVCfLg	:= GETMV("MV_#CFLEGU",,"1102,2102,1202,2202,5102,6102") //Código CFOP considerados no relatório de legumes no Painel Fiscal
	Private _cInCfLg	:= '%'+FormatIn(_cMVCfLg,",")+'%'
	Private nA17T01:=nA17T02:=nA17T03:=0
	Private nA17T11:=nA17T12:=nA17T13:=0
	Private nA17T21:=nA17T22:=nA17T23:=0
	Private nA17T31:=nA17T32:=nA17T33:=0
	Private nA17T91:=nA17T92:=nA17T93:=0
	//FIM Chamado n.040929 - OS n.042022 - Relatorio Legumes - Abel Babini - 12/11/2019
	
	//-----------------------------------
	//Variáveis BROWSER 18 - UNIFORMES
	//-----------------------------------
	Private aBrw18Rs:=aBrw18Tr:=aBrw18Cr:=aBrw18Db := {}
	Private cAlsB18Cr
	Private nTtUnf		:= 0
	//FOLDER 18 - UNIFORMES
	Private cFld18 := 'Uniforme'
	Private cFld182 := 'Uniforme - Detalhes'
	Private cFld183 := 'Uniforme - Mes'
	Private cFld18t1 := cFld18 + ' - Resumo'+ ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'
	Private cFld18t2 := cFld18 + ' - Detalhe Historico'+ ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'
	Private cFld18t3 := cFld18 + ' - Detalhe no Mes'+ ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'
	Private oTrF18p1
	Private oBrw18Rs
	//Private _cUnifor	:= '%'+FormatIn(GETMV("MV_#UNIFOR",,"500131|500132|500135|500136|500137|500138|500139|530693|530699|530702|530706|530709|530712|530715|530718|530721|523440|593238|588240|599251|"),"|")+'%'
	Private _dUnifor	:= GETMV("MV_#DTUNIF",,STOD("20160101")) //Data inicial para relatório de Uniforme no Painel Fiscal
	Private _cMVUnif	:= GETMV("MV_#UNIFOR",,"61091000|62034900|62053000|64042000|") //NCM dos produtos considerados como Uniforme
	Private _cUnifor	:= '%'+FormatIn(_cMVUnif,"|")+'%'
	
	//-----------------------------------
	//Variáveis BROWSER 19 - PRODUTOS NÃO COMESTÍVEIS
	//-----------------------------------
	// INICIO Chamado n.050629 - OS n. 054356 - Relatorio Nao Comestiveis - Abel Babini - 11/11/2019
	Private aBrw19Rs := aBrw19MI := aBrw19ME := aBrw19Dv := {}
	Private cAlB19Rs
	Private cFld19 := 'Produtos Não Comestíveis'
	Private cFld191 := 'Resumo'	
	Private cFld192 := 'Mercado Interno'	
	Private cFld19t1 := cFld19 + ' - Resumo'+ ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'
	Private cFld19t2 := cFld19 + ' - Mercado Interno'+ ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'
	Private _cMVNCom	:= GETMV("MV_#NAOCOM",,"05119999|")//NCM dos Produtos Não Comestiveis
	Private _cNaoCom	:= '%'+FormatIn(_cMVNCom,"|")+'%'
	Private _cMVCFNC	:= GETMV("MV_#NCOMCF",,"5101,6101,7101,1201,2201,3201")//CFOP a ser considerado no relatório de Produtos Não Comestiveis no Painel Fiscal
	Private _cNComCF	:= '%'+FormatIn(_cMVCFNC,",")+'%'
	// FIM Chamado n.050629 - OS n. 054356 - Relatorio Nao Comestiveis - Abel Babini - 11/11/2019
	
	//-----------------------------------
	//Variáveis BROWSER 20 - NF CANCELADAS
	//-----------------------------------
	Private cFld20 := 'NF Canceladas'
	Private cAlB20Dt, cAlB20Br
	Private oAlB20D1
	Private cFld201 := 'Detalhamento'
	Private cFld20t1 := cFld20 + ' - Detalhamento'

	//-----------------------------------
	//Variáveis BROWSER 21 - INDUSTR USO E CONSUMO
	//-----------------------------------
	Private aBrw21Rs	:= {}
	Private cAlsB21
	Private nR21ICMS	:= 0
	Private nE21ICMS	:= 0
	Private cFld21 := 'Indust. e Uso Consumo'
	Private cFld21t := cFld21 + ' - Resumo'
	Private _dRemInd	:= GETMV("MV_#DTREMI",,STOD("20170101")) //Data inicial para relatório de Remessa para Indust
	Private _cMVRIFo	:= GETMV("MV_#CRIFOR",,"018435,") //Fornecedores para não considerar no Painel Fiscal
	Private _cRIForn	:= '%'+FormatIn(_cMVRIFo,",")+'%'

	//INICIO Chamado n.050629 - OS n. 054855 - Relatório Revenda Tributada - Abel Babini  - 19/11/2019
	//-----------------------------------
	//Variáveis BROWSER 22 - REVENDA TRIBUTADA
	//-----------------------------------
	Private cFld22 := 'Revenda Tributada'
	Private cFld221 := 'Resumo'
	Private cFld222 := 'Detalhamento'
	Private cFld22t1 := cFld22 + ' - Resumo'
	Private cFld22t2 := cFld22 + ' - Detalhamento'

	Private cAlB22Dt, cAlB22Rs, cAlB22RQ, cAlB22DQ
	Private nR22ICMS := 0
	//Private aBrw22Rs:={}
	Private oAlB22Dt, oAlB22Rs
	Private _cMVCFRT	:= GETMV("MV_#CFRVTB",,"5102,6102") //Códigos CFOP Rev. Tributada
	Private _cCFRvTr	:= '%'+FormatIn(_cMVCFRT,",")+'%'
	//FIM Chamado n.050629 - OS n. 054855 - Relatório Revenda Tributada - Abel Babini  - 19/11/2019

	//FOLDER 23 - INDUSTR. DE PA
	Private cFld23	 := 'Industrial. PA'
	Private cFld231	 := 'Resumo'
	Private cFld232 := 'Totais CFOP'
	Private cFld233 := 'Remessas'
	Private cFld234 := 'Retornos'
	Private cFld235 := 'OPs'
	Private cFld236 := 'Saldo Poder 3s'
	Private cFld237 := 'Insumos nao Util'
	Private cFld238 := 'Resumo por Produto'
	Private cFld23t1 := cFld23 + " - Totais - "
	Private cFld23x1
	Private cFld23t2 := cFld23 + " - Resumo CFOP - "
	Private cFld23x2
	Private cFld23t3 := cFld23 + " - Remessas - "
	Private cFld23x3
	Private cFld23t4 := cFld23 + " - Retornos - "
	Private cFld23x4
	Private cFld23t5 := cFld23 + " - OP´s - "
	Private cFld23x5
	Private cFld23t6 := cFld23 + " - Saldo Poder 3ºs - "
	Private cFld23x6
	Private cFld23t7 := cFld23 + " - Insumos Não Utilizados - "
	Private cFld23x7
	Private cFld23t8 := cFld23 + " - Total por Produto - "
	Private cFld23x8
	Private oTrF23p1,oTrF23p2,oTrF23p3
	Private nQIEForn	:= 0

	Private aBrw23Rs  := {}
	Private aBrw23Rm := aBrw23RZ := aBrw23Dv := aBrw23DZ := aBrw23Op := aBrw23OZ := aBrw23S3 := aBrw23SZ := aBrw23IN := aBrw23IZ := aBrw23Dt := aBrw23Tr := aBrw23Em := aBrw23R2 := aBrw23R3 := aBrw23Tt := aBrw23TZ := {}
	Private cAlB23Rm,cAlB23S3 //, cAlB23Rs, cAlB23Op
	Private nA23T01 := nA23T02 := nA23T03 := nA23T04 := nA23T05 := nA23T06 := nA23T07 := nA23T08 := nA23T09 := 0

	Private _dIndTer	:= GETMV("MV_#DTINDT",,STOD("20151201")) //Data inicial para processamento de Industr Embutid
	Private _cMVIndE	:= GETMV("MV_#INDEMB",,"1101,2101,1122,2122,1124,2124,1125,2125,1201,2102,1902,2902,1903,2903,1910,2910,1921,2921,1924,2924,1925,2925,1949,2949,5124,6124,5201,6201,5901,6901,5920,6920,5949,6969") //Código CFOP Indust Embutidos Painel Fiscal ICMS
	Private _cCFInEm	:= '%'+FormatIn(_cMVIndE,",")+'%'
	Private _cMVP3Fo	:= GETMV("MV_#P3FORN",,"07390806000182,48330609000155,67814145000105,74251919000194")//CNPJ dos Fornecedores de Industrializacao de Embut
	Private _cP3Forn	:= '%'+FormatIn(_cMVP3Fo,",")+'%'
	Private _cMVIECP	:= GETMV("MV_#IECOMP",,"1101,2101,1122,2122") //Código CFOP de Compra para Industr para Industr. PA
	Private _cCFIECP	:= '%'+FormatIn(_cMVIECP,",")+'%'
	Private _cMVIEIN	:= GETMV("MV_#IEINDU",,"1124,2124") //Código CFOP de Industrialização para Industr. PA
	//Private _cCFIEIN	:= '%'+FormatIn(_cMVIEIN,",")+'%'
	Private _cMVIERM	:= GETMV("MV_#IEREMI",,"5901,6901,5124,6124,5201,6201,5920,6920,5949,6949") //Código CFOP de Remessa Industr para Industr. PA
	Private _cMVIERS	:= GETMV("MV_#IERESU",,"1124,2124,1125,2125,1201,2201") //Código CFOP não considerados no painel Resumo
	Private _cMVPRDF	:= GETMV("MV_#PRDNRM",,"543036,343037,343035,195562,121615,193229") //Código Produtos não considerados como Remessa ou Retorno para Industr. PA
	//Private _cCFIERM	:= '%'+FormatIn(_cMVIERM,",")+'%'
	Private _cMVIERI	:= GETMV("MV_#IERETI",,"1101,2101,1122,2122,1902,2902,1903,2903,1910,2910,1920,2920,1921,2921,1924,2924,1925,2925,1949,2949,5124,6124,5201,6201,5901,6901,5920,6920,5949,6969") //Código CFOP de Retorno Industr para Industr. PA
																					//1124,2124,1201,2102,1902,2902,1903,2903,1920,2920,1921,2921,1924,2924,1925,2925,1949,2949
	//Private _cCFIERI	:= '%'+FormatIn(_cMVIERI,",")+'%'
	Private _cMVIERN	:= GETMV("MV_#IERTNA",,"1903,2903,1949,2949") //Código CFOP Mercadoria Não Aplicada no Processo para Industr. PA
	//Private _cCFIERN	:= '%'+FormatIn(_cMVIERN,",")+'%'
	Private _cMVIEDI	:= GETMV("MV_#IEDEVI",,"1902,2902")			//Código CFOP de Devolução de Insumos para Industr PA
	//Private _cCFIEDI	:= '%'+FormatIn(_cMVIEDI,",")+'%'
	Private _cMVIEEB	:= GETMV("MV_#IEENTB",,"1910,2910")			//Código CFOP de Entrada Bonificação para Industr. PA
	//Private _cCFIEEB	:= '%'+FormatIn(_cMVIEEB,",")+'%'
	Private _cMVIEOE	:= GETMV("MV_#IEOUTE",,"1949,2949") //Código CFOP de Outras Entradas para Industr. PA
	//Private _cCFIEOE	:= '%'+FormatIn(_cMVIEOE,",")+'%'
	Private _cMVIEOS	:= GETMV("MV_#IEOUTS",,"5949,6949") //Código CFOP de Outras Saídas para Industr. PA
	//Private _cCFIEOS	:= '%'+FormatIn(_cMVIEOS,",")+'%'
	
	Private _cMVNFNC	:= GETMV("MV_#IENFNC",,"001301257,") //Notas Fiscais para não considerar no Rel. de Ind. de PA
	Private _cIENFNC	:= '%'+FormatIn(_cMVNFNC,",")+'%'

	Private _cMVNFIN	:= GETMV("MV_#IENFIN",,"000000595,") //Notas Fiscais sem gerar livros fiscais, série ZZZ, para incluir no Rel. de Ind. de PA
	Private _cIENFIN	:= '%'+FormatIn(_cMVNFIN,",")+'%'

	Private _cMVIEAE	:= GETMV("MV_#IEALEB",,"02,03,05,09,10,12,15,46,69,99") //Código Almoxarifado Entrada Bonificação
	Private _cMVIEAD	:= GETMV("MV_#IEALEI",,"10,69,79") //Código Almoxarifado Devolução de Insumos

	//FOLDER 24 - ICMS FRETE
	Private cFld24 := 'ICMS Frete'
	Private cFld241	 := 'Resumo'
	Private cFld242 := 'Detalhes'
	Private cFld243 := 'Exportação'
	Private cFld244 := 'Subst Tribut Est'
	Private cFld245 := 'Transp Funcion'
	Private cFld246 := 'Tributado'
	Private cFld247 := 'Anulacao'
	Private cFld248 := 'Analise Forn'
	Private cFld249 := 'Subst Tribut Interest'
	Private cFld24t1 := cFld24 + ' - Resumo'
	Private cFld24t2 := cFld24 + ' - Detalhes'
	Private cFld24t3 := cFld24 + ' - Exportação'
	Private cFld24t4 := cFld24 + ' - Subst Tributaria Estadual'
	Private cFld24t5 := cFld24 + ' - Transp Funcion'
	Private cFld24t6 := cFld24 + ' - Tributado'
	Private cFld24t7 := cFld24 + ' - Anulação de Frete'
	Private cFld24t8 := cFld24 + ' - Análise Fornecedores'
	Private cFld24t9 := cFld24 + ' - Subst Tributaria Interestadual'

	Private aBrw24Dt := {}
	Private aBrw24Ex := {}
	Private aBrw24ST := {}
	Private aBrw24IE := {}
	Private aBrw24TF := {}
	Private aBrw24Tr := {}
	Private aBrw24An := {}
	Private aBrw24Sp := {}

	Private cAlB24Rs, cAlB24An
	Private nA24T01	:= 0
	Private nA24T02	:= 0
	Private nA24T03	:= 0
	Private nA24T04	:= 0
	Private nA24T05	:= 0
	Private nA24T06	:= 0
	Private nA24T07	:= 0
	Private nA24T08	:= 0
	Private nA24T09	:= 0
	Private nA24T10	:= 0
	Private nA24T11	:= 0
	Private nA24T12	:= 0
	Private nA24T13	:= 0
	Private nA24T14	:= 0
	Private nA24T15	:= 0
	Private nA24T16 := 0
	Private nA24T17	:= 0
	//Ticket 6225                    - Abel Babini - 07/12/2020 - Painel Fiscal - Criar linha para anulação extemporânea de frete
	Private nA24T18 := 0
	Private nA24T19	:= 0
	//Ticket 18004                   - Abel Babini - 17/08/2021 - Alterações no Painel Fiscal - Apuração de Frete e criação do relatório Débito Serv. Industrialização
	Private nA24T20 := 0
	Private nA24T21	:= 0

	Private _cMVCFFr	:= GETMV("MV_#CFFRET",,"1352,2352") //Códigos CFOP Apuração ICMS Frete no Painel Fiscal ICMS
	Private _cCFFret	:= '%'+FormatIn(_cMVCFFr,",")+'%'
	Private _cMVFrEx	:= GETMV("MV_#CCFREX",,"6910,") //Códigos C.Custo dos Fretes destinados a exportacao
	Private _cMVFrTF	:= GETMV("MV_#CCFRTF",,"2106,") //Códigos C.Custo dos Fretes destinados a Transporte de Funcionários
	Private _cMVFrAn	:= GETMV("MV_#CFFRAN",,"5206,6206") //Códigos CFOP de Anulação de Frete
	Private _cCFFrAn	:= '%'+FormatIn(_cMVFrAn,",")+'%'
	Private _nAlFrST	:= GETMV("MV_#ALFRST",,0.12) //Alíquota ICMS ST Frete
	//Chamado n.040935 - OS n.042015 - Abel Babini - 03/04/2020 - Rel. Resumo Ceres - Entradas e Saidas por produto	
	Private _cMVFrPr	:= GETMV("MV_#FRTPRD",,"") //Códigos dos produtos de frete a serem desconsiderados no Painel Fiscal. Criado inicialmente para a Ceres.
	//Chamado n.060517 - OS n.062030 - Abel Babini - 17/08/2020 - Altera regra de calculo do ICMS sobre Frete para os modelos 2 e 4
	Private _cMVPrTF	:= GETMV("MV_#PRFRTF",,"") //Códigos Produtos dos Fretes destinados a Transporte de Funcionários
	Private _lMVCrFt	:= GETMV("MV_#CRFRT",,.T.) //Debita frete (.T.) no painel fiscal ou faz conta gráfica (.F.) para modelos 2 e 4?

	//Ticket 3035                    - Abel Babini - 16/09/2020 - Painel Fiscal Ceres - Relatório de frete - Criar regra por produto para transporte de funcion[ários
	Private _lMVAPF	:= GETMV("MV_#APFR",,.F.) //Considera apenas a regra de produto? .T. = Apenas regra do produto (MV_#PRFRTF) .F. Considera Centro de custo ou ( MV_#CRFRT e MV_#PRFRTF)

	//-----------------------------------
	//Variáveis BROWSER 25 - CELULARES
	//-----------------------------------
	Private aBrw25Rs:=aBrw25Tr:=aBrw25Cr:=aBrw25Db := {}
	Private cAlsB25Cr
	Private nTtCel		:= 0
	Private cFld25 := 'Celular'
	Private cFld252 := 'Celular - Detalhes'
	Private cFld253 := 'Celular - Mes'
	Private cFld25t1 := cFld25 + ' - Resumo'+ ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'
	Private cFld25t2 := cFld25 + ' - Detalhe Historico'+ ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'
	Private cFld25t3 := cFld25 + ' - Detalhe no Mes'+ ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'
	Private oTrF25p1
	Private oBrw25Rs
	//Private _cUnifor	:= '%'+FormatIn(GETMV("MV_#UNIFOR",,"500131|500132|500135|500136|500137|500138|500139|530693|530699|530702|530706|530709|530712|530715|530718|530721|523440|593238|588240|599251|"),"|")+'%'
	Private _dCelula	:= GETMV("MV_#DTCELU",,STOD("20171001")) //Data inicial para relatório de Celular no Painel Fiscal
	Private _dCelPn		:= GETMV("MV_#DTCEPN",,STOD("20191101")) //Data inicial para relatório de Celular no Painel Fiscal
	Private _cMVCelu	:= GETMV("MV_#CELULA",,"85171231|85172130")//85235200 CHIP //85171231 TABLET //NCM dos produtos considerados como Celular
	Private _cCelula	:= '%'+FormatIn(_cMVCelu,"|")+'%'
		
	//INICIO Chamado n.055157 - OS n.056585 - Relatório Outras Entradas - Abel Babini - 28/01/2020
	Private cAlB26Dt, cAlB26Z1, cAlB26Z2
	Private oAlB26D1, oAlB26D2
	Private oBrw26Dt
	Private nA26T001 := nA26T002 := nA26T003	:= 0
	Private nA26T021 := nA26T022 := nA26T023	:= 0
	Private nA26T031 := nA26T032 := nA26T033	:= 0
	Private nA26T041 := nA26T042 := nA26T043	:= 0
	Private nA26T051 := nA26T052 := nA26T053	:= 0
	Private nA26T061 := nA26T062 := nA26T063	:= 0
	Private nA26T071 := nA26T072 := nA26T073	:= 0
	Private nA26T081 := nA26T082 := nA26T083	:= 0
	Private nA26T091 := nA26T092 := nA26T093	:= 0
	Private nA26T101 := nA26T102 := nA26T103	:= 0
	Private nA26T111 := nA26T112 := nA26T113	:= 0
	Private nA26T121 := nA26T122 := nA26T123	:= 0
	Private nA26T131 := nA26T132 := nA26T133	:= 0
	Private nA26T141 := nA26T142 := nA26T143	:= 0
	Private nA26T151 := nA26T152 := nA26T153	:= 0
	Private aClassOE := {}
	Private cFld26 	:= 'Outras Entradas'
	Private cFld261 := 'Resumo'
	Private cFld262 := 'Detalhamento'
	Private cFld263 := C11111
	Private cFld264 := C11112
	Private cFld265 := C11113
	Private cFld266 := C11114
	Private cFld267 := C11115
	Private cFld268 := C11116
	Private cFld269 := C11117
	Private cFld260 := C11118
	Private cFld26A := C11119
	Private cFld26B := C11120
	Private cFld26C := C11121
	Private cFld26D := C11122
	Private cFld26E := C11123
	Private cFld26Z := C11124
	Private cFld26t1 := cFld26 + ' - Resumo'
	Private cFld26t2 := cFld26 + ' - Detalhamento'
	Private cFld26t3 := cFld26 + ' - '+ C11111
	Private cFld26t4 := cFld26 + ' - '+ C11112
	Private cFld26t5 := cFld26 + ' - '+ C11113
	Private cFld26t6 := cFld26 + ' - '+ C11114
	Private cFld26t7 := cFld26 + ' - '+ C11115
	Private cFld26t8 := cFld26 + ' - '+ C11116
	Private cFld26t9 := cFld26 + ' - '+ C11117
	Private cFld26t0 := cFld26 + ' - '+ C11118
	Private cFld26tA := cFld26 + ' - '+ C11119
	Private cFld26tB := cFld26 + ' - '+ C11120
	Private cFld26tC := cFld26 + ' - '+ C11121
	Private cFld26tD := cFld26 + ' - '+ C11122
	Private cFld26tE := cFld26 + ' - '+ C11123
	Private cFld26tZ := cFld26 + ' - '+ C11124

	Private _cMVOEFC	:= GETMV("MV_#OEFDCB",,"015336,026969") //Código do Fornecedor Padrão de Cesta Basica - Painel Fiscal ICMS
	//FIM Chamado n.055157 - OS n.056585 - Relatório Outras Entradas - Abel Babini - 28/01/2020

	//-----------------------------------
	//Variáveis BROWSER 27 - IVA
	//-----------------------------------
	Private cFld27 := 'IVA'
	Private cAlB27Rs, cAlB27Br, cAlB27Dt, cAlB27Nf
	Private oAlB27D1, oAlB27D2
	Private cFld271 := 'Saídas'
	Private cFld272 := 'Entradas'
	Private cFld273 := 'NF Saídas'
	Private cFld274 := 'NF Entradas'
	Private cFld27t1 := cFld27 + ' - Saídas'
	Private cFld27t2 := cFld27 + ' - Entradas'
	Private cFld27t3 := cFld27 + ' - NF Saídas'
	Private cFld27t4 := cFld27 + ' - NF Entradas'
	Private _cMVCfIV	:= GETMV("MV_#IVANCF",,"1126,2126,3126") //Código CFOP não considerados no relatório IVA
	Private _cCFNIVA	:= '%'+FormatIn(_cMVCfIV,",")+'%'
	Private nVFrt			:= 0
	//-----------------------------------
	//Variáveis BROWSER 28 - CREDITO CIAP
	//-----------------------------------
	Private cFld28 := 'Crédito CIAP'
	Private cAlB28Dt, cAlB28Br
	Private oAlB28D1
	Private cFld281 := 'Resumo'
	Private cFld282 := 'Detalhe'
	Private cFld28t1 := cFld28 + ' - Resumo'
	Private cFld28t2 := cFld28 + ' - Detalhe'
	Private _cMVCfCI	:= GETMV("MV_#CFCIAP",,"1604,2604") //Código CFOP não considerados no relatório IVA
	Private _cCFCIAP	:= '%'+FormatIn(_cMVCfCI,",")+'%'
	Private nVCiap			:= 0

	//-----------------------------------
	//Variáveis BROWSER 29 - COMPRA MP
	//-----------------------------------
	Private cFld29	:= 'Compra MP'
	Private cAlB29Dt, cAlB29Br
	Private oAlB29D1
	Private cFld291		:= 'Resumo CFOP'
	Private cFld292		:= 'Detalhe'
	Private cFld293		:= 'Resumo CST'
	Private cFld29t1	:= cFld29 + ' - Resumo por CFOP'
	Private cFld29t2	:= cFld29 + ' - Detalhe'
	Private cFld29t3	:= cFld29 + ' - Resumo por CST'
	Private nVCOMMP		:= 0
	Private _cMVCPMP	:= GETMV("MV_#COMPMP",,"1101,2101,1116,2116,1118,2118,1120,2120,1122,2122") //Código CFOP para cálculo Vl. ICMS Compra Matéria Prima
	Private _cCFCPMP	:= '%'+FormatIn(_cMVCPMP,",")+'%'

	//-----------------------------------
	//Variáveis BROWSER 30 - VENDA FRANGO
	//-----------------------------------
	Private cFld30	:= 'Vendas'
	Private cAlB30Dt, cAlB30Br
	Private oAlB30D1
	Private cFld301		:= 'Resumo'
	Private cFld302		:= 'Detalhe'
	Private cFld30t1	:= cFld30 + ' - Resumo'
	Private cFld30t2	:= cFld30 + ' - Detalhe'
	Private nVVenFV		:= 0
	Private _cMVVDFV	:= GETMV("MV_#VENDFV",,"5101,6101,7101,5118,6118,7118") //Código CFOP para cálculo Vendas
	Private _cCFVDFV	:= '%'+FormatIn(_cMVVDFV,",")+'%'

	//-----------------------------------
	//Variáveis BROWSER 31 - APURAÇÃO ICMS MODELO GO
	//-----------------------------------
	//INICIO Chamado n.055548 - OS n.058176 - Abel Babini - 27/03/2020 - Painel Fiscal ICMS GO - Ajustes na Apuração de ICMS GO
	Private cFld31 := 'Apuração ICMS'
	Private cFld31b := 'Detalhes da Apuração'
	Private cAlB31Rs, cAlB31Br, cAlB31Dt, cAlB31Nf
	Private oAlB31D1, oAlB31D2
	Private cFld311 := 'Saídas'
	Private cFld312 := 'Entradas'
	Private cFld313 := 'NF Saídas'
	Private cFld314 := 'NF Entradas'
	Private cFld31t1 := cFld31 + ' - Saídas'
	Private cFld31t2 := cFld31 + ' - Entradas'
	Private cFld31t3 := cFld31 + ' - NF Saídas'
	Private cFld31t4 := cFld31 + ' - NF Entradas'

	Private _cMVClSd	:= GETMV("MV_#CLISD",,"014999") //Código dos Clientes para serem considerados no relatório de saída de Goias - Painel Fiscal
	Private _cCliSd	:= '%'+FormatIn(_cMVClSd,",")+'%'

	Private _cMVFrEn	:= GETMV("MV_#FOREN",,"022503") //Código dos Fornecedores para serem considerados no relatório de entrada de Goias - Painel Fiscal
	Private _cForEn	:= '%'+FormatIn(_cMVFrEn,",")+'%'

	Private _cMVFlEn	:= GETMV("MV_#FILEN",,"03") //Código das Filiais para serem considerados no relatório de entrada de Goias - Painel Fiscal
	Private _cFilEn	:= '%'+FormatIn(_cMVFlEn,",")+'%'

	//FIM Chamado n.055548 - OS n.058176 - Abel Babini - 27/03/2020 - Painel Fiscal ICMS GO - Ajustes na Apuração de ICMS GO
	//-----------------------------------
	//Variáveis BROWSER 32 - CONFERÊNCIA NF SERVIÇO
	//-----------------------------------
	Private cFld32	:= 'Conferência NF Serviço'
	Private cAlB32Dt, cAlB32Br
	Private oAlB32D1
	Private cFld321		:= 'Resumo'
	Private cFld322		:= 'Detalhe'
	Private cFld32t1	:= cFld32 + ' - Resumo'
	Private cFld32t2	:= cFld32 + ' - Detalhe'
	Private nVNFS		:= 0
	Private nVMILHO	:= 0
	Private nVSORGO	:= 0
	Private nVPROTE	:= 0
	Private _cMVTNFS	:= GETMV("MV_#TESNFS",,"041") //Código TES Relatório Conferencia NF Servico
	Private _cTESNFS	:= '%'+FormatIn(_cMVTNFS,",")+'%'

	Private _cMVPMIL	:= GETMV("MV_#PMILHO",,"833424") //Código Produtos Milho NF Serviço
	Private _cMVPSOR	:= GETMV("MV_#PSORGO",,"") //Código Produtos Sorgo NF Serviço
	Private _cMVPPRO	:= GETMV("MV_#PPROTE",,"836536") //Código Produtos PROTEGE NF Serviço

	//INICIO Chamado n.040935 - OS n.042015 - Abel Babini - 03/04/2020 - Rel. Resumo Ceres - Entradas e Saidas por produto
	//-----------------------------------
	//Variáveis BROWSER 33 - Relatório Entradas e Saídas por produto
	//-----------------------------------
	Private cFld33	:= 'Entradas e Saídas'
	Private cAlB33Dt, cAlB33Br
	Private oAlB33D1
	Private cFld331		:= 'Entradas'
	Private cFld332		:= 'Saídas'
	Private cFld33t1	:= cFld33 + ' - Entradas'
	Private cFld33t2	:= cFld33 + ' - Saídas'
	Private _cMVCfES	:= GETMV("MV_#ENSACF",,"") //Código CFOP não considerados para Entradas e Saídas no Painel Fiscal
	Private _cInCfES	:= '%'+FormatIn(_cMVCfES,",")+'%'
	Private _cMVTPES	:= GETMV("MV_#TPENSA",,"NFS,") //Espécies de documentos não considerados para Entradas e Saídas no Painel Fiscal
	Private _cInTPES	:= '%'+FormatIn(_cMVTPES,",")+'%'
	Private _cMVCfBN	:= GETMV("MV_#CFBONI",,"1910,2910") //Código CFOP considerados bonificação Pintos de 1 dia Macho e Femea para RNX2 no Painel Fiscal
	Private _cCfBoni	:= '%'+FormatIn(_cMVCfBN,",")+'%'
	Private _cMVPrBN	:= GETMV("MV_#PRBONI",,"384743,384744") //Código Produtos Pintos de 1 dia considerados bonificação para RNX2 no Painel Fiscal
	Private _cPrBoni	:= '%'+FormatIn(_cMVPrBN,",")+'%'
	Private _nVlBoni	:= 0
	//FIM Chamado n.040935 - OS n.042015 - Abel Babini - 03/04/2020 - Rel. Resumo Ceres - Entradas e Saidas por produto
	
	//INICIO Chamado n.040935 - OS n.042015 - Abel Babini - 19/05/2020 - Rel. Resumo Ceres - Entradas e Saidas por produto
	//-----------------------------------
	//Variáveis BROWSER 34 - DEVOLUÇÃO VENDA
	//-----------------------------------
	Private cFld34	:= 'Dev Venda'
	Private cAlB34Dt, cAlB34Br
	Private oAlB34D1
	Private cFld341		:= 'Resumo'
	Private cFld342		:= 'Detalhe'
	Private cFld34t1	:= cFld34 + ' - Resumo'
	Private cFld34t2	:= cFld34 + ' - Detalhe'
	Private nVDVVen		:= 0
	//Ticket 5252                    - Abel Babini - 17/11/2020 - Painel Fiscal - Alteração do parâmetro de MV_#VENDFV para MV_#DEVVEN pois MV_#VENDFV já estava sendo utilizado
	Private _cMVDVVD	:= GETMV("MV_#DEVVEN",,"1201,2201,3201") //Código CFOP para cálculo Devolução Vendas
	Private _cCFDVVD	:= '%'+FormatIn(_cMVDVVD,",")+'%'
	//FIM Chamado n.040935 - OS n.042015 - Abel Babini - 19/05/2020 - Rel. Resumo Ceres - Entradas e Saidas por produto

	//INICIO Ticket 8050                    - Abel Babini - 18/01/2020 - Alteração de alíquotas nos relatórios de crédito outorgado
	//-----------------------------------
	//Variáveis BROWSER 35 - CREDITO OUTORGADO 2021
	//-----------------------------------
	Private _cMVCON1	:= GETMV("MV_#CROUN1",,"20210115") //Data de Início da nova legislação Crédito Outorgado
	Private _cMVCON2	:= GETMV("MV_#CROUN2",,"5.6") //Alíquota (%) do Crédito Outorgado Interestadual
	Private _cMVCON3	:= GETMV("MV_#CROUN3",,"2.8") //Alíquota (%) do Crédito Outorgado Estadual Exportação
	Private _cMVCON4	:= GETMV("MV_#CROUN4",,"5.6") //Alíquota (%) do Crédito Outorgado Estadual Op. Interna

	Private aBrw35p1 := {}
	Private aBrw35p2 := {}
	Private aBrw35p3 := {}
	Private aBrw35dm := {}
	Private aBrw35Nc := {}
	Private aBrw35Rs := {}
	Private aBrw35Cf := {}
	Private aBrw35Rl := {}
	Private aBrw35Rk := {}
	Private aBrw35x1 := {}
	Private aBrw35x2 := {}
	Private aBrw35x3 := {}
	Private aBrw35x4 := {}
	Private aBrw35x5 := {}
	Private aBrw35x6 := {}
	Private aBrw35x7 := {}
	Private aBrw35x8 := {}
	Private cAlB35Rs
	Private cXvAux35 := ""
	Private nLen35X1 := 0
	Private nLen35X2 := 0
	Private nLen35X3 := 0
	Private nLen35X4 := 0
	Private nLen35X5 := 0
	Private nLen35X6 := 0
	Private nLen35X7 := 0
	Private nLen35X8 := 0
	Private nA35T01	:= 0
	Private nA35T11 := 0
	Private nA35T12 := 0
	Private nA35T13 := 0
	Private nA35T14 := 0
	Private nA35T15 := 0
	Private nA35T16 := 0
	Private nA35T17 := 0
	//Ticket 12473                   - Abel Babini - 19/04/2021 - Alteração de alíquotas nos relatórios de crédito outorgado para o mês de abril/2021
	Private cFld35 := 'Crédito Outorgado'
	Private cFld352 := 'CFOP x NCM'
	Private cFld353 := Alltrim(_cMVCON3)+'% Fat Estadual'
	Private cFld353b := 'Notas Fiscais de Saída'
	Private cFld354 := Alltrim(_cMVCON3)+'% Compra Aves Estadual'
	Private cFld354b := 'Notas Fiscais Entrada Aves'
	Private cFld355 := Alltrim(_cMVCON3)+'% Dev Estadual'
	Private cFld355b := 'Notas Fiscais de Devolução'
	Private cFld356 := Alltrim(_cMVCON3)+'% Exp Estadual'
	Private cFld356b := 'Exportação'
	Private cFld357 := Alltrim(_cMVCON2)+'% Fat Interestadual'
	Private cFld358 := Alltrim(_cMVCON2)+'% Dev Interestadual'
	Private cFld359 := Alltrim(_cMVCON4)+'% Fat Estadual'
	Private cFld350 := Alltrim(_cMVCON4)+'% Dev Estadual'
	Private oBrw35Rs
	Private cFld35t1 := cFld35 + ' - Resumo'
	Private cFld35t2 := cFld35 + ' - CFOP X NCM'
	Private cFld35t3 := cFld35 + ' - '+Alltrim(_cMVCON3)+'% Faturamento Estadual' 
	Private cFld35t4 := cFld35 + ' - '+Alltrim(_cMVCON3)+'% Compra de Aves Estadual' 
	Private cFld35t5 := cFld35 + ' - '+Alltrim(_cMVCON3)+'% Devolução Estadual'
	Private cFld35t6 := cFld35 + ' - '+Alltrim(_cMVCON3)+'% Exportação Estadual'
	Private cFld35t7 := cFld35 + ' - '+Alltrim(_cMVCON2)+'% Faturamento Interestadual'
	Private cFld35t8 := cFld35 + ' - '+Alltrim(_cMVCON2)+'% Devolução Interestadual'
	Private cFld35t9 := cFld35 + ' - '+Alltrim(_cMVCON4)+'% Faturamento Estadual'
	Private cFld35t0 := cFld35 + ' - '+Alltrim(_cMVCON4)+'% Devolução Estadual'
	Private cFld35ta := cFld35 + ' - Demonstrativo'
	Private nQNCM35 := 0
	Private nQCFO35	:= 0
	//FIM Ticket 8050                    - Abel Babini - 18/01/2020 - Alteração de alíquotas nos relatórios de crédito outorgado

	//INICIO Ticket 10535										- Abel Babini - 09/03/2021 - Criar relatório de conferência de faturamento por tipo de cliente e regime de apuração.
	//-----------------------------------
	//Variáveis BROWSER 36 - CONFERENCIA FATURAMENTO
	//-----------------------------------
	// Private oAlB36Rs
	// Private oAlB36Dt

	// Private aBrw36Nc := {}
	// Private aBrw36Cf := {}
	// Private aBrw36R1 := {}
	// Private aBrw36R2 := {}
	// Private aBrw36R3 := {}
	// Private aBrw36R4 := {}
	// Private aBrw36R5 := {}
	// Private aBrw36R6 := {}
	// Private nQNCM36 := 0
	// Private nQCFO36	:= 0
  
	// Private oBrw36R1
	// Private oBrw36R2
	// Private oBrw36R3
	// Private oBrw36R4
	// Private oBrw36R5
	// Private oBrw36R6

	// Private cAlB36Rs
	// Private cAlB36Dt
	// Private cAlB36Qr
	// Private cFld36 := 'Conferência Faturamento'
	// Private cFld361 := 'Resumo'	
	// Private cFld362 := 'Detalhe'	
	// Private cFld36t1 := cFld36 + ' - Resumo'+ ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'
	// Private cFld36t2 := cFld36 + ' - Detalhe'+ ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'
	
	// Private _cMVCFFT	:= GETMV("MV_#CNFTCF",,"5101,5105,5118,5122,6118,6122,6105,5910,6910,6101,5401,6401")//CFOP a ser considerado no relatório de Conferência de Faturmaento por tipo de cliente
	// Private _cINCFFT	:= '%'+FormatIn(_cMVCFFT,",")+'%'

	// Private nVSNCTot := 0
	// Private nVSNCIcm := 0
	// Private nVOCTot := 0
	// Private nVOCIcm := 0
	// Private nVCFLTot := 0
	// Private nVCFLIcm := 0
	// Private nVTPCTot := 0
	// Private nVTPCIcm := 0

	//FIM Ticket 10535										- Abel Babini - 09/03/2021 - Criar relatório de conferência de faturamento por tipo de cliente e regime de apuração.

	//INICIO Ticket 18004                   - Abel Babini - 17/08/2021 - Alterações no Painel Fiscal - Apuração de Frete e criação do relatório Débito Serv. Industrialização
	//-----------------------------------
	//Variáveis BROWSER 37 - DÉBITO SERVIÇO INDUSTRIALIZAÇÃO
	//-----------------------------------
	Private aBrw37Rs := aBrw37Dt := {}
	Private cAlB37Rs
	Private cFld37 := 'Débito Serv. Industrial.'
	Private cFld371 := 'Resumo'	
	Private cFld372 := 'Detalhe'	
	Private cFld37t1 := cFld37 + ' - Resumo'+ ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'
	Private cFld37t2 := cFld37 + ' - Detalhe'+ ' - ' + Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'

	Private _cMVPrSI	:= GETMV("MV_#DBSRVI",,"151296,") //Código dos produtos considerados no relatório de Débito Serv. de Industrialização
	Private _cInPrSI	:= '%'+FormatIn(_cMVPrSI,",")+'%'
	
	Private _cMVCfDS	:= GETMV("MV_#DBSRCF",,"1101,2101,") //Código CFOP para serem considerados no relatório no relatório de Débito Serv. de Industrialização
	Private _cInCfDS	:= '%'+FormatIn(_cMVCfDS,",")+'%'
	
	Private nA37T01 := nA37T02 := nA37T03 := nA37T04 := nA37T05 := nA37T06 := 0 

	//FIM Ticket 18004                   - Abel Babini - 17/08/2021 - Alterações no Painel Fiscal - Apuração de Frete e criação do relatório Débito Serv. Industrialização

	//INICIO Ticket 12473                   - Abel Babini - 19/04/2021 - Alteração de alíquotas nos relatórios de crédito outorgado para o mês de abril/2021
	//Verifica se houve fechamento, e em caso afirmativa, utiliza os parâmetros utilizados na época.
	xLoadPar()
	//FIM Ticket 12473                   - Abel Babini - 19/04/2021 - Alteração de alíquotas nos relatórios de crédito outorgado para o mês de abril/2021
	aFld35	:= {"Resumo","Créd. Interestadual "+Alltrim(_cMVCON2)+"%","Créd. Estadual "+Alltrim(_cMVCON3)+"%","Créd. Estadual "+Alltrim(_cMVCON4)+"%"}
	//Atualiza variáveis de Mes e Ano do período anterior.
	If _cMesI == "1"
		_cMesAnt := "12"
		_cAnoAnt := Alltrim(Str(Val(_cAnoI)-1))
	Else
		_cMesAnt := Alltrim(Strzero(Val(_cMesI)-1,2	))
		_cAnoAnt := _cAnoI
	Endif

	cHrIni	:= TIME()
	
	IF nOpMdl	== 1
		MsgRun( "Carregando dados - Parâmetros, aguarde...",,{ || xABrw00() } ) //ESPECIE DE DOCUMENTOS
		MsgRun( "Carregando dados - Resumo da GIA - ST, aguarde...",,{ || xABrw04() } ) //RESUMO DA GIA ST
		MsgRun( "Carregando dados - Dif. de Alíquota, aguarde...",,{ || xABrw07() } ) //DIFERENCIAL DE ALIQUOTA // INICIO n.040924  - Relatorio Dif. de Alíquota - Abel Babini - 07/05/2019
		MsgRun( "Carregando dados - Crédito Outorgado, aguarde...",,{ || xABrw08() } ) //CREDITO OUTORGADO // INICIO n.040923  - Relatorio Crédito Outorgadoa - Abel Babini - 20/08/2019	
		MsgRun( "Carregando dados - Crédito Outorgado 2021, aguarde...",,{ || xABrw35() } ) //CREDITO OUTORGADO 2021 //INICIO Ticket 8050                    - Abel Babini - 18/01/2020 - Alteração de alíquotas nos relatórios de crédito outorgado
		MsgRun( "Carregando dados - Dev. Compras, aguarde...",,{ || xABrw10() } ) //DEV. COMPRAS // INICIO n.050629  - Relatorio Devolução de Compras - Abel Babini - 27/08/2019
		MsgRun( "Carregando dados - Polenta, aguarde...",,{ || xABrw11() } ) //POLENTA
		MsgRun( "Carregando dados - Embutidos, aguarde...",,{ || xABrw12() } ) //EMBUTIDOS
		MsgRun( "Carregando dados - Almondegas, aguarde...",,{ || xABrw13() } ) //ALMONDEGAS
		MsgRun( "Carregando dados - Uniformes, aguarde...",,{ || xABrw18() } ) //UNIFORMES
		MsgRun( "Carregando dados - Produtos Não Comestíveis, aguarde...",,{ || xABrw19() } ) //PRODUTOS NAO COMESTIVEIS
		MsgRun( "Carregando dados - Retorno Industrial., aguarde...",,{ || xABrw21() } ) //INDUSTR E USO E CONSUMO
		MsgRun( "Carregando dados - Revenda Tributada, aguarde...",,{ || xABrw22() } ) //REVENDA TRIBUTADA
		MsgRun( "Carregando dados - Industrialização PA, aguarde...",,{ || xABrw23() } ) //INDUSTR DE PA // INICIO n.040930  - Relatorio Industrialização PA - Abel Babini - 24/06/2019
		MsgRun( "Carregando dados - Apuração ICMS Frete, aguarde...",,{ || xABrw24() } ) //APURACAO ICMS FRETE // INICIO n.050629  - Relatorio Apuração ICMS Frete - Abel Babini - 01/10/2019
		MsgRun( "Carregando dados - Celulares, aguarde...",,{ || xABrw25() } ) //CELULARES
		MsgRun( "Carregando dados - Graxaria, aguarde...",,{ || xABrw14() } ) //GRAXARIA //INICIO Chamado n.050629 - OS n.054353 - Relatorio Graxaria - Abel Babini - 29/10/2019
		MsgRun( "Carregando dados - Compra Aves, aguarde...",,{ || xABrw16() } ) //COMPRA AVES
		MsgRun( "Carregando dados - Compra Lenha, aguarde...",,{ || xABrw15() } ) //COMPRA LENHA
		MsgRun( "Carregando dados - Compra Legumes, aguarde...",,{ || xABrw17() } ) //COMPRA LEGUMES
		MsgRun( "Carregando dados - DifAl Não Contribuinte, aguarde...",,{ || xABrw06() } ) //DIFAL NAO CONTRIBUINTE
		MsgRun( "Carregando dados - Outras Saídas, aguarde...",,{ || xABrw09() } ) //OUTRAS SAIDAS //INICIO Chamado n.050629 - OS n.052801 - Relatorio Outras Saídas - Abel Babini - 02/12/2019
		//MsgRun( "Carregando dados - Outras Entradas, aguarde...",,{ || Static Call(ADFIS038R,xABrw26) } ) //OUTRAS ENTRADAS //INICIO Chamado n.055157 - OS n.056585 - Relatório Outras Entradas - Abel Babini - 28/01/2020
		//MsgRun( "Carregando dados - Débito Serv. Industrialização, aguarde...",,{ || Static Call(ADFIS038R,xABrw37) } ) //DEB SERV INDUSTRIALIZACAO //INICIO Ticket 18004                   - Abel Babini - 17/08/2021 - Alterações no Painel Fiscal - Apuração de Frete e criação do relatório Débito Serv. Industrialização

		//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
		MsgRun( "Carregando dados - Outras Entradas, aguarde...",,{ || u_FIS038A0() } ) //OUTRAS ENTRADAS //INICIO Chamado n.055157 - OS n.056585 - Relatório Outras Entradas - Abel Babini - 28/01/2020
		MsgRun( "Carregando dados - Débito Serv. Industrialização, aguarde...",,{ || u_FIS038A1() } ) //DEB SERV INDUSTRIALIZACAO //INICIO Ticket 18004                   - Abel Babini - 17/08/2021 - Alterações no Painel Fiscal - Apuração de Frete e criação do relatório Débito Serv. Industrialização
		
		MsgRun( "Carregando dados - Demonstrativo, aguarde...",,{ || xABrw05() } ) //DEMONSTRATIVO

		//MsgRun( "Carregando dados - Resumo da GIA, aguarde...",,{ || Static Call(ADFIS038R,xABrw03) } ) //RESUMO DA GIA
		//MsgRun( "Carregando dados - NFs Canceladas, aguarde...",,{ || Static Call(ADFIS038R,xABrw20) } ) //NF CANCELADAS
		//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
		MsgRun( "Carregando dados - Resumo da GIA, aguarde...",,{ || u_FIS038A2() } ) //RESUMO DA GIA
		MsgRun( "Carregando dados - NFs Canceladas, aguarde...",,{ || u_FIS038A3() } ) //NF CANCELADAS
		
		// MsgRun( "Carregando dados - Conf Faturamento, aguarde...",,{ || Static Call(ADFIS038R,xABrw36) } ) //NF CANCELADAS
	ELSEIF nOpMdl	== 2
		MsgRun( "Carregando dados - Parâmetros, aguarde...",,{ || xABrw00() } ) //ESPECIE DE DOCUMENTOS
		MsgRun( "Carregando dados - Dif. de Alíquota, aguarde...",,{ || xABrw07() } ) //DIFERENCIAL DE ALIQUOTA // INICIO n.040924  - Relatorio Dif. de Alíquota - Abel Babini - 07/05/2019
		MsgRun( "Carregando dados - Outras Saídas, aguarde...",,{ || xABrw09() } ) //OUTRAS SAIDAS //INICIO Chamado n.050629 - OS n.052801 - Relatorio Outras Saídas - Abel Babini - 02/12/2019
		MsgRun( "Carregando dados - Dev. Compras, aguarde...",,{ || xABrw10() } ) //DEV. COMPRAS // INICIO n.050629  - Relatorio Devolução de Compras - Abel Babini - 27/08/2019
		MsgRun( "Carregando dados - Graxaria, aguarde...",,{ || xABrw14() } ) //GRAXARIA //INICIO Chamado n.050629 - OS n.054353 - Relatorio Graxaria - Abel Babini - 29/10/2019
		MsgRun( "Carregando dados - Compra Lenha, aguarde...",,{ || xABrw15() } ) //COMPRA LENHA
		MsgRun( "Carregando dados - Retorno Industrial., aguarde...",,{ || xABrw21() } ) //INDUSTR E USO E CONSUMO
		MsgRun( "Carregando dados - Revenda Tributada, aguarde...",,{ || xABrw22() } ) //REVENDA TRIBUTADA
		MsgRun( "Carregando dados - Industrialização PA, aguarde...",,{ || xABrw23() } ) //INDUSTR DE PA // INICIO n.040930  - Relatorio Industrialização PA - Abel Babini - 24/06/2019
		MsgRun( "Carregando dados - Apuração ICMS Frete, aguarde...",,{ || xABrw24() } ) //APURACAO ICMS FRETE // INICIO n.050629  - Relatorio Apuração ICMS Frete - Abel Babini - 01/10/2019
		//MsgRun( "Carregando dados - Outras Entradas, aguarde...",,{ || Static Call(ADFIS038R,xABrw26) } ) //OUTRAS ENTRADAS //INICIO Chamado n.055157 - OS n.056585 - Relatório Outras Entradas - Abel Babini - 28/01/2020
		//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
		MsgRun( "Carregando dados - Outras Entradas, aguarde...",,{ || u_FIS038A0() } ) //OUTRAS ENTRADAS //INICIO Chamado n.055157 - OS n.056585 - Relatório Outras Entradas - Abel Babini - 28/01/2020

		//MsgRun( "Carregando dados - Resumo da GIA, aguarde...",,{ || Static Call(ADFIS038R,xABrw03) } ) //RESUMO DA GIA
		//MsgRun( "Carregando dados - NFs Canceladas, aguarde...",,{ || Static Call(ADFIS038R,xABrw20) } ) //NF CANCELADAS
		//MsgRun( "Carregando dados - Crédito CIAP, aguarde...",,{ || Static Call(ADFIS038R,xABrw28) } ) //CREDITO CIAP
		//MsgRun( "Carregando dados - Compra Materia Prima, aguarde...",,{ || Static Call(ADFIS038R,xABrw29) } ) //COMPRA MP
		//MsgRun( "Carregando dados - Vendas, aguarde...",,{ || Static Call(ADFIS038R,xABrw30) } ) //COMPRA MP

		//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
		MsgRun( "Carregando dados - NFs Canceladas, aguarde...",,{ || u_FIS038A3() } ) //NF CANCELADAS
		MsgRun( "Carregando dados - Crédito CIAP, aguarde...",,{ || u_FIS038A4() } ) //CREDITO CIAP
		MsgRun( "Carregando dados - Compra Materia Prima, aguarde...",,{ || u_FIS038A5() } ) //COMPRA MP
		MsgRun( "Carregando dados - Vendas, aguarde...",,{ || u_FIS038A6() } ) //COMPRA MP
		//Chamado Interno TI - OS        - Abel Babini - 29/05/2020 - Painel Fiscal ICMS - Ajuste de Error.log no Modelo2 - O relatório precisa ser executado no Modelo 2
		////MsgRun( "Carregando dados - Entradas e Saidas, aguarde...",,{ || Static Call(ADFIS038R,xABrw33) } ) //ENTRADAS E SAIDAS
		//MsgRun( "Carregando dados - Devolução Vendas, aguarde...",,{ || Static Call(ADFIS038R,xABrw34) } ) //COMPRA MP
		//MsgRun( "Carregando dados - Débito Serv. Industrialização, aguarde...",,{ || Static Call(ADFIS038R,xABrw37) } ) //DEB SERV INDUSTRIALIZACAO //INICIO Ticket 18004                   - Abel Babini - 17/08/2021 - Alterações no Painel Fiscal - Apuração de Frete e criação do relatório Débito Serv. Industrialização
		//MsgRun( "Carregando dados - IVA, aguarde...",,{ || Static Call(ADFIS038R,xABrw27) } ) //IVA
		//MsgRun( "Carregando dados - Resumo da GIA, aguarde...",,{ || Static Call(ADFIS038R,xABrw03) } ) //RESUMO DA GIA

		//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
		MsgRun( "Carregando dados - Entradas e Saidas, aguarde...",,{ || u_FIS038A7() } ) //ENTRADAS E SAIDAS
		MsgRun( "Carregando dados - Devolução Vendas, aguarde...",,{ || u_FIS038A8() } ) //COMPRA MP
		MsgRun( "Carregando dados - Débito Serv. Industrialização, aguarde...",,{ || u_FIS038A9() } ) //DEB SERV INDUSTRIALIZACAO //INICIO Ticket 18004                   - Abel Babini - 17/08/2021 - Alterações no Painel Fiscal - Apuração de Frete e criação do relatório Débito Serv. Industrialização
		MsgRun( "Carregando dados - IVA, aguarde...",,{ || u_FIS038B0() } ) //IVA
		MsgRun( "Carregando dados - Resumo da GIA, aguarde...",,{ || u_FIS038A2() } ) //RESUMO DA GIA
	ELSEIF nOpMdl	== 3
		MsgRun( "Carregando dados - Parâmetros, aguarde...",,{ || xABrw00() } ) //ESPECIE DE DOCUMENTOS
		//MsgRun( "Carregando dados - NFs Canceladas, aguarde...",,{ || Static Call(ADFIS038R,xABrw20) } ) //NF CANCELADAS
		//MsgRun( "Carregando dados - Conferência NF Serviço...",,{ || Static Call(ADFIS038R,xABrw32) } ) //CONFERÊNCIA NF SERVIÇO
		//MsgRun( "Carregando dados - Apuração ICMS, aguarde...",,{ || Static Call(ADFIS038R,xABrw31) } ) //APURAÇÃO ICMS
		//MsgRun( "Carregando dados - Resumo da GIA, aguarde...",,{ || Static Call(ADFIS038R,xABrw03) } ) //RESUMO DA GIA
		
		//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
		MsgRun( "Carregando dados - NFs Canceladas, aguarde...",,{ || u_FIS038A3() } ) //NF CANCELADAS
		MsgRun( "Carregando dados - Conferência NF Serviço...",,{ || u_FIS038B1() } ) //CONFERÊNCIA NF SERVIÇO
		MsgRun( "Carregando dados - Apuração ICMS, aguarde...",,{ || u_FIS038B2() } ) //APURAÇÃO ICMS
		MsgRun( "Carregando dados - Resumo da GIA, aguarde...",,{ || u_FIS038A2() } ) //RESUMO DA GIA

	ELSEIF nOpMdl	== 4
		MsgRun( "Carregando dados - Parâmetros, aguarde...",,{ || xABrw00() } ) //ESPECIE DE DOCUMENTOS
		MsgRun( "Carregando dados - Dif. de Alíquota, aguarde...",,{ || xABrw07() } ) //DIFERENCIAL DE ALIQUOTA // INICIO n.040924  - Relatorio Dif. de Alíquota - Abel Babini - 07/05/2019
		MsgRun( "Carregando dados - Outras Saídas, aguarde...",,{ || xABrw09() } ) //OUTRAS SAIDAS //INICIO Chamado n.050629 - OS n.052801 - Relatorio Outras Saídas - Abel Babini - 02/12/2019
		MsgRun( "Carregando dados - Dev. Compras, aguarde...",,{ || xABrw10() } ) //DEV. COMPRAS // INICIO n.050629  - Relatorio Devolução de Compras - Abel Babini - 27/08/2019
		MsgRun( "Carregando dados - Graxaria, aguarde...",,{ || xABrw14() } ) //GRAXARIA //INICIO Chamado n.050629 - OS n.054353 - Relatorio Graxaria - Abel Babini - 29/10/2019
		MsgRun( "Carregando dados - Compra Lenha, aguarde...",,{ || xABrw15() } ) //COMPRA LENHA
		MsgRun( "Carregando dados - Retorno Industrial., aguarde...",,{ || xABrw21() } ) //INDUSTR E USO E CONSUMO
		MsgRun( "Carregando dados - Revenda Tributada, aguarde...",,{ || xABrw22() } ) //REVENDA TRIBUTADA
		MsgRun( "Carregando dados - Apuração ICMS Frete, aguarde...",,{ || xABrw24() } ) //APURACAO ICMS FRETE // INICIO n.050629  - Relatorio Apuração ICMS Frete - Abel Babini - 01/10/2019
		
		//MsgRun( "Carregando dados - Outras Entradas, aguarde...",,{ || Static Call(ADFIS038R,xABrw26) } ) //OUTRAS ENTRADAS //INICIO Chamado n.055157 - OS n.056585 - Relatório Outras Entradas - Abel Babini - 28/01/2020
		//MsgRun( "Carregando dados - NFs Canceladas, aguarde...",,{ || Static Call(ADFIS038R,xABrw20) } ) //NF CANCELADAS
		//MsgRun( "Carregando dados - Crédito CIAP, aguarde...",,{ || Static Call(ADFIS038R,xABrw28) } ) //CREDITO CIAP
		//MsgRun( "Carregando dados - Compra Materia Prima, aguarde...",,{ || Static Call(ADFIS038R,xABrw29) } ) //COMPRA MP
		//MsgRun( "Carregando dados - Vendas, aguarde...",,{ || Static Call(ADFIS038R,xABrw30) } ) //COMPRA MP
		//MsgRun( "Carregando dados - Devolução Vendas, aguarde...",,{ || Static Call(ADFIS038R,xABrw34) } ) //COMPRA MP
		//MsgRun( "Carregando dados - Entradas e Saidas, aguarde...",,{ || Static Call(ADFIS038R,xABrw33) } ) //ENTRADAS E SAIDAS
		//MsgRun( "Carregando dados - Resumo da GIA, aguarde...",,{ || Static Call(ADFIS038R,xABrw27) } ) //IVA
		//MsgRun( "Carregando dados - Resumo da GIA, aguarde...",,{ || Static Call(ADFIS038R,xABrw03) } ) //RESUMO DA GIA

		//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
		MsgRun( "Carregando dados - Outras Entradas, aguarde...",,{ || u_FIS038A0() } ) //OUTRAS ENTRADAS //INICIO Chamado n.055157 - OS n.056585 - Relatório Outras Entradas - Abel Babini - 28/01/2020
		MsgRun( "Carregando dados - NFs Canceladas, aguarde...",,{ || u_FIS038A3() } ) //NF CANCELADAS
		MsgRun( "Carregando dados - Crédito CIAP, aguarde...",,{ || u_FIS038A4() } ) //CREDITO CIAP
		MsgRun( "Carregando dados - Compra Materia Prima, aguarde...",,{ || u_FIS038A5() } ) //COMPRA MP
		MsgRun( "Carregando dados - Vendas, aguarde...",,{ || u_FIS038A6() } ) //COMPRA MP
		MsgRun( "Carregando dados - Devolução Vendas, aguarde...",,{ || u_FIS038A8() } ) //COMPRA MP
		MsgRun( "Carregando dados - Entradas e Saidas, aguarde...",,{ || u_FIS038A7() } ) //ENTRADAS E SAIDAS
		MsgRun( "Carregando dados - Resumo da GIA, aguarde...",,{ || u_FIS038B0() } ) //IVA
		MsgRun( "Carregando dados - Resumo da GIA, aguarde...",,{ || u_FIS038A2() } ) //RESUMO DA GIA
	ENDIF

	cHrFim	:= ElapTime( cHrIni, TIME() )

	AADD(aObjects,{100,020,.T.,.F.,.F.})
	AADD(aObjects,{100,100,.T.,.T.,.F.})
	aPosObj:=MsObjSize(aInfo,aObjects)

	DEFINE MSDIALOG oDlg TITLE cCadastr OF oMainWnd PIXEL FROM aSize[7],0 TO aSize[6],aSize[5]
	oDlg:lMaximized := .T.

	@ 001,aPosObj[1,2] TO aPosObj[1,3],aPosObj[1,4] OF oDlg PIXEL

	@ 004,008 SAY OemToAnsi("Ano")		FONT oFont002 SIZE 022,7 OF oDlg PIXEL			 //"Ano"
	@ 004,036 SAY OemtoAnsi("Mês")		FONT oFont002 SIZE 030,7 OF oDlg PIXEL			 //"Mês"
	@ 004,060 SAY OemToAnsi("Filial")	FONT oFont002 SIZE 021,7 OF oDlg PIXEL			 //"Filial"

	@ 012,008 SAY OemToAnsi(_cAnoI)	FONT oFont001 SIZE 022,7 OF oDlg PIXEL			 //"Ano"
	@ 012,036 SAY OemtoAnsi(_cMesI)	FONT oFont001 SIZE 030,7 OF oDlg PIXEL			 //"Mês"
	@ 012,060 SAY OemToAnsi(SM0->M0_FILIAL)	FONT oFont001 SIZE 060,7 OF oDlg PIXEL			 //"Filial"

	@ 004,350 BUTTON OemToAnsi('Exp. Tudo')			SIZE 42,13 FONT oDlg:oFont ACTION xExpICMR() OF oDlg PIXEL //"Exportar Excel"
	//Chamado Interno TI - OS        - Abel Babini - 13/07/2020 - Painel Fiscal ICMS - Excluir rotina que causa erro na compilação no Release 12.1.27
	//@ 004,400 BUTTON OemToAnsi('Sair')     	 		SIZE 42,13 FONT oDlg:oFont ACTION xFechaDl() OF oDlg PIXEL //"Sair"

	IF nOpMdl	== 1
		IF _mvpr01 >= STOD('20210101') .AND. _mvpr01 < STOD('20210201')
			aFolder  := {cFld01,cFld02,cFld03,cFld04,cFld05,cFld06,cFld07,cFld09,cFld10,cFld11,cFld12,cFld13,cFld14,cFld15,cFld16,cFld17,cFld18,cFld19,cFld20,cFld21,cFld22,cFld23,cFld24,cFld25,cFld26,cFld08,cFld35,cFld37} //,cFld36
		ELSEIF _mvpr01 < STOD('20210101')
			aFolder  := {cFld01,cFld02,cFld03,cFld04,cFld05,cFld06,cFld07,cFld09,cFld10,cFld11,cFld12,cFld13,cFld14,cFld15,cFld16,cFld17,cFld18,cFld19,cFld20,cFld21,cFld22,cFld23,cFld24,cFld25,cFld26,cFld08,cFld37} //,cFld36
		ELSE
			aFolder  := {cFld01,cFld02,cFld03,cFld04,cFld05,cFld06,cFld07,cFld09,cFld10,cFld11,cFld12,cFld13,cFld14,cFld15,cFld16,cFld17,cFld18,cFld19,cFld20,cFld21,cFld22,cFld23,cFld24,cFld25,cFld26,cFld35,cFld37} //,cFld36
		ENDIF
	ELSEIF nOpMdl	== 2
		aFolder  := {cFld01,cFld02,cFld03,cFld07,cFld09,cFld10,cFld14,cFld15,cFld20,cFld21,cFld22,cFld23,cFld24,cFld26,cFld27,cFld28,cFld29,cFld30,cFld33,cFld34,cFld37}
	ELSEIF nOpMdl	== 3
		aFolder  := {cFld01,cFld02,cFld31,cFld31b,cFld20,cFld32}
	ELSEIF nOpMdl	== 4
		aFolder  := {cFld01,cFld02,cFld03,cFld07,cFld09,cFld10,cFld34,cFld14,cFld15,cFld20,cFld21,cFld22,cFld24,cFld26,cFld28,cFld29,cFld30,cFld33}
	ENDIF

	oFolder030:=TFolder():New(aPosObj[2,1],aPosObj[2,2],aFolder,{},oDlg,,,, .T., .F.,aPosObj[2,4]-2,aPosObj[2,3]-40,)
	IF nOpMdl	== 1
		oFolder030:aDialogs[1]:oFont :=oDlg:oFont //Informações Gerais
		oFolder030:aDialogs[2]:oFont :=oDlg:oFont // Parâmetros
		oFolder030:aDialogs[3]:oFont :=oDlg:oFont //Abertura GIA
		oFolder030:aDialogs[4]:oFont :=oDlg:oFont //Abertura GIA ST
		oFolder030:aDialogs[5]:oFont :=oDlg:oFont //Demonstrativo
		oFolder030:aDialogs[6]:oFont :=oDlg:oFont //Difal Nao Contribuinte
		oFolder030:aDialogs[7]:oFont :=oDlg:oFont //Dif. Aliquota
		oFolder030:aDialogs[8]:oFont :=oDlg:oFont //Outras Saídas
		oFolder030:aDialogs[9]:oFont :=oDlg:oFont //Dev Comrpas
		oFolder030:aDialogs[10]:oFont :=oDlg:oFont //Polenta
		oFolder030:aDialogs[11]:oFont :=oDlg:oFont //Embutidos
		oFolder030:aDialogs[12]:oFont :=oDlg:oFont //Almondegas
		oFolder030:aDialogs[13]:oFont :=oDlg:oFont //Graxaria
		oFolder030:aDialogs[14]:oFont :=oDlg:oFont //Compra Lenha
		oFolder030:aDialogs[15]:oFont :=oDlg:oFont //Compra Aves
		oFolder030:aDialogs[16]:oFont :=oDlg:oFont //Legumes
		oFolder030:aDialogs[17]:oFont :=oDlg:oFont //Uniforme
		oFolder030:aDialogs[18]:oFont :=oDlg:oFont //Produtos Não Comestiveis	
		oFolder030:aDialogs[19]:oFont :=oDlg:oFont //NF Canceladas
		oFolder030:aDialogs[20]:oFont :=oDlg:oFont //Ind. Ativos e Uso e Consumo
		oFolder030:aDialogs[21]:oFont :=oDlg:oFont //Revenda Tributada
		oFolder030:aDialogs[22]:oFont :=oDlg:oFont //Industrialização PA
		oFolder030:aDialogs[23]:oFont :=oDlg:oFont //ICMS Frete
		oFolder030:aDialogs[24]:oFont :=oDlg:oFont //Celulares
		oFolder030:aDialogs[25]:oFont :=oDlg:oFont //Outras Entradas
		oFolder030:aDialogs[26]:oFont :=oDlg:oFont //Credito Outorgado
		
		IF _mvpr01 >= STOD('20210101') .AND. _mvpr01 < STOD('20210201')
			oFolder030:aDialogs[27]:oFont :=oDlg:oFont //Crédito Outorgado 2021
			oFolder030:aDialogs[28]:oFont :=oDlg:oFont //Débito Serv Industrialização
		ELSE
			oFolder030:aDialogs[27]:oFont :=oDlg:oFont //Débito Serv Industrialização
		ENDIF
		// oFolder030:aDialogs[28]:oFont :=oDlg:oFont //Conferência do Faturamento
	ELSEIF nOpMdl	== 2
		oFolder030:aDialogs[1]:oFont :=oDlg:oFont //Informações Gerais
		oFolder030:aDialogs[2]:oFont :=oDlg:oFont //Parâmetros
		oFolder030:aDialogs[3]:oFont :=oDlg:oFont //Abertura GIA
		oFolder030:aDialogs[4]:oFont :=oDlg:oFont //Dif. Aliquota
		oFolder030:aDialogs[5]:oFont :=oDlg:oFont //Outras Saídas
		oFolder030:aDialogs[6]:oFont :=oDlg:oFont //Dev Comrpas
		oFolder030:aDialogs[7]:oFont :=oDlg:oFont //Graxaria
		oFolder030:aDialogs[8]:oFont :=oDlg:oFont //Compra Lenha
		oFolder030:aDialogs[9]:oFont :=oDlg:oFont //NF Canceladas
		oFolder030:aDialogs[10]:oFont :=oDlg:oFont //Ind. Ativos e Uso e Consumo
		oFolder030:aDialogs[11]:oFont :=oDlg:oFont //Revenda Tributada
		oFolder030:aDialogs[12]:oFont :=oDlg:oFont //Industrialização de PA
		oFolder030:aDialogs[13]:oFont :=oDlg:oFont //ICMS Frete
		oFolder030:aDialogs[14]:oFont :=oDlg:oFont //Outras Entradas
		oFolder030:aDialogs[15]:oFont :=oDlg:oFont //IVA
		oFolder030:aDialogs[16]:oFont :=oDlg:oFont //Credito CIAP		
		oFolder030:aDialogs[17]:oFont :=oDlg:oFont //Compra MP
		oFolder030:aDialogs[18]:oFont :=oDlg:oFont //Vendas
		oFolder030:aDialogs[19]:oFont :=oDlg:oFont //Entradas e Saidas
		oFolder030:aDialogs[20]:oFont :=oDlg:oFont //Dev. Vendas
		oFolder030:aDialogs[21]:oFont :=oDlg:oFont //Débito Serv Industrialização
	ELSEIF nOpMdl	== 3
		oFolder030:aDialogs[1]:oFont :=oDlg:oFont //Informações Gerais
		oFolder030:aDialogs[2]:oFont :=oDlg:oFont //Parâmetros
		oFolder030:aDialogs[3]:oFont :=oDlg:oFont //Abertura GIA ou Apuração ICMS
		oFolder030:aDialogs[4]:oFont :=oDlg:oFont //Detalhamento Apuração ICMS
		oFolder030:aDialogs[5]:oFont :=oDlg:oFont //NF Canceladas
		oFolder030:aDialogs[6]:oFont :=oDlg:oFont //Conferência NF Serviço
	ELSEIF nOpMdl	== 4
		oFolder030:aDialogs[1]:oFont :=oDlg:oFont //Informações Gerais
		oFolder030:aDialogs[2]:oFont :=oDlg:oFont //Parâmetros
		oFolder030:aDialogs[3]:oFont :=oDlg:oFont //Abertura GIA
		oFolder030:aDialogs[4]:oFont :=oDlg:oFont //Dif. Aliquota
		oFolder030:aDialogs[5]:oFont :=oDlg:oFont //Outras Saídas
		oFolder030:aDialogs[6]:oFont :=oDlg:oFont //Dev Comrpas

		oFolder030:aDialogs[7]:oFont :=oDlg:oFont //Devolução Vendas

		oFolder030:aDialogs[8]:oFont :=oDlg:oFont //Graxaria
		oFolder030:aDialogs[9]:oFont :=oDlg:oFont //Compra Lenha
		oFolder030:aDialogs[10]:oFont :=oDlg:oFont //NF Canceladas
		oFolder030:aDialogs[11]:oFont :=oDlg:oFont //Ind. Ativos e Uso e Consumo
		oFolder030:aDialogs[12]:oFont :=oDlg:oFont //Revenda Tributada
		//oFolder030:aDialogs[12]:oFont :=oDlg:oFont //Industrialização de PA
		oFolder030:aDialogs[13]:oFont :=oDlg:oFont //ICMS Frete
		oFolder030:aDialogs[14]:oFont :=oDlg:oFont //Outras Entradas
		//oFolder030:aDialogs[15]:oFont :=oDlg:oFont //IVA
		oFolder030:aDialogs[15]:oFont :=oDlg:oFont //Credito CIAP		
		oFolder030:aDialogs[16]:oFont :=oDlg:oFont //Compra MP
		oFolder030:aDialogs[17]:oFont :=oDlg:oFont //Vendas
		oFolder030:aDialogs[18]:oFont :=oDlg:oFont //Entradas e Saidas
	ENDIF

	IF nOpMdl	== 1 .or. nOpMdl	== 2 .or. nOpMdl	== 3 .or. nOpMdl	== 4
		//--------------------------------------------------------------------------
		//ABA 01 - INFORMAÇÕES GERAIS (INICIO)
		//--------------------------------------------------------------------------
		oFLr01	:= FWLayer():New()
		oFLr01:Init( oFolder030:aDialogs[1], .F., .T.)

		//Define os Paineis
		//TITULO
		oFLr01:AddLine ('TITULO', 10, .F.)
		oFLr01:AddCollumn('TITULO',100,.F.,'TITULO')
		//DETALHE
		oFLr01:AddLine ('DETALHE', 90, .F.)
		oFLr01:AddCollumn('DET_ESQ',100,.F.,'DETALHE')

		oPn01TE	:= oFLr01:GetColPanel('TITULO','TITULO')
		oPn01DE	:= oFLr01:GetColPanel('DET_ESQ','DETALHE')

		oPn01TE:FreeChildren()
		oPn01DE:FreeChildren()

		//PARÂMETROS
		@ 001,008 SAY OemToAnsi("INFORMAÇÕES GERAIS - PAINEL FISCAL ICMS")		FONT oFont003 SIZE 200,15 OF oPn01TE PIXEL
		@ 011,015 SAY OemToAnsi("Bem vindo ao Painel Fiscal, "+_cNomUse) FONT oFont002 SIZE 400,15 OF oPn01DE PIXEL
		@ 025,015 SAY OemToAnsi("Esta rotina tem o objetivo de centralizar a emissão dos relatórios relacionados ao Fechamento Fiscal - ICMS."+;
			" A geração dos relatórios poderá ser realizada de forma consolidada, clicando no botão 'Exp. Tudo' localizado no painel superior, ou de forma individualizada, clicando no botão 'Gera Relatório' localizado em cada aba."+;
			" Novas funcionalidades pdoerão ser adicionadas ao longo do tempo afim de atender à demanda do Departamento Fiscal.";
			)				FONT oFont002 SIZE 400,200 OF oPn01DE PIXEL

		@ 101,008 SAY OemToAnsi("Tempo de Processamento: "+cHrFim)		FONT oFont003 SIZE 200,15 OF oPn01DE PIXEL

		//--------------------------------------------------------------------------
		//ABA 02 - PARÂMETROS (INICIO)
		//--------------------------------------------------------------------------

		oFWLr01	:= FWLayer():New()
		oFWLr01:Init( oFolder030:aDialogs[2], .F., .T.)

		//Define os Paineis
		//TITULO
		oFWLr01:AddLine ('TITULO', 06, .F.)
		oFWLr01:AddCollumn('TITULO',100,.F.,'TITULO')
		//DETALHE
		oFWLr01:AddLine ('DETALHE', 94, .F.)
		oFWLr01:AddCollumn('DET_ESQ',100,.F.,'DETALHE')
		//oFWLr01:AddCollumn('DET_DIR',50,.F.,'DETALHE')

		oPn01TE	:= oFWLr01:GetColPanel('TITULO','TITULO')
		oPn01DE	:= oFWLr01:GetColPanel('DET_ESQ','DETALHE')
		//oPn01DD	:= oFWLr01:GetColPanel('DET_DIR','DETALHE')

		oPn01TE:FreeChildren()
		oPn01DE:FreeChildren()
		//oPn01DD:FreeChildren()
		
		//PARÂMETROS
		@ 001,008 SAY OemToAnsi("Parâmetros Utilizados")	FONT oFont003 SIZE 200,15 OF oPn01TE PIXEL

		oBrw01Pr:= TcBrowse():New(010,050,150,150,,,,oPn01DE,,,,,,,,,,,,.f.,cAlB00Rs,.t.,,.f.,,,,)
		oBrw01Pr:AddColumn(TcColumn():New("Relatorio"	,{||(cAlB00Rs)->RELATORI},"@!"	,,,"LEFT"	,080,.f.,.f.,,,,.f.,) )
		oBrw01Pr:AddColumn(TcColumn():New("Parâmetro"	,{||(cAlB00Rs)->PARAMETR},"@!"	,,,"LEFT"	,080,.f.,.f.,,,,.f.,) )
		oBrw01Pr:AddColumn(TcColumn():New("Conteúdo"	,{||(cAlB00Rs)->CONTEUDO},"@!"	,,,"LEFT"	,200,.f.,.f.,,,,.f.,) )
		oBrw01Pr:AddColumn(TcColumn():New("Descrição"	,{||(cAlB00Rs)->DESCR},"@!"	,,,"LEFT"	,200,.f.,.f.,,,,.f.,) )

		//INICIO Ticket 5252                    - Abel Babini - 17/11/2020 - Painel Fiscal - Alteração de parâmetros pelo usuário		
		IF _lMVUsPr
			//@ 010,470 BUTTON OemToAnsi('Processa')	SIZE 42,26	When !_lPerFch FONT oDlg:oFont ACTION xPrcMn05() OF oP02RE01 PIXEL //"Exportar Excel"			
			oBrw01Pr:bLDblClick	:=	{ || fMudaPar() }	
		ENDIF
		//FIM Ticket 5252                    - Abel Babini - 17/11/2020 - Painel Fiscal - Alteração de parâmetros pelo usuário		

		
		oBrw01Pr:Align		:=	CONTROL_ALIGN_ALLCLIENT

		//--------------------------------------------------------------------------
		//ABA 03 - ABERTURA GIA
		//--------------------------------------------------------------------------
		oFWLr02	:= FWLayer():New()
		oFWLr02:Init( oFolder030:aDialogs[3], .F., .T.)
		//
		//Define os Paineis
		//TITULO
		oFWLr02:AddLine ('TIT_DET', 6, .F.)
		oFWLr02:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

		oFWLr02:AddLine ('DETALHE1', 60, .F.)
		oFWLr02:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

		oFWLr02:AddLine ('RESUMO', 34, .F.)
		oFWLr02:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

		oP02TE01	:= oFWLr02:GetColPanel('TIT_ESQ','TIT_DET')
		oP02D101	:= oFWLr02:GetColPanel('DET_ESQ1','DETALHE1')
		oP02RE01	:= oFWLr02:GetColPanel('RES_ESQ','RESUMO')

		oP02TE01:FreeChildren()
		oP02D101:FreeChildren()
		oP02RE01:FreeChildren()

		//Cabecalho
		IF nOpMdl == 1 .or. nOpMdl == 2
			@ 001,008 SAY OemToAnsi("Abertura GIA")		FONT oFont003 SIZE 200,15 OF oP02TE01 PIXEL
		ELSEIF nOpMdl == 3
			@ 001,008 SAY OemToAnsi("Apuração ICMS")		FONT oFont003 SIZE 200,15 OF oP02TE01 PIXEL
		ENDIF

		IF nOpMdl == 2 .or. nOpMdl == 4
			@ 001,004 SAY OemToAnsi("Ajustes Manuais")		FONT oFont003 SIZE 400,15 OF oP02RE01 PIXEL
			@ 011,018 SAY OemToAnsi("Estorno de Débito")			FONT oFont002 SIZE 200,15 OF oP02RE01 PIXEL
			@ 010,100 MSGET nA05T02	SIZE 60,08 OF oP02RE01 PIXEL PICTURE '@E 9,999,999,999.99' When !_lPerFch // Vl. Estorno de Débitos
			@ 011,170 SAY OemToAnsi("Descr. Estorno Débitos")	FONT oFont002 SIZE 200,15 OF oP02RE01 PIXEL
			@ 010,252 MSGET cA05T02	SIZE 200,08 OF oP02RE01 PIXEL PICTURE '@!' When !_lPerFch// Descrição do Estorno
			@ 022,018 SAY OemToAnsi("Estorno de Créditos")		FONT oFont002 SIZE 200,15 OF oP02RE01 PIXEL
			@ 021,100 MSGET nA05T03	SIZE 60,08 OF oP02RE01 PIXEL PICTURE '@E 9,999,999,999.99' When !_lPerFch// Vl. Estorno de Débitos
			@ 022,170 SAY OemToAnsi("Descr. Estorno Créditos")FONT oFont002 SIZE 200,15 OF oP02RE01 PIXEL
			@ 021,252 MSGET cA05T03	SIZE 200,08 OF oP02RE01 PIXEL PICTURE '@!' When !_lPerFch// Descrição do Estorno

			@ 033,018 SAY OemToAnsi("Outros Débitos")					FONT oFont002 SIZE 200,15 OF oP02RE01 PIXEL
			@ 032,100 MSGET nA05T07	SIZE 60,08 OF oP02RE01 PIXEL PICTURE '@E 9,999,999,999.99' When !_lPerFch// Vl. Estorno de Débitos
			@ 033,170 SAY OemToAnsi("Descr. Outros Débitos")	FONT oFont002 SIZE 200,15 OF oP02RE01 PIXEL
			@ 032,252 MSGET cA05T04	SIZE 200,08 OF oP02RE01 PIXEL PICTURE '@!' When !_lPerFch// Descrição do Estorno
			@ 044,018 SAY OemToAnsi("Outros Créditos")				FONT oFont002 SIZE 200,15 OF oP02RE01 PIXEL
			@ 043,100 MSGET nA05T08	SIZE 60,08 OF oP02RE01 PIXEL PICTURE '@E 9,999,999,999.99' When !_lPerFch// Vl. Estorno de Débitos
			@ 044,170 SAY OemToAnsi("Descr. Outros Créditos")	FONT oFont002 SIZE 200,15 OF oP02RE01 PIXEL
			@ 043,252 MSGET cA05T05	SIZE 200,08 OF oP02RE01 PIXEL PICTURE '@!' When !_lPerFch// Descrição do Estorno

			@ 055,018 SAY OemToAnsi("Saldo Credor Mês Anterior")	FONT oFont002 SIZE 200,15 OF oP02RE01 PIXEL
			@ 054,100 MSGET nA05T01	SIZE 60,08 OF oP02RE01 PIXEL PICTURE '@E 9,999,999,999.99' When !_lPerFch// Vl Saldo Credor Mês Anterior
			//@ 055,170	 SAY OemToAnsi("Apropriação de Crédito Acumulado")	FONT oFont002 SIZE 200,15 OF oP02RE01 PIXEL
			@ 055,170	 SAY OemToAnsi("Aprop Créd Acumul Outros Débitos")	FONT oFont002 SIZE 200,15 OF oP02RE01 PIXEL
			@ 054,272 MSGET nA05T09	SIZE 60,08 OF oP02RE01 PIXEL PICTURE '@E 9,999,999,999.99' When !_lPerFch// Vl Saldo Credor Mês Anterior
			@ 066,170	 SAY OemToAnsi("Aprop Créd Acumul Outros Créditos")	FONT oFont002 SIZE 200,15 OF oP02RE01 PIXEL
			@ 065,272 MSGET nA05T10	SIZE 60,08 OF oP02RE01 PIXEL PICTURE '@E 9,999,999,999.99' When !_lPerFch// Vl Saldo Credor Mês Anterior
			//@ 055,340	 SAY OemToAnsi("Solicitação DGCA")	FONT oFont002 SIZE 100,15 OF oP02RE01 PIXEL
			//@ 054,390 MSGET nA05T06	SIZE 60,08 OF oP02RE01 PIXEL PICTURE '@E 9,999,999,999.99' When !_lPerFch// Vl Saldo Credor Mês Anterior
		ENDIF
		IF nOpMdl == 2 .or. nOpMdl == 3 .or. nOpMdl == 4
			@ 010,470 BUTTON OemToAnsi('Processa')	SIZE 42,26	When !_lPerFch FONT oDlg:oFont ACTION xPrcMn05() OF oP02RE01 PIXEL //"Exportar Excel"
			If _lMsUser
				@ 040,470 BUTTON OemToAnsi('Fecha Período')	SIZE 42,26 When !_lPerFch	FONT oDlg:oFont ACTION xGrvFcht() OF oP02RE01 PIXEL //"Exportar Excel"
				@ 040,520 BUTTON OemToAnsi('Reabre Período')	SIZE 42,26 When _lPerFch	FONT oDlg:oFont ACTION xAbrFcht() OF oP02RE01 PIXEL //"Exportar Excel"
			Endif

		ENDIF

		//QUADRO DE RELATÓRIO
		@ 001,558 SAY OemToAnsi("OUTRAS OPÇÕES")		SIZE 200,15	FONT oFont003 OF oP02RE01 PIXEL
		//@ 014,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION Static Call(ADFIS038R,xRelBr03) OF oP02RE01 PIXEL //"Exportar Excel"
		
		//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
		@ 014,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION u_FIS038B3() OF oP02RE01 PIXEL //"Exportar Excel"

		oBrw03Rs:= TcBrowse():New(010,050,150,150,,,,oP02D101,,,,,,,,,,,,.f.,cAlB03Rs,.t.,,.f.,,,,)
		oBrw03Rs:AddColumn( TcColumn():New( "Filial"		, {|| (cAlB03Rs)->FILIAL}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw03Rs:AddColumn( TcColumn():New( "Linha GIA"	, {|| (cAlB03Rs)->LNGIA}	, "@!"						,,,"LEFT"	,025,.f.,.f.,,,,.f.,) )
		oBrw03Rs:AddColumn( TcColumn():New( "Descrição"	, {|| (cAlB03Rs)->DESCR}	, "@!"						,,,"LEFT"	,200,.f.,.f.,,,,.f.,) )
		oBrw03Rs:AddColumn( TcColumn():New( "Valor"			, {|| (cAlB03Rs)->VALOR}	, "@E 999,999,999.99"		,,,"RIGHT"	,040,.f.,.f.,,,,.f.,) )

		oBrw03Rs:Align		:=	CONTROL_ALIGN_ALLCLIENT
		If Select(cAlB03Rs) > 0
			oBrw03Rs:SetBlkBackColor({|| IIf("SUB" $ (cAlB03Rs)->TPLIN, CLR_HGRAY, IIf("TOT" $ (cAlB03Rs)->TPLIN, CLR_BLUE , IIf("TIT" $ (cAlB03Rs)->TPLIN, CLR_BLACK , IIf("MAN" $ (cAlB03Rs)->TPLIN, CLR_YELLOW , CLR_WHITE ) ) ) )})
			oBrw03Rs:SetBlkColor({|| IIf("SUB" $ (cAlB03Rs)->TPLIN, CLR_BLACK , IIf("TOT" $ (cAlB03Rs)->TPLIN, CLR_WHITE , IIf("TIT" $ (cAlB03Rs)->TPLIN, CLR_WHITE , Nil ) ) )})
		Endif

	ENDIF

	IF nOpMdl	== 1
		//--------------------------------------------------------------------------
		//ABA 04 - ABERTURA GIA ST
		//--------------------------------------------------------------------------
		oFLr04p1	:= FWLayer():New()
		oFLr04p1:Init( oFolder030:aDialogs[4], .F., .T.)

		//Define os Paineis
		//TITULO
		oFLr04p1:AddLine ('TIT_DET', 6, .F.)
		oFLr04p1:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

		oFLr04p1:AddLine ('DETALHE', 82, .F.)
		oFLr04p1:AddCollumn('DET_ESQ',100,.F.,'DETALHE')

		oFLr04p1:AddLine ('RESUMO', 12, .F.)
		oFLr04p1:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

		oPn04TE	:= oFLr04p1:GetColPanel('TIT_ESQ','TIT_DET')
		oPn04DE	:= oFLr04p1:GetColPanel('DET_ESQ','DETALHE')
		oPn04RE	:= oFLr04p1:GetColPanel('RES_ESQ','RESUMO')

		oPn04TE:FreeChildren()
		oPn04DE:FreeChildren()
		oPn04RE:FreeChildren()
		
		@ 001,008 SAY OemToAnsi("ABERTURA GIA ST")	FONT oFont003 SIZE 200,15 OF oPn04TE PIXEL

		oBrw04Rs:= TcBrowse():New(010,050,150,150,,,,oPn04DE,,,,,,,,,,,,.f.,cAlB04Rs,.t.,,.f.,,,,)
		oBrw04Rs:AddColumn( TcColumn():New( "Filial"		,{ || (cAlB04Rs)->FILIAL}	, "@!"									,,,"CENTER"	,020,.f.,.f.,,,,.f.,) )
		oBrw04Rs:AddColumn( TcColumn():New( "Descrição" ,{ || (cAlB04Rs)->DESCR}	, "@!"									,,,"LEFT"		,200,.f.,.f.,,,,.f.,) )
		oBrw04Rs:AddColumn( TcColumn():New( "Valor"			,{ || (cAlB04Rs)->VALOR}	, "@E 9,999,999,999.99"	,,,"RIGHT"	,080,.f.,.f.,,,,.f.,) )

		oBrw04Rs:Align		:=	CONTROL_ALIGN_ALLCLIENT

		//QUADRO DE RELATÓRIO
		@ 001,558 SAY OemToAnsi("OUTRAS OPÇÕES")	FONT oFont003 SIZE 200,15 OF oPn04RE PIXEL
		@ 014,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13 FONT oDlg:oFont ACTION xRelBr04() OF oPn04RE PIXEL //"Exportar Excel"

		//--------------------------------------------------------------------------
		//ABA 05 - DEMONSTRATIVO
		//--------------------------------------------------------------------------
		oFLr05p1	:= FWLayer():New()
		oFLr05p1:Init( oFolder030:aDialogs[5], .F., .T.)

		//Define os Paineis
		//TITULO
		oFLr05p1:AddLine ('TIT_DET', 6, .F.)
		oFLr05p1:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

		oFLr05p1:AddLine ('DETALHE', 60, .F.)
		oFLr05p1:AddCollumn('DET_ESQ',100,.F.,'DETALHE')

		oFLr05p1:AddLine('RESUMO', 34, .F.)
		oFLr05p1:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

		oPn05TE	:= oFLr05p1:GetColPanel('TIT_ESQ','TIT_DET')
		oPn05DE	:= oFLr05p1:GetColPanel('DET_ESQ','DETALHE')
		oPn05RE	:= oFLr05p1:GetColPanel('RES_ESQ','RESUMO')

		oPn05TE:FreeChildren()
		oPn05DE:FreeChildren()
		oPn05RE:FreeChildren()

		@ 001,008 SAY OemToAnsi("DEMONSTRATIVO")	FONT oFont003 SIZE 200,15 OF oPn05TE PIXEL
		
		@ 001,004 SAY OemToAnsi("Ajustes Manuais")		FONT oFont003 SIZE 400,15 OF oPn05RE PIXEL
		@ 011,018 SAY OemToAnsi("Estorno de Débito")									FONT oFont002 SIZE 200,15 OF oPn05RE PIXEL
		@ 010,100 MSGET nA05T02	SIZE 60,08 OF oPn05RE PIXEL PICTURE '@E 9,999,999,999.99' When !_lPerFch // Vl. Estorno de Débitos
		@ 011,170 SAY OemToAnsi("Descr. Estorno Débitos")									FONT oFont002 SIZE 200,15 OF oPn05RE PIXEL
		@ 010,252 MSGET cA05T02	SIZE 200,08 OF oPn05RE PIXEL PICTURE '@!' When !_lPerFch// Descrição do Estorno
		@ 022,018 SAY OemToAnsi("Estorno de Créditos")									FONT oFont002 SIZE 200,15 OF oPn05RE PIXEL
		@ 021,100 MSGET nA05T03	SIZE 60,08 OF oPn05RE PIXEL PICTURE '@E 9,999,999,999.99' When !_lPerFch// Vl. Estorno de Débitos
		@ 022,170 SAY OemToAnsi("Descr. Estorno Créditos")									FONT oFont002 SIZE 200,15 OF oPn05RE PIXEL
		@ 021,252 MSGET cA05T03	SIZE 200,08 OF oPn05RE PIXEL PICTURE '@!' When !_lPerFch// Descrição do Estorno

		@ 033,018 SAY OemToAnsi("Outros Débitos")									FONT oFont002 SIZE 200,15 OF oPn05RE PIXEL
		@ 032,100 MSGET nA05T07	SIZE 60,08 OF oPn05RE PIXEL PICTURE '@E 9,999,999,999.99' When !_lPerFch// Vl. Estorno de Débitos
		@ 033,170 SAY OemToAnsi("Descr. Outros Débitos")									FONT oFont002 SIZE 200,15 OF oPn05RE PIXEL
		@ 032,252 MSGET cA05T04	SIZE 200,08 OF oPn05RE PIXEL PICTURE '@!' When !_lPerFch// Descrição do Estorno
		@ 044,018 SAY OemToAnsi("Outros Créditos")									FONT oFont002 SIZE 200,15 OF oPn05RE PIXEL
		@ 043,100 MSGET nA05T08	SIZE 60,08 OF oPn05RE PIXEL PICTURE '@E 9,999,999,999.99' When !_lPerFch// Vl. Estorno de Débitos
		@ 044,170 SAY OemToAnsi("Descr. Outros Créditos")									FONT oFont002 SIZE 200,15 OF oPn05RE PIXEL
		@ 043,252 MSGET cA05T05	SIZE 200,08 OF oPn05RE PIXEL PICTURE '@!' When !_lPerFch// Descrição do Estorno

		@ 055,018 SAY OemToAnsi("Saldo Credor Mês Anterior")	FONT oFont002 SIZE 200,15 OF oPn05RE PIXEL
		@ 054,100 MSGET nA05T01	SIZE 60,08 OF oPn05RE PIXEL PICTURE '@E 9,999,999,999.99' When !_lPerFch// Vl Saldo Credor Mês Anterior
		@ 055,170	 SAY OemToAnsi("Apropriação de Crédito Acumulado")	FONT oFont002 SIZE 200,15 OF oPn05RE PIXEL
		@ 054,272 MSGET nA05T04	SIZE 60,08 OF oPn05RE PIXEL PICTURE '@E 9,999,999,999.99' When !_lPerFch// Vl Saldo Credor Mês Anterior
		@ 055,340	 SAY OemToAnsi("Solicitação DGCA")	FONT oFont002 SIZE 100,15 OF oPn05RE PIXEL
		@ 054,390 MSGET nA05T06	SIZE 60,08 OF oPn05RE PIXEL PICTURE '@E 9,999,999,999.99' When !_lPerFch// Vl Saldo Credor Mês Anterior

		@ 010,470 BUTTON OemToAnsi('Processa')	SIZE 42,26	When !_lPerFch FONT oDlg:oFont ACTION xPrcMn05() OF oPn05RE PIXEL //"Exportar Excel"
		If _lMsUser
			@ 040,470 BUTTON OemToAnsi('Fecha Período')	SIZE 42,26 When !_lPerFch	FONT oDlg:oFont ACTION xGrvFcht() OF oPn05RE PIXEL //"Exportar Excel"
			@ 040,520 BUTTON OemToAnsi('Reabre Período')	SIZE 42,26 When _lPerFch	FONT oDlg:oFont ACTION xAbrFcht() OF oPn05RE PIXEL //"Exportar Excel"
		Endif
		oBrw05Rs:= TcBrowse():New(010,050,150,150,,,,oPn05DE,,,,,,,oFont001,,,,,.f.,cAlB05Dt,.t.,,.f.,,,,)
		//oBrw05Rs:AddColumn( TcColumn():New( "Chave"				,{ || (cAlB05Dt)->CHAVE}	, "@!"									,,,"LEFT"		,020,.f.,.f.,,,,.f.,) )
		oBrw05Rs:AddColumn( TcColumn():New( "Linha"			,{ || (cAlB05Dt)->LINHA}	, "@!"									,,,"LEFT"		,020,.f.,.f.,,,,.f.,) )
		oBrw05Rs:AddColumn( TcColumn():New( "Descrição1" 	,{ || (cAlB05Dt)->DESCR1}	, "@!"									,,,"LEFT"		,200,.f.,.f.,,,,.f.,) )
		oBrw05Rs:AddColumn( TcColumn():New( "Valor1"			,{ || (cAlB05Dt)->VALOR1}	, "@E 9,999,999,999.99"	,,,"RIGHT"	,060,.f.,.f.,,,,.f.,) )
		oBrw05Rs:AddColumn( TcColumn():New( "Descrição2" 	,{ || (cAlB05Dt)->DESCR2}	, "@!"									,,,"LEFT"		,200,.f.,.f.,,,,.f.,) )
		oBrw05Rs:AddColumn( TcColumn():New( "Valor2"			,{ || (cAlB05Dt)->VALOR2}	, "@E 9,999,999,999.99"	,,,"RIGHT"	,060,.f.,.f.,,,,.f.,) )
		oBrw05Rs:AddColumn( TcColumn():New( "Descrição3" 	,{ || (cAlB05Dt)->DESCR3}	, "@!"									,,,"LEFT"		,060,.f.,.f.,,,,.f.,) )
		oBrw05Rs:AddColumn( TcColumn():New( "Valor3"			,{ || (cAlB05Dt)->VALOR3}	, "@E 9,999,999,999.99"	,,,"RIGHT"	,060,.f.,.f.,,,,.f.,) )
		//oBrw05Rs:AddColumn( TcColumn():New( "Descrição4" 	,{ || (cAlB05Dt)->DESCR4}	, "@!"									,,,"LEFT"		,140,.f.,.f.,,,,.f.,) )
		//oBrw05Rs:AddColumn( TcColumn():New( "Valor4"			,{ || (cAlB05Dt)->VALOR4}	, "@E 9,999,999,999.99"	,,,"RIGHT"	,060,.f.,.f.,,,,.f.,) )
		//oBrw05Rs:AddColumn( TcColumn():New( "Descrição5" 	,{ || (cAlB05Dt)->DESCR5}	, "@!"									,,,"LEFT"		,140,.f.,.f.,,,,.f.,) )
		//oBrw05Rs:AddColumn( TcColumn():New( "Valor5"			,{ || (cAlB05Dt)->VALOR5}	, "@E 9,999,999,999.99"	,,,"RIGHT"	,060,.f.,.f.,,,,.f.,) )
		//GrvTmp05(cChvTmp5, cLinTmp5, cDsc1T5,cDsc2T5,cDsc3T5,cDsc4T5,cDsc5T5, nVlr1T5, nVlr2T5, nVlr3T5, nVlr4T5, nVlr5T5)
		oBrw05Rs:Align		:=	CONTROL_ALIGN_ALLCLIENT

		// Muda a cor da linha do browser 
		oBrw05Rs:lUseDefaultColors := .F.
		//oBrw05Rs:lAdjustColSize := .T.
		If Select(cAlB05Dt) > 0
			oBrw05Rs:SetBlkBackColor({|| IIf("SUB" $ (cAlB05Dt)->CHAVE, CLR_HGRAY, IIf("TOT" $ (cAlB05Dt)->CHAVE, CLR_BLUE , IIf("TIT" $ (cAlB05Dt)->CHAVE, CLR_BLACK , IIf("MAN" $ (cAlB05Dt)->CHAVE, CLR_YELLOW , CLR_WHITE ) ) ) )})
			oBrw05Rs:SetBlkColor({|| IIf("SUB" $ (cAlB05Dt)->CHAVE, CLR_BLACK , IIf("TOT" $ (cAlB05Dt)->CHAVE, CLR_WHITE , IIf("TIT" $ (cAlB05Dt)->CHAVE, CLR_WHITE , Nil ) ) )})
		Endif
		//oBrw05Rs:SetFont({|| If("TIT" $ (cAlB05Dt)->CHAVE,oFont003,oFont002)})
		//Força Atualização do Browse
		//oBrw05Rs:DrawSelect()

		//QUADRO DE RELATÓRIO
		@ 001,558 SAY OemToAnsi("OUTRAS OPÇÕES")	FONT oFont003 SIZE 200,15 OF oPn05RE PIXEL
		@ 014,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13 FONT oDlg:oFont ACTION xRelBr05() OF oPn05RE PIXEL //"Exportar Excel"


		//INICIO Chamado n.050629 - OS n. 055359 - Relatório Difal Nao Contribuinte - Abel Babini  - 06/01/2020
		//--------------------------------------------------------------------------
		//ABA 06 - DIFAL NAO CONTRIBUINTE
		//--------------------------------------------------------------------------
		oFld06	:=TFolder():New(1,1,aFld06,{},oFolder030:aDialogs[6],,,, .T., .F.,aPosObj[2,4]-5,aPosObj[2,3]-61,)
		oFld06:aDialogs[1]:oFont :=oDlg:oFont //Resumo
		oFld06:aDialogs[2]:oFont :=oDlg:oFont //Conf. Cadastro Clientes

		////////////////////////////////////////////////////////////
		oFLr06p1:= FWLayer():New()
		oFLr06p1:Init( oFld06:aDialogs[1], .F., .T.) //RESUMO

		//oFLr06p1:= FWLayer():New()
		//oFLr06p1:Init( oFolder030:aDialogs[6], .F., .T.) //RESUMO

		//TITULO
		oFLr06p1:AddLine ('TIT_DLG1', 6, .F.)
		oFLr06p1:AddCollumn('TIT_DLG1',100,.F.,'TIT_DLG1')
		//DETALHE
		oFLr06p1:AddLine ('DET_DLG1', 74, .F.)
		oFLr06p1:AddCollumn('DET_DLG1E',100,.F.,'DET_DLG1')
		//oFLr06p1:AddCollumn('DET_DLG1D',80,.F.,'DET_DLG1')
		//RODAPE
		oFLr06p1:AddLine ('ROD_DLG1', 20, .F.)
		oFLr06p1:AddCollumn('ROD_DLG1',100,.F.,'ROD_DLG1')

		oPn06T1		:= oFLr06p1:GetColPanel('TIT_DLG1','TIT_DLG1')
		oPn06D1E	:= oFLr06p1:GetColPanel('DET_DLG1E','DET_DLG1')
		oPn06R1		:= oFLr06p1:GetColPanel('ROD_DLG1','ROD_DLG1')

		oPn06T1:FreeChildren()
		oPn06D1E:FreeChildren()
		oPn06R1:FreeChildren()

		//Cabecalho
		@ 001,004 SAY OemToAnsi("Difal Não Contribuinte")			FONT oFont003 SIZE 400,15 OF oPn06T1 PIXEL
		
		@ 001,004 SAY OemToAnsi("Parâmetros de cálculo - % Rateio Origem e Destino")		FONT oFont003 SIZE 400,15 OF oPn06R1 PIXEL
		@ 011,038 SAY OemToAnsi("% Origem")									FONT oFont002 SIZE 200,15 OF oPn06R1 PIXEL
		@ 010,100 MSGET nA06T02	SIZE 60,08 OF oPn06R1 PIXEL PICTURE '@E 9,999,999,999.99' // Total Vl. Contabil
		@ 026,038 SAY OemToAnsi("% Destino")								FONT oFont002 SIZE 200,15 OF oPn06R1 PIXEL
		@ 025,100 MSGET nA06T01	SIZE 60,08 OF oPn06R1 PIXEL PICTURE '@E 9,999,999,999.99' // Total Vl. Contabil
		
		@ 010,168 BUTTON OemToAnsi('Processa')	SIZE 42,26	FONT oDlg:oFont ACTION xPrcRt06() OF oPn06R1 PIXEL //"Exportar Excel"
		//@ 010,004 TO 028,215 OF oPn06R1 PIXEL
		
		//QUADRO DE RELATÓRIO
		@ 001,558 SAY OemToAnsi("OUTRAS OPÇÕES")		SIZE 200,15	FONT oFont003 OF oPn06R1 PIXEL
		@ 014,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION xRelBr06() OF oPn06R1 PIXEL //"Exportar Excel"

		oBrw06Rs:= TcBrowse():New(010,050,150,150,,,,oPn06D1E,,,,,,,,,,,,.f.,cAlB06Dt,.t.,,.f.,,,,)
		oBrw06Rs:AddColumn( TcColumn():New( "Filial"			, {|| (cAlB06Dt)->FILIAL}		, "@!"						,,,"CENTER"	,040,.f.,.f.,,,,.f.,) )
		oBrw06Rs:AddColumn( TcColumn():New( "Dt.Entrada"	, {|| (cAlB06Dt)->DTENTRADA}, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw06Rs:AddColumn( TcColumn():New( "Dt.Emissão"	, {|| (cAlB06Dt)->DTEMISSAO}, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw06Rs:AddColumn( TcColumn():New( "Série"				, {|| (cAlB06Dt)->NFSERIE}	, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw06Rs:AddColumn( TcColumn():New( "Nota Fiscal"	, {|| (cAlB06Dt)->NF}				, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw06Rs:AddColumn( TcColumn():New( "Item NF"			, {|| (cAlB06Dt)->NFITEM}		, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw06Rs:AddColumn( TcColumn():New( "Cod.Cliente"	, {|| (cAlB06Dt)->CLIEFOR}	, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw06Rs:AddColumn( TcColumn():New( "Loja"				, {|| (cAlB06Dt)->LOJA}			, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw06Rs:AddColumn( TcColumn():New( "Cliente"			, {|| (cAlB06Dt)->NOME}			, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw06Rs:AddColumn( TcColumn():New( "Estado"			, {|| (cAlB06Dt)->ESTADO}		, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw06Rs:AddColumn( TcColumn():New( "CNPJ"				, {|| (cAlB06Dt)->CNPJ}			, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw06Rs:AddColumn( TcColumn():New( "CFOP"				, {|| (cAlB06Dt)->CFOP}			, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw06Rs:AddColumn( TcColumn():New( "Produto"			, {|| (cAlB06Dt)->CODPROD}	, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw06Rs:AddColumn( TcColumn():New( "Desc.Prod"		, {|| (cAlB06Dt)->DESCPROD}	, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw06Rs:AddColumn( TcColumn():New( "Quant"				, {|| (cAlB06Dt)->QUANT}		, "@E 999,999,999.9999"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw06Rs:AddColumn( TcColumn():New( "Prç.Unit."		, {|| (cAlB06Dt)->PRCUNIT}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw06Rs:AddColumn( TcColumn():New( "Vl. Cont"		, {|| (cAlB06Dt)->VLCONT}		, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw06Rs:AddColumn( TcColumn():New( "Base ICMS"		, {|| (cAlB06Dt)->BSICMS}		, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw06Rs:AddColumn( TcColumn():New( "Vl. ICMS"		, {|| (cAlB06Dt)->VLICMS}		, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw06Rs:AddColumn( TcColumn():New( "Alq Interna"	, {|| (cAlB06Dt)->ALIQINT}		, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw06Rs:AddColumn( TcColumn():New( "Alq Destino"	, {|| (cAlB06Dt)->ALIQDEST}		, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw06Rs:AddColumn( TcColumn():New( "Vl. DIFAL"		, {|| (cAlB06Dt)->DIFAL}		, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw06Rs:AddColumn( TcColumn():New( "Vl. UF Destino",{|| (cAlB06Dt)->UFDEST}		, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw06Rs:AddColumn( TcColumn():New( "Vl. UF Origem", {|| (cAlB06Dt)->UFORIG}		, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

		oBrw06Rs:Align		:=	CONTROL_ALIGN_ALLCLIENT
		
		////////////////////////////////////////////////////////////
		oFLr06p2:= FWLayer():New()
		oFLr06p2:Init( oFld06:aDialogs[2], .F., .T.) //CONF. CADASTRO DE CLIENTES

		//oFLr06p1:= FWLayer():New()
		//oFLr06p1:Init( oFolder030:aDialogs[6], .F., .T.) //RESUMO

		//TITULO
		oFLr06p2:AddLine ('TIT_DLG1', 6, .F.)
		oFLr06p2:AddCollumn('TIT_DLG1',100,.F.,'TIT_DLG1')
		//DETALHE
		oFLr06p2:AddLine ('DET_DLG1', 74, .F.)
		oFLr06p2:AddCollumn('DET_DLG1E',100,.F.,'DET_DLG1')
		//oFLr06p2:AddCollumn('DET_DLG1D',80,.F.,'DET_DLG1')
		//RODAPE
		oFLr06p2:AddLine ('ROD_DLG1', 20, .F.)
		oFLr06p2:AddCollumn('ROD_DLG1',100,.F.,'ROD_DLG1')

		oPn06T2		:= oFLr06p2:GetColPanel('TIT_DLG1','TIT_DLG1')
		oPn06D2E	:= oFLr06p2:GetColPanel('DET_DLG1E','DET_DLG1')
		oPn06R2		:= oFLr06p2:GetColPanel('ROD_DLG1','ROD_DLG1')

		oPn06T2:FreeChildren()
		oPn06D2E:FreeChildren()
		oPn06R2:FreeChildren()

		//Cabecalho
		@ 001,004 SAY OemToAnsi("Conf. Cad. Clientes")			FONT oFont003 SIZE 400,15 OF oPn06T2 PIXEL

		oBrw06Cf:= TcBrowse():New(010,050,150,150,,,,oPn06D2E,,,,,,,,,,,,.f.,cAlB06Cf,.t.,,.f.,,,,)
		oBrw06Cf:AddColumn( TcColumn():New( "Filial"			, {|| (cAlB06Cf)->FILIAL}		, "@!"						,,,"CENTER"	,040,.f.,.f.,,,,.f.,) )
		oBrw06Cf:AddColumn( TcColumn():New( "Dt.Entrada"	, {|| (cAlB06Cf)->DTENTRADA}, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw06Cf:AddColumn( TcColumn():New( "Dt.Emissão"	, {|| (cAlB06Cf)->DTEMISSAO}, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw06Cf:AddColumn( TcColumn():New( "Série"				, {|| (cAlB06Cf)->NFSERIE}	, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw06Cf:AddColumn( TcColumn():New( "Nota Fiscal"	, {|| (cAlB06Cf)->NF}				, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw06Cf:AddColumn( TcColumn():New( "Item NF"			, {|| (cAlB06Cf)->NFITEM}		, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw06Cf:AddColumn( TcColumn():New( "Cod.Cliente"	, {|| (cAlB06Cf)->CLIEFOR}	, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw06Cf:AddColumn( TcColumn():New( "Loja"				, {|| (cAlB06Cf)->LOJA}			, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw06Cf:AddColumn( TcColumn():New( "Cliente"			, {|| (cAlB06Cf)->NOME}			, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw06Cf:AddColumn( TcColumn():New( "Estado"			, {|| (cAlB06Cf)->ESTADO}		, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw06Cf:AddColumn( TcColumn():New( "CNPJ"				, {|| (cAlB06Cf)->CNPJ}			, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw06Cf:AddColumn( TcColumn():New( "CFOP"				, {|| (cAlB06Cf)->CFOP}			, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw06Cf:AddColumn( TcColumn():New( "Produto"			, {|| (cAlB06Cf)->CODPROD}	, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw06Cf:AddColumn( TcColumn():New( "Desc.Prod"		, {|| (cAlB06Cf)->DESCPROD}	, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw06Cf:AddColumn( TcColumn():New( "Quant"				, {|| (cAlB06Cf)->QUANT}		, "@E 999,999,999.9999"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw06Cf:AddColumn( TcColumn():New( "Prç.Unit."		, {|| (cAlB06Cf)->PRCUNIT}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw06Cf:AddColumn( TcColumn():New( "Vl. Cont"		, {|| (cAlB06Cf)->VLCONT}		, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw06Cf:AddColumn( TcColumn():New( "Base ICMS"		, {|| (cAlB06Cf)->BSICMS}		, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

		oBrw06Cf:Align		:=	CONTROL_ALIGN_ALLCLIENT
		
		// FIM Chamado n.050629 - OS n. 055359 - Relatório Difal Nao Contribuinte - Abel Babini  - 06/01/2020
	ENDIF

	IF nOpMdl	== 1 .or. nOpMdl	== 2 .or. nOpMdl	== 4
		//--------------------------------------------------------------------------
		//ABA 07 - DIFERENCIAL DE ALIQUOTA (INICIO) // INICIO n.040924  - Relatorio Dif. de Alíquota - Abel Babini - 07/05/2019
		//--------------------------------------------------------------------------
		oFWLr07	:= FWLayer():New()
		IF nOpMdl	== 1
			oFWLr07:Init( oFolder030:aDialogs[7], .F., .T.)
		ELSEIF nOpMdl	== 2 .or. nOpMdl	== 4
			oFWLr07:Init( oFolder030:aDialogs[4], .F., .T.)
		ENDIF

		//Define os Paineis
		//TITULO
		oFWLr07:AddLine ('TIT_DET', 6, .F.)
		oFWLr07:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

		oFWLr07:AddLine ('DETALHE', 74, .F.)
		oFWLr07:AddCollumn('DET_ESQ',100,.F.,'DETALHE')
		//oFWLr07:AddCollumn('DET_DIR',5,.F.,'DETALHE')

		oFWLr07:AddLine ('RESUMO', 20, .F.)
		oFWLr07:AddCollumn('RES_DIR',100,.F.,'RESUMO')

		oPn07T1	:= oFWLr07:GetColPanel('TIT_ESQ','TIT_DET')
		oPn07DE	:= oFWLr07:GetColPanel('DET_ESQ','DETALHE')
		oPn07R1	:= oFWLr07:GetColPanel('RES_DIR','RESUMO')

		oPn07T1:FreeChildren()
		oPn07DE:FreeChildren()
		oPn07R1:FreeChildren()

		//Cabecalho
		@ 001,008 SAY OemToAnsi("Resumo Diferencial de Alíquota")		FONT oFont003 SIZE 200,15 OF oPn07T1 PIXEL

		@ 001,008 SAY OemToAnsi("Totais Diferencial de Alíquota")	FONT oFont003 SIZE 200,15 OF oPn07R1 PIXEL
		@ 011,184 SAY OemToAnsi("TOTAIS")	FONT oFont002 SIZE 200,15 OF oPn07R1 PIXEL

		@ 011,008 SAY OemToAnsi("Débito ICMS - 18%")		FONT oFont001 SIZE 200,15 OF oPn07R1 PIXEL
		@ 010,100 MSGET nA07T91	SIZE 60,08 OF oPn07R1 PIXEL When .F. PICTURE '@E 9,999,999,999.99' // Total Vl. Contabil
		@ 021,008 SAY OemToAnsi("Crédito ICMS - 12% E 4%")	FONT oFont001 SIZE 200,15 OF oPn07R1 PIXEL
		@ 020,100 MSGET nA07T92	SIZE 60,08 OF oPn07R1 PIXEL When .F. PICTURE '@E 9,999,999,999.99' // Total Vl. Contabil
		@ 034,008 SAY OemToAnsi("Valor do Diferencial")		FONT oFont002 SIZE 200,15 OF oPn07R1 PIXEL
		@ 033,100 MSGET nA07T93	SIZE 60,08 OF oPn07R1 PIXEL When .F. PICTURE '@E 9,999,999,999.99' // Total Vl. Contabil
		@ 034,170 SAY OemToAnsi("Valor do Estorno Dif.")		FONT oFont002 SIZE 200,15 OF oPn07R1 PIXEL
		@ 033,260 MSGET nA07T25	SIZE 60,08 OF oPn07R1 PIXEL When .F. PICTURE '@E 9,999,999,999.99' // Total Vl. Contabil
		@ 031,004 TO 045,324 OF oPn07R1 PIXEL

		@ 001,210 SAY OemToAnsi("Quant.")	FONT oFont002 SIZE 200,15 OF oPn07R1 PIXEL
		@ 010,210 MSGET nA07T01	SIZE 60,08 OF oPn07R1 PIXEL When .F. PICTURE '@E 9,999,999,999.99' // Total Vl. Contabil

		@ 001,280 SAY OemToAnsi("Total")	FONT oFont002 SIZE 200,15 OF oPn07R1 PIXEL
		@ 010,280 MSGET nA07T02	SIZE 60,08 OF oPn07R1 PIXEL When .F. PICTURE '@E 9,999,999,999.99' // Total BC Pis Merc Interno

		@ 001,345 SAY OemToAnsi("Base ICMS")	FONT oFont002 SIZE 200,15 OF oPn07R1 PIXEL
		@ 010,345 MSGET nA07T03	SIZE 60,08 OF oPn07R1 PIXEL When .F. PICTURE '@E 9,999,999,999.99' // Total Vl Pis Merc Interno

		@ 001,410 SAY OemToAnsi("Vl. ICMS")	FONT oFont002 SIZE 200,15 OF oPn07R1 PIXEL
		@ 010,410 MSGET nA07T04	SIZE 60,08 OF oPn07R1 PIXEL When .F. PICTURE '@E 9,999,999,999.99' // Total BC Cofins Merc Interno

		@ 001,480 SAY OemToAnsi("Vl. ICMS COM")	FONT oFont002 SIZE 200,15 OF oPn07R1 PIXEL
		@ 010,480 MSGET nA07T05	SIZE 60,08 OF oPn07R1 PIXEL When .F. PICTURE '@E 9,999,999,999.99' // Total Vl Cofins Merc Interno

		//QUADRO DE RELATÓRIO
		@ 001,558 SAY OemToAnsi("OUTRAS OPÇÕES")		SIZE 200,15	FONT oFont003 OF oPn07R1 PIXEL
		@ 014,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION xRelBr07() OF oPn07R1 PIXEL //"Exportar Excel"

		oBrw07Rs:= TcBrowse():New(010,050,150,150,,,,oPn07DE,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
		oBrw07Rs:AddColumn( TcColumn():New( "Filial"		, {|| aBrw07Rs[oBrw07Rs:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw07Rs:AddColumn( TcColumn():New( "Forn."			, {|| aBrw07Rs[oBrw07Rs:nAt,02]}	, "@!"						,,,"LEFT"	,025,.f.,.f.,,,,.f.,) )
		oBrw07Rs:AddColumn( TcColumn():New( "Loja"			, {|| aBrw07Rs[oBrw07Rs:nAt,03]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw07Rs:AddColumn( TcColumn():New( "Nome Forn."	, {|| aBrw07Rs[oBrw07Rs:nAt,04]}	, "@!"						,,,"LEFT"	,100,.f.,.f.,,,,.f.,) )
		oBrw07Rs:AddColumn( TcColumn():New( "Dt. Entrada"	, {|| aBrw07Rs[oBrw07Rs:nAt,05]}	, "@!"						,,,"LEFT"	,035,.f.,.f.,,,,.f.,) )
		oBrw07Rs:AddColumn( TcColumn():New( "Dt. Emissão"	, {|| aBrw07Rs[oBrw07Rs:nAt,06]}	, "@!"						,,,"LEFT"	,035,.f.,.f.,,,,.f.,) )
		oBrw07Rs:AddColumn( TcColumn():New( "Nota Fiscal"	, {|| aBrw07Rs[oBrw07Rs:nAt,07]}	, "@!"						,,,"LEFT"	,035,.f.,.f.,,,,.f.,) )
		oBrw07Rs:AddColumn( TcColumn():New( "Série"			, {|| aBrw07Rs[oBrw07Rs:nAt,08]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw07Rs:AddColumn( TcColumn():New( "Quant"			, {|| aBrw07Rs[oBrw07Rs:nAt,09]}	, "@E 999,999,999.9999"		,,,"RIGHT"	,040,.f.,.f.,,,,.f.,) )
		oBrw07Rs:AddColumn( TcColumn():New( "Total"			, {|| aBrw07Rs[oBrw07Rs:nAt,10]}	, "@E 999,999,999.99"		,,,"RIGHT"	,040,.f.,.f.,,,,.f.,) )
		oBrw07Rs:AddColumn( TcColumn():New( "Base ICMS"		, {|| aBrw07Rs[oBrw07Rs:nAt,11]}	, "@E 999,999,999.99"		,,,"RIGHT"	,040,.f.,.f.,,,,.f.,) )
		oBrw07Rs:AddColumn( TcColumn():New( "Valor ICMS"	, {|| aBrw07Rs[oBrw07Rs:nAt,12]}	, "@E 999,999,999.99"		,,,"RIGHT"	,040,.f.,.f.,,,,.f.,) )
		oBrw07Rs:AddColumn( TcColumn():New( "Vl ICMS COM"	, {|| aBrw07Rs[oBrw07Rs:nAt,13]}	, "@E 999,999,999.99"		,,,"RIGHT"	,040,.f.,.f.,,,,.f.,) )
		oBrw07Rs:AddColumn( TcColumn():New( "Aliq.ICMS"	, {|| aBrw07Rs[oBrw07Rs:nAt,14]}	, "@E 999.99"		,,,"RIGHT"	,020,.f.,.f.,,,,.f.,) )

		oBrw07Rs:SetArray(aBrw07Rs)
		oBrw07Rs:Align		:=	CONTROL_ALIGN_ALLCLIENT
		oBrw07Rs:bLine := {||{ 	aBrw07Rs[oBrw07Rs:nAt,01],;
			aBrw07Rs[oBrw07Rs:nAt,02],;
			aBrw07Rs[oBrw07Rs:nAt,03],;
			aBrw07Rs[oBrw07Rs:nAt,04],;
			aBrw07Rs[oBrw07Rs:nAt,05],;
			aBrw07Rs[oBrw07Rs:nAt,06],;
			aBrw07Rs[oBrw07Rs:nAt,07],;
			aBrw07Rs[oBrw07Rs:nAt,08],;
			Transform(aBrw07Rs[oBrw07Rs:nAt,09],'@E 999,999,999.9999'),;
			Transform(aBrw07Rs[oBrw07Rs:nAt,10],'@E 999,999,999.9999'),;
			Transform(aBrw07Rs[oBrw07Rs:nAt,11],'@E 999,999,999.99'),;
			Transform(aBrw07Rs[oBrw07Rs:nAt,12],'@E 999,999,999.99'),;
			Transform(aBrw07Rs[oBrw07Rs:nAt,13],'@E 999,999,999.99'),;
			Transform(aBrw07Rs[oBrw07Rs:nAt,14],'@E 999.99')} }
		// FIM n.040924  - Relatorio Dif. de Alíquota - Abel Babini - 07/05/2019
	ENDIF

	IF nOpMdl	== 1 .or. nOpMdl	== 2 .or. nOpMdl	== 4
		// INICIO Chamado n.050629 - OS n.052801 - Relatorio Outras Saídas - Abel Babini - 02/12/2019
		//--------------------------------------------------------------------------
		//ABA 09 - OUTRAS SAIDAS
		//--------------------------------------------------------------------------
		IF nOpMdl	== 1
			oFld09	:= TFolder():New(1,1,aFld09,{},oFolder030:aDialogs[08],,,, .T., .F.,aPosObj[2,4]-5,aPosObj[2,3]-61,)
		ELSEIF nOpMdl	== 2 .or. nOpMdl	== 4
			oFld09	:= TFolder():New(1,1,aFld09,{},oFolder030:aDialogs[05],,,, .T., .F.,aPosObj[2,4]-5,aPosObj[2,3]-61,)
		ENDIF
		oFld09:aDialogs[1]:oFont :=oDlg:oFont
		oFld09:aDialogs[2]:oFont :=oDlg:oFont
		//oFld09:aDialogs[3]:oFont :=oDlg:oFont
		//oFld09:aDialogs[4]:oFont :=oDlg:oFont
		//oFld09:aDialogs[5]:oFont :=oDlg:oFont
		//oFld09:aDialogs[6]:oFont :=oDlg:oFont
		//oFld09:aDialogs[7]:oFont :=oDlg:oFont
		//oFld09:aDialogs[8]:oFont :=oDlg:oFont
		//oFld09:aDialogs[9]:oFont :=oDlg:oFont
		//oFld09:aDialogs[10]:oFont :=oDlg:oFont

		////////////////////////////////////////////////////////////
		oFLr09p1:= FWLayer():New()
		oFLr09p1:Init( oFld09:aDialogs[1], .F., .T.) //RESUMO

		//Define os Paineis
		//TITULO
		oFLr09p1:AddLine ('TIT_DET1', 16, .F.)
		oFLr09p1:AddCollumn('TIT_ESQ1',100,.F.,'TIT_DET1')

		oFLr09p1:AddLine ('DETALHE1', 70, .F.)
		oFLr09p1:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

		oFLr09p1:AddLine ('RESUMO1', 14, .F.)
		oFLr09p1:AddCollumn('RES_DIR1',100,.F.,'RESUMO1')

		oPn09T1		:= oFLr09p1:GetColPanel('TIT_ESQ1','TIT_DET1')
		oPn09DE1	:= oFLr09p1:GetColPanel('DET_ESQ1','DETALHE1')
		oPn09R1		:= oFLr09p1:GetColPanel('RES_DIR1','RESUMO1')

		oPn09T1:FreeChildren()
		oPn09DE1:FreeChildren()
		oPn09R1:FreeChildren()

		//Cabecalho
		@ 001,008 SAY OemToAnsi("Classificação da Movimentação de Outras Saídas")		FONT oFont003 SIZE 400,15 OF oPn09T1 PIXEL
		@ 011,028 SAY OemToAnsi("1 > Selecione a classificação ao lado:")		FONT oFont003 SIZE 140,15 OF oPn09T1 PIXEL
		@ 011,165 COMBOBOX oClassif VAR cClassif ITEMS aClassif SIZE 110,08 PIXEL OF oPn09T1 ON CHANGE nClassif := oClassif:nAt 
		@ 011,280 SAY OemToAnsi("2 > Selecione os itens a serem classificados")		FONT oFont003 SIZE 200,15 OF oPn09T1 PIXEL
		@ 011,450 SAY OemToAnsi("3 > Clique no botão Aplica Classif.")		FONT oFont003 SIZE 150,15 OF oPn09T1 PIXEL
		@ 011,590 BUTTON OemToAnsi('Aplica Classif.')	SIZE 42,13	FONT oDlg:oFont ACTION MsgRun( "Processando classificação de Outras Saídas, aguarde...",,{ || xBr09Clf(nClassif) } ) OF oPn09T1 PIXEL //"Exportar Excel"
		// AAdd( aOrdens, "FILIAL + CLIEFOR + LOJA + DTENTRADA + NFSERIE + NF + NFITEM" )
		// AAdd( aOrdens, "FILIAL + DTENTRADA + NFSERIE + NF + NFITEM + CLIEFOR + LOJA" )
		// @ 011,185 COMBOBOX oOrdem VAR cOrdem ITEMS aOrdens SIZE 210,08 PIXEL OF oPn09T1 ON CHANGE nOrdem := oOrdem:nAt 

		//QUADRO DE RELATÓRIO
		@ 001,528 SAY OemToAnsi("OUTRAS OPÇÕES")		SIZE 200,15	FONT oFont003 OF oPn09R1 PIXEL
		@ 011,528 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION xRelBr09() OF oPn09R1 PIXEL //"Exportar Excel"
		@ 011,580 BUTTON OemToAnsi('Grava Classif.')	SIZE 42,13	FONT oDlg:oFont ACTION xVrfGr09() OF oPn09R1 PIXEL //"Exportar Excel"
		
		oBrw09Dt := FWMarkBrowse():New() 
		oBrw09Dt:SetOwner(oPn09DE1) 
		oBrw09Dt:SetAlias(cAlB09Z1)
		oBrw09Dt:SetTemporary(.T.)	
		oBrw09Dt:SetFields(xR09Stru())
		oBrw09Dt:SetLineHeight(12)
		oBrw09Dt:DisableConfig()
		//oBrw09Dt:DisableFilter()
		oBrw09Dt:DisableReport()
		oBrw09Dt:DisableSaveConfig()
		//oBrw09Dt:AddButton("Teste", nil, , , )

		// oBrw09Dt:SetDescription('Itens Pendentes de Classificação')
		oBrw09Dt:SetFieldMark('OMARK')
		oBrw09Dt:AddLegend( "Alltrim(OMARK)<>''", "WHITE", "*** Marcado para classificar ***"  ) 
		oBrw09Dt:AddLegend( "CLASSIF==' 1'", "YELLOW"	, "Distr. Cesta Básica"       ) 
		oBrw09Dt:AddLegend( "CLASSIF==' 2'", "BLUE"  	, "Distr. Cesta Básica Frango"  ) 
		oBrw09Dt:AddLegend( "CLASSIF==' 3'", "BROWN" 	, "Dev. Cesta Básica"  ) 
		oBrw09Dt:AddLegend( "CLASSIF==' 4'", "RED"  	, "Remessa Estadual Análise"  ) 
		oBrw09Dt:AddLegend( "CLASSIF==' 5'", "GREEN" 	, "Remessa Interestadual Análise"  ) 
		oBrw09Dt:AddLegend( "CLASSIF==' 6'", "ORANGE"	, "Remessa Estadual Garantia"  ) 
		oBrw09Dt:AddLegend( "CLASSIF==' 7'", "PINK"		, "Remessa Interestadual Garantia"  ) 
		oBrw09Dt:AddLegend( "CLASSIF==' 8'", "F12_MARR"	, "Retorno Aluguel"  ) 
		oBrw09Dt:AddLegend( "CLASSIF==' 9'", "GRAY	"		, "Remessa Degustação"  ) 
		oBrw09Dt:AddLegend( "CLASSIF=='10'", "LIGHTBLU"	, "Premiação"  ) 
		oBrw09Dt:AddLegend( "CLASSIF=='11'", "LIGHTBLU"	, "Remessa Integrado"  ) 
		oBrw09Dt:AddLegend( "CLASSIF=='12'", "LIGHTBLU"	, "Outras Remessas 2"  ) 
		oBrw09Dt:AddLegend( "CLASSIF=='13'", "LIGHTBLU"	, "Outros Retornos 2"  ) 
		oBrw09Dt:AddLegend( "CLASSIF=='14'", "BLACK"	, "*** Não Classificados ***"       ) 
		oBrw09Dt:Activate() 


		//@ 001,008 SAY OemToAnsi("TOTAIS ")		FONT oFont003 SIZE 200,15 OF oPn09R1 PIXEL
		//@ 001,058 SAY OemToAnsi("Vl. Contábil")	FONT oFont002 SIZE 200,15 OF oPn09R1 PIXEL
		//@ 001,128 SAY OemToAnsi("Vl. ICMS")		FONT oFont002 SIZE 200,15 OF oPn09R1 PIXEL
		//@ 001,198 SAY OemToAnsi("Quantidade ")	FONT oFont002 SIZE 200,15 OF oPn09R1 PIXEL
		//@ 011,058 MSGET nA09T001	SIZE 60,08 OF oPn09R1 PIXEL When .F. PICTURE '@E 9,999,999,999.99' // Total BC Cofins Merc Interno
		//@ 011,128 MSGET nA09T002	SIZE 60,08 OF oPn09R1 PIXEL When .F. PICTURE '@E 9,999,999,999.99' // Total BC Cofins Merc Interno
		//@ 011,198 MSGET nA09T003	SIZE 60,08 OF oPn09R1 PIXEL When .F. PICTURE '@E 9,999,999,999.99' // Total BC Cofins Merc Interno

		////////////////////////////////////////////////////////////
		oFLr09p2:= FWLayer():New()
		oFLr09p2:Init( oFld09:aDialogs[2], .F., .T.) //Resumo
		//Define os Paineis
		//TITULO
		oFLr09p2:AddLine ('TIT_DET1', 6, .F.)
		oFLr09p2:AddCollumn('TIT_ESQ1',100,.F.,'TIT_DET1')

		oFLr09p2:AddLine ('DETALHE1', 74, .F.)
		oFLr09p2:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

		oFLr09p2:AddLine ('RESUMO1', 20, .F.)
		oFLr09p2:AddCollumn('RES_DIR1',100,.F.,'RESUMO1')

		oPn09T2		:= oFLr09p2:GetColPanel('TIT_ESQ1','TIT_DET1')
		oPn09DE2	:= oFLr09p2:GetColPanel('DET_ESQ1','DETALHE1')
		oPn09R2		:= oFLr09p2:GetColPanel('RES_DIR1','RESUMO1')

		oPn09T2:FreeChildren()
		oPn09DE2:FreeChildren()
		oPn09R2:FreeChildren()

		//Cabecalho
		@ 001,008 SAY OemToAnsi("Resumo Outras Saídas")		FONT oFont003 SIZE 400,15 OF oPn09T2 PIXEL

		oBrw09Z2:= TcBrowse():New(010,050,150,150,,,,oPn09DE2,,,,,,,,,,,,.f.,cAlB09Z2,.t.,,.f.,,,,)
		oBrw09Z2:AddColumn( TcColumn():New( "Filial"			, {|| (cAlB09Z2)->FILIAL}		, "@!"						,,,"CENTER"	,040,.f.,.f.,,,,.f.,) )
		oBrw09Z2:AddColumn( TcColumn():New( "Classif."		, {|| (cAlB09Z2)->CLASSIF}	, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw09Z2:AddColumn( TcColumn():New( "Quant"				, {|| (cAlB09Z2)->QUANT}		, "@E 999,999,999.9999"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw09Z2:AddColumn( TcColumn():New( "Vl. Cont"		, {|| (cAlB09Z2)->VLCONT}		, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw09Z2:AddColumn( TcColumn():New( "Vl. ICMS"		, {|| (cAlB09Z2)->ICMSVAL}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		
		oBrw09Z2:Align		:=	CONTROL_ALIGN_ALLCLIENT

		// FIM Chamado n.050629 - OS n.052801 - Relatorio Outras Saídas - Abel Babini - 02/12/2019

		// INICIO n.050629  - Relatorio Devolução de Compras - Abel Babini - 27/08/2019
		//--------------------------------------------------------------------------
		//ABA 10 - DEV. COMPRAS
		//--------------------------------------------------------------------------
		oFld10	:= FWLayer():New()
		IF nOpMdl	== 1
			oFld10:Init( oFolder030:aDialogs[09], .F., .T.)
		ELSEIF nOpMdl	== 2 .or. nOpMdl	== 4
			oFld10:Init( oFolder030:aDialogs[06], .F., .T.)
		ENDIF

		//Define os Paineis
		//TITULO
		oFld10:AddLine ('TIT_DET1', 6, .F.)
		oFld10:AddCollumn('TIT_ESQ1',50,.F.,'TIT_DET1')
		oFld10:AddCollumn('TIT_DIR1',50,.F.,'TIT_DET1')

		oFld10:AddLine ('DETALHE1', 54, .F.)
		oFld10:AddCollumn('DET_ESQ1',50,.F.,'DETALHE1')
		oFld10:AddCollumn('DET_DIR1',50,.F.,'DETALHE1')

		oFld10:AddLine ('RESUMO1', 40, .F.)
		oFld10:AddCollumn('RES_DIR1',100,.F.,'RESUMO1')

		oPn10T1		:= oFld10:GetColPanel('TIT_ESQ1','TIT_DET1')
		oPn10T2		:= oFld10:GetColPanel('TIT_DIR1','TIT_DET1')

		oPn10DE1	:= oFld10:GetColPanel('DET_ESQ1','DETALHE1')
		oPn10DD1	:= oFld10:GetColPanel('DET_DIR1','DETALHE1')

		oPn10R1		:= oFld10:GetColPanel('RES_DIR1','RESUMO1')

		oPn10T1:FreeChildren()
		oPn10T2:FreeChildren()
		oPn10DE1:FreeChildren()
		oPn10DD1:FreeChildren()
		oPn10R1:FreeChildren()

		//Cabecalho
		@ 001,008 SAY OemToAnsi("Resumo Dev. de Compras - Insumos")		FONT oFont003 SIZE 200,15 OF oPn10T1 PIXEL
		@ 001,008 SAY OemToAnsi("Resumo Dev. de Compras - Mat. Uso e Consumo / Imobilizado")		FONT oFont003 SIZE 400,15 OF oPn10T2 PIXEL


		//Rodapé
		//INSUMOS
		@ 001,120 SAY OemToAnsi("Insumos")	FONT oFont002 SIZE 200,15 OF oPn10R1 PIXEL
		@ 011,120 SAY OemToAnsi("Vl. Contábil")	FONT oFont002 SIZE 200,15 OF oPn10R1 PIXEL
		@ 021,120 MSGET nA10T01	SIZE 60,08 OF oPn10R1 PIXEL When .F. PICTURE '@E 9,999,999,999.99' // Total BC Pis Merc Interno
		@ 031,120 MSGET nA10T03	SIZE 60,08 OF oPn10R1 PIXEL When .F. PICTURE '@E 9,999,999,999.99' // Total BC Pis Merc Interno
		@ 041,120 MSGET nA10T05	SIZE 60,08 OF oPn10R1 PIXEL When .F. PICTURE '@E 9,999,999,999.99' // Total BC Pis Merc Interno
		@ 011,180 SAY OemToAnsi("Vl. ICMS")	FONT oFont002 SIZE 200,15 OF oPn10R1 PIXEL
		@ 021,180 MSGET nA10T02	SIZE 60,08 OF oPn10R1 PIXEL When .F. PICTURE '@E 9,999,999,999.99' // Total BC Cofins Merc Interno
		@ 031,180 MSGET nA10T04	SIZE 60,08 OF oPn10R1 PIXEL When .F. PICTURE '@E 9,999,999,999.99' // Total BC Cofins Merc Interno
		@ 041,180 MSGET nA10T06	SIZE 60,08 OF oPn10R1 PIXEL When .F. PICTURE '@E 9,999,999,999.99' // Total BC Cofins Merc Interno

		//MATERIAL USO E CONSUMO E IMOBILIZADO
		@ 001,340 SAY OemToAnsi("Mat. Uso e Consumo / Imobilizado")	FONT oFont002 SIZE 200,15 OF oPn10R1 PIXEL
		@ 011,340 SAY OemToAnsi("Vl. Contábil")	FONT oFont002 SIZE 200,15 OF oPn10R1 PIXEL
		@ 021,340 MSGET nA10T51	SIZE 60,08 OF oPn10R1 PIXEL When .F. PICTURE '@E 9,999,999,999.99' // Total BC Pis Merc Interno
		@ 031,340 MSGET nA10T53	SIZE 60,08 OF oPn10R1 PIXEL When .F. PICTURE '@E 9,999,999,999.99' // Total BC Pis Merc Interno
		@ 041,340 MSGET nA10T55	SIZE 60,08 OF oPn10R1 PIXEL When .F. PICTURE '@E 9,999,999,999.99' // Total BC Pis Merc Interno
		@ 011,400 SAY OemToAnsi("Vl. ICMS")	FONT oFont002 SIZE 200,15 OF oPn10R1 PIXEL
		@ 021,400 MSGET nA10T52	SIZE 60,08 OF oPn10R1 PIXEL When .F. PICTURE '@E 9,999,999,999.99' // Total BC Cofins Merc Interno
		@ 031,400 MSGET nA10T54	SIZE 60,08 OF oPn10R1 PIXEL When .F. PICTURE '@E 9,999,999,999.99' // Total BC Cofins Merc Interno
		@ 041,400 MSGET nA10T56	SIZE 60,08 OF oPn10R1 PIXEL When .F. PICTURE '@E 9,999,999,999.99' // Total BC Cofins Merc Interno

		@ 001,008 SAY OemToAnsi("TOTAIS ")	FONT oFont003 SIZE 200,15 OF oPn10R1 PIXEL
		@ 021,008 SAY OemToAnsi("Com Crédito na Entrada")	FONT oFont002 SIZE 200,15 OF oPn10R1 PIXEL
		@ 031,008 SAY OemToAnsi("Sem Crédito na Entrada")	FONT oFont002 SIZE 200,15 OF oPn10R1 PIXEL
		@ 041,008 SAY OemToAnsi("Total ")	FONT oFont002 SIZE 200,15 OF oPn10R1 PIXEL

		//QUADRO DE RELATÓRIO
		@ 055,558 SAY OemToAnsi("OUTRAS OPÇÕES")		SIZE 200,15	FONT oFont003 OF oPn10R1 PIXEL
		@ 068,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION xRelBr10() OF oPn10R1 PIXEL //"Exportar Excel"

		oBrw10In:= TcBrowse():New(010,050,150,150,,,,oPn10DE1,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
		oBrw10In:AddColumn( TcColumn():New( "Filial"		, {|| aBrw10In[oBrw10In:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw10In:AddColumn( TcColumn():New( "Forn."			, {|| aBrw10In[oBrw10In:nAt,06]}	, "@!"						,,,"LEFT"	,025,.f.,.f.,,,,.f.,) )
		oBrw10In:AddColumn( TcColumn():New( "Loja"			, {|| aBrw10In[oBrw10In:nAt,07]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw10In:AddColumn( TcColumn():New( "Nome Forn."	, {|| aBrw10In[oBrw10In:nAt,08]}	, "@!"						,,,"LEFT"	,100,.f.,.f.,,,,.f.,) )
		oBrw10In:AddColumn( TcColumn():New( "Dt. Entrada"	, {|| aBrw10In[oBrw10In:nAt,02]}	, "@!"						,,,"LEFT"	,035,.f.,.f.,,,,.f.,) )
		oBrw10In:AddColumn( TcColumn():New( "Nota Fiscal"	, {|| aBrw10In[oBrw10In:nAt,04]}	, "@!"						,,,"LEFT"	,035,.f.,.f.,,,,.f.,) )
		oBrw10In:AddColumn( TcColumn():New( "Série"			, {|| aBrw10In[oBrw10In:nAt,03]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw10In:AddColumn( TcColumn():New( "Item NF"		, {|| aBrw10In[oBrw10In:nAt,05]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw10In:AddColumn( TcColumn():New( "Cod. Produto"	, {|| aBrw10In[oBrw10In:nAt,10]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw10In:AddColumn( TcColumn():New( "Produto"		, {|| aBrw10In[oBrw10In:nAt,11]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw10In:AddColumn( TcColumn():New( "CFOP"			, {|| aBrw10In[oBrw10In:nAt,29]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw10In:AddColumn( TcColumn():New( "Quant"			, {|| aBrw10In[oBrw10In:nAt,12]}	, "@E 999,999,999.9999"		,,,"RIGHT"	,040,.f.,.f.,,,,.f.,) )
		oBrw10In:AddColumn( TcColumn():New( "Vl.Contabil"	, {|| aBrw10In[oBrw10In:nAt,15]}	, "@E 999,999,999.99"		,,,"RIGHT"	,040,.f.,.f.,,,,.f.,) )
		oBrw10In:AddColumn( TcColumn():New( "Valor ICMS"	, {|| aBrw10In[oBrw10In:nAt,18]}	, "@E 999,999,999.99"		,,,"RIGHT"	,040,.f.,.f.,,,,.f.,) )
		oBrw10In:AddColumn( TcColumn():New( "Observações"	, {|| aBrw10In[oBrw10In:nAt,26]}	, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw10In:AddColumn( TcColumn():New( "Créd ICMS Dev"	, {|| aBrw10In[oBrw10In:nAt,37]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw10In:AddColumn( TcColumn():New( "Créd ICMS Ent"	, {|| aBrw10In[oBrw10In:nAt,47]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw10In:AddColumn( TcColumn():New( "Créd Pis/Cof Dev"	, {|| aBrw10In[oBrw10In:nAt,39]}, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw10In:AddColumn( TcColumn():New( "Créd Pis/Cof Ent"	, {|| aBrw10In[oBrw10In:nAt,48]}, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw10In:AddColumn( TcColumn():New( "Dt.Entr.NF Orig"	, {|| aBrw10In[oBrw10In:nAt,40]}, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw10In:AddColumn( TcColumn():New( "Vl Pis"		, {|| aBrw10In[oBrw10In:nAt,44]}	, "@E 999,999,999.99"		,,,"RIGHT"	,040,.f.,.f.,,,,.f.,) )
		oBrw10In:AddColumn( TcColumn():New( "Vl Cofins"		, {|| aBrw10In[oBrw10In:nAt,45]}	, "@E 999,999,999.99"		,,,"RIGHT"	,040,.f.,.f.,,,,.f.,) )

		oBrw10In:SetArray(aBrw10In)
		oBrw10In:Align		:=	CONTROL_ALIGN_ALLCLIENT
		oBrw10In:bLine := {||{ 	aBrw10In[oBrw10In:nAt,01],;
			aBrw10In[oBrw10In:nAt,06],;
			aBrw10In[oBrw10In:nAt,07],;
			aBrw10In[oBrw10In:nAt,08],;
			aBrw10In[oBrw10In:nAt,02],;
			aBrw10In[oBrw10In:nAt,04],;
			aBrw10In[oBrw10In:nAt,03],;
			aBrw10In[oBrw10In:nAt,05],;
			aBrw10In[oBrw10In:nAt,10],;
			aBrw10In[oBrw10In:nAt,11],;
			aBrw10In[oBrw10In:nAt,29],;
			Transform(aBrw10In[oBrw10In:nAt,12],'@E 999,999,999.99'),;
			Transform(aBrw10In[oBrw10In:nAt,15],'@E 999,999,999.99'),;
			Transform(aBrw10In[oBrw10In:nAt,18],'@E 999,999,999.99'),;
			aBrw10In[oBrw10In:nAt,26],;
			aBrw10In[oBrw10In:nAt,37],;
			aBrw10In[oBrw10In:nAt,47],;
			aBrw10In[oBrw10In:nAt,39],;
			aBrw10In[oBrw10In:nAt,48],;
			aBrw10In[oBrw10In:nAt,40],;
			Transform(aBrw10In[oBrw10In:nAt,44],'@E 999,999,999.99'),;
			Transform(aBrw10In[oBrw10In:nAt,45],'@E 999,999,999.99')} }


		oBrw10Mc:= TcBrowse():New(010,050,150,150,,,,oPn10DD1,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
		oBrw10Mc:AddColumn( TcColumn():New( "Filial"		, {|| aBrw10Mc[oBrw10Mc:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw10Mc:AddColumn( TcColumn():New( "Forn."			, {|| aBrw10Mc[oBrw10Mc:nAt,06]}	, "@!"						,,,"LEFT"	,025,.f.,.f.,,,,.f.,) )
		oBrw10Mc:AddColumn( TcColumn():New( "Loja"			, {|| aBrw10Mc[oBrw10Mc:nAt,07]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw10Mc:AddColumn( TcColumn():New( "Nome Forn."	, {|| aBrw10Mc[oBrw10Mc:nAt,08]}	, "@!"						,,,"LEFT"	,100,.f.,.f.,,,,.f.,) )
		oBrw10Mc:AddColumn( TcColumn():New( "Dt. Entrada"	, {|| aBrw10Mc[oBrw10Mc:nAt,02]}	, "@!"						,,,"LEFT"	,035,.f.,.f.,,,,.f.,) )
		oBrw10Mc:AddColumn( TcColumn():New( "Nota Fiscal"	, {|| aBrw10Mc[oBrw10Mc:nAt,04]}	, "@!"						,,,"LEFT"	,035,.f.,.f.,,,,.f.,) )
		oBrw10Mc:AddColumn( TcColumn():New( "Série"			, {|| aBrw10Mc[oBrw10Mc:nAt,03]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw10Mc:AddColumn( TcColumn():New( "Item NF"		, {|| aBrw10Mc[oBrw10Mc:nAt,05]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw10Mc:AddColumn( TcColumn():New( "Cod. Produto"	, {|| aBrw10Mc[oBrw10Mc:nAt,10]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw10Mc:AddColumn( TcColumn():New( "Produto"		, {|| aBrw10Mc[oBrw10Mc:nAt,11]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw10Mc:AddColumn( TcColumn():New( "CFOP"			, {|| aBrw10Mc[oBrw10Mc:nAt,29]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw10Mc:AddColumn( TcColumn():New( "Quant"			, {|| aBrw10Mc[oBrw10Mc:nAt,12]}	, "@E 999,999,999.9999"		,,,"RIGHT"	,040,.f.,.f.,,,,.f.,) )
		oBrw10Mc:AddColumn( TcColumn():New( "Vl.Contabil"	, {|| aBrw10Mc[oBrw10Mc:nAt,15]}	, "@E 999,999,999.99"		,,,"RIGHT"	,040,.f.,.f.,,,,.f.,) )
		oBrw10Mc:AddColumn( TcColumn():New( "Valor ICMS"	, {|| aBrw10Mc[oBrw10Mc:nAt,18]}	, "@E 999,999,999.99"		,,,"RIGHT"	,040,.f.,.f.,,,,.f.,) )
		oBrw10Mc:AddColumn( TcColumn():New( "Observações"	, {|| aBrw10Mc[oBrw10Mc:nAt,26]}	, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw10Mc:AddColumn( TcColumn():New( "Créd ICMS Dev"	, {|| aBrw10Mc[oBrw10Mc:nAt,37]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw10Mc:AddColumn( TcColumn():New( "Créd ICMS Ent"	, {|| aBrw10Mc[oBrw10Mc:nAt,47]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw10Mc:AddColumn( TcColumn():New( "Créd Pis/Cof Dev"	, {|| aBrw10Mc[oBrw10Mc:nAt,39]}, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw10Mc:AddColumn( TcColumn():New( "Créd Pis/Cof Ent"	, {|| aBrw10Mc[oBrw10Mc:nAt,48]}, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw10Mc:AddColumn( TcColumn():New( "Dt.Entr.NF Orig"	, {|| aBrw10Mc[oBrw10Mc:nAt,40]}, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw10Mc:AddColumn( TcColumn():New( "Vl Pis"		, {|| aBrw10Mc[oBrw10Mc:nAt,44]}	, "@E 999,999,999.99"		,,,"RIGHT"	,040,.f.,.f.,,,,.f.,) )
		oBrw10Mc:AddColumn( TcColumn():New( "Vl Cofins"		, {|| aBrw10Mc[oBrw10Mc:nAt,45]}	, "@E 999,999,999.99"		,,,"RIGHT"	,040,.f.,.f.,,,,.f.,) )

		oBrw10Mc:SetArray(aBrw10Mc)
		oBrw10Mc:Align		:=	CONTROL_ALIGN_ALLCLIENT
		oBrw10Mc:bLine := {||{ 	aBrw10Mc[oBrw10Mc:nAt,01],;
			aBrw10Mc[oBrw10Mc:nAt,06],;
			aBrw10Mc[oBrw10Mc:nAt,07],;
			aBrw10Mc[oBrw10Mc:nAt,08],;
			aBrw10Mc[oBrw10Mc:nAt,02],;
			aBrw10Mc[oBrw10Mc:nAt,04],;
			aBrw10Mc[oBrw10Mc:nAt,03],;
			aBrw10Mc[oBrw10Mc:nAt,05],;
			aBrw10Mc[oBrw10Mc:nAt,10],;
			aBrw10Mc[oBrw10Mc:nAt,11],;
			aBrw10Mc[oBrw10Mc:nAt,29],;
			Transform(aBrw10Mc[oBrw10Mc:nAt,12],'@E 999,999,999.99'),;
			Transform(aBrw10Mc[oBrw10Mc:nAt,15],'@E 999,999,999.99'),;
			Transform(aBrw10Mc[oBrw10Mc:nAt,18],'@E 999,999,999.99'),;
			aBrw10Mc[oBrw10Mc:nAt,26],;
			aBrw10Mc[oBrw10Mc:nAt,37],;
			aBrw10Mc[oBrw10Mc:nAt,47],;
			aBrw10Mc[oBrw10Mc:nAt,39],;
			aBrw10Mc[oBrw10Mc:nAt,48],;
			aBrw10Mc[oBrw10Mc:nAt,40],;
			Transform(aBrw10Mc[oBrw10Mc:nAt,44],'@E 999,999,999.99'),;
			Transform(aBrw10Mc[oBrw10Mc:nAt,45],'@E 999,999,999.99')} }

		// FIM n.050629  - Relatorio Devolução de Compras - Abel Babini - 27/08/2019
	ENDIF

	IF nOpMdl	== 1
		//--------------------------------------------------------------------------
		//ABA 11 - POLENTA (INICIO)
		//--------------------------------------------------------------------------
		oFWLr11	:= FWLayer():New()
		oFWLr11:Init( oFolder030:aDialogs[10], .F., .T.)

		//Define os Paineis
		//TITULO
		oFWLr11:AddLine ('TIT_DET', 25, .F.)
		oFWLr11:AddCollumn('TIT_ESQ',50,.F.,'TIT_DET')
		oFWLr11:AddCollumn('TIT_DIR',50,.F.,'TIT_DET')

		oFWLr11:AddLine ('DETALHE', 35, .F.)
		oFWLr11:AddCollumn('DET_ESQ',50,.F.,'DETALHE')
		oFWLr11:AddCollumn('DET_DIR',50,.F.,'DETALHE')

		oFWLr11:AddLine ('TIT_RES', 10, .F.)
		oFWLr11:AddCollumn('TRES_ESQ',50,.F.,'TIT_RES')
		oFWLr11:AddCollumn('TRES_DIR',50,.F.,'TIT_RES')

		oFWLr11:AddLine ('RESUMO', 30, .F.)
		oFWLr11:AddCollumn('RES_ESQ',50,.F.,'RESUMO')
		oFWLr11:AddCollumn('RES_DIR',50,.F.,'RESUMO')

		oPn11TE	:= oFWLr11:GetColPanel('TIT_ESQ','TIT_DET')
		oPn11TD	:= oFWLr11:GetColPanel('TIT_DIR','TIT_DET')
		oPn11DE	:= oFWLr11:GetColPanel('DET_ESQ','DETALHE')
		oPn11DD	:= oFWLr11:GetColPanel('DET_DIR','DETALHE')
		oPn11CE	:= oFWLr11:GetColPanel('TRES_ESQ','TIT_RES')
		oPn11CD	:= oFWLr11:GetColPanel('TRES_DIR','TIT_RES')
		oPn11RE	:= oFWLr11:GetColPanel('RES_ESQ','RESUMO')
		oPn11RD	:= oFWLr11:GetColPanel('RES_DIR','RESUMO')

		oPn11TE:FreeChildren()
		oPn11TD:FreeChildren()
		oPn11DE:FreeChildren()
		oPn11DD:FreeChildren()
		oPn11CE:FreeChildren()
		oPn11CD:FreeChildren()
		oPn11RE:FreeChildren()
		oPn11RD:FreeChildren()

		//BROWSER Valores à Crédito
		@ 001,008 SAY OemToAnsi("Crédito ICMS ST")	FONT oFont003 SIZE 200,15 OF oPn11TE PIXEL
		@ 011,015 SAY OemToAnsi("Vl.Total")			FONT oFont001 SIZE 200,15 OF oPn11TE PIXEL
		@ 024,015 SAY OemToAnsi("Vl.Total ICMS")	FONT oFont001 SIZE 200,15 OF oPn11TE PIXEL
		@ 037,015 SAY OemToAnsi("Vl.Total ICMS ST")	FONT oFont001 SIZE 200,15 OF oPn11TE PIXEL

		@ 011,060 MSGET nVlCrTot	SIZE 60,08 OF oPn11TE PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 024,060 MSGET nVlCrICM	SIZE 60,08 OF oPn11TE PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 037,060 MSGET nVCrICST	SIZE 60,08 OF oPn11TE PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		oBrw11Cr:= TcBrowse():New(010,050,150,150,,,,oPn11DE,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
		oBrw11Cr:AddColumn( TcColumn():New( "CFOP"			,{ || aBrw11Cr[oBrw11Cr:nAt,01]}	, "@!"						,,,"CENTER"	,040,.f.,.f.,,,,.f.,) )
		oBrw11Cr:AddColumn( TcColumn():New( "Quant"			,{ || aBrw11Cr[oBrw11Cr:nAt,02]}	, "@E 999,999,999.9999"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw11Cr:AddColumn( TcColumn():New( "Vl. Total"	,{ || aBrw11Cr[oBrw11Cr:nAt,03]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw11Cr:AddColumn( TcColumn():New( "ICMS"			,{ || aBrw11Cr[oBrw11Cr:nAt,04]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw11Cr:AddColumn( TcColumn():New( "ICMS ST" 	,{ || aBrw11Cr[oBrw11Cr:nAt,05]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw11Cr:AddColumn( TcColumn():New( "Vl. Cont." ,{ || aBrw11Cr[oBrw11Cr:nAt,06]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

		oBrw11Cr:SetArray(aBrw11Cr)
		oBrw11Cr:Align		:=	CONTROL_ALIGN_ALLCLIENT
		oBrw11Cr:bLine := {||{ aBrw11Cr[oBrw11Cr:nAt]}}

		//BROWSER Valores à Débito
		@ 001,008 SAY OemToAnsi("Débito ICMS ST")	FONT oFont003 SIZE 200,15 OF oPn11TD PIXEL
		@ 011,015 SAY OemToAnsi("Vl.Total")			FONT oFont001 SIZE 200,15 OF oPn11TD PIXEL
		@ 024,015 SAY OemToAnsi("Vl.Total ICMS")	FONT oFont001 SIZE 200,15 OF oPn11TD PIXEL
		@ 037,015 SAY OemToAnsi("Vl.Total ICMS ST")	FONT oFont001 SIZE 200,15 OF oPn11TD PIXEL

		@ 011,060 MSGET nVlDbTot	SIZE 60,08 OF oPn11TD PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 024,060 MSGET nVlDbICM	SIZE 60,08 OF oPn11TD PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 037,060 MSGET nVDbICST	SIZE 60,08 OF oPn11TD PIXEL When .F. PICTURE '@E 9,999,999,999.99'


		oBrw11Db:= TcBrowse():New(010,050,150,150,,,,oPn11DD,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
		oBrw11Db:AddColumn( TcColumn():New( "CFOP"			, {|| aBrw11Db[oBrw11Db:nAt,01]}, "@!"									,,,"CENTER"	,040,.f.,.f.,,,,.f.,) )
		oBrw11Db:AddColumn( TcColumn():New( "Quant"			, {|| aBrw11Db[oBrw11Db:nAt,02]}, "@E 999,999,999.9999"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw11Db:AddColumn( TcColumn():New( "Vl. Total"	, {|| aBrw11Db[oBrw11Db:nAt,03]}, "@E 9,999,999,999.99"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw11Db:AddColumn( TcColumn():New( "ICMS"			, {|| aBrw11Db[oBrw11Db:nAt,04]}, "@E 9,999,999,999.99"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw11Db:AddColumn( TcColumn():New( "ICMS ST" 	, {|| aBrw11Db[oBrw11Db:nAt,05]}, "@E 9,999,999,999.99"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw11Db:AddColumn( TcColumn():New( "Vl. Cont." ,{ || aBrw11Db[oBrw11Db:nAt,06]}, "@E 9,999,999,999.99"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

		oBrw11Db:SetArray(aBrw11Db)
		oBrw11Db:Align		:=	CONTROL_ALIGN_ALLCLIENT
		oBrw11Db:bLine := {||{ aBrw11Db[oBrw11Db:nAt]}} 

		//QUADRO RESUMO
		@ 004,008 SAY OemToAnsi("RESUMO ICMS ST NO PERÍODO - POLENTA")	FONT oFont003 SIZE 200,15 OF oPn11CE PIXEL

		//Saldo Anterior
		//@ 004,008 SAY OemToAnsi("Saldo Credor do Mês Anterior")	FONT oFont001 SIZE 200,15 OF oPn11RE PIXEL
		//@ 004,150 MSGET nCMAntST SIZE 60,08 OF oPn11RE PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		//Total de Créditos
		@ 016,008 SAY OemToAnsi("Total de Créditos no Mês (ICMS ST)")	FONT oFont001 SIZE 200,15 OF oPn11RE PIXEL
		@ 016,150 MSGET nVCrICST SIZE 60,08 OF oPn11RE PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		//Total de Débitos
		@ 028,008 SAY OemToAnsi("Total de Débitos no Mês (ICMS ST)")	FONT oFont001 SIZE 200,15 OF oPn11RE PIXEL
		@ 028,150 MSGET nVDbICST SIZE 60,08 OF oPn11RE PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		@ 040,004 TO 058,215 OF oPn11RE PIXEL

		//Saldo a pagar
		@ 044,008 SAY OemToAnsi("Valor à Pagar no Período (ICMS ST)")	FONT oFont002 SIZE 200,15 OF oPn11RE PIXEL
		@ 044,150 MSGET nVlPgST SIZE 60,08 OF oPn11RE PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		//QUADRO DE RELATÓRIO
		@ 004,008 SAY OemToAnsi("OUTRAS OPÇÕES")	FONT oFont003 SIZE 200,15 OF oPn11CD PIXEL
		@ 004,008 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13 FONT oDlg:oFont ACTION xRelBr11() OF oPn11RD PIXEL //"Exportar Excel"

		//--------------------------------------------------------------------------
		//ABA 12 - EMBUTIDOS (INICIO)
		//--------------------------------------------------------------------------
		oFWLr12	:= FWLayer():New()
		oFWLr12:Init(oFolder030:aDialogs[11], .F., .T.)

		//Define os Paineis
		//TITULO
		oFWLr12:AddLine ('TIT_DET', 25, .F.)
		oFWLr12:AddCollumn('TIT_ESQ',50,.F.,'TIT_DET')
		oFWLr12:AddCollumn('TIT_DIR',50,.F.,'TIT_DET')

		oFWLr12:AddLine ('DETALHE', 35, .F.)
		oFWLr12:AddCollumn('DET_ESQ',50,.F.,'DETALHE')
		oFWLr12:AddCollumn('DET_DIR',50,.F.,'DETALHE')

		oFWLr12:AddLine ('TIT_RES', 10, .F.)
		oFWLr12:AddCollumn('TRES_ESQ',50,.F.,'TIT_RES')
		oFWLr12:AddCollumn('TRES_DIR',50,.F.,'TIT_RES')

		oFWLr12:AddLine ('RESUMO', 30, .F.)
		oFWLr12:AddCollumn('RES_ESQ',50,.F.,'RESUMO')
		oFWLr12:AddCollumn('RES_DIR',50,.F.,'RESUMO')

		oPn12TE	:= oFWLr12:GetColPanel('TIT_ESQ','TIT_DET')
		oPn12TD	:= oFWLr12:GetColPanel('TIT_DIR','TIT_DET')
		oPn12DE	:= oFWLr12:GetColPanel('DET_ESQ','DETALHE')
		oPn12DD	:= oFWLr12:GetColPanel('DET_DIR','DETALHE')
		oPn12CE	:= oFWLr12:GetColPanel('TRES_ESQ','TIT_RES')
		oPn12CD	:= oFWLr12:GetColPanel('TRES_DIR','TIT_RES')
		oPn12RE	:= oFWLr12:GetColPanel('RES_ESQ','RESUMO')
		oPn12RD	:= oFWLr12:GetColPanel('RES_DIR','RESUMO')

		oPn12TE:FreeChildren()
		oPn12TD:FreeChildren()
		oPn12DE:FreeChildren()
		oPn12DD:FreeChildren()
		oPn12CE:FreeChildren()
		oPn12CD:FreeChildren()
		oPn12RE:FreeChildren()
		oPn12RD:FreeChildren()

		//BROWSER Valores à Crédito
		@ 001,008 SAY OemToAnsi("Crédito ICMS ST")		FONT oFont003 SIZE 200,15 OF oPn12TE PIXEL
		@ 011,015 SAY OemToAnsi("Vl.Total")			FONT oFont001 SIZE 200,15 OF oPn12TE PIXEL
		@ 024,015 SAY OemToAnsi("Vl.Total ICMS")	FONT oFont001 SIZE 200,15 OF oPn12TE PIXEL
		@ 037,015 SAY OemToAnsi("Vl.Total ICMS ST")	FONT oFont001 SIZE 200,15 OF oPn12TE PIXEL

		@ 011,060 MSGET nVCTot12	SIZE 60,08 OF oPn12TE PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 024,060 MSGET nVCICM12	SIZE 60,08 OF oPn12TE PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 037,060 MSGET nVCIST12	SIZE 60,08 OF oPn12TE PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		oBrw12Cr:= TcBrowse():New(010,050,150,150,,,,oPn12DE,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
		oBrw12Cr:AddColumn( TcColumn():New( "CFOP"			,{ || aBrw12Cr[oBrw12Cr:nAt,01]}	, "@!"						,,,"CENTER"	,040,.f.,.f.,,,,.f.,) )
		oBrw12Cr:AddColumn( TcColumn():New( "Quant"			,{ || aBrw12Cr[oBrw12Cr:nAt,02]}	, "@E 999,999,999.9999"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw12Cr:AddColumn( TcColumn():New( "Vl. Total"	,{ || aBrw12Cr[oBrw12Cr:nAt,03]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw12Cr:AddColumn( TcColumn():New( "ICMS"			,{ || aBrw12Cr[oBrw12Cr:nAt,04]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw12Cr:AddColumn( TcColumn():New( "ICMS ST" 	,{ || aBrw12Cr[oBrw12Cr:nAt,05]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw12Cr:AddColumn( TcColumn():New( "Vl. Cont." ,{ || aBrw12Cr[oBrw12Cr:nAt,06]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

		oBrw12Cr:SetArray(aBrw12Cr)
		oBrw12Cr:Align		:=	CONTROL_ALIGN_ALLCLIENT
		oBrw12Cr:bLine := {||{ aBrw12Cr[oBrw12Cr:nAt]}} 
		//BROWSER Valores à Débito
		@ 001,008 SAY OemToAnsi("Débito ICMS ST	")		FONT oFont003 SIZE 200,15 OF oPn12TD PIXEL
		@ 011,015 SAY OemToAnsi("Vl.Total")			FONT oFont001 SIZE 200,15 OF oPn12TD PIXEL
		@ 024,015 SAY OemToAnsi("Vl.Total ICMS")	FONT oFont001 SIZE 200,15 OF oPn12TD PIXEL
		@ 037,015 SAY OemToAnsi("Vl.Total ICMS ST")	FONT oFont001 SIZE 200,15 OF oPn12TD PIXEL

		@ 011,060 MSGET nVDTot12	SIZE 60,08 OF oPn12TD PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 024,060 MSGET nVDICM12	SIZE 60,08 OF oPn12TD PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 037,060 MSGET nVDIST12	SIZE 60,08 OF oPn12TD PIXEL When .F. PICTURE '@E 9,999,999,999.99'


		oBrw12Db:= TcBrowse():New(010,050,150,150,,,,oPn12DD,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
		oBrw12Db:AddColumn( TcColumn():New( "CFOP"			, {|| aBrw12Db[oBrw12Db:nAt,01]}	, "@!"						,,,"CENTER"	,040,.f.,.f.,,,,.f.,) )
		oBrw12Db:AddColumn( TcColumn():New( "Quant"			, {|| aBrw12Db[oBrw12Db:nAt,02]}	, "@E 999,999,999.9999"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw12Db:AddColumn( TcColumn():New( "Vl. Total"	, {|| aBrw12Db[oBrw12Db:nAt,03]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw12Db:AddColumn( TcColumn():New( "ICMS"			, {|| aBrw12Db[oBrw12Db:nAt,04]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw12Db:AddColumn( TcColumn():New( "ICMS ST" 	, {|| aBrw12Db[oBrw12Db:nAt,05]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw12Db:AddColumn( TcColumn():New( "Vl. Cont."	, {|| aBrw12Db[oBrw12Db:nAt,06]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

		oBrw12Db:SetArray(aBrw12Db)
		oBrw12Db:Align		:=	CONTROL_ALIGN_ALLCLIENT
		oBrw12Db:bLine := {||{ aBrw12Db[oBrw12Db:nAt]}} 
		//QUADRO RESUMO
		@ 004,008 SAY OemToAnsi("RESUMO ICMS ST NO PERÍODO - EMBUTIDOS")	FONT oFont003 SIZE 200,15 OF oPn12CE PIXEL

		//Saldo Anterior
		//@ 004,008 SAY OemToAnsi("Saldo Credor do Mês Anterior")	FONT oFont001 SIZE 200,15 OF oPn12RE PIXEL
		//@ 004,150 MSGET nCMAntST SIZE 60,08 OF oPn12RE PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		//Total de Créditos
		@ 016,008 SAY OemToAnsi("Total de Créditos no Mês (ICMS ST)")	FONT oFont001 SIZE 200,15 OF oPn12RE PIXEL
		//@ 016,150 MSGET nVCICM12 SIZE 60,08 OF oPn12RE PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 016,150 MSGET nVCIST12 SIZE 60,08 OF oPn12RE PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		//Total de Débitos
		@ 028,008 SAY OemToAnsi("Total de Débitos no Mês (ICMS ST)")	FONT oFont001 SIZE 200,15 OF oPn12RE PIXEL
		//@ 028,150 MSGET nVDICM12 SIZE 60,08 OF oPn12RE PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 028,150 MSGET nVDIST12 SIZE 60,08 OF oPn12RE PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		@ 040,004 TO 058,215 OF oPn12RE PIXEL

		//Saldo a pagar
		nSICST12	:= nVCIST12 + nVDIST12
		IF nVCIST12 >= nVDIST12
			@ 044,008 SAY OemToAnsi("Saldo Credor no Período (ICMS ST)")	FONT oFont002 SIZE 200,15 OF oPn12RE PIXEL
		ELSE
			@ 044,008 SAY OemToAnsi("Valor à Pagar no Período (ICMS ST)")	FONT oFont002 SIZE 200,15 OF oPn12RE PIXEL
		ENDIF
		@ 044,150 MSGET nSICST12 SIZE 60,08 OF oPn12RE PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		//QUADRO DE RELATÓRIO
		@ 004,008 SAY OemToAnsi("OUTRAS OPÇÕES")	FONT oFont003 SIZE 200,15 OF oPn12RD PIXEL
		@ 014,008 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13 FONT oDlg:oFont ACTION xRelBr12() OF oPn12RD PIXEL //"Exportar Excel"

		//--------------------------------------------------------------------------
		//ABA 13 - ALMONDEGAS (INICIO)
		//--------------------------------------------------------------------------
		oFWLr13	:= FWLayer():New()
		oFWLr13:Init( oFolder030:aDialogs[12], .F., .T.)

		//Define os Paineis
		//TITULO
		oFWLr13:AddLine ('TIT_DET', 25, .F.)
		oFWLr13:AddCollumn('TIT_ESQ',50,.F.,'TIT_DET')
		oFWLr13:AddCollumn('TIT_DIR',50,.F.,'TIT_DET')

		oFWLr13:AddLine ('DETALHE', 35, .F.)
		oFWLr13:AddCollumn('DET_ESQ',50,.F.,'DETALHE')
		oFWLr13:AddCollumn('DET_DIR',50,.F.,'DETALHE')

		oFWLr13:AddLine ('TIT_RES', 10, .F.)
		oFWLr13:AddCollumn('TRES_ESQ',50,.F.,'TIT_RES')
		oFWLr13:AddCollumn('TRES_DIR',50,.F.,'TIT_RES')

		oFWLr13:AddLine ('RESUMO', 30, .F.)
		oFWLr13:AddCollumn('RES_ESQ',50,.F.,'RESUMO')
		oFWLr13:AddCollumn('RES_DIR',50,.F.,'RESUMO')

		oPn13TE	:= oFWLr13:GetColPanel('TIT_ESQ','TIT_DET')
		oPn13TD	:= oFWLr13:GetColPanel('TIT_DIR','TIT_DET')
		oPn13DE	:= oFWLr13:GetColPanel('DET_ESQ','DETALHE')
		oPn13DD	:= oFWLr13:GetColPanel('DET_DIR','DETALHE')
		oPn13CE	:= oFWLr13:GetColPanel('TRES_ESQ','TIT_RES')
		oPn13CD	:= oFWLr13:GetColPanel('TRES_DIR','TIT_RES')
		oPn13RE	:= oFWLr13:GetColPanel('RES_ESQ','RESUMO')
		oPn13RD	:= oFWLr13:GetColPanel('RES_DIR','RESUMO')

		oPn13TE:FreeChildren()
		oPn13TD:FreeChildren()
		oPn13DE:FreeChildren()
		oPn13DD:FreeChildren()
		oPn13CE:FreeChildren()
		oPn13CD:FreeChildren()
		oPn13RE:FreeChildren()
		oPn13RD:FreeChildren()

		//BROWSER Valores à Crédito
		@ 001,008 SAY OemToAnsi("Crédito ICMS ST")	FONT oFont003 SIZE 200,15 OF oPn13TE PIXEL
		@ 011,015 SAY OemToAnsi("Vl.Total")			FONT oFont001 SIZE 200,15 OF oPn13TE PIXEL
		@ 024,015 SAY OemToAnsi("Vl.Total ICMS")	FONT oFont001 SIZE 200,15 OF oPn13TE PIXEL
		@ 037,015 SAY OemToAnsi("Vl.Total ICMS ST")	FONT oFont001 SIZE 200,15 OF oPn13TE PIXEL

		@ 011,060 MSGET nVCTot13	SIZE 60,08 OF oPn13TE PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 024,060 MSGET nVCICM13	SIZE 60,08 OF oPn13TE PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 037,060 MSGET nVCIST13	SIZE 60,08 OF oPn13TE PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		oBrw13Cr:= TcBrowse():New(010,050,150,150,,,,oPn13DE,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
		oBrw13Cr:AddColumn( TcColumn():New( "CFOP"			,{ || aBrw13Cr[oBrw13Cr:nAt,01]}	, "@!"						,,,"CENTER"	,040,.f.,.f.,,,,.f.,) )
		oBrw13Cr:AddColumn( TcColumn():New( "Quant"			,{ || aBrw13Cr[oBrw13Cr:nAt,02]}	, "@E 999,999,999.9999"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw13Cr:AddColumn( TcColumn():New( "Vl. Total"	,{ || aBrw13Cr[oBrw13Cr:nAt,03]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw13Cr:AddColumn( TcColumn():New( "ICMS"			,{ || aBrw13Cr[oBrw13Cr:nAt,04]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw13Cr:AddColumn( TcColumn():New( "ICMS ST" 	,{ || aBrw13Cr[oBrw13Cr:nAt,05]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw13Cr:AddColumn( TcColumn():New( "Vl. Cont."	, {|| aBrw13Cr[oBrw13Cr:nAt,06]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

		oBrw13Cr:SetArray(aBrw13Cr)
		oBrw13Cr:Align		:=	CONTROL_ALIGN_ALLCLIENT
		oBrw13Cr:bLine := {||{ aBrw13Cr[oBrw13Cr:nAt]}}
		//BROWSER Valores à Débito
		@ 001,008 SAY OemToAnsi("Débito ICMS ST")	FONT oFont003 SIZE 200,15 OF oPn13TD PIXEL
		@ 011,015 SAY OemToAnsi("Vl.Total")			FONT oFont001 SIZE 200,15 OF oPn13TD PIXEL
		@ 024,015 SAY OemToAnsi("Vl.Total ICMS")	FONT oFont001 SIZE 200,15 OF oPn13TD PIXEL
		@ 037,015 SAY OemToAnsi("Vl.Total ICMS ST")	FONT oFont001 SIZE 200,15 OF oPn13TD PIXEL

		@ 011,060 MSGET nVDTot13	SIZE 60,08 OF oPn13TD PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 024,060 MSGET nVDICM13	SIZE 60,08 OF oPn13TD PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 037,060 MSGET nVDIST13	SIZE 60,08 OF oPn13TD PIXEL When .F. PICTURE '@E 9,999,999,999.99'


		oBrw13Db:= TcBrowse():New(010,050,150,150,,,,oPn13DD,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
		oBrw13Db:AddColumn( TcColumn():New( "CFOP"			, {|| aBrw13Db[oBrw13Db:nAt,01]}	, "@!"						,,,"CENTER"	,040,.f.,.f.,,,,.f.,) )
		oBrw13Db:AddColumn( TcColumn():New( "Quant"			, {|| aBrw13Db[oBrw13Db:nAt,02]}	, "@E 999,999,999.9999"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw13Db:AddColumn( TcColumn():New( "Vl. Total"	, {|| aBrw13Db[oBrw13Db:nAt,03]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw13Db:AddColumn( TcColumn():New( "ICMS"			, {|| aBrw13Db[oBrw13Db:nAt,04]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw13Db:AddColumn( TcColumn():New( "ICMS ST" 	, {|| aBrw13Db[oBrw13Db:nAt,05]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw13Db:AddColumn( TcColumn():New( "Vl. Cont."	, {|| aBrw13Db[oBrw13Db:nAt,06]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

		oBrw13Db:SetArray(aBrw13Db)
		oBrw13Db:Align		:=	CONTROL_ALIGN_ALLCLIENT
		oBrw13Db:bLine := {||{ aBrw13Db[oBrw13Db:nAt] } } 
		
		//QUADRO RESUMO
		@ 004,008 SAY OemToAnsi("RESUMO ICMS ST NO PERÍODO - ALMONDEGAS")	FONT oFont003 SIZE 200,15 OF oPn13CE PIXEL

		//Saldo Anterior
		//@ 004,008 SAY OemToAnsi("Saldo Credor do Mês Anterior")	FONT oFont001 SIZE 200,15 OF oPn13RE PIXEL
		//@ 004,150 MSGET nCMAntST SIZE 60,08 OF oPn13RE PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		//Total de Créditos
		@ 016,008 SAY OemToAnsi("Total de Créditos no Mês (ICMS ST)")	FONT oFont001 SIZE 200,15 OF oPn13RE PIXEL
		//@ 016,150 MSGET nVCICM13 SIZE 60,08 OF oPn13RE PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 016,150 MSGET nVCIST13 SIZE 60,08 OF oPn13RE PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		//Total de Débitos
		@ 028,008 SAY OemToAnsi("Total de Débitos no Mês (ICMS ST)")	FONT oFont001 SIZE 200,15 OF oPn13RE PIXEL
		//@ 028,150 MSGET nVDICM13 SIZE 60,08 OF oPn13RE PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 028,150 MSGET nVDIST13 SIZE 60,08 OF oPn13RE PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		@ 040,004 TO 058,215 OF oPn13RE PIXEL

		IF nVCIST13 >= nVDIST13
			@ 044,008 SAY OemToAnsi("Saldo Credor no Período (ICMS ST)")	FONT oFont002 SIZE 200,15 OF oPn13RE PIXEL
		ELSE
			@ 044,008 SAY OemToAnsi("Valor à Pagar no Período (ICMS ST)")	FONT oFont002 SIZE 200,15 OF oPn13RE PIXEL
		ENDIF
		@ 044,150 MSGET nSICST13 SIZE 60,08 OF oPn13RE PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		//QUADRO DE RELATÓRIO
		@ 004,008 SAY OemToAnsi("OUTRAS OPÇÕES")	FONT oFont003 SIZE 200,15 OF oPn13CD PIXEL
		@ 004,008 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13 FONT oDlg:oFont ACTION xRelBr13() OF oPn13RD PIXEL //"Exportar Excel"
	ENDIF

	IF nOpMdl	== 1 .or. nOpMdl	== 2 .or. nOpMdl	== 4
		//--------------------------------------------------------------------------
		//ABA 14 - GRAXARIA
		//--------------------------------------------------------------------------
		IF nOpMdl	== 1
			oFld14	:=TFolder():New(1,1,aFld14,{},oFolder030:aDialogs[13],,,, .T., .F.,aPosObj[2,4]-5,aPosObj[2,3]-46,)
		ELSEIF nOpMdl	== 2
			oFld14	:=TFolder():New(1,1,aFld14,{},oFolder030:aDialogs[07],,,, .T., .F.,aPosObj[2,4]-5,aPosObj[2,3]-46,)
		ELSEIF nOpMdl	== 4
			oFld14	:=TFolder():New(1,1,aFld14,{},oFolder030:aDialogs[08],,,, .T., .F.,aPosObj[2,4]-5,aPosObj[2,3]-46,)
		ENDIF
		oFld14:aDialogs[1]:oFont :=oDlg:oFont //Resumo
		oFld14:aDialogs[2]:oFont :=oDlg:oFont //Análise das Vendas
		oFld14:aDialogs[3]:oFont :=oDlg:oFont //Análise Transferências
		oFld14:aDialogs[4]:oFont :=oDlg:oFont //Análise Devoluções

		////////////////////////////////////////////////////////////
		oFLr14p1:= FWLayer():New()
		oFLr14p1:Init( oFld14:aDialogs[1], .F., .T.) //RESUMO

		//Define os Paineis
		//TITULO
		oFLr14p1:AddLine ('TIT_DET', 6, .F.)
		oFLr14p1:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

		oFLr14p1:AddLine ('DETALHE1', 78, .F.)
		oFLr14p1:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

		oFLr14p1:AddLine ('RESUMO', 16, .F.)
		oFLr14p1:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

		oP14TE01	:= oFLr14p1:GetColPanel('TIT_ESQ','TIT_DET')
		oP14D101	:= oFLr14p1:GetColPanel('DET_ESQ1','DETALHE1')
		oP14RE01	:= oFLr14p1:GetColPanel('RES_ESQ','RESUMO')

		oP14TE01:FreeChildren()
		oP14D101:FreeChildren()
		oP14RE01:FreeChildren()

		//Cabecalho
		@ 001,008 SAY OemToAnsi("Resumo Apuração Graxaria")		FONT oFont003 SIZE 300,15 OF oP14TE01 PIXEL

		@ 001,140 SAY OemToAnsi("Quantidade")		FONT oFont002 SIZE 060,15 OF oP14D101 PIXEL
		@ 001,210 SAY OemToAnsi("Valor Total")	FONT oFont002 SIZE 060,15 OF oP14D101 PIXEL
		@ 001,280 SAY OemToAnsi("Valor ICMS")		FONT oFont002 SIZE 060,15 OF oP14D101 PIXEL

		@ 011,015 SAY OemToAnsi("Saídas")		FONT oFont001 SIZE 200,15 OF oP14D101 PIXEL
		@ 010,140 MSGET nA14T01	SIZE 60,08 OF oP14D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 010,210 MSGET nA14T02	SIZE 60,08 OF oP14D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 010,280 MSGET nA14T03	SIZE 60,08 OF oP14D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		@ 026,015 SAY OemToAnsi("Transferências")	FONT oFont001 SIZE 200,15 OF oP14D101 PIXEL
		@ 025,140 MSGET nA14T11	SIZE 60,08 OF oP14D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 025,210 MSGET nA14T12	SIZE 60,08 OF oP14D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 025,280 MSGET nA14T13	SIZE 60,08 OF oP14D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		@ 041,015 SAY OemToAnsi("Devoluções")		FONT oFont001 SIZE 200,15 OF oP14D101 PIXEL
		@ 040,140 MSGET nA14T21	SIZE 60,08 OF oP14D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 040,210 MSGET nA14T22	SIZE 60,08 OF oP14D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 040,280 MSGET nA14T23	SIZE 60,08 OF oP14D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		@ 056,015 SAY OemToAnsi("Compras")		FONT oFont001 SIZE 200,15 OF oP14D101 PIXEL
		@ 055,140 MSGET nA14T31	SIZE 60,08 OF oP14D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 055,210 MSGET nA14T32	SIZE 60,08 OF oP14D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 055,280 MSGET nA14T33	SIZE 60,08 OF oP14D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		//@ 081,015 SAY OemToAnsi("TOTAL")			FONT oFont002 SIZE 200,15 OF oP14D101 PIXEL
		//@ 080,140 MSGET nA16T01	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		//@ 080,210 MSGET nA16T02	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		//@ 077,011 TO 093,274 OF oP14D101 PIXEL

		//QUADRO DE RELATÓRIO
		@ 001,558 SAY OemToAnsi("OUTRAS OPÇÕES")		SIZE 200,15	FONT oFont003 OF oP14RE01 PIXEL
		@ 010,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION xRelBr14() OF oP14RE01 PIXEL //"Exportar Excel"

		////////////////////////////////////////////////////////////
		oFLr14p2:= FWLayer():New()
		oFLr14p2:Init( oFld14:aDialogs[2], .F., .T.) //Detalhe

		//Define os Paineis
		//TITULO
		oFLr14p2:AddLine ('TIT_DET', 6, .F.)
		oFLr14p2:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

		oFLr14p2:AddLine ('DETALHE1', 78, .F.)
		oFLr14p2:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

		oFLr14p2:AddLine ('RESUMO', 16, .F.)
		oFLr14p2:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

		oP14TE02	:= oFLr14p2:GetColPanel('TIT_ESQ','TIT_DET')
		oP14D102	:= oFLr14p2:GetColPanel('DET_ESQ1','DETALHE1')
		oP14RE02	:= oFLr14p2:GetColPanel('RES_ESQ','RESUMO')

		oP14TE02:FreeChildren()
		oP14D102:FreeChildren()
		oP14RE02:FreeChildren()

			//Cabecalho
			@ 001,008 SAY OemToAnsi("Análise das Transferências")		FONT oFont003 SIZE 300,15 OF oP14TE02 PIXEL

			oBrw14RV:= TcBrowse():New(004,004,150,150,,,,oP14D102,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
			oBrw14RV:AddColumn( TcColumn():New( "Filial"		, {|| aBrw14RV[oBrw14RV:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw14RV:AddColumn( TcColumn():New( "CFOP"			, {|| aBrw14RV[oBrw14RV:nAt,03]}	, "@!"						,,,"LEFT"	,025,.f.,.f.,,,,.f.,) )
			oBrw14RV:AddColumn( TcColumn():New( "Produto"		, {|| aBrw14RV[oBrw14RV:nAt,04]}	, "@!"						,,,"LEFT"	,080,.f.,.f.,,,,.f.,) )
			oBrw14RV:AddColumn( TcColumn():New( "Quant."		, {|| aBrw14RV[oBrw14RV:nAt,05]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw14RV:AddColumn( TcColumn():New( "Vl.Cont."	, {|| aBrw14RV[oBrw14RV:nAt,06]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw14RV:AddColumn( TcColumn():New( "Vl.ICMS"		, {|| aBrw14RV[oBrw14RV:nAt,07]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		
			oBrw14RV:SetArray(aBrw14RV)
			oBrw14RV:Align		:=	CONTROL_ALIGN_ALLCLIENT
			oBrw14RV:bLine := {||{aBrw14RV[oBrw14RV:nAt,02] ,;
														aBrw14RV[oBrw14RV:nAt,03] ,;
														aBrw14RV[oBrw14RV:nAt,04] ,;
														aBrw14RV[oBrw14RV:nAt,05] ,;
														aBrw14RV[oBrw14RV:nAt,06] ,;
														aBrw14RV[oBrw14RV:nAt,07] } }

		////////////////////////////////////////////////////////////
		oFLr14p3:= FWLayer():New()
		oFLr14p3:Init( oFld14:aDialogs[3], .F., .T.) //Detalhe

		//Define os Paineis
		//TITULO
		oFLr14p3:AddLine ('TIT_DET', 6, .F.)
		oFLr14p3:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

		oFLr14p3:AddLine ('DETALHE1', 78, .F.)
		oFLr14p3:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

		oFLr14p3:AddLine ('RESUMO', 16, .F.)
		oFLr14p3:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

		oP14TE03	:= oFLr14p3:GetColPanel('TIT_ESQ','TIT_DET')
		oP14D103	:= oFLr14p3:GetColPanel('DET_ESQ1','DETALHE1')
		oP14RE03	:= oFLr14p3:GetColPanel('RES_ESQ','RESUMO')

		oP14TE03:FreeChildren()
		oP14D103:FreeChildren()
		oP14RE03:FreeChildren()

		//Cabecalho
		@ 001,008 SAY OemToAnsi("Análise das Transferências")		FONT oFont003 SIZE 300,15 OF oP14TE03 PIXEL

		oBrw14RT:= TcBrowse():New(004,004,150,150,,,,oP14D103,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
		oBrw14RT:AddColumn( TcColumn():New( "Filial"		, {|| aBrw14RT[oBrw14RT:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw14RT:AddColumn( TcColumn():New( "CFOP"			, {|| aBrw14RT[oBrw14RT:nAt,03]}	, "@!"						,,,"LEFT"	,025,.f.,.f.,,,,.f.,) )
		oBrw14RT:AddColumn( TcColumn():New( "Produto"		, {|| aBrw14RT[oBrw14RT:nAt,04]}	, "@!"						,,,"LEFT"	,080,.f.,.f.,,,,.f.,) )
		oBrw14RT:AddColumn( TcColumn():New( "Quant."		, {|| aBrw14RT[oBrw14RT:nAt,05]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw14RT:AddColumn( TcColumn():New( "Vl.Cont."	, {|| aBrw14RT[oBrw14RT:nAt,06]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw14RT:AddColumn( TcColumn():New( "Vl.ICMS"		, {|| aBrw14RT[oBrw14RT:nAt,07]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

		oBrw14RT:SetArray(aBrw14RT)
		oBrw14RT:Align		:=	CONTROL_ALIGN_ALLCLIENT
		oBrw14RT:bLine := {||{aBrw14RT[oBrw14RT:nAt,02] ,;
													aBrw14RT[oBrw14RT:nAt,03] ,;
													aBrw14RT[oBrw14RT:nAt,04] ,;
													aBrw14RT[oBrw14RT:nAt,05] ,;
													aBrw14RT[oBrw14RT:nAt,06] ,;
													aBrw14RT[oBrw14RT:nAt,07] } }

		////////////////////////////////////////////////////////////
		oFLr14p4:= FWLayer():New()
		oFLr14p4:Init( oFld14:aDialogs[4], .F., .T.) //Detalhe

		//Define os Paineis
		//TITULO
		oFLr14p4:AddLine ('TIT_DET', 6, .F.)
		oFLr14p4:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

		oFLr14p4:AddLine ('DETALHE1', 78, .F.)
		oFLr14p4:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

		oFLr14p4:AddLine ('RESUMO', 16, .F.)
		oFLr14p4:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

		oP14TE04	:= oFLr14p4:GetColPanel('TIT_ESQ','TIT_DET')
		oP14D104	:= oFLr14p4:GetColPanel('DET_ESQ1','DETALHE1')
		oP14RE04	:= oFLr14p4:GetColPanel('RES_ESQ','RESUMO')

		oP14TE04:FreeChildren()
		oP14D104:FreeChildren()
		oP14RE04:FreeChildren()

		//Cabecalho
		@ 001,008 SAY OemToAnsi("Análise das Transferências")		FONT oFont003 SIZE 300,15 OF oP14TE04 PIXEL

		oBrw14RD:= TcBrowse():New(004,004,150,150,,,,oP14D104,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
		oBrw14RD:AddColumn( TcColumn():New( "Filial"		, {|| aBrw14RD[oBrw14RD:nAt,02]}	, "@!"								,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw14RD:AddColumn( TcColumn():New( "CFOP"			, {|| aBrw14RD[oBrw14RD:nAt,03]}	, "@!"								,,,"LEFT"	,025,.f.,.f.,,,,.f.,) )
		oBrw14RD:AddColumn( TcColumn():New( "Produto"		, {|| aBrw14RD[oBrw14RD:nAt,04]}	, "@!"								,,,"LEFT"	,080,.f.,.f.,,,,.f.,) )
		oBrw14RD:AddColumn( TcColumn():New( "Quant."		, {|| aBrw14RD[oBrw14RD:nAt,05]}	, "@E 999,999,999.99"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw14RD:AddColumn( TcColumn():New( "Vl.Cont."	, {|| aBrw14RD[oBrw14RD:nAt,06]}	, "@E 999,999,999.99"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw14RD:AddColumn( TcColumn():New( "Vl.ICMS"		, {|| aBrw14RD[oBrw14RD:nAt,07]}	, "@E 999,999,999.99"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

		oBrw14RD:SetArray(aBrw14RD)
		oBrw14RD:Align		:=	CONTROL_ALIGN_ALLCLIENT
		oBrw14RD:bLine := {||{aBrw14RD[oBrw14RD:nAt,02] ,;
													aBrw14RD[oBrw14RD:nAt,03] ,;
													aBrw14RD[oBrw14RD:nAt,04] ,;
													aBrw14RD[oBrw14RD:nAt,05] ,;
													aBrw14RD[oBrw14RD:nAt,06] ,;
													aBrw14RD[oBrw14RD:nAt,07] } }

		//--------------------------------------------------------------------------
		//ABA 15 - COMPRA LENHA
		//--------------------------------------------------------------------------
		IF nOpMdl	== 1
			oFld15	:=TFolder():New(1,1,aFld15,{},oFolder030:aDialogs[14],,,, .T., .F.,aPosObj[2,4]-5,aPosObj[2,3]-46,)
		ELSEIF nOpMdl	== 2
			oFld15	:=TFolder():New(1,1,aFld15,{},oFolder030:aDialogs[08],,,, .T., .F.,aPosObj[2,4]-5,aPosObj[2,3]-46,)
		ELSEIF nOpMdl	== 4
			oFld15	:=TFolder():New(1,1,aFld15,{},oFolder030:aDialogs[09],,,, .T., .F.,aPosObj[2,4]-5,aPosObj[2,3]-46,)
		ENDIF
		oFld15:aDialogs[1]:oFont :=oDlg:oFont //Resumo
		oFld15:aDialogs[2]:oFont :=oDlg:oFont //Detalhe
		//SoFld15:aDialogs[3]:oFont :=oDlg:oFont //Parâmetros

		////////////////////////////////////////////////////////////
		oFLr15p1:= FWLayer():New()
		oFLr15p1:Init( oFld15:aDialogs[1], .F., .T.) //RESUMO

		//Define os Paineis
		//TITULO
		oFLr15p1:AddLine ('TIT_DET', 6, .F.)
		oFLr15p1:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

		oFLr15p1:AddLine ('DETALHE1', 58, .F.)
		oFLr15p1:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

		oFLr15p1:AddLine ('RESUMO', 36, .F.)
		oFLr15p1:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

		oP15TE01	:= oFLr15p1:GetColPanel('TIT_ESQ','TIT_DET')
		oP15D101	:= oFLr15p1:GetColPanel('DET_ESQ1','DETALHE1')
		oP15RE01	:= oFLr15p1:GetColPanel('RES_ESQ','RESUMO')

		oP15TE01:FreeChildren()
		oP15D101:FreeChildren()
		oP15RE01:FreeChildren()

		oBrw15Rs:= TcBrowse():New(004,004,150,150,,,,oP15D101,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)	
		oBrw15Rs:AddColumn( TcColumn():New( "Filial"					, {|| aBrw15Rs[oBrw15Rs:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw15Rs:AddColumn( TcColumn():New( "CFOP"						, {|| aBrw15Rs[oBrw15Rs:nAt,03]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw15Rs:AddColumn( TcColumn():New( "Produto"					, {|| aBrw15Rs[oBrw15Rs:nAt,04]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw15Rs:AddColumn( TcColumn():New( "Quant."					, {|| aBrw15Rs[oBrw15Rs:nAt,05]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw15Rs:AddColumn( TcColumn():New( "Vl.Cont."				, {|| aBrw15Rs[oBrw15Rs:nAt,06]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw15Rs:AddColumn( TcColumn():New( "Vl.ICMS"					, {|| aBrw15Rs[oBrw15Rs:nAt,07]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw15Rs:AddColumn( TcColumn():New( "Média Prc. Unit.", {|| aBrw15Rs[oBrw15Rs:nAt,08]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

		oBrw15Rs:SetArray(aBrw15Rs)
		oBrw15Rs:Align		:=	CONTROL_ALIGN_ALLCLIENT
		oBrw15Rs:bLine := {||{aBrw15Rs[oBrw15Rs:nAt,02],;
													aBrw15Rs[oBrw15Rs:nAt,03],;
													aBrw15Rs[oBrw15Rs:nAt,04],;
													aBrw15Rs[oBrw15Rs:nAt,05],;
													aBrw15Rs[oBrw15Rs:nAt,06],;
													aBrw15Rs[oBrw15Rs:nAt,07],;
													aBrw15Rs[oBrw15Rs:nAt,08] } }

		//Cabecalho
		@ 001,008 SAY OemToAnsi("Resumo Apuração Compra de Lenha")		FONT oFont003 SIZE 300,15 OF oP15TE01 PIXEL
		
		@ 001,070 SAY OemToAnsi("Quantidade")		FONT oFont002 SIZE 060,15 OF oP15RE01 PIXEL
		@ 001,140 SAY OemToAnsi("Valor Total")	FONT oFont002 SIZE 060,15 OF oP15RE01 PIXEL
		@ 001,210 SAY OemToAnsi("Valor ICMS")		FONT oFont002 SIZE 060,15 OF oP15RE01 PIXEL
		
		@ 011,015 SAY OemToAnsi("Devolução")		FONT oFont001 SIZE 200,15 OF oP15RE01 PIXEL
		@ 010,070 MSGET nA15T01	SIZE 60,08 OF oP15RE01 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 010,140 MSGET nA15T02	SIZE 60,08 OF oP15RE01 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 010,210 MSGET nA15T03	SIZE 60,08 OF oP15RE01 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		@ 025,015 SAY OemToAnsi("Compras")		FONT oFont001 SIZE 200,15 OF oP15RE01 PIXEL
		@ 024,070 MSGET nA15T04	SIZE 60,08 OF oP15RE01 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 024,140 MSGET nA15T05	SIZE 60,08 OF oP15RE01 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 024,210 MSGET nA15T06	SIZE 60,08 OF oP15RE01 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		@ 001,015 SAY OemToAnsi("TOTAL")			FONT oFont002 SIZE 200,15 OF oP15RE01 PIXEL
		//@ 080,140 MSGET nA16T01	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		//@ 080,210 MSGET nA16T02	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		@ 077,011 TO 093,274 OF oP15D101 PIXEL

		//QUADRO DE RELATÓRIO
		@ 001,558 SAY OemToAnsi("OUTRAS OPÇÕES")		SIZE 200,15	FONT oFont003 OF oP15RE01 PIXEL
		@ 010,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION xRelBr15() OF oP15RE01 PIXEL //"Exportar Excel"

		////////////////////////////////////////////////////////////
		oFLr15p2:= FWLayer():New()
		oFLr15p2:Init( oFld15:aDialogs[2], .F., .T.) //Detalhe

		//Define os Paineis
		//TITULO
		oFLr15p2:AddLine ('TIT_DET', 6, .F.)
		oFLr15p2:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

		oFLr15p2:AddLine ('DETALHE1', 78, .F.)
		oFLr15p2:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

		oFLr15p2:AddLine ('RESUMO', 16, .F.)
		oFLr15p2:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

		oP15TE02	:= oFLr15p2:GetColPanel('TIT_ESQ','TIT_DET')
		oP15D102	:= oFLr15p2:GetColPanel('DET_ESQ1','DETALHE1')
		oP15RE02	:= oFLr15p2:GetColPanel('RES_ESQ','RESUMO')

		oP15TE02:FreeChildren()
		oP15D102:FreeChildren()
		oP15RE02:FreeChildren()

		//Cabecalho
		@ 001,008 SAY OemToAnsi("Detalhamento das operações para Apuração Compra de Lenha")		FONT oFont003 SIZE 300,15 OF oP15TE02 PIXEL

		oBrw15Dt:= TcBrowse():New(004,004,150,150,,,,oP15D102,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)


		oBrw15Dt:AddColumn( TcColumn():New( "Filial"			, {|| aBrw15Dt[oBrw15Dt:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw15Dt:AddColumn( TcColumn():New( "Dt.Entrada"	, {|| aBrw15Dt[oBrw15Dt:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw15Dt:AddColumn( TcColumn():New( "Série"				, {|| aBrw15Dt[oBrw15Dt:nAt,03]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw15Dt:AddColumn( TcColumn():New( "NF"					, {|| aBrw15Dt[oBrw15Dt:nAt,04]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw15Dt:AddColumn( TcColumn():New( "Item"				, {|| aBrw15Dt[oBrw15Dt:nAt,05]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw15Dt:AddColumn( TcColumn():New( "Cod.Forn."		, {|| aBrw15Dt[oBrw15Dt:nAt,06]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw15Dt:AddColumn( TcColumn():New( "Loja.Forn."	, {|| aBrw15Dt[oBrw15Dt:nAt,07]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw15Dt:AddColumn( TcColumn():New( "Fornecedor"	, {|| aBrw15Dt[oBrw15Dt:nAt,08]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw15Dt:AddColumn( TcColumn():New( "CNPJ"				, {|| aBrw15Dt[oBrw15Dt:nAt,09]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw15Dt:AddColumn( TcColumn():New( "Opt.Simples"	, {|| aBrw15Dt[oBrw15Dt:nAt,10]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw15Dt:AddColumn( TcColumn():New( "Cod.Prod."		, {|| aBrw15Dt[oBrw15Dt:nAt,11]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw15Dt:AddColumn( TcColumn():New( "Produto"			, {|| aBrw15Dt[oBrw15Dt:nAt,12]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw15Dt:AddColumn( TcColumn():New( "Quant."			, {|| aBrw15Dt[oBrw15Dt:nAt,13]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw15Dt:AddColumn( TcColumn():New( "Prc.Unit"		, {|| aBrw15Dt[oBrw15Dt:nAt,14]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw15Dt:AddColumn( TcColumn():New( "Total"				, {|| aBrw15Dt[oBrw15Dt:nAt,15]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw15Dt:AddColumn( TcColumn():New( "Vl.Cont."		, {|| aBrw15Dt[oBrw15Dt:nAt,16]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw15Dt:AddColumn( TcColumn():New( "Base ICMS"		, {|| aBrw15Dt[oBrw15Dt:nAt,17]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw15Dt:AddColumn( TcColumn():New( "Aliq.ICMS"		, {|| aBrw15Dt[oBrw15Dt:nAt,18]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw15Dt:AddColumn( TcColumn():New( "Vl.ICMS"			, {|| aBrw15Dt[oBrw15Dt:nAt,19]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw15Dt:AddColumn( TcColumn():New( "Vl.ICMS Ret.", {|| aBrw15Dt[oBrw15Dt:nAt,20]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw15Dt:AddColumn( TcColumn():New( "Vl.ICMS Out.", {|| aBrw15Dt[oBrw15Dt:nAt,21]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw15Dt:AddColumn( TcColumn():New( "Desconto"		, {|| aBrw15Dt[oBrw15Dt:nAt,22]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw15Dt:AddColumn( TcColumn():New( "Seguro"			, {|| aBrw15Dt[oBrw15Dt:nAt,23]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw15Dt:AddColumn( TcColumn():New( "Despesa"			, {|| aBrw15Dt[oBrw15Dt:nAt,24]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw15Dt:AddColumn( TcColumn():New( "Frete"				, {|| aBrw15Dt[oBrw15Dt:nAt,25]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw15Dt:AddColumn( TcColumn():New( "Dt.Canc."		, {|| aBrw15Dt[oBrw15Dt:nAt,26]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw15Dt:AddColumn( TcColumn():New( "Observações"	, {|| aBrw15Dt[oBrw15Dt:nAt,27]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw15Dt:AddColumn( TcColumn():New( "TES"					, {|| aBrw15Dt[oBrw15Dt:nAt,28]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw15Dt:AddColumn( TcColumn():New( "CFOP"				, {|| aBrw15Dt[oBrw15Dt:nAt,29]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw15Dt:AddColumn( TcColumn():New( "Tipo"				, {|| aBrw15Dt[oBrw15Dt:nAt,30]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw15Dt:AddColumn( TcColumn():New( "Espécie"			, {|| aBrw15Dt[oBrw15Dt:nAt,31]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw15Dt:AddColumn( TcColumn():New( "Centro Custo", {|| aBrw15Dt[oBrw15Dt:nAt,32]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

		oBrw15Dt:SetArray(aBrw15Dt)
		oBrw15Dt:Align		:=	CONTROL_ALIGN_ALLCLIENT
		oBrw15Dt:bLine := {||{aBrw15Dt[oBrw15Dt:nAt] } }
	ENDIF

	IF nOpMdl	== 1
		//--------------------------------------------------------------------------
		//ABA 16 - COMPRA AVES
		//--------------------------------------------------------------------------
		oFld16	:=TFolder():New(1,1,aFld16,{},oFolder030:aDialogs[15],,,, .T., .F.,aPosObj[2,4]-5,aPosObj[2,3]-46,)
		oFld16:aDialogs[1]:oFont :=oDlg:oFont //Resumo
		oFld16:aDialogs[2]:oFont :=oDlg:oFont //Detalhe
		//oFld16:aDialogs[3]:oFont :=oDlg:oFont //Parâmetros

		////////////////////////////////////////////////////////////
		oFLr16p1:= FWLayer():New()
		oFLr16p1:Init( oFld16:aDialogs[1], .F., .T.) //RESUMO

		//Define os Paineis
		//TITULO
		oFLr16p1:AddLine ('TIT_DET', 6, .F.)
		oFLr16p1:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

		oFLr16p1:AddLine ('DETALHE1', 78, .F.)
		oFLr16p1:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

		oFLr16p1:AddLine ('RESUMO', 16, .F.)
		oFLr16p1:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

		oP16TE01	:= oFLr16p1:GetColPanel('TIT_ESQ','TIT_DET')
		oP16D101	:= oFLr16p1:GetColPanel('DET_ESQ1','DETALHE1')
		oP16RE01	:= oFLr16p1:GetColPanel('RES_ESQ','RESUMO')

		oP16TE01:FreeChildren()
		oP16D101:FreeChildren()
		oP16RE01:FreeChildren()

		//Cabecalho
		@ 001,008 SAY OemToAnsi("Resumo Apuração Compra de Aves")		FONT oFont003 SIZE 300,15 OF oP16TE01 PIXEL

			//Cabecalho
			//@ 001,008 SAY OemToAnsi("Detalhamento das operações para Apuração Compra de Aves")		FONT oFont003 SIZE 300,15 OF oP16TE01 PIXEL

			oBrw16Rs:= TcBrowse():New(004,004,150,150,,,,oP16D101,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)	
			oBrw16Rs:AddColumn( TcColumn():New( "Filial"					, {|| aBrw16Rs[oBrw16Rs:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw16Rs:AddColumn( TcColumn():New( "CFOP"						, {|| aBrw16Rs[oBrw16Rs:nAt,03]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw16Rs:AddColumn( TcColumn():New( "Produto"					, {|| aBrw16Rs[oBrw16Rs:nAt,04]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw16Rs:AddColumn( TcColumn():New( "Quant."					, {|| aBrw16Rs[oBrw16Rs:nAt,05]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw16Rs:AddColumn( TcColumn():New( "Vl.Cont."				, {|| aBrw16Rs[oBrw16Rs:nAt,06]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw16Rs:AddColumn( TcColumn():New( "Vl.ICMS"					, {|| aBrw16Rs[oBrw16Rs:nAt,07]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw16Rs:AddColumn( TcColumn():New( "Média Prc. Unit.", {|| aBrw16Rs[oBrw16Rs:nAt,08]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		
			oBrw16Rs:SetArray(aBrw16Rs)
			oBrw16Rs:Align		:=	CONTROL_ALIGN_ALLCLIENT
			oBrw16Rs:bLine := {||{aBrw16Rs[oBrw16Rs:nAt,02],;
														aBrw16Rs[oBrw16Rs:nAt,03],;
														aBrw16Rs[oBrw16Rs:nAt,04],;
														aBrw16Rs[oBrw16Rs:nAt,05],;
														aBrw16Rs[oBrw16Rs:nAt,06],;
														aBrw16Rs[oBrw16Rs:nAt,07],;
														aBrw16Rs[oBrw16Rs:nAt,08] } }
		
		//@ 081,015 SAY OemToAnsi("TOTAL")			FONT oFont002 SIZE 200,15 OF oP16D101 PIXEL
		//@ 080,140 MSGET nA16T01	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		//@ 080,210 MSGET nA16T02	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		//@ 077,011 TO 093,274 OF oP16D101 PIXEL

		//QUADRO DE RELATÓRIO
		@ 001,558 SAY OemToAnsi("OUTRAS OPÇÕES")		SIZE 200,15	FONT oFont003 OF oP16RE01 PIXEL
		@ 010,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION xRelBr16() OF oP16RE01 PIXEL //"Exportar Excel"

		////////////////////////////////////////////////////////////
		oFLr16p2:= FWLayer():New()
		oFLr16p2:Init( oFld16:aDialogs[2], .F., .T.) //Detalhe

		//Define os Paineis
		//TITULO
		oFLr16p2:AddLine ('TIT_DET', 6, .F.)
		oFLr16p2:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

		oFLr16p2:AddLine ('DETALHE1', 78, .F.)
		oFLr16p2:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

		oFLr16p2:AddLine ('RESUMO', 16, .F.)
		oFLr16p2:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

		oP16TE02	:= oFLr16p2:GetColPanel('TIT_ESQ','TIT_DET')
		oP16D102	:= oFLr16p2:GetColPanel('DET_ESQ1','DETALHE1')
		oP16RE02	:= oFLr16p2:GetColPanel('RES_ESQ','RESUMO')

		oP16TE02:FreeChildren()
		oP16D102:FreeChildren()
		oP16RE02:FreeChildren()

		//Cabecalho
		@ 001,008 SAY OemToAnsi("Detalhamento das operações para Apuração Compra de Aves")		FONT oFont003 SIZE 300,15 OF oP16TE02 PIXEL

		oBrw16Dt:= TcBrowse():New(004,004,150,150,,,,oP16D102,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)


		oBrw16Dt:AddColumn( TcColumn():New( "Filial"		, {|| aBrw16Dt[oBrw16Dt:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw16Dt:AddColumn( TcColumn():New( "Dt.Entrada"	, {|| aBrw16Dt[oBrw16Dt:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw16Dt:AddColumn( TcColumn():New( "Série"			, {|| aBrw16Dt[oBrw16Dt:nAt,03]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw16Dt:AddColumn( TcColumn():New( "NF"			, {|| aBrw16Dt[oBrw16Dt:nAt,04]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw16Dt:AddColumn( TcColumn():New( "Item"			, {|| aBrw16Dt[oBrw16Dt:nAt,05]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw16Dt:AddColumn( TcColumn():New( "Cod.Forn."		, {|| aBrw16Dt[oBrw16Dt:nAt,06]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw16Dt:AddColumn( TcColumn():New( "Loja.Forn."	, {|| aBrw16Dt[oBrw16Dt:nAt,07]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw16Dt:AddColumn( TcColumn():New( "Fornecedor"	, {|| aBrw16Dt[oBrw16Dt:nAt,08]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw16Dt:AddColumn( TcColumn():New( "CNPJ"			, {|| aBrw16Dt[oBrw16Dt:nAt,09]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw16Dt:AddColumn( TcColumn():New( "Opt.Simples"	, {|| aBrw16Dt[oBrw16Dt:nAt,10]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw16Dt:AddColumn( TcColumn():New( "Cod.Prod."		, {|| aBrw16Dt[oBrw16Dt:nAt,11]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw16Dt:AddColumn( TcColumn():New( "Produto"		, {|| aBrw16Dt[oBrw16Dt:nAt,12]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw16Dt:AddColumn( TcColumn():New( "Quant."		, {|| aBrw16Dt[oBrw16Dt:nAt,13]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw16Dt:AddColumn( TcColumn():New( "Prc.Unit"		, {|| aBrw16Dt[oBrw16Dt:nAt,14]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw16Dt:AddColumn( TcColumn():New( "Total"			, {|| aBrw16Dt[oBrw16Dt:nAt,15]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw16Dt:AddColumn( TcColumn():New( "Vl.Cont."		, {|| aBrw16Dt[oBrw16Dt:nAt,16]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw16Dt:AddColumn( TcColumn():New( "Base ICMS"		, {|| aBrw16Dt[oBrw16Dt:nAt,17]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw16Dt:AddColumn( TcColumn():New( "Aliq.ICMS"		, {|| aBrw16Dt[oBrw16Dt:nAt,18]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw16Dt:AddColumn( TcColumn():New( "Vl.ICMS"		, {|| aBrw16Dt[oBrw16Dt:nAt,19]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw16Dt:AddColumn( TcColumn():New( "Vl.ICMS Ret."	, {|| aBrw16Dt[oBrw16Dt:nAt,20]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw16Dt:AddColumn( TcColumn():New( "Vl.ICMS Out."	, {|| aBrw16Dt[oBrw16Dt:nAt,21]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw16Dt:AddColumn( TcColumn():New( "Desconto"		, {|| aBrw16Dt[oBrw16Dt:nAt,22]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw16Dt:AddColumn( TcColumn():New( "Seguro"		, {|| aBrw16Dt[oBrw16Dt:nAt,23]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw16Dt:AddColumn( TcColumn():New( "Despesa"		, {|| aBrw16Dt[oBrw16Dt:nAt,24]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw16Dt:AddColumn( TcColumn():New( "Frete"			, {|| aBrw16Dt[oBrw16Dt:nAt,25]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw16Dt:AddColumn( TcColumn():New( "Dt.Canc."		, {|| aBrw16Dt[oBrw16Dt:nAt,26]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw16Dt:AddColumn( TcColumn():New( "Observações"	, {|| aBrw16Dt[oBrw16Dt:nAt,27]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw16Dt:AddColumn( TcColumn():New( "TES"			, {|| aBrw16Dt[oBrw16Dt:nAt,28]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw16Dt:AddColumn( TcColumn():New( "CFOP"			, {|| aBrw16Dt[oBrw16Dt:nAt,29]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw16Dt:AddColumn( TcColumn():New( "Tipo"			, {|| aBrw16Dt[oBrw16Dt:nAt,30]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw16Dt:AddColumn( TcColumn():New( "Espécie"		, {|| aBrw16Dt[oBrw16Dt:nAt,31]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw16Dt:AddColumn( TcColumn():New( "Centro Custo"	, {|| aBrw16Dt[oBrw16Dt:nAt,32]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

		oBrw16Dt:SetArray(aBrw16Dt)
		oBrw16Dt:Align		:=	CONTROL_ALIGN_ALLCLIENT
		oBrw16Dt:bLine := {||{aBrw16Dt[oBrw16Dt:nAt] } }

		// INICIO Chamado n.040929 - OS n.042022 - Relatorio Legumes - Abel Babini - 12/11/2019
		//--------------------------------------------------------------------------
		//ABA 17 - LEGUMES
		//--------------------------------------------------------------------------
		oFld17	:=TFolder():New(1,1,aFld17,{},oFolder030:aDialogs[16],,,, .T., .F.,aPosObj[2,4]-5,aPosObj[2,3]-46,)
		oFld17:aDialogs[1]:oFont :=oDlg:oFont //Resumo
		oFld17:aDialogs[2]:oFont :=oDlg:oFont //Detalhe
		//oFld17:aDialogs[3]:oFont :=oDlg:oFont //Parâmetros

		////////////////////////////////////////////////////////////
		oFLr17p1:= FWLayer():New()
		oFLr17p1:Init( oFld17:aDialogs[1], .F., .T.) //RESUMO

		//Define os Paineis
		//TITULO
		oFLr17p1:AddLine ('TIT_DET', 6, .F.)
		oFLr17p1:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

		oFLr17p1:AddLine ('DETALHE1', 58, .F.)
		oFLr17p1:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

		oFLr17p1:AddLine ('RESUMO', 36, .F.)
		oFLr17p1:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

		oP17TE01	:= oFLr17p1:GetColPanel('TIT_ESQ','TIT_DET')
		oP17D101	:= oFLr17p1:GetColPanel('DET_ESQ1','DETALHE1')
		oP17RE01	:= oFLr17p1:GetColPanel('RES_ESQ','RESUMO')

		oP17TE01:FreeChildren()
		oP17D101:FreeChildren()
		oP17RE01:FreeChildren()

		//Cabecalho
		@ 001,008 SAY OemToAnsi("Resumo Apuração de Legumes")		FONT oFont003 SIZE 300,15 OF oP17TE01 PIXEL
		//
		@ 001,015 SAY OemToAnsi("Crédito de Impostos")		FONT oFont003 SIZE 300,15 OF oP17D101 PIXEL
		
		@ 011,070 SAY OemToAnsi("Quantidade")		FONT oFont002 SIZE 060,15 OF oP17D101 PIXEL
		@ 011,140 SAY OemToAnsi("Valor Total")	FONT oFont002 SIZE 060,15 OF oP17D101 PIXEL
		@ 011,210 SAY OemToAnsi("Valor ICMS")		FONT oFont002 SIZE 060,15 OF oP17D101 PIXEL

		@ 022,015 SAY OemToAnsi("Compras")		FONT oFont002 SIZE 200,15 OF oP17D101 PIXEL
		@ 021,070 MSGET nA17T01	SIZE 60,08 OF oP17D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 021,140 MSGET nA17T02	SIZE 60,08 OF oP17D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 021,210 MSGET nA17T03	SIZE 60,08 OF oP17D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		@ 036,015 SAY OemToAnsi("Devolução")		FONT oFont002 SIZE 200,15 OF oP17D101 PIXEL
		@ 035,070 MSGET nA17T11	SIZE 60,08 OF oP17D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 035,140 MSGET nA17T12	SIZE 60,08 OF oP17D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 035,210 MSGET nA17T13	SIZE 60,08 OF oP17D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		//
		@ 055,015 SAY OemToAnsi("Débito de Impostos")		FONT oFont003 SIZE 300,15 OF oP17D101 PIXEL

		@ 066,015 SAY OemToAnsi("Compras")		FONT oFont002 SIZE 200,15 OF oP17D101 PIXEL
		@ 065,070 MSGET nA17T21	SIZE 60,08 OF oP17D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 065,140 MSGET nA17T22	SIZE 60,08 OF oP17D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 065,210 MSGET nA17T23	SIZE 60,08 OF oP17D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		@ 080,015 SAY OemToAnsi("Devolução")		FONT oFont002 SIZE 200,15 OF oP17D101 PIXEL
		@ 079,070 MSGET nA17T31	SIZE 60,08 OF oP17D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 079,140 MSGET nA17T32	SIZE 60,08 OF oP17D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 079,210 MSGET nA17T33	SIZE 60,08 OF oP17D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		
		//
		@ 111,015 SAY OemToAnsi("TOTAL")			FONT oFont003 SIZE 200,15 OF oP17RE01 PIXEL
		@ 110,070 MSGET nA17T91	SIZE 60,08 OF oP17D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 110,140 MSGET nA17T92	SIZE 60,08 OF oP17D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 110,210 MSGET nA17T93	SIZE 60,08 OF oP17D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		@ 107,011 TO 122,274 OF oP17D101 PIXEL

		//QUADRO DE RELATÓRIO
		@ 001,558 SAY OemToAnsi("OUTRAS OPÇÕES")		SIZE 200,15	FONT oFont003 OF oP17RE01 PIXEL
		@ 010,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION xRelBr17() OF oP17RE01 PIXEL //"Exportar Excel"

		////////////////////////////////////////////////////////////
		oFLr17p2:= FWLayer():New()
		oFLr17p2:Init( oFld17:aDialogs[2], .F., .T.) //Compras

		//Define os Paineis
		//TITULO
		oFLr17p2:AddLine ('TIT_DET', 6, .F.)
		oFLr17p2:AddCollumn('TIT_ESQ',50,.F.,'TIT_DET')
		oFLr17p2:AddCollumn('TIT_DIR',50,.F.,'TIT_DET')

		oFLr17p2:AddLine ('DETALHE1', 58, .F.)
		oFLr17p2:AddCollumn('DET_ESQ1',50,.F.,'DETALHE1')
		oFLr17p2:AddCollumn('DET_DIR1',50,.F.,'DETALHE1')

		oFLr17p2:AddLine ('RESUMO', 36, .F.)
		oFLr17p2:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

		oP17TE02	:= oFLr17p2:GetColPanel('TIT_ESQ','TIT_DET')
		oP17TD02	:= oFLr17p2:GetColPanel('TIT_DIR','TIT_DET')
		oP17D102	:= oFLr17p2:GetColPanel('DET_ESQ1','DETALHE1')
		oP17D202	:= oFLr17p2:GetColPanel('DET_DIR1','DETALHE1')
		oP17RE02	:= oFLr17p2:GetColPanel('RES_ESQ','RESUMO')

		oP17TE02:FreeChildren()
		oP17TD02:FreeChildren()
		oP17D102:FreeChildren()
		oP17D202:FreeChildren()
		oP17RE02:FreeChildren()

		@ 001,008 SAY OemToAnsi("Compras de Legumes")		FONT oFont003 SIZE 300,15 OF oP17TE02 PIXEL
		oBrw17Cp:= TcBrowse():New(004,004,150,150,,,,oP17D102,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)	
		oBrw17Cp:AddColumn( TcColumn():New( "Filial"					, {|| aBrw17Cp[oBrw17Cp:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw17Cp:AddColumn( TcColumn():New( "Produto"					, {|| aBrw17Cp[oBrw17Cp:nAt,03]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
		oBrw17Cp:AddColumn( TcColumn():New( "CFOP"						, {|| aBrw17Cp[oBrw17Cp:nAt,04]}	, "@!"						,,,"RIGHT"	,020,.f.,.f.,,,,.f.,) )
		oBrw17Cp:AddColumn( TcColumn():New( "Quant."					, {|| aBrw17Cp[oBrw17Cp:nAt,05]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw17Cp:AddColumn( TcColumn():New( "Vl.Cont."				, {|| aBrw17Cp[oBrw17Cp:nAt,06]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw17Cp:AddColumn( TcColumn():New( "Vl.ICMS"					, {|| aBrw17Cp[oBrw17Cp:nAt,07]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

		oBrw17Cp:SetArray(aBrw17Cp)
		oBrw17Cp:Align		:=	CONTROL_ALIGN_ALLCLIENT
		oBrw17Cp:bLine := {||{aBrw17Cp[oBrw17Cp] } }

		@ 001,008 SAY OemToAnsi("Devolução de Compras de Legumes")		FONT oFont003 SIZE 300,15 OF oP17TD02 PIXEL
		oBrw17Dc:= TcBrowse():New(004,004,150,150,,,,oP17D202,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)	
		oBrw17Dc:AddColumn( TcColumn():New( "Filial"					, {|| aBrw17Dc[oBrw17Dc:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw17Dc:AddColumn( TcColumn():New( "Produto"					, {|| aBrw17Dc[oBrw17Dc:nAt,03]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
		oBrw17Dc:AddColumn( TcColumn():New( "CFOP"						, {|| aBrw17Dc[oBrw17Dc:nAt,04]}	, "@!"						,,,"RIGHT"	,020,.f.,.f.,,,,.f.,) )
		oBrw17Dc:AddColumn( TcColumn():New( "Quant."					, {|| aBrw17Dc[oBrw17Dc:nAt,05]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw17Dc:AddColumn( TcColumn():New( "Vl.Cont."				, {|| aBrw17Dc[oBrw17Dc:nAt,06]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw17Dc:AddColumn( TcColumn():New( "Vl.ICMS"					, {|| aBrw17Dc[oBrw17Dc:nAt,07]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

		oBrw17Dc:SetArray(aBrw17Dc)
		oBrw17Dc:Align		:=	CONTROL_ALIGN_ALLCLIENT
		oBrw17Dc:bLine := {||{aBrw17Dc[oBrw17Dc] } }

		////////////////////////////////////////////////////////////
		oFLr17p3:= FWLayer():New()
		oFLr17p3:Init( oFld17:aDialogs[3], .F., .T.) //Compras

		//Define os Paineis
		//TITULO
		oFLr17p3:AddLine ('TIT_DET', 6, .F.)
		oFLr17p3:AddCollumn('TIT_ESQ',50,.F.,'TIT_DET')
		oFLr17p3:AddCollumn('TIT_DIR',50,.F.,'TIT_DET')

		oFLr17p3:AddLine ('DETALHE1', 58, .F.)
		oFLr17p3:AddCollumn('DET_ESQ1',50,.F.,'DETALHE1')
		oFLr17p3:AddCollumn('DET_DIR1',50,.F.,'DETALHE1')

		oFLr17p3:AddLine ('RESUMO', 36, .F.)
		oFLr17p3:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

		oP17TE03	:= oFLr17p3:GetColPanel('TIT_ESQ','TIT_DET')
		oP17TD03	:= oFLr17p3:GetColPanel('TIT_DIR','TIT_DET')
		oP17D103	:= oFLr17p3:GetColPanel('DET_ESQ1','DETALHE1')
		oP17D203	:= oFLr17p3:GetColPanel('DET_DIR1','DETALHE1')
		oP17RE03	:= oFLr17p3:GetColPanel('RES_ESQ','RESUMO')

		oP17TE03:FreeChildren()
		oP17TD03:FreeChildren()
		oP17D103:FreeChildren()
		oP17D203:FreeChildren()
		oP17RE03:FreeChildren()

		@ 001,008 SAY OemToAnsi("Revenda de Legumes")		FONT oFont003 SIZE 300,15 OF oP17TE03 PIXEL
		oBrw17Rv:= TcBrowse():New(004,004,150,150,,,,oP17D103,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)	
		oBrw17Rv:AddColumn( TcColumn():New( "Filial"					, {|| aBrw17Rv[oBrw17Rv:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw17Rv:AddColumn( TcColumn():New( "Produto"					, {|| aBrw17Rv[oBrw17Rv:nAt,03]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
		oBrw17Rv:AddColumn( TcColumn():New( "CFOP"						, {|| aBrw17Rv[oBrw17Rv:nAt,04]}	, "@!"						,,,"RIGHT"	,020,.f.,.f.,,,,.f.,) )
		oBrw17Rv:AddColumn( TcColumn():New( "Quant."					, {|| aBrw17Rv[oBrw17Rv:nAt,05]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw17Rv:AddColumn( TcColumn():New( "Vl.Cont."				, {|| aBrw17Rv[oBrw17Rv:nAt,06]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw17Rv:AddColumn( TcColumn():New( "Vl.ICMS"					, {|| aBrw17Rv[oBrw17Rv:nAt,07]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

		oBrw17Rv:SetArray(aBrw17Rv)
		oBrw17Rv:Align		:=	CONTROL_ALIGN_ALLCLIENT
		oBrw17Rv:bLine := {||{aBrw17Rv[oBrw17Rv] } }

		@ 001,008 SAY OemToAnsi("Devolução de Revenda de Legumes")		FONT oFont003 SIZE 300,15 OF oP17TD03 PIXEL
		oBrw17Dr:= TcBrowse():New(004,004,150,150,,,,oP17D203,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)	
		oBrw17Dr:AddColumn( TcColumn():New( "Filial"					, {|| aBrw17Dr[oBrw17Dr:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw17Dr:AddColumn( TcColumn():New( "Produto"					, {|| aBrw17Dr[oBrw17Dr:nAt,03]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
		oBrw17Dr:AddColumn( TcColumn():New( "CFOP"						, {|| aBrw17Dr[oBrw17Dr:nAt,04]}	, "@!"						,,,"RIGHT"	,020,.f.,.f.,,,,.f.,) )
		oBrw17Dr:AddColumn( TcColumn():New( "Quant."					, {|| aBrw17Dr[oBrw17Dr:nAt,05]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw17Dr:AddColumn( TcColumn():New( "Vl.Cont."				, {|| aBrw17Dr[oBrw17Dr:nAt,06]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw17Dr:AddColumn( TcColumn():New( "Vl.ICMS"					, {|| aBrw17Dr[oBrw17Dr:nAt,07]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

		oBrw17Dr:SetArray(aBrw17Dr)
		oBrw17Dr:Align		:=	CONTROL_ALIGN_ALLCLIENT
		oBrw17Dr:bLine := {||{aBrw17Dr[oBrw17Dr] } }

		//FIM Chamado n.040929 - OS n.042022 - Relatorio Legumes - Abel Babini - 12/11/2019
		//--------------------------------------------------------------------------
		//ABA 18 - UNIFORMES
		//--------------------------------------------------------------------------

		oFLr18p1:= FWLayer():New()
		//oFLr18p1:Init( oFld018:aDialogs[1], .F., .T.) //RESUMO
		oFLr18p1:Init( oFolder030:aDialogs[17], .F., .T.) //RESUMO
		//TITULO
		oFLr18p1:AddLine ('TIT_DLG1', 6, .F.)
		oFLr18p1:AddCollumn('TIT_DLG1',100,.F.,'TIT_DLG1')
		//DETALHE
		oFLr18p1:AddLine ('DET_DLG1', 74, .F.)
		oFLr18p1:AddCollumn('DET_DLG1E',20,.F.,'DET_DLG1')
		oFLr18p1:AddCollumn('DET_DLG1D',80,.F.,'DET_DLG1')
		//RODAPE
		oFLr18p1:AddLine ('ROD_DLG1', 20, .F.)
		oFLr18p1:AddCollumn('ROD_DLG1',100,.F.,'ROD_DLG1')

		oPn18T1		:= oFLr18p1:GetColPanel('TIT_DLG1','TIT_DLG1')
		oPn18D1E	:= oFLr18p1:GetColPanel('DET_DLG1E','DET_DLG1')
		oPn18D1D	:= oFLr18p1:GetColPanel('DET_DLG1D','DET_DLG1')
		oPn18R1		:= oFLr18p1:GetColPanel('ROD_DLG1','ROD_DLG1')

		oPn18T1:FreeChildren()
		oPn18D1E:FreeChildren()
		oPn18D1D:FreeChildren()

		//Cabecalho
		@ 001,008 SAY OemToAnsi("Resumo Crédito na Venda de Uniformes")		FONT oFont003 SIZE 200,15 OF oPn18T1 PIXEL

		//Rodapé
		@ 001,008 SAY OemToAnsi("Totais")									FONT oFont003 SIZE 200,15 OF oPn18R1 PIXEL

		@ 010,004 TO 028,215 OF oPn18R1 PIXEL

		//Saldo a pagar
		@ 014,008 SAY OemToAnsi("Valor Crédito ICMS (Uniformes)")	FONT oFont002 SIZE 200,15 OF oPn18R1 PIXEL
		@ 014,150 MSGET nTtUnf SIZE 60,08 OF oPn18R1 PIXEL When .F. PICTURE '@E 9,999,999,999.99'


		//QUADRO DE RELATÓRIO
		@ 001,558 SAY OemToAnsi("OUTRAS OPÇÕES")		SIZE 200,15	FONT oFont003 OF oPn18R1 PIXEL
		@ 014,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION xRelBr18() OF oPn18R1 PIXEL //"Exportar Excel"

		//Tree
		oTrF18p1 := DbTree():New(001,001,133,100,oPn18D1E,,,.T.,,,"Produtos")
		oTrF18p1:Align		:=	CONTROL_ALIGN_ALLCLIENT	 // CONTROL_ALIGN_TOP //
		oTrF18p1:SetScroll (1,.T.)
		oTrF18p1:SetScroll (2,.T.)
		oTrF18p1:bLClicked := {|| Iif( oTrF18p1:IsEmpty(), MsgStop("Não há dados a serem exibidos.","Função Não Catalogada"), xABrTr18()) }
		oTrF18p1:SetCss("QTreeWidget{background-color: #F9F9F9}")

		//Atualiza TreeView
		aTr18		:= {}

		oTrF18p1:AddItem("TODOS                              ","TODOS XXXX", "FOLDER5","FOLDER6",,,1	)
		For i := 1 to Len(aBrw18Rs)
			If !ASCAN(aTr18,{|X| X[1] == aBrw18Rs[i,2]}) > 0
				AADD(aTr18,{})
				nPos := Len(aTr18)
				AADD(aTr18[nPos], aBrw18Rs[i,2])		//01
				oTrF18p1:AddItem(Alltrim(aBrw18Rs[i,2])+"-"+Left(Alltrim(aBrw18Rs[i,3]),30),aBrw18Rs[i,2],"FOLDER6",,,,2)
			Endif
		Next i

		oTrF18p1:EndTree()

		//oTrF18p1:BeginUpdate()
		//oTrF18p1:PTSendTree(aDTrF18p1)
		//oTrF18p1:EndUpdate()

		//
		oTrF18p1:PTRefresh()

		oBrw18Rs:= TcBrowse():New(010,010,10,150,,,,oPn18D1D,,,,,,,,,,,,.F.,,.T.,,.F.,,,,)
		oBrw18Rs:AddColumn( TcColumn():New( "Filial"	,{ || aBrw18Tr[oBrw18Rs:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw18Rs:AddColumn( TcColumn():New( "Produto"	,{ || aBrw18Tr[oBrw18Rs:nAt,02]}	, "@!"						,,,"LEFT"	,030,.f.,.f.,,,,.f.,) )
		oBrw18Rs:AddColumn( TcColumn():New( "Descrição"	,{ || aBrw18Tr[oBrw18Rs:nAt,03]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
		oBrw18Rs:AddColumn( TcColumn():New( "Tp Oper."	,{ || aBrw18Tr[oBrw18Rs:nAt,04]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw18Rs:AddColumn( TcColumn():New( "Dt.Entrada",{ || aBrw18Tr[oBrw18Rs:nAt,05]}	, ""						,,,"CENTER"	,035,.f.,.f.,,,,.f.,) )
		oBrw18Rs:AddColumn( TcColumn():New( "Dt.Emissão",{ || aBrw18Tr[oBrw18Rs:nAt,06]}	, ""						,,,"CENTER"	,035,.f.,.f.,,,,.f.,) )
		oBrw18Rs:AddColumn( TcColumn():New( "Documento"	,{ || aBrw18Tr[oBrw18Rs:nAt,07]}	, "@!"						,,,"LEFT"	,035,.f.,.f.,,,,.f.,) )
		oBrw18Rs:AddColumn( TcColumn():New( "Serie"		,{ || aBrw18Tr[oBrw18Rs:nAt,08]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw18Rs:AddColumn( TcColumn():New( "Fornecedor",{ || aBrw18Tr[oBrw18Rs:nAt,09]}	, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw18Rs:AddColumn( TcColumn():New( "Loja"		,{ || aBrw18Tr[oBrw18Rs:nAt,10]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw18Rs:AddColumn( TcColumn():New( "Quant"		,{ || aBrw18Tr[oBrw18Rs:nAt,11]}	, "@E 999,999,999.9999"		,,,"RIGHT"	,030,.f.,.f.,,,,.f.,) )
		oBrw18Rs:AddColumn( TcColumn():New( "Vl. Unit."	,{ || aBrw18Tr[oBrw18Rs:nAt,12]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,030,.f.,.f.,,,,.f.,) )
		oBrw18Rs:AddColumn( TcColumn():New( "Vl. Total"	,{ || aBrw18Tr[oBrw18Rs:nAt,13]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,030,.f.,.f.,,,,.f.,) )
		oBrw18Rs:AddColumn( TcColumn():New( "ICMS"		,{ || aBrw18Tr[oBrw18Rs:nAt,14]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,030,.f.,.f.,,,,.f.,) )
		oBrw18Rs:AddColumn( TcColumn():New( "Vl ICMS Cr",{ || aBrw18Tr[oBrw18Rs:nAt,19]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,030,.f.,.f.,,,,.f.,) )
		oBrw18Rs:AddColumn( TcColumn():New( "Saldo Qtd" ,{ || aBrw18Tr[oBrw18Rs:nAt,20]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,030,.f.,.f.,,,,.f.,) )
		oBrw18Rs:AddColumn( TcColumn():New( "Saldo ICMS",{ || aBrw18Tr[oBrw18Rs:nAt,21]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,030,.f.,.f.,,,,.f.,) )
		oBrw18Rs:AddColumn( TcColumn():New( "Hist.Baixa",{ || aBrw18Tr[oBrw18Rs:nAt,22]}	, "@!"						,,,"LEFT"	,400,.f.,.f.,,,,.f.,) )

		oBrw18Rs:SetArray(aBrw18Tr)
		oBrw18Rs:Align		:=	CONTROL_ALIGN_ALLCLIENT	 // CONTROL_ALIGN_TOP //
		oBrw18Rs:bLine := {||{ 	aBrw18Tr[oBrw18Rs:nAt,01],;//FILIAL
		aBrw18Tr[oBrw18Rs:nAt,02],;//Produto
		aBrw18Tr[oBrw18Rs:nAt,03],;//Descrição
		aBrw18Tr[oBrw18Rs:nAt,04],;//Tp.Ope
		aBrw18Tr[oBrw18Rs:nAt,05],;//Dt.Entrada
		aBrw18Tr[oBrw18Rs:nAt,06],;//Dt.Emissão
		aBrw18Tr[oBrw18Rs:nAt,07],;//Documento
		aBrw18Tr[oBrw18Rs:nAt,08],;//Serie
		aBrw18Tr[oBrw18Rs:nAt,09],;//Fornecedor
		aBrw18Tr[oBrw18Rs:nAt,10],;//Loja
		Transform(aBrw18Tr[oBrw18Rs:nAT,11],'@E 999,999,999.9999'),;//Quant
		Transform(aBrw18Tr[oBrw18Rs:nAT,12],'@E 999,999,999.9999'),;//Vl.Unit
		Transform(aBrw18Tr[oBrw18Rs:nAT,13],'@E 9,999,999,999.99'),;//Total
		Transform(aBrw18Tr[oBrw18Rs:nAT,14],'@E 9,999,999,999.99'),;//ICMS
		Transform(aBrw18Tr[oBrw18Rs:nAT,19],'@E 9,999,999,999.99'),;//ICMS Cred
		Transform(aBrw18Tr[oBrw18Rs:nAT,20],'@E 9,999,999,999.99'),;//Sld.Quant
		Transform(aBrw18Tr[oBrw18Rs:nAT,21],'@E 9,999,999,999.99'),;//Sld.ICMS
		aBrw18Tr[oBrw18Rs:nAt,22]} }//Historico Baixa

		//-----------------------------------
		//ABA 19 - PRODUTOS NÃO COMESTÍVEIS
		//-----------------------------------
		// INICIO Chamado n.050629 - OS n. 054356 - Relatorio Nao Comestiveis - Abel Babini - 11/11/2019
		oFld19	:=TFolder():New(1,1,aFld19,{},oFolder030:aDialogs[18],,,, .T., .F.,aPosObj[2,4]-5,aPosObj[2,3]-46,)
		oFld19:aDialogs[1]:oFont :=oDlg:oFont //Resumo
		oFld19:aDialogs[2]:oFont :=oDlg:oFont //Detalhe
		oFld19:aDialogs[3]:oFont :=oDlg:oFont //Parâmetros
		oFld19:aDialogs[4]:oFont :=oDlg:oFont //Parâmetros

		////////////////////////////////////////////////////////////
		oFLr19p1:= FWLayer():New()
		oFLr19p1:Init( oFld19:aDialogs[1], .F., .T.) //RESUMO

		//Define os Paineis
		//TITULO
		oFLr19p1:AddLine ('TIT_DET', 6, .F.)
		oFLr19p1:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

		oFLr19p1:AddLine ('DETALHE1', 78, .F.)
		oFLr19p1:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

		oFLr19p1:AddLine ('RESUMO', 19, .F.)
		oFLr19p1:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

		oP19TE01	:= oFLr19p1:GetColPanel('TIT_ESQ','TIT_DET')
		oP19D101	:= oFLr19p1:GetColPanel('DET_ESQ1','DETALHE1')
		oP19RE01	:= oFLr19p1:GetColPanel('RES_ESQ','RESUMO')

		oP19TE01:FreeChildren()
		oP19D101:FreeChildren()
		oP19RE01:FreeChildren()

		//Cabecalho
		@ 001,008 SAY OemToAnsi("Resumo Apuração Produtos Não Comestíveis")		FONT oFont003 SIZE 300,15 OF oP19TE01 PIXEL

			//Cabecalho
			//@ 001,008 SAY OemToAnsi("Detalhamento das operações para Apuração Compra de Aves")		FONT oFont003 SIZE 300,15 OF oP19TE01 PIXEL

			oBrw19Rs:= TcBrowse():New(004,004,150,150,,,,oP19D101,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)	
			oBrw19Rs:AddColumn( TcColumn():New( "Filial"					, {|| aBrw19Rs[oBrw19Rs:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw19Rs:AddColumn( TcColumn():New( "Tipo"						, {|| aBrw19Rs[oBrw19Rs:nAt,03]}	, "@!"						,,,"LEFT"	,080,.f.,.f.,,,,.f.,) )
			oBrw19Rs:AddColumn( TcColumn():New( "CFOP"						, {|| aBrw19Rs[oBrw19Rs:nAt,04]}	, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
			oBrw19Rs:AddColumn( TcColumn():New( "Quant."					, {|| aBrw19Rs[oBrw19Rs:nAt,05]}	, "@E 999,999,999.99"		,,,"RIGHT"	,070,.f.,.f.,,,,.f.,) )
			oBrw19Rs:AddColumn( TcColumn():New( "Vl.Cont."				, {|| aBrw19Rs[oBrw19Rs:nAt,06]}	, "@E 999,999,999.99"		,,,"RIGHT"	,070,.f.,.f.,,,,.f.,) )
			oBrw19Rs:AddColumn( TcColumn():New( "Vl.ICMS"					, {|| aBrw19Rs[oBrw19Rs:nAt,07]}	, "@E 999,999,999.99"		,,,"RIGHT"	,070,.f.,.f.,,,,.f.,) )
		
			oBrw19Rs:SetArray(aBrw19Rs)
			oBrw19Rs:Align		:=	CONTROL_ALIGN_ALLCLIENT
			
			oBrw19Rs:bLine := {||{aBrw19Rs[oBrw19Rs:nAt] }} 
		
		//@ 081,015 SAY OemToAnsi("TOTAL")			FONT oFont002 SIZE 200,15 OF oP19D101 PIXEL
		//@ 080,140 MSGET nA19T01	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		//@ 080,210 MSGET nA19T02	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		//@ 077,011 TO 093,274 OF oP19D101 PIXEL

		//QUADRO DE RELATÓRIO

		@ 001,558 SAY OemToAnsi("OUTRAS OPÇÕES")		SIZE 200,15	FONT oFont003 OF oP19RE01 PIXEL
		@ 010,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION xRelBr19() OF oP19RE01 PIXEL //"Exportar Excel"

		////////////////////////////////////////////////////////////
		oFLr19p2:= FWLayer():New()
		oFLr19p2:Init( oFld19:aDialogs[2], .F., .T.) //MERCADO INTERNO

			//Define os Paineis
		//TITULO
		oFLr19p2:AddLine ('TIT_DET', 6, .F.)
		oFLr19p2:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

		oFLr19p2:AddLine ('DETALHE1', 78, .F.)
		oFLr19p2:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

		oFLr19p2:AddLine ('RESUMO', 16, .F.)
		oFLr19p2:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

		oP19TE02	:= oFLr19p2:GetColPanel('TIT_ESQ','TIT_DET')
		oP19D102	:= oFLr19p2:GetColPanel('DET_ESQ1','DETALHE1')
		oP19RE02	:= oFLr19p2:GetColPanel('RES_ESQ','RESUMO')

		oP19TE02:FreeChildren()
		oP19D102:FreeChildren()
		oP19RE02:FreeChildren()

		//Cabecalho
		@ 001,008 SAY OemToAnsi("Detalhamento das operações Produtos Não Comestíveis - Mercado Interno")		FONT oFont003 SIZE 300,15 OF oP19TE02 PIXEL

		oBrw19MI:= TcBrowse():New(004,004,150,150,,,,oP19D102,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
		oBrw19MI:AddColumn( TcColumn():New( "Filial"			, {|| aBrw19MI[oBrw19MI:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19MI:AddColumn( TcColumn():New( "Dt.Entrada"	, {|| aBrw19MI[oBrw19MI:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19MI:AddColumn( TcColumn():New( "Série"				, {|| aBrw19MI[oBrw19MI:nAt,03]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19MI:AddColumn( TcColumn():New( "NF"					, {|| aBrw19MI[oBrw19MI:nAt,04]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19MI:AddColumn( TcColumn():New( "Item"				, {|| aBrw19MI[oBrw19MI:nAt,05]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19MI:AddColumn( TcColumn():New( "Cod.Forn."		, {|| aBrw19MI[oBrw19MI:nAt,06]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19MI:AddColumn( TcColumn():New( "Loja.Forn."	, {|| aBrw19MI[oBrw19MI:nAt,07]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19MI:AddColumn( TcColumn():New( "Fornecedor"	, {|| aBrw19MI[oBrw19MI:nAt,08]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19MI:AddColumn( TcColumn():New( "CNPJ"				, {|| aBrw19MI[oBrw19MI:nAt,09]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19MI:AddColumn( TcColumn():New( "Opt.Simples"	, {|| aBrw19MI[oBrw19MI:nAt,10]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19MI:AddColumn( TcColumn():New( "Cod.Prod."		, {|| aBrw19MI[oBrw19MI:nAt,11]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19MI:AddColumn( TcColumn():New( "Produto"			, {|| aBrw19MI[oBrw19MI:nAt,12]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19MI:AddColumn( TcColumn():New( "Quant."			, {|| aBrw19MI[oBrw19MI:nAt,13]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19MI:AddColumn( TcColumn():New( "Prc.Unit"		, {|| aBrw19MI[oBrw19MI:nAt,14]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19MI:AddColumn( TcColumn():New( "Total"				, {|| aBrw19MI[oBrw19MI:nAt,15]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19MI:AddColumn( TcColumn():New( "Vl.Cont."		, {|| aBrw19MI[oBrw19MI:nAt,16]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19MI:AddColumn( TcColumn():New( "Base ICMS"		, {|| aBrw19MI[oBrw19MI:nAt,17]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19MI:AddColumn( TcColumn():New( "Aliq.ICMS"		, {|| aBrw19MI[oBrw19MI:nAt,18]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19MI:AddColumn( TcColumn():New( "Vl.ICMS"			, {|| aBrw19MI[oBrw19MI:nAt,19]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19MI:AddColumn( TcColumn():New( "Vl.ICMS Ret.", {|| aBrw19MI[oBrw19MI:nAt,20]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19MI:AddColumn( TcColumn():New( "Vl.ICMS Out.", {|| aBrw19MI[oBrw19MI:nAt,21]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19MI:AddColumn( TcColumn():New( "Desconto"		, {|| aBrw19MI[oBrw19MI:nAt,22]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19MI:AddColumn( TcColumn():New( "Seguro"			, {|| aBrw19MI[oBrw19MI:nAt,23]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19MI:AddColumn( TcColumn():New( "Despesa"			, {|| aBrw19MI[oBrw19MI:nAt,24]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19MI:AddColumn( TcColumn():New( "Frete"				, {|| aBrw19MI[oBrw19MI:nAt,25]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19MI:AddColumn( TcColumn():New( "Dt.Canc."		, {|| aBrw19MI[oBrw19MI:nAt,26]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19MI:AddColumn( TcColumn():New( "Observações"	, {|| aBrw19MI[oBrw19MI:nAt,27]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19MI:AddColumn( TcColumn():New( "TES"					, {|| aBrw19MI[oBrw19MI:nAt,28]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19MI:AddColumn( TcColumn():New( "CFOP"				, {|| aBrw19MI[oBrw19MI:nAt,29]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19MI:AddColumn( TcColumn():New( "Tipo"				, {|| aBrw19MI[oBrw19MI:nAt,30]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19MI:AddColumn( TcColumn():New( "Espécie"			, {|| aBrw19MI[oBrw19MI:nAt,31]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19MI:AddColumn( TcColumn():New( "Centro Custo", {|| aBrw19MI[oBrw19MI:nAt,32]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

		oBrw19MI:SetArray(aBrw19MI)
		oBrw19MI:Align		:=	CONTROL_ALIGN_ALLCLIENT
		oBrw19MI:bLine := {||{aBrw19MI[oBrw19MI:nAt] } }

		////////////////////////////////////////////////////////////
		oFLr19p3:= FWLayer():New()
		oFLr19p3:Init( oFld19:aDialogs[3], .F., .T.) //MERCADO EXTERNO

		//Define os Paineis
		//TITULO
		oFLr19p3:AddLine ('TIT_DET', 6, .F.)
		oFLr19p3:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

		oFLr19p3:AddLine ('DETALHE1', 78, .F.)
		oFLr19p3:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

		oFLr19p3:AddLine ('RESUMO', 16, .F.)
		oFLr19p3:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

		oP19TE03	:= oFLr19p3:GetColPanel('TIT_ESQ','TIT_DET')
		oP19D103	:= oFLr19p3:GetColPanel('DET_ESQ1','DETALHE1')
		oP19RE03	:= oFLr19p3:GetColPanel('RES_ESQ','RESUMO')

		oP19TE03:FreeChildren()
		oP19D103:FreeChildren()
		oP19RE03:FreeChildren()

		//Cabecalho
		@ 001,008 SAY OemToAnsi("Detalhamento das operações Produtos Não Comestíveis - Mercado Externo")		FONT oFont003 SIZE 300,15 OF oP19TE03 PIXEL

		oBrw19ME:= TcBrowse():New(004,004,150,150,,,,oP19D103,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
		oBrw19ME:AddColumn( TcColumn():New( "Filial"			, {|| aBrw19ME[oBrw19ME:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19ME:AddColumn( TcColumn():New( "Dt.Entrada"	, {|| aBrw19ME[oBrw19ME:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19ME:AddColumn( TcColumn():New( "Série"				, {|| aBrw19ME[oBrw19ME:nAt,03]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19ME:AddColumn( TcColumn():New( "NF"					, {|| aBrw19ME[oBrw19ME:nAt,04]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19ME:AddColumn( TcColumn():New( "Item"				, {|| aBrw19ME[oBrw19ME:nAt,05]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19ME:AddColumn( TcColumn():New( "Cod.Forn."		, {|| aBrw19ME[oBrw19ME:nAt,06]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19ME:AddColumn( TcColumn():New( "Loja.Forn."	, {|| aBrw19ME[oBrw19ME:nAt,07]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19ME:AddColumn( TcColumn():New( "Fornecedor"	, {|| aBrw19ME[oBrw19ME:nAt,08]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19ME:AddColumn( TcColumn():New( "CNPJ"				, {|| aBrw19ME[oBrw19ME:nAt,09]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19ME:AddColumn( TcColumn():New( "Opt.Simples"	, {|| aBrw19ME[oBrw19ME:nAt,10]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19ME:AddColumn( TcColumn():New( "Cod.Prod."		, {|| aBrw19ME[oBrw19ME:nAt,11]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19ME:AddColumn( TcColumn():New( "Produto"			, {|| aBrw19ME[oBrw19ME:nAt,12]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19ME:AddColumn( TcColumn():New( "Quant."			, {|| aBrw19ME[oBrw19ME:nAt,13]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19ME:AddColumn( TcColumn():New( "Prc.Unit"		, {|| aBrw19ME[oBrw19ME:nAt,14]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19ME:AddColumn( TcColumn():New( "Total"				, {|| aBrw19ME[oBrw19ME:nAt,15]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19ME:AddColumn( TcColumn():New( "Vl.Cont."		, {|| aBrw19ME[oBrw19ME:nAt,16]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19ME:AddColumn( TcColumn():New( "Base ICMS"		, {|| aBrw19ME[oBrw19ME:nAt,17]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19ME:AddColumn( TcColumn():New( "Aliq.ICMS"		, {|| aBrw19ME[oBrw19ME:nAt,18]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19ME:AddColumn( TcColumn():New( "Vl.ICMS"			, {|| aBrw19ME[oBrw19ME:nAt,19]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19ME:AddColumn( TcColumn():New( "Vl.ICMS Ret.", {|| aBrw19ME[oBrw19ME:nAt,20]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19ME:AddColumn( TcColumn():New( "Vl.ICMS Out.", {|| aBrw19ME[oBrw19ME:nAt,21]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19ME:AddColumn( TcColumn():New( "Desconto"		, {|| aBrw19ME[oBrw19ME:nAt,22]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19ME:AddColumn( TcColumn():New( "Seguro"			, {|| aBrw19ME[oBrw19ME:nAt,23]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19ME:AddColumn( TcColumn():New( "Despesa"			, {|| aBrw19ME[oBrw19ME:nAt,24]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19ME:AddColumn( TcColumn():New( "Frete"				, {|| aBrw19ME[oBrw19ME:nAt,25]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19ME:AddColumn( TcColumn():New( "Dt.Canc."		, {|| aBrw19ME[oBrw19ME:nAt,26]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19ME:AddColumn( TcColumn():New( "Observações"	, {|| aBrw19ME[oBrw19ME:nAt,27]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19ME:AddColumn( TcColumn():New( "TES"					, {|| aBrw19ME[oBrw19ME:nAt,28]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19ME:AddColumn( TcColumn():New( "CFOP"				, {|| aBrw19ME[oBrw19ME:nAt,29]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19ME:AddColumn( TcColumn():New( "Tipo"				, {|| aBrw19ME[oBrw19ME:nAt,30]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19ME:AddColumn( TcColumn():New( "Espécie"			, {|| aBrw19ME[oBrw19ME:nAt,31]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19ME:AddColumn( TcColumn():New( "Centro Custo", {|| aBrw19ME[oBrw19ME:nAt,32]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

		oBrw19ME:SetArray(aBrw19ME)
		oBrw19ME:Align		:=	CONTROL_ALIGN_ALLCLIENT
		oBrw19ME:bLine := {||{aBrw19ME[oBrw19ME:nAt] } }

		////////////////////////////////////////////////////////////
		oFLr19p4:= FWLayer():New()
		oFLr19p4:Init( oFld19:aDialogs[4], .F., .T.) //DEVOLUÇÕES

		//Define os Paineis
		//TITULO
		oFLr19p4:AddLine ('TIT_DET', 6, .F.)
		oFLr19p4:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

		oFLr19p4:AddLine ('DETALHE1', 78, .F.)
		oFLr19p4:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

		oFLr19p4:AddLine ('RESUMO', 16, .F.)
		oFLr19p4:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

		oP19TE04	:= oFLr19p4:GetColPanel('TIT_ESQ','TIT_DET')
		oP19D104	:= oFLr19p4:GetColPanel('DET_ESQ1','DETALHE1')
		oP19RE04	:= oFLr19p4:GetColPanel('RES_ESQ','RESUMO')

		oP19TE04:FreeChildren()
		oP19D104:FreeChildren()
		oP19RE04:FreeChildren()

		//Cabecalho
		@ 001,008 SAY OemToAnsi("Detalhamento das operações Produtos Não Comestíveis - Devoluções")		FONT oFont003 SIZE 300,15 OF oP19TE04 PIXEL

		oBrw19Dv:= TcBrowse():New(004,004,150,150,,,,oP19D104,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
		oBrw19Dv:AddColumn( TcColumn():New( "Filial"			, {|| aBrw19Dv[oBrw19Dv:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19Dv:AddColumn( TcColumn():New( "Dt.Entrada"	, {|| aBrw19Dv[oBrw19Dv:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19Dv:AddColumn( TcColumn():New( "Série"				, {|| aBrw19Dv[oBrw19Dv:nAt,03]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19Dv:AddColumn( TcColumn():New( "NF"					, {|| aBrw19Dv[oBrw19Dv:nAt,04]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19Dv:AddColumn( TcColumn():New( "Item"				, {|| aBrw19Dv[oBrw19Dv:nAt,05]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19Dv:AddColumn( TcColumn():New( "Cod.Forn."		, {|| aBrw19Dv[oBrw19Dv:nAt,06]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19Dv:AddColumn( TcColumn():New( "Loja.Forn."	, {|| aBrw19Dv[oBrw19Dv:nAt,07]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19Dv:AddColumn( TcColumn():New( "Fornecedor"	, {|| aBrw19Dv[oBrw19Dv:nAt,08]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19Dv:AddColumn( TcColumn():New( "CNPJ"				, {|| aBrw19Dv[oBrw19Dv:nAt,09]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19Dv:AddColumn( TcColumn():New( "Opt.Simples"	, {|| aBrw19Dv[oBrw19Dv:nAt,10]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19Dv:AddColumn( TcColumn():New( "Cod.Prod."		, {|| aBrw19Dv[oBrw19Dv:nAt,11]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19Dv:AddColumn( TcColumn():New( "Produto"			, {|| aBrw19Dv[oBrw19Dv:nAt,12]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19Dv:AddColumn( TcColumn():New( "Quant."			, {|| aBrw19Dv[oBrw19Dv:nAt,13]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19Dv:AddColumn( TcColumn():New( "Prc.Unit"		, {|| aBrw19Dv[oBrw19Dv:nAt,14]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19Dv:AddColumn( TcColumn():New( "Total"				, {|| aBrw19Dv[oBrw19Dv:nAt,15]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19Dv:AddColumn( TcColumn():New( "Vl.Cont."		, {|| aBrw19Dv[oBrw19Dv:nAt,16]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19Dv:AddColumn( TcColumn():New( "Base ICMS"		, {|| aBrw19Dv[oBrw19Dv:nAt,17]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19Dv:AddColumn( TcColumn():New( "Aliq.ICMS"		, {|| aBrw19Dv[oBrw19Dv:nAt,18]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19Dv:AddColumn( TcColumn():New( "Vl.ICMS"			, {|| aBrw19Dv[oBrw19Dv:nAt,19]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19Dv:AddColumn( TcColumn():New( "Vl.ICMS Ret.", {|| aBrw19Dv[oBrw19Dv:nAt,20]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19Dv:AddColumn( TcColumn():New( "Vl.ICMS Out.", {|| aBrw19Dv[oBrw19Dv:nAt,21]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19Dv:AddColumn( TcColumn():New( "Desconto"		, {|| aBrw19Dv[oBrw19Dv:nAt,22]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19Dv:AddColumn( TcColumn():New( "Seguro"			, {|| aBrw19Dv[oBrw19Dv:nAt,23]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19Dv:AddColumn( TcColumn():New( "Despesa"			, {|| aBrw19Dv[oBrw19Dv:nAt,24]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19Dv:AddColumn( TcColumn():New( "Frete"				, {|| aBrw19Dv[oBrw19Dv:nAt,25]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19Dv:AddColumn( TcColumn():New( "Dt.Canc."		, {|| aBrw19Dv[oBrw19Dv:nAt,26]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19Dv:AddColumn( TcColumn():New( "Observações"	, {|| aBrw19Dv[oBrw19Dv:nAt,27]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw19Dv:AddColumn( TcColumn():New( "TES"					, {|| aBrw19Dv[oBrw19Dv:nAt,28]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19Dv:AddColumn( TcColumn():New( "CFOP"				, {|| aBrw19Dv[oBrw19Dv:nAt,29]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19Dv:AddColumn( TcColumn():New( "Tipo"				, {|| aBrw19Dv[oBrw19Dv:nAt,30]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19Dv:AddColumn( TcColumn():New( "Espécie"			, {|| aBrw19Dv[oBrw19Dv:nAt,31]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw19Dv:AddColumn( TcColumn():New( "Centro Custo", {|| aBrw19Dv[oBrw19Dv:nAt,32]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

		oBrw19Dv:SetArray(aBrw19Dv)
		oBrw19Dv:Align		:=	CONTROL_ALIGN_ALLCLIENT
		oBrw19Dv:bLine := {||{aBrw19Dv[oBrw19Dv:nAt] } }

		// FIM Chamado n.050629 - OS n. 054356 - Relatorio Nao Comestiveis - Abel Babini - 11/11/2019
	ENDIF

	IF nOpMdl	== 1 .or. nOpMdl	== 2 .or. nOpMdl	== 3 .or. nOpMdl	== 4
		//--------------------------------------------------------------------------
		//ABA 20 - NF CANCELADA
		//--------------------------------------------------------------------------
		oFLr20p1:= FWLayer():New()
		IF nOpMdl	== 1
			oFLr20p1:Init( oFolder030:aDialogs[19], .F., .T.) //RESUMO
		ELSEIF nOpMdl	== 2
			oFLr20p1:Init( oFolder030:aDialogs[09], .F., .T.) //RESUMO
		ELSEIF nOpMdl	== 3
			oFLr20p1:Init( oFolder030:aDialogs[05], .F., .T.) //RESUMO
		ELSEIF nOpMdl	== 4
			oFLr20p1:Init( oFolder030:aDialogs[10], .F., .T.) //RESUMO
		ENDIF

		//TITULO
		oFLr20p1:AddLine ('TIT_DLG1', 6, .F.)
		oFLr20p1:AddCollumn('TIT_DLG1',100,.F.,'TIT_DLG1')
		//DETALHE
		oFLr20p1:AddLine ('DET_DLG1', 74, .F.)
		oFLr20p1:AddCollumn('DET_DLG1E',100,.F.,'DET_DLG1')
		//RODAPE
		oFLr20p1:AddLine ('ROD_DLG1', 20, .F.)
		oFLr20p1:AddCollumn('ROD_DLG1',100,.F.,'ROD_DLG1')

		oPn20T1		:= oFLr20p1:GetColPanel('TIT_DLG1','TIT_DLG1')
		oPn20D1E	:= oFLr20p1:GetColPanel('DET_DLG1E','DET_DLG1')
		oPn20R1		:= oFLr20p1:GetColPanel('ROD_DLG1','ROD_DLG1')

		oPn20T1:FreeChildren()
		oPn20D1E:FreeChildren()
		oPn20R1:FreeChildren()

		@ 001,008 SAY OemToAnsi("Emissão do Relatório de NF Cancelada")		FONT oFont003 SIZE 400,15 OF oPn20T1 PIXEL

		//QUADRO DE RELATÓRIO
		@ 001,558 SAY OemToAnsi("OUTRAS OPÇÕES")		SIZE 200,15	FONT oFont003 OF oPn20R1 PIXEL
		//@ 014,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION Static Call(ADFIS038R,xRelBr20)  OF oPn20R1 PIXEL //"Exportar Excel"
		//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
		@ 014,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION u_FIS038B4()  OF oPn20R1 PIXEL //"Exportar Excel"

		
		oBrw20Rs:= TcBrowse():New(010,050,150,150,,,,oPn20D1E,,,,,,,,,,,,.f.,cAlB20Br,.t.,,.f.,,,,)
		oBrw20Rs:AddColumn( TcColumn():New( "Filial"			, {|| (cAlB20Br)->FILIAL}	, "@!"						,,,"CENTER"	,020,.f.,.f.,,,,.f.,) )
		oBrw20Rs:AddColumn( TcColumn():New( "Dt. Emissão"	, {|| (cAlB20Br)->DTEMISSAO}, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw20Rs:AddColumn( TcColumn():New( "Dt. Entrada"	, {|| (cAlB20Br)->DTENTRADA}, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw20Rs:AddColumn( TcColumn():New( "Série"				, {|| (cAlB20Br)->NFSERIE}, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw20Rs:AddColumn( TcColumn():New( "Nota Fiscal"	, {|| (cAlB20Br)->NFISCAL}, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw20Rs:AddColumn( TcColumn():New( "CFOP"				, {|| (cAlB20Br)->CFOP}		, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw20Rs:AddColumn( TcColumn():New( "Estado"			, {|| (cAlB20Br)->UF}			, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw20Rs:AddColumn( TcColumn():New( "Vl. Cont"		, {|| (cAlB20Br)->VALCONT}, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw20Rs:AddColumn( TcColumn():New( "Dt.Cancel."	, {|| (cAlB20Br)->DTCANC}	, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw20Rs:AddColumn( TcColumn():New( "Observação"	, {|| (cAlB20Br)->OBSERV}	, "@!"						,,,"LEFT"	,180,.f.,.f.,,,,.f.,) )

		oBrw20Rs:Align		:=	CONTROL_ALIGN_ALLCLIENT
	ENDIF

	IF nOpMdl	== 1 .or. nOpMdl	== 2 .or. nOpMdl	== 4
		//--------------------------------------------------------------------------
		//ABA 21 - INDUSTR. E USO E CONSUMO
		//--------------------------------------------------------------------------
		//INICIO Chamado n.055548 - OS n.057705 - Abel Babini - 17/03/2020 - Painel Fiscal ICMS SC - Relatório Ind Uso e Consumo - Ajustes Filial SC
		oFLr21p1:= FWLayer():New()
		IF nOpMdl	== 1
			oFLr21p1:Init( oFolder030:aDialogs[20], .F., .T.) //RESUMO
		ELSEIF nOpMdl	== 2
			oFLr21p1:Init( oFolder030:aDialogs[10], .F., .T.) //RESUMO
		ELSEIF nOpMdl	== 4
			oFLr21p1:Init( oFolder030:aDialogs[11], .F., .T.) //RESUMO
		ENDIF
		//TITULO
		oFLr21p1:AddLine ('TIT_DLG1', 6, .F.)
		oFLr21p1:AddCollumn('TIT_DLG1',100,.F.,'TIT_DLG1')
		//DETALHE
		oFLr21p1:AddLine ('DET_DLG1', 74, .F.)
		oFLr21p1:AddCollumn('DET_DLG1E',100,.F.,'DET_DLG1')
		//oFLr21p1:AddCollumn('DET_DLG1D',80,.F.,'DET_DLG1')
		//RODAPE
		oFLr21p1:AddLine ('ROD_DLG1', 20, .F.)
		oFLr21p1:AddCollumn('ROD_DLG1',100,.F.,'ROD_DLG1')

		oPn21T1		:= oFLr21p1:GetColPanel('TIT_DLG1','TIT_DLG1')
		oPn21D1E	:= oFLr21p1:GetColPanel('DET_DLG1E','DET_DLG1')
		oPn21R1		:= oFLr21p1:GetColPanel('ROD_DLG1','ROD_DLG1')

		oPn21T1:FreeChildren()
		oPn21D1E:FreeChildren()
		oPn21R1:FreeChildren()

		//Cabecalho
		@ 001,008 SAY OemToAnsi("Controle de Retorno de Industrialização para Crédito de ICMS")		FONT oFont003 SIZE 400,15 OF oPn21T1 PIXEL

		@ 001,008 SAY OemToAnsi("Totais")									FONT oFont003 SIZE 200,15 OF oPn21R1 PIXEL

		@ 010,004 TO 028,215 OF oPn21R1 PIXEL


		@ 014,008 SAY OemToAnsi("Total Crédito ICMS (Retornos)")		FONT oFont002 SIZE 200,15 OF oPn21R1 PIXEL
		@ 014,150 MSGET nR21ICMS	SIZE 60,08 OF oPn21R1 PIXEL When .F. PICTURE '@E 9,999,999,999.99' // Total Vl Cofins Merc Interno


		//QUADRO DE RELATÓRIO
		@ 001,558 SAY OemToAnsi("OUTRAS OPÇÕES")		SIZE 200,15	FONT oFont003 OF oPn21R1 PIXEL
		@ 014,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION xRelBr21() OF oPn21R1 PIXEL //"Exportar Excel"

		oBrw21Rs:= TcBrowse():New(010,050,150,150,,,,oPn21D1E,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
		oBrw21Rs:AddColumn( TcColumn():New( "Retornado"			, {|| aBrw21Rs[oBrw21Rs:nAt,01]}	, "@!"						,,,"CENTER"	,040,.f.,.f.,,,,.f.,) )
		oBrw21Rs:AddColumn( TcColumn():New( "Filial"			, {|| aBrw21Rs[oBrw21Rs:nAt,02]}	, "@!"						,,,"CENTER"	,040,.f.,.f.,,,,.f.,) )
		oBrw21Rs:AddColumn( TcColumn():New( "REM Dt. Entrada"	, {|| aBrw21Rs[oBrw21Rs:nAt,03]}	, "@!"						,,,"CENTER"	,040,.f.,.f.,,,,.f.,) )
		oBrw21Rs:AddColumn( TcColumn():New( "REM Dt. Emissão"	, {|| aBrw21Rs[oBrw21Rs:nAt,04]}	, "@!"						,,,"CENTER"	,040,.f.,.f.,,,,.f.,) )
		oBrw21Rs:AddColumn( TcColumn():New( "REM Série"			, {|| aBrw21Rs[oBrw21Rs:nAt,05]}	, "@!"						,,,"CENTER"	,040,.f.,.f.,,,,.f.,) )
		oBrw21Rs:AddColumn( TcColumn():New( "REM Nota Fiscal"	, {|| aBrw21Rs[oBrw21Rs:nAt,06]}	, "@!"						,,,"CENTER"	,040,.f.,.f.,,,,.f.,) )
		oBrw21Rs:AddColumn( TcColumn():New( "REM Item"			, {|| aBrw21Rs[oBrw21Rs:nAt,07]}	, "@!"						,,,"CENTER"	,040,.f.,.f.,,,,.f.,) )
		oBrw21Rs:AddColumn( TcColumn():New( "REM Forn."			, {|| aBrw21Rs[oBrw21Rs:nAt,08]}	, "@!"						,,,"CENTER"	,040,.f.,.f.,,,,.f.,) )
		oBrw21Rs:AddColumn( TcColumn():New( "REM Loja"			, {|| aBrw21Rs[oBrw21Rs:nAt,09]}	, "@!"						,,,"CENTER"	,040,.f.,.f.,,,,.f.,) )
		oBrw21Rs:AddColumn( TcColumn():New( "REM Nome Forn."	, {|| aBrw21Rs[oBrw21Rs:nAt,10]}	, "@!"						,,,"CENTER"	,040,.f.,.f.,,,,.f.,) )
		oBrw21Rs:AddColumn( TcColumn():New( "REM CFOP"			, {|| aBrw21Rs[oBrw21Rs:nAt,11]}	, "@!"						,,,"CENTER"	,040,.f.,.f.,,,,.f.,) )
		oBrw21Rs:AddColumn( TcColumn():New( "REM TES"			, {|| aBrw21Rs[oBrw21Rs:nAt,12]}	, "@!"						,,,"CENTER"	,040,.f.,.f.,,,,.f.,) )
		oBrw21Rs:AddColumn( TcColumn():New( "REM Produto"		, {|| aBrw21Rs[oBrw21Rs:nAt,13]}	, "@!"						,,,"CENTER"	,040,.f.,.f.,,,,.f.,) )
		oBrw21Rs:AddColumn( TcColumn():New( "REM Desc.Prod"		, {|| aBrw21Rs[oBrw21Rs:nAt,14]}	, "@!"						,,,"CENTER"	,040,.f.,.f.,,,,.f.,) )
		oBrw21Rs:AddColumn( TcColumn():New( "REM Quant"			, {|| aBrw21Rs[oBrw21Rs:nAt,15]}	, "@E 999,999,999.9999"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw21Rs:AddColumn( TcColumn():New( "REM Prc.Unit."		, {|| aBrw21Rs[oBrw21Rs:nAt,16]}	, "@E 999,999,999.9999"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw21Rs:AddColumn( TcColumn():New( "REM Vl. Cont"		, {|| aBrw21Rs[oBrw21Rs:nAt,17]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw21Rs:AddColumn( TcColumn():New( "REM Vl. ICMS"		, {|| aBrw21Rs[oBrw21Rs:nAt,18]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw21Rs:AddColumn( TcColumn():New( "REM Vl. IPI"		, {|| aBrw21Rs[oBrw21Rs:nAt,19]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw21Rs:AddColumn( TcColumn():New( "DEV Dt. Entrada"	, {|| aBrw21Rs[oBrw21Rs:nAt,20]}	, "@!"						,,,"CENTER"	,040,.f.,.f.,,,,.f.,) )
		oBrw21Rs:AddColumn( TcColumn():New( "DEV Dt. Emissão"	, {|| aBrw21Rs[oBrw21Rs:nAt,21]}	, "@!"						,,,"CENTER"	,040,.f.,.f.,,,,.f.,) )
		oBrw21Rs:AddColumn( TcColumn():New( "DEV Série"			, {|| aBrw21Rs[oBrw21Rs:nAt,22]}	, "@!"						,,,"CENTER"	,040,.f.,.f.,,,,.f.,) )
		oBrw21Rs:AddColumn( TcColumn():New( "DEV Nota Fiscal"	, {|| aBrw21Rs[oBrw21Rs:nAt,23]}	, "@!"						,,,"CENTER"	,040,.f.,.f.,,,,.f.,) )
		oBrw21Rs:AddColumn( TcColumn():New( "DEV CFOP"			, {|| aBrw21Rs[oBrw21Rs:nAt,24]}	, "@!"						,,,"CENTER"	,040,.f.,.f.,,,,.f.,) )
		oBrw21Rs:AddColumn( TcColumn():New( "DEV TES"			, {|| aBrw21Rs[oBrw21Rs:nAt,25]}	, "@!"						,,,"CENTER"	,040,.f.,.f.,,,,.f.,) )
		oBrw21Rs:AddColumn( TcColumn():New( "DEV Quant"			, {|| aBrw21Rs[oBrw21Rs:nAt,26]}	, "@E 999,999,999.9999"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw21Rs:AddColumn( TcColumn():New( "DEV Vl. Cont"		, {|| aBrw21Rs[oBrw21Rs:nAt,27]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw21Rs:AddColumn( TcColumn():New( "DEV Vl. ICMS"		, {|| aBrw21Rs[oBrw21Rs:nAt,28]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw21Rs:AddColumn( TcColumn():New( "DEV Vl. IPI"		, {|| aBrw21Rs[oBrw21Rs:nAt,29]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

		oBrw21Rs:SetArray(aBrw21Rs)
		oBrw21Rs:Align		:=	CONTROL_ALIGN_ALLCLIENT
		oBrw21Rs:bLine := {||{ 	aBrw21Rs[oBrw21Rs:nAt,01],;
			aBrw21Rs[oBrw21Rs:nAt,02],;
			aBrw21Rs[oBrw21Rs:nAt,03],;
			aBrw21Rs[oBrw21Rs:nAt,04],;
			aBrw21Rs[oBrw21Rs:nAt,05],;
			aBrw21Rs[oBrw21Rs:nAt,06],;
			aBrw21Rs[oBrw21Rs:nAt,07],;
			aBrw21Rs[oBrw21Rs:nAt,08],;
			aBrw21Rs[oBrw21Rs:nAt,09],;
			aBrw21Rs[oBrw21Rs:nAt,10],;
			aBrw21Rs[oBrw21Rs:nAt,11],;
			aBrw21Rs[oBrw21Rs:nAt,12],;
			aBrw21Rs[oBrw21Rs:nAt,13],;
			aBrw21Rs[oBrw21Rs:nAt,14],;
			Transform(aBrw21Rs[oBrw21Rs:nAt,15],'@E 999,999,999.9999'),;
			Transform(aBrw21Rs[oBrw21Rs:nAt,16],'@E 999,999,999.9999'),;
			Transform(aBrw21Rs[oBrw21Rs:nAt,17],'@E 999,999,999.99'),;
			Transform(aBrw21Rs[oBrw21Rs:nAt,18],'@E 999,999,999.99'),;
			Transform(aBrw21Rs[oBrw21Rs:nAt,19],'@E 999,999,999.99'),;
			aBrw21Rs[oBrw21Rs:nAt,20],;
			aBrw21Rs[oBrw21Rs:nAt,21],;
			aBrw21Rs[oBrw21Rs:nAt,22],;
			aBrw21Rs[oBrw21Rs:nAt,23],;
			aBrw21Rs[oBrw21Rs:nAt,24],;
			aBrw21Rs[oBrw21Rs:nAt,25],;
			Transform(aBrw21Rs[oBrw21Rs:nAt,26],'@E 999,999,999.9999'),;
			Transform(aBrw21Rs[oBrw21Rs:nAt,27],'@E 999,999,999.99'),;
			Transform(aBrw21Rs[oBrw21Rs:nAt,28],'@E 999,999,999.99'),;
			Transform(aBrw21Rs[oBrw21Rs:nAt,29],'@E 999,999,999.99')} }

		//INICIO Chamado n.050629 - OS n. 054855 - Relatório Revenda Tributada - Abel Babini  - 19/11/2019
		//--------------------------------------------------------------------------
		//ABA 22 - REVENDA TRIBUTADA
		//--------------------------------------------------------------------------
		oFLr22p1:= FWLayer():New()
		IF nOpMdl	== 1
			oFLr22p1:Init( oFolder030:aDialogs[21], .F., .T.) //RESUMO
		ELSEIF nOpMdl	== 2
			oFLr22p1:Init( oFolder030:aDialogs[11], .F., .T.) //RESUMO
		ELSEIF nOpMdl	== 4
			oFLr22p1:Init( oFolder030:aDialogs[12], .F., .T.) //RESUMO
		ENDIF

		//TITULO
		oFLr22p1:AddLine ('TIT_DLG1', 6, .F.)
		oFLr22p1:AddCollumn('TIT_DLG1',100,.F.,'TIT_DLG1')
		//DETALHE
		oFLr22p1:AddLine ('DET_DLG1', 74, .F.)
		oFLr22p1:AddCollumn('DET_DLG1E',100,.F.,'DET_DLG1')
		//oFLr22p1:AddCollumn('DET_DLG1D',80,.F.,'DET_DLG1')
		//RODAPE
		oFLr22p1:AddLine ('ROD_DLG1', 20, .F.)
		oFLr22p1:AddCollumn('ROD_DLG1',100,.F.,'ROD_DLG1')

		oPn22T1		:= oFLr22p1:GetColPanel('TIT_DLG1','TIT_DLG1')
		oPn22D1E	:= oFLr22p1:GetColPanel('DET_DLG1E','DET_DLG1')
		oPn22R1		:= oFLr22p1:GetColPanel('ROD_DLG1','ROD_DLG1')

		oPn22T1:FreeChildren()
		oPn22D1E:FreeChildren()
		oPn22R1:FreeChildren()

		//Cabecalho
		@ 001,008 SAY OemToAnsi("Revenda Tributada")			FONT oFont003 SIZE 400,15 OF oPn22T1 PIXEL

		@ 001,008 SAY OemToAnsi("Totais")									FONT oFont003 SIZE 200,15 OF oPn22R1 PIXEL

		@ 010,004 TO 028,215 OF oPn22R1 PIXEL

		@ 014,008 SAY OemToAnsi("Total ICMS Revenda Tributada")		FONT oFont002 SIZE 200,15 OF oPn22R1 PIXEL
		@ 014,150 MSGET nR22ICMS	SIZE 60,08 OF oPn22R1 PIXEL When .F. PICTURE '@E 9,999,999,999.99' // Total Vl Cofins Merc Interno

		//QUADRO DE RELATÓRIO
		@ 001,558 SAY OemToAnsi("OUTRAS OPÇÕES")		SIZE 200,15	FONT oFont003 OF oPn22R1 PIXEL
		@ 014,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION xRelBr22() OF oPn22R1 PIXEL //"Exportar Excel"

		oBrw22Rs:= TcBrowse():New(010,050,150,150,,,,oPn22D1E,,,,,,,,,,,,.f.,cAlB22Rs,.t.,,.f.,,,,)
		oBrw22Rs:AddColumn( TcColumn():New( "Filial"			, {|| (cAlB22Rs)->FILIAL}		, "@!"						,,,"CENTER"	,040,.f.,.f.,,,,.f.,) )
		oBrw22Rs:AddColumn( TcColumn():New( "Produto"			, {|| (cAlB22Rs)->CODPROD}	, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw22Rs:AddColumn( TcColumn():New( "Desc.Prod"		, {|| (cAlB22Rs)->DESCPROD}	, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw22Rs:AddColumn( TcColumn():New( "Quant"				, {|| (cAlB22Rs)->QUANT}		, "@E 999,999,999.9999"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw22Rs:AddColumn( TcColumn():New( "Vl. Cont"		, {|| (cAlB22Rs)->VLCONT}		, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw22Rs:AddColumn( TcColumn():New( "Vl. ICMS"		, {|| (cAlB22Rs)->VLICMS}		, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		
		oBrw22Rs:Align		:=	CONTROL_ALIGN_ALLCLIENT

		// FIM Chamado n.050629 - OS n. 054855 - Relatório Revenda Tributada - Abel Babini  - 19/11/2019
	ENDIF

	IF nOpMdl	== 1 .or. nOpMdl	== 2
		// INICIO n.040930  - Relatorio Industrialização PA - Abel Babini - 24/06/2019
		//--------------------------------------------------------------------------
		//ABA 23 - INDUSTR. PA
		//--------------------------------------------------------------------------
		//aFld23  := {cFld23p01,cFld23p02,cFld23p03,cFld23p04,cFld23p05,cFld23p06,cFld23p07,cFld23p08}
		IF nOpMdl	== 1
			oFld23	:=TFolder():New(1,1,aFld23,{},oFolder030:aDialogs[22],,,, .T., .F.,aPosObj[2,4]-5,aPosObj[2,3]-46,)
		ELSEIF nOpMdl	== 2
			oFld23	:=TFolder():New(1,1,aFld23,{},oFolder030:aDialogs[12],,,, .T., .F.,aPosObj[2,4]-5,aPosObj[2,3]-46,)
		ENDIF
		
		oFld23:aDialogs[1]:oFont :=oDlg:oFont //Resumo
		oFld23:aDialogs[2]:oFont :=oDlg:oFont //Remessas
		oFld23:aDialogs[3]:oFont :=oDlg:oFont //Retornos
		oFld23:aDialogs[4]:oFont :=oDlg:oFont //Ordens de Produção
		oFld23:aDialogs[5]:oFont :=oDlg:oFont //Saldo Poder 3os
		oFld23:aDialogs[6]:oFont :=oDlg:oFont //Insumos não utilizados no processo
		oFld23:aDialogs[7]:oFont :=oDlg:oFont //Resumo por Produto

		////////////////////////////////////////////////////////////
		oFLr23p1:= FWLayer():New()
		oFLr23p1:Init( oFld23:aDialogs[1], .F., .T.) //RESUMO

		//Define os Paineis
		//TITULO
		oFLr23p1:AddLine ('TIT_DET', 6, .F.)
		oFLr23p1:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

		oFLr23p1:AddLine ('DETALHE1', 36, .F.)
		oFLr23p1:AddCollumn('DET_ESQ1',20,.F.,'DETALHE1')
		oFLr23p1:AddCollumn('DET_DIR1',80,.F.,'DETALHE1')

		oFLr23p1:AddLine ('TIT_DET2', 6, .F.)
		oFLr23p1:AddCollumn('TIT_ESQ2',100,.F.,'TIT_DET2')

		oFLr23p1:AddLine ('DETALHE2', 36, .F.)
		//oFLr23p1:AddCollumn('DET_ESQ2',20,.F.,'DETALHE2')
		oFLr23p1:AddCollumn('DET_DIR2',100,.F.,'DETALHE2')

		oFLr23p1:AddLine ('RESUMO', 16, .F.)
		oFLr23p1:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

		oP23TE01	:= oFLr23p1:GetColPanel('TIT_ESQ','TIT_DET')
		oP23D101	:= oFLr23p1:GetColPanel('DET_ESQ1','DETALHE1')
		oP23D102	:= oFLr23p1:GetColPanel('DET_DIR1','DETALHE1')
		oP23TE02	:= oFLr23p1:GetColPanel('TIT_ESQ2','TIT_DET2')
		oP23D104	:= oFLr23p1:GetColPanel('DET_DIR2','DETALHE2')
		oP23RE01	:= oFLr23p1:GetColPanel('RES_ESQ','RESUMO')

		oP23TE01:FreeChildren()
		oP23D101:FreeChildren()
		oP23D102:FreeChildren()
		oP23TE02:FreeChildren()
		oP23D104:FreeChildren()
		oP23RE01:FreeChildren()
		
		//Cabecalho
		@ 001,008 SAY OemToAnsi("Resumo Industrialização de PA por CFOP e Fornecedor")		FONT oFont003 SIZE 300,15 OF oP23TE01 PIXEL

		@ 001,008 SAY OemToAnsi("Totais Industrialização de PA por Fornecedor")		FONT oFont003 SIZE 300,15 OF oP23TE02 PIXEL

		nRadio := 1
		aItems := {'Individual','Consolidado'}
		oRadio := TRadMenu():New (10,490,aItems,,oP23RE01,,,,,,,,060,12,,,,.T.)
		oRadio:bSetGet := {|u|Iif (PCount()==0,nRadio,nRadio:=u)}
			
		//QUADRO DE RELATÓRIO
		@ 001,558 SAY OemToAnsi("OUTRAS OPÇÕES")		SIZE 200,15	FONT oFont003 OF oP23RE01 PIXEL
		@ 010,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION xRelBr23(nRadio) OF oP23RE01 PIXEL //"Exportar Excel"
		
		//Tree
		oTrF23p1 := DbTree():New(001,001,133,100,oP23D101,,,.T.,,,"Fornecedores")
		oTrF23p1:Align		:=	CONTROL_ALIGN_ALLCLIENT	 // CONTROL_ALIGN_TOP //
		oTrF23p1:SetScroll (1,.T.) 
		oTrF23p1:SetScroll (2,.T.) 
		oTrF23p1:bLClicked := {|| Iif( oTrF23p1:IsEmpty(), MsgStop("Não há dados a serem exibidos.","Função Não Catalogada"), U_FltTr23(1)) }
		oTrF23p1:SetCss("QTreeWidget{background-color: #F9F9F9}")
		//Atualiza TreeView
		aTr23p1		:= {}
		
		oTrF23p1:AddItem("TODOS                              ","TODOS XXXX", "FOLDER5","FOLDER6",,,1	) 
		For i := 1 to Len(aBrw23Rs)
			If !ASCAN(aTr23p1,{|X| X[1] == Alltrim(aBrw23Rs[i,7])}) > 0
				AADD(aTr23p1,{})
				nPos := Len(aTr23p1)		
				AADD(aTr23p1[nPos], Alltrim(aBrw23Rs[i,7]))		//01
				oTrF23p1:AddItem(Alltrim(aBrw23Rs[i,7])+"-"+Left(Alltrim(aBrw23Rs[i,8]),30),aBrw23Rs[i,7],"FOLDER6",,,,2)
			Endif
		Next i
		
		oTrF23p1:EndTree()
		
		oBrw23Rs:= TcBrowse():New(004,004,150,150,,,,oP23D102,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
		
		oBrw23Rs:AddColumn( TcColumn():New( "Filial"		, {|| aBrw23Tr[oBrw23Rs:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Rs:AddColumn( TcColumn():New( "CFOP"			, {|| aBrw23Tr[oBrw23Rs:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Rs:AddColumn( TcColumn():New( "Vl. Contábil"	, {|| aBrw23Tr[oBrw23Rs:nAt,03]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23Rs:AddColumn( TcColumn():New( "Vl. ICMS"		, {|| aBrw23Tr[oBrw23Rs:nAt,04]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23Rs:AddColumn( TcColumn():New( "Vl. ICMS Ret"	, {|| aBrw23Tr[oBrw23Rs:nAt,05]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23Rs:AddColumn( TcColumn():New( "Quant."		, {|| aBrw23Tr[oBrw23Rs:nAt,06]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23Rs:AddColumn( TcColumn():New( "Cod.Forn"		, {|| aBrw23Tr[oBrw23Rs:nAt,07]}	, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw23Rs:AddColumn( TcColumn():New( "Fornecedor"	, {|| aBrw23Tr[oBrw23Rs:nAt,08]}	, "@!"						,,,"LEFT"	,080,.f.,.f.,,,,.f.,) )
			
		oBrw23Rs:SetArray(aBrw23Tr)
		oBrw23Rs:Align		:=	CONTROL_ALIGN_ALLCLIENT	
		//oBrw23Rs:Align		:=	CONTROL_ALIGN_TOP
		oBrw23Rs:bLine := {||{aBrw23Tr[oBrw23Rs:nAt]} } 	
			

		oBrw23R2:= TcBrowse():New(004,004,150,150,,,,oP23D104,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
		oBrw23R2:AddColumn( TcColumn():New( "Filial"		, {|| aBrw23R2[oBrw23R2:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23R2:AddColumn( TcColumn():New( "Fornecedor"	, {|| aBrw23R2[oBrw23R2:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			
		For nColBr23 = 1 To nQIEForn
			fAddCols( nColBr23 , "23")
		Next nColBr23
		oBrw23R2:AddColumn( TcColumn():New( "Total"			, {|| aBrw23R2[oBrw23R2:nAt,nQIEForn+3]}	, "@E 999,999,999.99"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

		oBrw23R2:SetArray(aBrw23R2)
		oBrw23R2:Align		:=	CONTROL_ALIGN_ALLCLIENT	
		oBrw23R2:bLine := {||{aBrw23R2[oBrw23R2:nAt]} } 	

		////////////////////////////////////////////////////////////
		oFLr23p2:= FWLayer():New()
		oFLr23p2:Init( oFld23:aDialogs[2], .F., .T.) //REMESSAS INDUSTRIALIZAÇÃO PA
		
		//Define os Paineis 
		//TITULO
		oFLr23p2:AddLine ('TIT_DET', 6, .F.)
		oFLr23p2:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

		oFLr23p2:AddLine ('DETALHE1', 84, .F.)
		oFLr23p2:AddCollumn('DET_ESQ1',20,.F.,'DETALHE1')
		oFLr23p2:AddCollumn('DET_DIR1',80,.F.,'DETALHE1')

		oFLr23p2:AddLine ('RESUMO', 10, .F.)
		oFLr23p2:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

		oP23TE21	:= oFLr23p2:GetColPanel('TIT_ESQ','TIT_DET')
		oP23D201	:= oFLr23p2:GetColPanel('DET_ESQ1','DETALHE1')
		oP23D202	:= oFLr23p2:GetColPanel('DET_DIR1','DETALHE1')
		oP23RE21	:= oFLr23p2:GetColPanel('RES_ESQ','RESUMO')

		oP23TE21:FreeChildren()
		oP23D201:FreeChildren()
		oP23D202:FreeChildren()
		oP23RE21:FreeChildren()
		
		//Cabecalho
		@ 001,008 SAY OemToAnsi("Remessas Industrialização de PA")		FONT oFont003 SIZE 300,15 OF oP23TE21 PIXEL
		//Tree
		oTrF23p2 := DbTree():New(001,001,133,100,oP23D201,,,.T.,,,"Fornecedores")
		oTrF23p2:Align		:=	CONTROL_ALIGN_ALLCLIENT	 // CONTROL_ALIGN_TOP //
		oTrF23p2:SetScroll (1,.T.) 
		oTrF23p2:SetScroll (2,.T.) 
		oTrF23p2:bLClicked := {|| Iif( oTrF23p2:IsEmpty(), MsgStop("Não há dados a serem exibidos.","Função Não Catalogada"), U_FltTr23(2)) }
		oTrF23p2:SetCss("QTreeWidget{background-color: #F9F9F9}")
		
		//Atualiza TreeView
		aTr23p2		:= {}
		
		oTrF23p2:AddItem("TODOS                              ","TODOS XXXX", "FOLDER5","FOLDER6",,,1	) 
		For i := 1 to Len(aBrw23Rs)
			If !ASCAN(aTr23p2,{|X| X[1] == Alltrim(aBrw23Rs[i,7])}) > 0
				AADD(aTr23p2,{})
				nPos := Len(aTr23p2)		
				AADD(aTr23p2[nPos], Alltrim(aBrw23Rs[i,7]))		//01
				oTrF23p2:AddItem(Alltrim(aBrw23Rs[i,7])+"-"+Left(Alltrim(aBrw23Rs[i,8]),30),aBrw23Rs[i,7],"FOLDER6",,,,2)
			Endif
		Next i
		
		oTrF23p2:EndTree()
			
		oBrw23Rm:= TcBrowse():New(004,004,150,150,,,,oP23D202,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
		
		oBrw23Rm:AddColumn( TcColumn():New( "Filial"		, {|| aBrw23RZ[oBrw23Rm:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Rm:AddColumn( TcColumn():New( "Dt.Emissão"	, {|| aBrw23RZ[oBrw23Rm:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Rm:AddColumn( TcColumn():New( "Espécie"		, {|| aBrw23RZ[oBrw23Rm:nAt,03]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Rm:AddColumn( TcColumn():New( "Série"			, {|| aBrw23RZ[oBrw23Rm:nAt,04]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Rm:AddColumn( TcColumn():New( "Nota Fiscal"	, {|| aBrw23RZ[oBrw23Rm:nAt,05]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Rm:AddColumn( TcColumn():New( "Item"			, {|| aBrw23RZ[oBrw23Rm:nAt,06]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Rm:AddColumn( TcColumn():New( "Cod.Forn."		, {|| aBrw23RZ[oBrw23Rm:nAt,07]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Rm:AddColumn( TcColumn():New( "Loja.Forn."	, {|| aBrw23RZ[oBrw23Rm:nAt,08]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Rm:AddColumn( TcColumn():New( "Fornecedor"	, {|| aBrw23RZ[oBrw23Rm:nAt,09]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Rm:AddColumn( TcColumn():New( "Cod.Prod."		, {|| aBrw23RZ[oBrw23Rm:nAt,10]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Rm:AddColumn( TcColumn():New( "Produto"		, {|| aBrw23RZ[oBrw23Rm:nAt,11]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Rm:AddColumn( TcColumn():New( "CFOP"			, {|| aBrw23RZ[oBrw23Rm:nAt,12]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Rm:AddColumn( TcColumn():New( "Quant."		, {|| aBrw23RZ[oBrw23Rm:nAt,13]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23Rm:AddColumn( TcColumn():New( "Total"			, {|| aBrw23RZ[oBrw23Rm:nAt,14]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23Rm:AddColumn( TcColumn():New( "Vl.Cont."		, {|| aBrw23RZ[oBrw23Rm:nAt,15]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23Rm:AddColumn( TcColumn():New( "Vl.ICMS"		, {|| aBrw23RZ[oBrw23Rm:nAt,16]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23Rm:AddColumn( TcColumn():New( "Vl.ICMS Ret."	, {|| aBrw23RZ[oBrw23Rm:nAt,17]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23Rm:AddColumn( TcColumn():New( "Dt.Cancel."	, {|| aBrw23RZ[oBrw23Rm:nAt,18]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Rm:AddColumn( TcColumn():New( "Observação"	, {|| aBrw23RZ[oBrw23Rm:nAt,19]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Rm:AddColumn( TcColumn():New( "Conta Contab."	, {|| aBrw23RZ[oBrw23Rm:nAt,20]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Rm:AddColumn( TcColumn():New( "TES"			, {|| aBrw23RZ[oBrw23Rm:nAt,21]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Rm:AddColumn( TcColumn():New( "Tipo NF"		, {|| aBrw23RZ[oBrw23Rm:nAt,22]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Rm:AddColumn( TcColumn():New( "Serie NF Orig"	, {|| aBrw23RZ[oBrw23Rm:nAt,23]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Rm:AddColumn( TcColumn():New( "NF Orig"		, {|| aBrw23RZ[oBrw23Rm:nAt,24]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Rm:AddColumn( TcColumn():New( "Item Orig"		, {|| aBrw23RZ[oBrw23Rm:nAt,25]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Rm:AddColumn( TcColumn():New( "Armazem"		, {|| aBrw23RZ[oBrw23Rm:nAt,26]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Rm:AddColumn( TcColumn():New( "OP"			, {|| aBrw23RZ[oBrw23Rm:nAt,27]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Rm:AddColumn( TcColumn():New( "Pedido"			, {|| aBrw23RZ[oBrw23Rm:nAt,29]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			
		oBrw23Rm:SetArray(aBrw23RZ)
		oBrw23Rm:Align		:=	CONTROL_ALIGN_ALLCLIENT	
		oBrw23Rm:bLine := {||{aBrw23RZ[oBrw23Rm:nAt]} } 		
		////////////////////////////////////////////////////////////
		oFLr23p3:= FWLayer():New()
		oFLr23p3:Init( oFld23:aDialogs[3], .F., .T.) //RETORNOS INDUSTRIALIZAÇÃO PA
		
		//Define os Paineis 
		//TITULO
		oFLr23p3:AddLine ('TIT_DET', 6, .F.)
		oFLr23p3:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

		oFLr23p3:AddLine ('DETALHE1', 84, .F.)
		oFLr23p3:AddCollumn('DET_ESQ1',20,.F.,'DETALHE1')
		oFLr23p3:AddCollumn('DET_DIR1',80,.F.,'DETALHE1')

		oFLr23p3:AddLine ('RESUMO', 10, .F.)
		oFLr23p3:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

		oP23TE31	:= oFLr23p3:GetColPanel('TIT_ESQ','TIT_DET')
		oP23D301	:= oFLr23p3:GetColPanel('DET_ESQ1','DETALHE1')
		oP23D302	:= oFLr23p3:GetColPanel('DET_DIR1','DETALHE1')
		oP23RE31	:= oFLr23p3:GetColPanel('RES_ESQ','RESUMO')

		oP23TE31:FreeChildren()
		oP23D301:FreeChildren()
		oP23D302:FreeChildren()
		oP23RE31:FreeChildren()
		
		//Cabecalho
		@ 001,008 SAY OemToAnsi("Retornos Industrialização de PA")		FONT oFont003 SIZE 300,15 OF oP23TE31 PIXEL
		//Tree
		oTrF23p3 := DbTree():New(001,001,133,100,oP23D301,,,.T.,,,"Fornecedores")
		oTrF23p3:Align		:=	CONTROL_ALIGN_ALLCLIENT	 // CONTROL_ALIGN_TOP //
		oTrF23p3:SetScroll (1,.T.) 
		oTrF23p3:SetScroll (2,.T.) 
		oTrF23p3:bLClicked := {|| Iif( oTrF23p3:IsEmpty(), MsgStop("Não há dados a serem exibidos.","Função Não Catalogada"), U_FltTr23(3)) }
		oTrF23p3:SetCss("QTreeWidget{background-color: #F9F9F9}")
		
		//Atualiza TreeView
		aTr23p3		:= {}
		
		oTrF23p3:AddItem("TODOS                              ","TODOS XXXX", "FOLDER5","FOLDER6",,,1	) 
		For i := 1 to Len(aBrw23Rs)
			If !ASCAN(aTr23p3,{|X| X[1] == Alltrim(aBrw23Rs[i,7])}) > 0
				AADD(aTr23p3,{})
				nPos := Len(aTr23p3)		
				AADD(aTr23p3[nPos], Alltrim(aBrw23Rs[i,7]))		//01
				oTrF23p3:AddItem(Alltrim(aBrw23Rs[i,7])+"-"+Left(Alltrim(aBrw23Rs[i,8]),30),aBrw23Rs[i,7],"FOLDER6",,,,2)
			Endif
		Next i
		
		oTrF23p3:EndTree()
		oBrw23Dv:= TcBrowse():New(004,004,150,150,,,,oP23D302,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
		
		oBrw23Dv:AddColumn( TcColumn():New( "Filial"			, {|| aBrw23DZ[oBrw23Dv:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Dv:AddColumn( TcColumn():New( "Dt.Entrada"	, {|| aBrw23DZ[oBrw23Dv:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Dv:AddColumn( TcColumn():New( "Espécie"			, {|| aBrw23DZ[oBrw23Dv:nAt,03]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Dv:AddColumn( TcColumn():New( "Série"				, {|| aBrw23DZ[oBrw23Dv:nAt,04]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Dv:AddColumn( TcColumn():New( "Nota Fiscal"	, {|| aBrw23DZ[oBrw23Dv:nAt,05]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Dv:AddColumn( TcColumn():New( "Item"				, {|| aBrw23DZ[oBrw23Dv:nAt,06]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Dv:AddColumn( TcColumn():New( "Cod.Forn."		, {|| aBrw23DZ[oBrw23Dv:nAt,07]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Dv:AddColumn( TcColumn():New( "Loja.Forn."	, {|| aBrw23DZ[oBrw23Dv:nAt,08]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Dv:AddColumn( TcColumn():New( "Fornecedor"	, {|| aBrw23DZ[oBrw23Dv:nAt,09]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Dv:AddColumn( TcColumn():New( "Cod.Prod."		, {|| aBrw23DZ[oBrw23Dv:nAt,10]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Dv:AddColumn( TcColumn():New( "Produto"			, {|| aBrw23DZ[oBrw23Dv:nAt,11]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Dv:AddColumn( TcColumn():New( "CFOP"				, {|| aBrw23DZ[oBrw23Dv:nAt,12]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Dv:AddColumn( TcColumn():New( "Quant."			, {|| aBrw23DZ[oBrw23Dv:nAt,13]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23Dv:AddColumn( TcColumn():New( "Total"				, {|| aBrw23DZ[oBrw23Dv:nAt,14]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23Dv:AddColumn( TcColumn():New( "Vl.Cont."		, {|| aBrw23DZ[oBrw23Dv:nAt,15]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23Dv:AddColumn( TcColumn():New( "Vl.ICMS"			, {|| aBrw23DZ[oBrw23Dv:nAt,16]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23Dv:AddColumn( TcColumn():New( "Vl.ICMS Ret.", {|| aBrw23DZ[oBrw23Dv:nAt,17]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23Dv:AddColumn( TcColumn():New( "Dt.Cancel."	, {|| aBrw23DZ[oBrw23Dv:nAt,18]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Dv:AddColumn( TcColumn():New( "Observação"	, {|| aBrw23DZ[oBrw23Dv:nAt,19]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Dv:AddColumn( TcColumn():New( "Conta Contab."	, {|| aBrw23DZ[oBrw23Dv:nAt,20]}, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Dv:AddColumn( TcColumn():New( "TES"					, {|| aBrw23DZ[oBrw23Dv:nAt,21]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Dv:AddColumn( TcColumn():New( "Tipo NF"			, {|| aBrw23DZ[oBrw23Dv:nAt,22]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Dv:AddColumn( TcColumn():New( "Serie NF Orig"	, {|| aBrw23DZ[oBrw23Dv:nAt,23]}, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Dv:AddColumn( TcColumn():New( "NF Orig"			, {|| aBrw23DZ[oBrw23Dv:nAt,24]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Dv:AddColumn( TcColumn():New( "Item Orig"		, {|| aBrw23DZ[oBrw23Dv:nAt,25]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Dv:AddColumn( TcColumn():New( "Armazem"			, {|| aBrw23DZ[oBrw23Dv:nAt,26]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Dv:AddColumn( TcColumn():New( "OP"					, {|| aBrw23DZ[oBrw23Dv:nAt,27]}	, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )	
		oBrw23Dv:AddColumn( TcColumn():New( "Mês-Ano"			, {|| aBrw23DZ[oBrw23Dv:nAt,29]}	, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
			
		oBrw23Dv:SetArray(aBrw23DZ)
		oBrw23Dv:Align		:=	CONTROL_ALIGN_ALLCLIENT	
		oBrw23Dv:bLine := {||{aBrw23DZ[oBrw23Dv:nAt]} } 
		////////////////////////////////////////////////////////////
		oFLr23p4:= FWLayer():New()
		oFLr23p4:Init( oFld23:aDialogs[4], .F., .T.) //OP'S ORDENS DE PRODUÇÃO
		
		//Define os Paineis 
		//TITULO
		oFLr23p4:AddLine ('TIT_DET', 6, .F.)
		oFLr23p4:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

		oFLr23p4:AddLine ('DETALHE1', 84, .F.)
		oFLr23p4:AddCollumn('DET_ESQ1',20,.F.,'DETALHE1')
		oFLr23p4:AddCollumn('DET_DIR1',80,.F.,'DETALHE1')

		oFLr23p4:AddLine ('RESUMO', 10, .F.)
		oFLr23p4:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

		oP23TE41	:= oFLr23p4:GetColPanel('TIT_ESQ','TIT_DET')
		oP23D401	:= oFLr23p4:GetColPanel('DET_ESQ1','DETALHE1')
		oP23D402	:= oFLr23p4:GetColPanel('DET_DIR1','DETALHE1')
		oP23RE41	:= oFLr23p4:GetColPanel('RES_ESQ','RESUMO')

		oP23TE41:FreeChildren()
		oP23D401:FreeChildren()
		oP23D402:FreeChildren()
		oP23RE41:FreeChildren()
		
		//Cabecalho
		@ 001,008 SAY OemToAnsi("Ordens de Produção")		FONT oFont003 SIZE 300,15 OF oP23TE41 PIXEL
		//Tree
		oTrF23p4 := DbTree():New(001,001,133,100,oP23D401,,,.T.,,,"Fornecedores")
		oTrF23p4:Align		:=	CONTROL_ALIGN_ALLCLIENT	 // CONTROL_ALIGN_TOP //
		oTrF23p4:SetScroll (1,.T.) 
		oTrF23p4:SetScroll (2,.T.) 
		oTrF23p4:bLClicked := {|| Iif( oTrF23p4:IsEmpty(), MsgStop("Não há dados a serem exibidos.","Função Não Catalogada"), U_FltTr23(4)) }
		oTrF23p4:SetCss("QTreeWidget{background-color: #F9F9F9}")
		
		//Atualiza TreeView
		aTr23p4		:= {}
		
		oTrF23p4:AddItem("TODOS                              ","TODOS XXXX", "FOLDER5","FOLDER6",,,1	) 
		For i := 1 to Len(aBrw23Rs)
			If !ASCAN(aTr23p4,{|X| X[1] == Alltrim(aBrw23Rs[i,7])}) > 0
				AADD(aTr23p4,{})
				nPos := Len(aTr23p4)		
				AADD(aTr23p4[nPos], Alltrim(aBrw23Rs[i,7]))		//01
				oTrF23p4:AddItem(Alltrim(aBrw23Rs[i,7])+"-"+Left(Alltrim(aBrw23Rs[i,8]),30),aBrw23Rs[i,7],"FOLDER6",,,,2)
			Endif
		Next i
		
		oTrF23p4:EndTree()
		
		oBrw23Op:= TcBrowse():New(004,004,150,150,,,,oP23D402,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
		
		oBrw23Op:AddColumn( TcColumn():New( "Filial"		, {|| aBrw23OZ[oBrw23Op:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Op:AddColumn( TcColumn():New( "Dt.Entrada"	, {|| aBrw23OZ[oBrw23Op:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Op:AddColumn( TcColumn():New( "OP"			, {|| aBrw23OZ[oBrw23Op:nAt,03]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Op:AddColumn( TcColumn():New( "Serie NF Rem."	, {|| aBrw23OZ[oBrw23Op:nAt,04]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Op:AddColumn( TcColumn():New( "NF Rem."		, {|| aBrw23OZ[oBrw23Op:nAt,05]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Op:AddColumn( TcColumn():New( "Item NF Rem."	, {|| aBrw23OZ[oBrw23Op:nAt,06]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Op:AddColumn( TcColumn():New( "Cod.Forn."		, {|| aBrw23OZ[oBrw23Op:nAt,07]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Op:AddColumn( TcColumn():New( "Loja.Forn."	, {|| aBrw23OZ[oBrw23Op:nAt,08]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Op:AddColumn( TcColumn():New( "Fornecedor"	, {|| aBrw23OZ[oBrw23Op:nAt,09]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Op:AddColumn( TcColumn():New( "Cod.Prod."		, {|| aBrw23OZ[oBrw23Op:nAt,10]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Op:AddColumn( TcColumn():New( "Produto"		, {|| aBrw23OZ[oBrw23Op:nAt,11]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Op:AddColumn( TcColumn():New( "Série Ret."	, {|| aBrw23OZ[oBrw23Op:nAt,12]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Op:AddColumn( TcColumn():New( "NF Ret."		, {|| aBrw23OZ[oBrw23Op:nAt,13]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Op:AddColumn( TcColumn():New( "Item NF Ret."	, {|| aBrw23OZ[oBrw23Op:nAt,14]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Op:AddColumn( TcColumn():New( "TES"			, {|| aBrw23OZ[oBrw23Op:nAt,20]}	, "@!"						,,,"RIGHT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Op:AddColumn( TcColumn():New( "CFOP"			, {|| aBrw23OZ[oBrw23Op:nAt,21]}	, "@!"						,,,"RIGHT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Op:AddColumn( TcColumn():New( "Quant."		, {|| aBrw23OZ[oBrw23Op:nAt,15]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23Op:AddColumn( TcColumn():New( "Total"			, {|| aBrw23OZ[oBrw23Op:nAt,16]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23Op:AddColumn( TcColumn():New( "Vl.Cont."		, {|| aBrw23OZ[oBrw23Op:nAt,17]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23Op:AddColumn( TcColumn():New( "Vl.ICMS"		, {|| aBrw23OZ[oBrw23Op:nAt,18]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23Op:AddColumn( TcColumn():New( "Vl.ICMS Ret."	, {|| aBrw23OZ[oBrw23Op:nAt,19]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			
		oBrw23Op:SetArray(aBrw23OZ)
		oBrw23Op:Align		:=	CONTROL_ALIGN_ALLCLIENT	
		oBrw23Op:bLine := {||{aBrw23OZ[oBrw23Op:nAt]} } 

		////////////////////////////////////////////////////////////
		oFLr23p5:= FWLayer():New()
		oFLr23p5:Init( oFld23:aDialogs[5], .F., .T.) //SALDO PODER DE 3os
		
		//Define os Paineis 
		//TITULO
		oFLr23p5:AddLine ('TIT_DET', 6, .F.)
		oFLr23p5:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

		oFLr23p5:AddLine ('DETALHE1', 84, .F.)
		oFLr23p5:AddCollumn('DET_ESQ1',20,.F.,'DETALHE1')
		oFLr23p5:AddCollumn('DET_DIR1',80,.F.,'DETALHE1')

		oFLr23p5:AddLine ('RESUMO', 10, .F.)
		oFLr23p5:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

		oP23TE51	:= oFLr23p5:GetColPanel('TIT_ESQ','TIT_DET')
		oP23D501	:= oFLr23p5:GetColPanel('DET_ESQ1','DETALHE1')
		oP23D502	:= oFLr23p5:GetColPanel('DET_DIR1','DETALHE1')
		oP23RE51	:= oFLr23p5:GetColPanel('RES_ESQ','RESUMO')

		oP23TE51:FreeChildren()
		oP23D501:FreeChildren()
		oP23D502:FreeChildren()
		oP23RE51:FreeChildren()
		
		//Cabecalho
		@ 001,008 SAY OemToAnsi("Conciliação Saldo Poder de 3ºs")		FONT oFont003 SIZE 300,15 OF oP23TE51 PIXEL
		//Tree
		oTrF23p5 := DbTree():New(001,001,133,100,oP23D501,,,.T.,,,"Fornecedores")
		oTrF23p5:Align		:=	CONTROL_ALIGN_ALLCLIENT	 // CONTROL_ALIGN_TOP //
		oTrF23p5:SetScroll (1,.T.) 
		oTrF23p5:SetScroll (2,.T.) 
		oTrF23p5:bLClicked := {|| Iif( oTrF23p5:IsEmpty(), MsgStop("Não há dados a serem exibidos.","Função Não Catalogada"), U_FltTr23(5)) }
		oTrF23p5:SetCss("QTreeWidget{background-color: #F9F9F9}")
		
		//Atualiza TreeView
		aTr23p5		:= {}
		
		oTrF23p5:AddItem("TODOS                              ","TODOS XXXX", "FOLDER5","FOLDER6",,,1	) 
		For i := 1 to Len(aBrw23Rs)
			If !ASCAN(aTr23p5,{|X| X[1] == Alltrim(aBrw23Rs[i,7])}) > 0
				AADD(aTr23p5,{})
				nPos := Len(aTr23p5)		
				AADD(aTr23p5[nPos], Alltrim(aBrw23Rs[i,7]))		//01
				oTrF23p5:AddItem(Alltrim(aBrw23Rs[i,7])+"-"+Left(Alltrim(aBrw23Rs[i,8]),30),aBrw23Rs[i,7],"FOLDER6",,,,2)
			Endif
		Next i
		
		oTrF23p5:EndTree()
		
		oBrw23S3:= TcBrowse():New(004,004,150,150,,,,oP23D502,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
		
		oBrw23S3:AddColumn( TcColumn():New( "Filial"		, {|| aBrw23SZ[oBrw23S3:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23S3:AddColumn( TcColumn():New( "Ident.B6"		, {|| aBrw23SZ[oBrw23S3:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23S3:AddColumn( TcColumn():New( "Dt.Emissão"	, {|| aBrw23SZ[oBrw23S3:nAt,03]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23S3:AddColumn( TcColumn():New( "Série NF"		, {|| aBrw23SZ[oBrw23S3:nAt,04]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23S3:AddColumn( TcColumn():New( "NF"			, {|| aBrw23SZ[oBrw23S3:nAt,05]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23S3:AddColumn( TcColumn():New( "Cod.Forn."		, {|| aBrw23SZ[oBrw23S3:nAt,06]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23S3:AddColumn( TcColumn():New( "Loja.Forn."	, {|| aBrw23SZ[oBrw23S3:nAt,07]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23S3:AddColumn( TcColumn():New( "Fornecedor"	, {|| aBrw23SZ[oBrw23S3:nAt,08]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23S3:AddColumn( TcColumn():New( "Cod.Prod."		, {|| aBrw23SZ[oBrw23S3:nAt,09]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23S3:AddColumn( TcColumn():New( "Produto"		, {|| aBrw23SZ[oBrw23S3:nAt,10]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23S3:AddColumn( TcColumn():New( "TES"			, {|| aBrw23SZ[oBrw23S3:nAt,11]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23S3:AddColumn( TcColumn():New( "CFOP"			, {|| aBrw23SZ[oBrw23S3:nAt,12]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23S3:AddColumn( TcColumn():New( "Tipo Poder3"	, {|| aBrw23SZ[oBrw23S3:nAt,13]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23S3:AddColumn( TcColumn():New( "Oper.Poder3"	, {|| aBrw23SZ[oBrw23S3:nAt,14]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23S3:AddColumn( TcColumn():New( "Armazém"		, {|| aBrw23SZ[oBrw23S3:nAt,15]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23S3:AddColumn( TcColumn():New( "Quant."		, {|| aBrw23SZ[oBrw23S3:nAt,16]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23S3:AddColumn( TcColumn():New( "Unid.Med."		, {|| aBrw23SZ[oBrw23S3:nAt,17]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23S3:AddColumn( TcColumn():New( "Pr.Unit."		, {|| aBrw23SZ[oBrw23S3:nAt,18]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23S3:AddColumn( TcColumn():New( "Total"			, {|| aBrw23SZ[oBrw23S3:nAt,19]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23S3:AddColumn( TcColumn():New( "Dt.Ult.Ret."	, {|| aBrw23SZ[oBrw23S3:nAt,20]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23S3:AddColumn( TcColumn():New( "Qtd.Retorn."	, {|| aBrw23SZ[oBrw23S3:nAt,21]}	, "@E 999,999,999.99"		,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23S3:AddColumn( TcColumn():New( "Total Retor."	, {|| aBrw23SZ[oBrw23S3:nAt,22]}	, "@E 999,999,999.99"		,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23S3:AddColumn( TcColumn():New( "Qtd.Saldo"		, {|| aBrw23SZ[oBrw23S3:nAt,23]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23S3:AddColumn( TcColumn():New( "Total Saldo"	, {|| aBrw23SZ[oBrw23S3:nAt,24]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			
		oBrw23S3:SetArray(aBrw23SZ)
		oBrw23S3:Align		:=	CONTROL_ALIGN_ALLCLIENT	
		oBrw23S3:bLine := {||{aBrw23SZ[oBrw23S3:nAt]} } 
		////////////////////////////////////////////////////////////
		oFLr23p6:= FWLayer():New()
		oFLr23p6:Init( oFld23:aDialogs[6], .F., .T.) //INSUMOS NÃO UTILIZADOS NO PROCESSO
		
		//Define os Paineis 
		//TITULO
		oFLr23p6:AddLine ('TIT_DET', 6, .F.)
		oFLr23p6:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

		oFLr23p6:AddLine ('DETALHE1', 84, .F.)
		oFLr23p6:AddCollumn('DET_ESQ1',20,.F.,'DETALHE1')
		oFLr23p6:AddCollumn('DET_DIR1',80,.F.,'DETALHE1')

		oFLr23p6:AddLine ('RESUMO', 10, .F.)
		oFLr23p6:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

		oP23TE61	:= oFLr23p6:GetColPanel('TIT_ESQ','TIT_DET')
		oP23D601	:= oFLr23p6:GetColPanel('DET_ESQ1','DETALHE1')
		oP23D602	:= oFLr23p6:GetColPanel('DET_DIR1','DETALHE1')
		oP23RE61	:= oFLr23p6:GetColPanel('RES_ESQ','RESUMO')

		oP23TE61:FreeChildren()
		oP23D601:FreeChildren()
		oP23D602:FreeChildren()
		oP23RE61:FreeChildren()
		
		//Cabecalho
		@ 001,008 SAY OemToAnsi("Insumos não utilizados no Processo")		FONT oFont003 SIZE 300,15 OF oP23TE61 PIXEL
		//Tree
		oTrF23p6 := DbTree():New(001,001,133,100,oP23D601,,,.T.,,,"Fornecedores")
		oTrF23p6:Align		:=	CONTROL_ALIGN_ALLCLIENT	 // CONTROL_ALIGN_TOP //
		oTrF23p6:SetScroll (1,.T.) 
		oTrF23p6:SetScroll (2,.T.) 
		oTrF23p6:bLClicked := {|| Iif( oTrF23p6:IsEmpty(), MsgStop("Não há dados a serem exibidos.","Função Não Catalogada"), U_FltTr23(6)) }
		oTrF23p6:SetCss("QTreeWidget{background-color: #F9F9F9}")
		
		//Atualiza TreeView
		aTr23p6		:= {}
		
		oTrF23p6:AddItem("TODOS                              ","TODOS XXXX", "FOLDER5","FOLDER6",,,1	) 
		For i := 1 to Len(aBrw23Rs)
			If !ASCAN(aTr23p6,{|X| X[1] == Alltrim(aBrw23Rs[i,7])}) > 0
				AADD(aTr23p6,{})
				nPos := Len(aTr23p6)		
				AADD(aTr23p6[nPos], Alltrim(aBrw23Rs[i,7]))		//01
				oTrF23p6:AddItem(Alltrim(aBrw23Rs[i,7])+"-"+Left(Alltrim(aBrw23Rs[i,8]),30),aBrw23Rs[i,7],"FOLDER6",,,,2)
			Endif
		Next i
		
		oTrF23p6:EndTree()
		
		oBrw23IN:= TcBrowse():New(004,004,150,150,,,,oP23D602,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
		
		oBrw23IN:AddColumn( TcColumn():New( "Filial"		, {|| aBrw23IZ[oBrw23IN:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23IN:AddColumn( TcColumn():New( "Dt.Entrada"	, {|| aBrw23IZ[oBrw23IN:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23IN:AddColumn( TcColumn():New( "Série Ret."	, {|| aBrw23IZ[oBrw23IN:nAt,03]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23IN:AddColumn( TcColumn():New( "NF Ret."		, {|| aBrw23IZ[oBrw23IN:nAt,04]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23IN:AddColumn( TcColumn():New( "Item NF Ret."	, {|| aBrw23IZ[oBrw23IN:nAt,05]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23IN:AddColumn( TcColumn():New( "Cod.Forn."		, {|| aBrw23IZ[oBrw23IN:nAt,06]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23IN:AddColumn( TcColumn():New( "Loja.Forn."	, {|| aBrw23IZ[oBrw23IN:nAt,07]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23IN:AddColumn( TcColumn():New( "Fornecedor"	, {|| aBrw23IZ[oBrw23IN:nAt,08]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23IN:AddColumn( TcColumn():New( "Cod.Prod."		, {|| aBrw23IZ[oBrw23IN:nAt,09]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23IN:AddColumn( TcColumn():New( "Produto"		, {|| aBrw23IZ[oBrw23IN:nAt,10]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23IN:AddColumn( TcColumn():New( "CFOP"			, {|| aBrw23IZ[oBrw23IN:nAt,11]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23IN:AddColumn( TcColumn():New( "TES"			, {|| aBrw23IZ[oBrw23IN:nAt,12]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23IN:AddColumn( TcColumn():New( "Serie NF Rem."	, {|| aBrw23IZ[oBrw23IN:nAt,13]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23IN:AddColumn( TcColumn():New( "NF Rem."		, {|| aBrw23IZ[oBrw23IN:nAt,14]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23IN:AddColumn( TcColumn():New( "Item NF Rem."	, {|| aBrw23IZ[oBrw23IN:nAt,15]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23IN:AddColumn( TcColumn():New( "Armazém"		, {|| aBrw23IZ[oBrw23IN:nAt,16]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23IN:AddColumn( TcColumn():New( "OP"			, {|| aBrw23IZ[oBrw23IN:nAt,17]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23IN:AddColumn( TcColumn():New( "Quant."		, {|| aBrw23IZ[oBrw23IN:nAt,18]}	, "@E 999,999,999.9999"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23IN:AddColumn( TcColumn():New( "Total"			, {|| aBrw23IZ[oBrw23IN:nAt,19]}	, "@E 999,999,999.9999"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23IN:AddColumn( TcColumn():New( "Vl.Cont."		, {|| aBrw23IZ[oBrw23IN:nAt,20]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23IN:AddColumn( TcColumn():New( "Vl.ICMS"		, {|| aBrw23IZ[oBrw23IN:nAt,21]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23IN:AddColumn( TcColumn():New( "Vl.ICMS Ret."	, {|| aBrw23IZ[oBrw23IN:nAt,22]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23IN:AddColumn( TcColumn():New( "Mês / Ano"	, {|| aBrw23IZ[oBrw23IN:nAt,24]}	, "@!"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			
		oBrw23IN:SetArray(aBrw23IZ)
		oBrw23IN:Align		:=	CONTROL_ALIGN_ALLCLIENT	
		oBrw23IN:bLine := {||{aBrw23IZ[oBrw23IN:nAt]} } 

		////////////////////////////////////////////////////////////
		oFLr23p7:= FWLayer():New()
		oFLr23p7:Init( oFld23:aDialogs[7], .F., .T.) //RESUMO TOTAL POR PRODUTO
		
		//Define os Paineis 
		//TITULO
		oFLr23p7:AddLine ('TIT_DET', 6, .F.)
		oFLr23p7:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

		oFLr23p7:AddLine ('DETALHE1', 84, .F.)
		oFLr23p7:AddCollumn('DET_ESQ1',20,.F.,'DETALHE1')
		oFLr23p7:AddCollumn('DET_DIR1',80,.F.,'DETALHE1')

		oFLr23p7:AddLine ('RESUMO', 10, .F.)
		oFLr23p7:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

		oP23TE71	:= oFLr23p7:GetColPanel('TIT_ESQ','TIT_DET')
		oP23D701	:= oFLr23p7:GetColPanel('DET_ESQ1','DETALHE1')
		oP23D702	:= oFLr23p7:GetColPanel('DET_DIR1','DETALHE1')
		oP23RE71	:= oFLr23p7:GetColPanel('RES_ESQ','RESUMO')

		oP23TE71:FreeChildren()
		oP23D701:FreeChildren()
		oP23D702:FreeChildren()
		oP23RE71:FreeChildren()
		
		//Cabecalho
		@ 001,008 SAY OemToAnsi("Resumo Total por Produto")		FONT oFont003 SIZE 300,15 OF oP23TE71 PIXEL
		//Tree
		oTrF23p7 := DbTree():New(001,001,133,100,oP23D701,,,.T.,,,"Fornecedores")
		oTrF23p7:Align		:=	CONTROL_ALIGN_ALLCLIENT	 // CONTROL_ALIGN_TOP //
		oTrF23p7:SetScroll (1,.T.) 
		oTrF23p7:SetScroll (2,.T.) 
		oTrF23p7:bLClicked := {|| Iif( oTrF23p7:IsEmpty(), MsgStop("Não há dados a serem exibidos.","Função Não Catalogada"), U_FltTr23(7)) }
		oTrF23p7:SetCss("QTreeWidget{background-color: #F9F9F9}")
		
		//Atualiza TreeView
		aTr23p7		:= {}
		
		oTrF23p7:AddItem("TODOS                              ","TODOS XXXX", "FOLDER5","FOLDER6",,,1	) 
		For i := 1 to Len(aBrw23Rs)
			If !ASCAN(aTr23p7,{|X| X[1] == Alltrim(aBrw23Rs[i,7])}) > 0
				AADD(aTr23p7,{})
				nPos := Len(aTr23p7)		
				AADD(aTr23p7[nPos], Alltrim(aBrw23Rs[i,7]))		//01
				oTrF23p7:AddItem(Alltrim(aBrw23Rs[i,7])+"-"+Left(Alltrim(aBrw23Rs[i,8]),30),aBrw23Rs[i,7],"FOLDER6",,,,2)
			Endif
		Next i
		
		oTrF23p7:EndTree()
		
		oBrw23Tt:= TcBrowse():New(004,004,150,150,,,,oP23D702,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
		
		oBrw23Tt:AddColumn( TcColumn():New( "Filial"		, {|| aBrw23TZ[oBrw23Tt:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Tt:AddColumn( TcColumn():New( "Cod.Forn."		, {|| aBrw23TZ[oBrw23Tt:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Tt:AddColumn( TcColumn():New( "Loja.Forn."	, {|| aBrw23TZ[oBrw23Tt:nAt,03]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Tt:AddColumn( TcColumn():New( "Fornecedor"	, {|| aBrw23TZ[oBrw23Tt:nAt,04]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Tt:AddColumn( TcColumn():New( "Cod.Prod."		, {|| aBrw23TZ[oBrw23Tt:nAt,05]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Tt:AddColumn( TcColumn():New( "Produto"		, {|| aBrw23TZ[oBrw23Tt:nAt,06]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw23Tt:AddColumn( TcColumn():New( "Quant. Rem"	, {|| aBrw23TZ[oBrw23Tt:nAt,07]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23Tt:AddColumn( TcColumn():New( "Total Rem"		, {|| aBrw23TZ[oBrw23Tt:nAt,11]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23Tt:AddColumn( TcColumn():New( "Quant. Dev"	, {|| aBrw23TZ[oBrw23Tt:nAt,08]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23Tt:AddColumn( TcColumn():New( "Total Dev"		, {|| aBrw23TZ[oBrw23Tt:nAt,12]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23Tt:AddColumn( TcColumn():New( "Quant. Saldo"	, {|| aBrw23TZ[oBrw23Tt:nAt,09]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23Tt:AddColumn( TcColumn():New( "Total Saldo"	, {|| aBrw23TZ[oBrw23Tt:nAt,13]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23Tt:AddColumn( TcColumn():New( "Quant. Saldo B6", {|| aBrw23TZ[oBrw23Tt:nAt,10]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw23Tt:AddColumn( TcColumn():New( "Total Saldo B6", {|| aBrw23TZ[oBrw23Tt:nAt,14]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			
		oBrw23Tt:SetArray(aBrw23TZ)
		oBrw23Tt:Align		:=	CONTROL_ALIGN_ALLCLIENT	
		oBrw23Tt:bLine := {||{;
							aBrw23TZ[oBrw23Tt:nAt][01],;
							aBrw23TZ[oBrw23Tt:nAt][02],;
							aBrw23TZ[oBrw23Tt:nAt][03],;
							aBrw23TZ[oBrw23Tt:nAt][04],;
							aBrw23TZ[oBrw23Tt:nAt][05],;
							aBrw23TZ[oBrw23Tt:nAt][06],;
							aBrw23TZ[oBrw23Tt:nAt][07],;
							aBrw23TZ[oBrw23Tt:nAt][11],;
							aBrw23TZ[oBrw23Tt:nAt][08],;
							aBrw23TZ[oBrw23Tt:nAt][12],;
							aBrw23TZ[oBrw23Tt:nAt][09],;
							aBrw23TZ[oBrw23Tt:nAt][13],;
							aBrw23TZ[oBrw23Tt:nAt][10],;
							aBrw23TZ[oBrw23Tt:nAt][14];
							} } 
		// FIM n.040930  - Relatorio Industrialização PA - Abel Babini - 24/06/2019
	ENDIF

	IF nOpMdl	== 1 .or. nOpMdl	== 2 .or. nOpMdl	== 4
		//--------------------------------------------------------------------------
		//ABA 24 - APURAÇÃO ICMS FRETE
		//--------------------------------------------------------------------------
		IF nOpMdl	== 1
			oFld24	:=TFolder():New(1,1,aFld24,{},oFolder030:aDialogs[23],,,, .T., .F.,aPosObj[2,4]-5,aPosObj[2,3]-46,)
		//ELSEIF nOpMdl	== 2
		//	oFld24	:=TFolder():New(1,1,aFld24b,{},oFolder030:aDialogs[13],,,, .T., .F.,aPosObj[2,4]-5,aPosObj[2,3]-46,)
		ELSEIF nOpMdl	== 2 .or. nOpMdl	== 4
			oFld24	:=TFolder():New(1,1,aFld24c,{},oFolder030:aDialogs[13],,,, .T., .F.,aPosObj[2,4]-5,aPosObj[2,3]-46,)
		ENDIF

		oFld24:aDialogs[1]:oFont :=oDlg:oFont //Resumo
		oFld24:aDialogs[2]:oFont :=oDlg:oFont //Detalhe

		IF nOpMdl	== 1
			oFld24:aDialogs[3]:oFont :=oDlg:oFont //Exportação
			oFld24:aDialogs[4]:oFont :=oDlg:oFont //Substituição Tributária Estadual
			oFld24:aDialogs[5]:oFont :=oDlg:oFont //Substituição Tributária Interestadual
			oFld24:aDialogs[6]:oFont :=oDlg:oFont //Transporte de Funcionários
			oFld24:aDialogs[7]:oFont :=oDlg:oFont //Tributado
			oFld24:aDialogs[8]:oFont :=oDlg:oFont //Anulação de Fretes
			oFld24:aDialogs[9]:oFont :=oDlg:oFont //Análise Fornecedores
		ELSEIF nOpMdl	== 2 .or. nOpMdl	== 4
			oFld24:aDialogs[3]:oFont :=oDlg:oFont //Substituição Tributária Estadual
			oFld24:aDialogs[4]:oFont :=oDlg:oFont //Substituição Tributária Interestadual
			oFld24:aDialogs[5]:oFont :=oDlg:oFont //Transporte de Funcionários
			oFld24:aDialogs[6]:oFont :=oDlg:oFont //Tributado
			oFld24:aDialogs[7]:oFont :=oDlg:oFont //Anulação de Fretes
			oFld24:aDialogs[8]:oFont :=oDlg:oFont //Análise Fornecedores
		ENDIF
		////////////////////////////////////////////////////////////
		oFLr24p1:= FWLayer():New()
		oFLr24p1:Init( oFld24:aDialogs[1], .F., .T.) //RESUMO
		
		//Define os Paineis 
		//TITULO
		oFLr24p1:AddLine ('TIT_DET', 6, .F.)
		oFLr24p1:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

		oFLr24p1:AddLine ('DETALHE1', 78, .F.)
		oFLr24p1:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

		oFLr24p1:AddLine ('RESUMO', 16, .F.)
		oFLr24p1:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

		oP24TE01	:= oFLr24p1:GetColPanel('TIT_ESQ','TIT_DET')
		oP24D101	:= oFLr24p1:GetColPanel('DET_ESQ1','DETALHE1')
		oP24RE01	:= oFLr24p1:GetColPanel('RES_ESQ','RESUMO')

		oP24TE01:FreeChildren()
		oP24D101:FreeChildren()
		oP24RE01:FreeChildren()
		
		//Cabecalho
		@ 001,008 SAY OemToAnsi("Resumo Apuração ICMS sobre Fretes")		FONT oFont003 SIZE 300,15 OF oP24TE01 PIXEL
		
		@ 001,140 SAY OemToAnsi("Valor Total")				FONT oFont002 SIZE 060,15 OF oP24D101 PIXEL
		@ 001,210 SAY OemToAnsi("Valor ICMS")				FONT oFont002 SIZE 060,15 OF oP24D101 PIXEL

		IF nOpMdl == 1
			@ 011,015 SAY OemToAnsi("Exportação")				FONT oFont001 SIZE 200,15 OF oP24D101 PIXEL
			@ 010,140 MSGET nA24T03	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
			@ 010,210 MSGET nA24T04	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

			@ 026,015 SAY OemToAnsi("Subst.Tributária Estadual")			FONT oFont001 SIZE 200,15 OF oP24D101 PIXEL
			@ 025,140 MSGET nA24T05	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
			@ 025,210 MSGET nA24T06	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

			@ 041,015 SAY OemToAnsi("Subst.Tributária Interestadual")			FONT oFont001 SIZE 200,15 OF oP24D101 PIXEL
			@ 040,140 MSGET nA24T20	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
			@ 040,210 MSGET nA24T21	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

			@ 056,015 SAY OemToAnsi("Transp. Funcionários")		FONT oFont001 SIZE 200,15 OF oP24D101 PIXEL
			@ 055,140 MSGET nA24T07	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
			@ 055,210 MSGET nA24T08	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

			@ 071,015 SAY OemToAnsi("Tributado")				FONT oFont001 SIZE 200,15 OF oP24D101 PIXEL
			@ 070,140 MSGET nA24T09	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
			@ 070,210 MSGET nA24T10	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

			@ 086,015 SAY OemToAnsi("Anulação de Frete")		FONT oFont001 SIZE 200,15 OF oP24D101 PIXEL
			@ 085,140 MSGET nA24T11	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
			@ 085,210 MSGET nA24T12	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

			@ 111,015 SAY OemToAnsi("TOTAL")					FONT oFont002 SIZE 200,15 OF oP24D101 PIXEL

			@ 110,140 MSGET nA24T01	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
			@ 110,210 MSGET nA24T02	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

			@ 107,011 TO 123,274 OF oP24D101 PIXEL

			//Ticket 6225                    - Abel Babini - 07/12/2020 - Painel Fiscal - Criar linha para anulação extemporânea de frete
			@ 128,015 SAY OemToAnsi("Anulação Extemporâneo")		FONT oFont001 SIZE 200,15 OF oP24D101 PIXEL
			@ 127,140 MSGET nA24T18	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
			@ 127,210 MSGET nA24T19	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		ELSEIF nOpMdl == 2 
			
			@ 011,015 SAY OemToAnsi("Exportação")				FONT oFont001 SIZE 200,15 OF oP24D101 PIXEL
			@ 010,140 MSGET nA24T03	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
			@ 010,210 MSGET nA24T04	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

			@ 026,015 SAY OemToAnsi("Subst.Tributária Estadual")			FONT oFont001 SIZE 200,15 OF oP24D101 PIXEL
			@ 025,140 MSGET nA24T05	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
			@ 025,210 MSGET nA24T06	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

			@ 041,015 SAY OemToAnsi("Subst.Tributária Interestadual")			FONT oFont001 SIZE 200,15 OF oP24D101 PIXEL
			@ 040,140 MSGET nA24T20	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
			@ 040,210 MSGET nA24T21	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

			//Chamado n.060517 - OS n.062030 - Abel Babini - 17/08/2020 - Altera regra de calculo do ICMS sobre Frete para os modelos 2 e 4
			@ 056,015 SAY OemToAnsi("Transp. Funcionários")		FONT oFont001 SIZE 200,15 OF oP24D101 PIXEL
			@ 055,140 MSGET nA24T07	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
			@ 055,210 MSGET nA24T08	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

			@ 071,015 SAY OemToAnsi("Tributado")				FONT oFont001 SIZE 200,15 OF oP24D101 PIXEL
			@ 070,140 MSGET nA24T09	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
			@ 070,210 MSGET nA24T10	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

			@ 086,015 SAY OemToAnsi("Anulação de Frete")		FONT oFont001 SIZE 200,15 OF oP24D101 PIXEL
			@ 085,140 MSGET nA24T11	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
			@ 085,210 MSGET nA24T12	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

			@ 111,015 SAY OemToAnsi("TOTAL")					FONT oFont002 SIZE 200,15 OF oP24D101 PIXEL

			//Chamado n.060517 - OS n.062030 - Abel Babini - 17/08/2020 - Altera regra de calculo do ICMS sobre Frete para os modelos 2 e 4
			IF _lMVCrFt			
				@ 110,140 MSGET nA24T01	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
				@ 110,210 MSGET nA24T02	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
			ELSE
				@ 110,140 MSGET nA24T17	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
				@ 110,210 MSGET nVFrt	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
			ENDIF
			@ 107,011 TO 123,274 OF oP24D101 PIXEL

			//Ticket 6225                    - Abel Babini - 07/12/2020 - Painel Fiscal - Criar linha para anulação extemporânea de frete
			@ 128,015 SAY OemToAnsi("Anulação Extemporâneo")		FONT oFont001 SIZE 200,15 OF oP24D101 PIXEL
			@ 127,140 MSGET nA24T18	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
			@ 127,210 MSGET nA24T19	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		ELSEIF nOpMdl == 4

			@ 026,015 SAY OemToAnsi("Subst.Tributária Estadual")			FONT oFont001 SIZE 200,15 OF oP24D101 PIXEL
			@ 025,140 MSGET nA24T05	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
			@ 025,210 MSGET nA24T06	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

			@ 041,015 SAY OemToAnsi("Subst.Tributária Interestadual")			FONT oFont001 SIZE 200,15 OF oP24D101 PIXEL
			@ 040,140 MSGET nA24T20	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
			@ 040,210 MSGET nA24T21	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

			//Chamado n.060517 - OS n.062030 - Abel Babini - 17/08/2020 - Altera regra de calculo do ICMS sobre Frete para os modelos 2 e 4
			@ 056,015 SAY OemToAnsi("Transp. Funcionários")		FONT oFont001 SIZE 200,15 OF oP24D101 PIXEL
			@ 055,140 MSGET nA24T07	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
			@ 055,210 MSGET nA24T08	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

			@ 071,015 SAY OemToAnsi("Tributado")				FONT oFont001 SIZE 200,15 OF oP24D101 PIXEL
			@ 070,140 MSGET nA24T09	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
			@ 070,210 MSGET nA24T10	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

			@ 086,015 SAY OemToAnsi("Anulação de Frete")		FONT oFont001 SIZE 200,15 OF oP24D101 PIXEL
			@ 085,140 MSGET nA24T11	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
			@ 085,210 MSGET nA24T12	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

			@ 111,015 SAY OemToAnsi("TOTAL")					FONT oFont002 SIZE 200,15 OF oP24D101 PIXEL

			//Chamado n.060517 - OS n.062030 - Abel Babini - 17/08/2020 - Altera regra de calculo do ICMS sobre Frete para os modelos 2 e 4
			IF _lMVCrFt			
				@ 110,140 MSGET nA24T01	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
				@ 110,210 MSGET nA24T02	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
			ELSE
				@ 110,140 MSGET nA24T17	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
				@ 110,210 MSGET nVFrt	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
			ENDIF
			@ 107,011 TO 123,274 OF oP24D101 PIXEL

			//Ticket 6225                    - Abel Babini - 07/12/2020 - Painel Fiscal - Criar linha para anulação extemporânea de frete
			@ 128,015 SAY OemToAnsi("Anulação Extemporâneo")		FONT oFont001 SIZE 200,15 OF oP24D101 PIXEL
			@ 127,140 MSGET nA24T18	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
			@ 127,210 MSGET nA24T19	SIZE 60,08 OF oP24D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		ENDIF

		//QUADRO DE RELATÓRIO
		@ 001,558 SAY OemToAnsi("OUTRAS OPÇÕES")		SIZE 200,15	FONT oFont003 OF oP24RE01 PIXEL
		@ 010,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION xRelBr24() OF oP24RE01 PIXEL //"Exportar Excel"

		////////////////////////////////////////////////////////////
		oFLr24p2:= FWLayer():New()
		oFLr24p2:Init( oFld24:aDialogs[2], .F., .T.) //Detalhe
		
		//Define os Paineis 
		//TITULO
		oFLr24p2:AddLine ('TIT_DET', 6, .F.)
		oFLr24p2:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

		oFLr24p2:AddLine ('DETALHE1', 78, .F.)
		oFLr24p2:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

		oFLr24p2:AddLine ('RESUMO', 16, .F.)
		oFLr24p2:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

		oP24TE02	:= oFLr24p2:GetColPanel('TIT_ESQ','TIT_DET')
		oP24D102	:= oFLr24p2:GetColPanel('DET_ESQ1','DETALHE1')
		oP24RE02	:= oFLr24p2:GetColPanel('RES_ESQ','RESUMO')

		oP24TE02:FreeChildren()
		oP24D102:FreeChildren()
		oP24RE02:FreeChildren()
		
		//Cabecalho
		@ 001,008 SAY OemToAnsi("Detalhamento das operações para Apuração ICMS sobre Fretes")		FONT oFont003 SIZE 300,15 OF oP24TE02 PIXEL
		
		oBrw24Dt:= TcBrowse():New(004,004,150,150,,,,oP24D102,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
		
		
		oBrw24Dt:AddColumn( TcColumn():New( "Filial"		, {|| aBrw24Dt[oBrw24Dt:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw24Dt:AddColumn( TcColumn():New( "Dt.Entrada"	, {|| aBrw24Dt[oBrw24Dt:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw24Dt:AddColumn( TcColumn():New( "Série"			, {|| aBrw24Dt[oBrw24Dt:nAt,03]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw24Dt:AddColumn( TcColumn():New( "NF"			, {|| aBrw24Dt[oBrw24Dt:nAt,04]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw24Dt:AddColumn( TcColumn():New( "Item"			, {|| aBrw24Dt[oBrw24Dt:nAt,05]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw24Dt:AddColumn( TcColumn():New( "Cod.Forn."		, {|| aBrw24Dt[oBrw24Dt:nAt,06]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw24Dt:AddColumn( TcColumn():New( "Loja.Forn."	, {|| aBrw24Dt[oBrw24Dt:nAt,07]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw24Dt:AddColumn( TcColumn():New( "Fornecedor"	, {|| aBrw24Dt[oBrw24Dt:nAt,08]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw24Dt:AddColumn( TcColumn():New( "CNPJ"			, {|| aBrw24Dt[oBrw24Dt:nAt,09]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw24Dt:AddColumn( TcColumn():New( "Opt.Simples"	, {|| aBrw24Dt[oBrw24Dt:nAt,10]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw24Dt:AddColumn( TcColumn():New( "Cod.Prod."		, {|| aBrw24Dt[oBrw24Dt:nAt,11]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw24Dt:AddColumn( TcColumn():New( "Produto"		, {|| aBrw24Dt[oBrw24Dt:nAt,12]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw24Dt:AddColumn( TcColumn():New( "Quant."		, {|| aBrw24Dt[oBrw24Dt:nAt,13]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw24Dt:AddColumn( TcColumn():New( "Prc.Unit"		, {|| aBrw24Dt[oBrw24Dt:nAt,14]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw24Dt:AddColumn( TcColumn():New( "Total"			, {|| aBrw24Dt[oBrw24Dt:nAt,15]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw24Dt:AddColumn( TcColumn():New( "Vl.Cont."		, {|| aBrw24Dt[oBrw24Dt:nAt,16]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw24Dt:AddColumn( TcColumn():New( "Base ICMS"		, {|| aBrw24Dt[oBrw24Dt:nAt,17]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw24Dt:AddColumn( TcColumn():New( "Aliq.ICMS"		, {|| aBrw24Dt[oBrw24Dt:nAt,18]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw24Dt:AddColumn( TcColumn():New( "Vl.ICMS"		, {|| aBrw24Dt[oBrw24Dt:nAt,19]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw24Dt:AddColumn( TcColumn():New( "Vl.ICMS Ret."	, {|| aBrw24Dt[oBrw24Dt:nAt,20]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw24Dt:AddColumn( TcColumn():New( "Vl.ICMS Out."	, {|| aBrw24Dt[oBrw24Dt:nAt,21]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw24Dt:AddColumn( TcColumn():New( "Desconto"		, {|| aBrw24Dt[oBrw24Dt:nAt,22]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw24Dt:AddColumn( TcColumn():New( "Seguro"		, {|| aBrw24Dt[oBrw24Dt:nAt,23]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw24Dt:AddColumn( TcColumn():New( "Despesa"		, {|| aBrw24Dt[oBrw24Dt:nAt,24]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw24Dt:AddColumn( TcColumn():New( "Frete"			, {|| aBrw24Dt[oBrw24Dt:nAt,25]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw24Dt:AddColumn( TcColumn():New( "Dt.Canc."		, {|| aBrw24Dt[oBrw24Dt:nAt,26]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw24Dt:AddColumn( TcColumn():New( "Observações"	, {|| aBrw24Dt[oBrw24Dt:nAt,27]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw24Dt:AddColumn( TcColumn():New( "TES"			, {|| aBrw24Dt[oBrw24Dt:nAt,28]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
		oBrw24Dt:AddColumn( TcColumn():New( "CFOP"			, {|| aBrw24Dt[oBrw24Dt:nAt,29]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
		oBrw24Dt:AddColumn( TcColumn():New( "Tipo"			, {|| aBrw24Dt[oBrw24Dt:nAt,30]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
		oBrw24Dt:AddColumn( TcColumn():New( "Espécie"		, {|| aBrw24Dt[oBrw24Dt:nAt,31]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
		oBrw24Dt:AddColumn( TcColumn():New( "Centro Custo"	, {|| aBrw24Dt[oBrw24Dt:nAt,32]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
		oBrw24Dt:AddColumn( TcColumn():New( "Desc. CCusto"	, {|| aBrw24Dt[oBrw24Dt:nAt,33]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
		oBrw24Dt:AddColumn( TcColumn():New( "UF Forn."		, {|| aBrw24Dt[oBrw24Dt:nAt,34]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
		oBrw24Dt:AddColumn( TcColumn():New( "UF Origem"		, {|| aBrw24Dt[oBrw24Dt:nAt,35]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
		oBrw24Dt:AddColumn( TcColumn():New( "UF Destino"	, {|| aBrw24Dt[oBrw24Dt:nAt,36]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
		oBrw24Dt:AddColumn( TcColumn():New( "Vl.ICMS Anulação", {|| aBrw24Dt[oBrw24Dt:nAt,37]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

		oBrw24Dt:SetArray(aBrw24Dt)
		oBrw24Dt:Align		:=	CONTROL_ALIGN_ALLCLIENT	
		oBrw24Dt:bLine := {||{aBrw24Dt[oBrw24Dt:nAt] } }

		IF nOpMdl == 1
			////////////////////////////////////////////////////////////
			oFLr24p3:= FWLayer():New()
			oFLr24p3:Init( oFld24:aDialogs[3], .F., .T.) //EXPORTACAO
			
			//Define os Paineis 
			//TITULO
			oFLr24p3:AddLine ('TIT_DET', 6, .F.)
			oFLr24p3:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

			oFLr24p3:AddLine ('DETALHE1', 78, .F.)
			oFLr24p3:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

			oFLr24p3:AddLine ('RESUMO', 16, .F.)
			oFLr24p3:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

			oP24TE03	:= oFLr24p3:GetColPanel('TIT_ESQ','TIT_DET')
			oP24D103	:= oFLr24p3:GetColPanel('DET_ESQ1','DETALHE1')
			oP24RE03	:= oFLr24p3:GetColPanel('RES_ESQ','RESUMO')

			oP24TE03:FreeChildren()
			oP24D103:FreeChildren()
			oP24RE03:FreeChildren()
			
			//Cabecalho
			@ 001,008 SAY OemToAnsi("Fretes relacionados à exportação - Apuração ICMS sobre Fretes")		FONT oFont003 SIZE 300,15 OF oP24TE03 PIXEL
			
			oBrw24Ex:= TcBrowse():New(004,004,150,150,,,,oP24D103,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
			
			
			oBrw24Ex:AddColumn( TcColumn():New( "Filial"		, {|| aBrw24Ex[oBrw24Ex:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Ex:AddColumn( TcColumn():New( "Dt.Entrada"	, {|| aBrw24Ex[oBrw24Ex:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Ex:AddColumn( TcColumn():New( "Série"			, {|| aBrw24Ex[oBrw24Ex:nAt,03]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Ex:AddColumn( TcColumn():New( "NF"			, {|| aBrw24Ex[oBrw24Ex:nAt,04]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Ex:AddColumn( TcColumn():New( "Item"			, {|| aBrw24Ex[oBrw24Ex:nAt,05]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Ex:AddColumn( TcColumn():New( "Cod.Forn."		, {|| aBrw24Ex[oBrw24Ex:nAt,06]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Ex:AddColumn( TcColumn():New( "Loja.Forn."	, {|| aBrw24Ex[oBrw24Ex:nAt,07]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Ex:AddColumn( TcColumn():New( "Fornecedor"	, {|| aBrw24Ex[oBrw24Ex:nAt,08]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Ex:AddColumn( TcColumn():New( "CNPJ"			, {|| aBrw24Ex[oBrw24Ex:nAt,09]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Ex:AddColumn( TcColumn():New( "Opt.Simples"	, {|| aBrw24Ex[oBrw24Ex:nAt,10]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Ex:AddColumn( TcColumn():New( "Cod.Prod."		, {|| aBrw24Ex[oBrw24Ex:nAt,11]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Ex:AddColumn( TcColumn():New( "Produto"		, {|| aBrw24Ex[oBrw24Ex:nAt,12]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Ex:AddColumn( TcColumn():New( "Quant."		, {|| aBrw24Ex[oBrw24Ex:nAt,13]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Ex:AddColumn( TcColumn():New( "Prc.Unit"		, {|| aBrw24Ex[oBrw24Ex:nAt,14]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Ex:AddColumn( TcColumn():New( "Total"			, {|| aBrw24Ex[oBrw24Ex:nAt,15]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Ex:AddColumn( TcColumn():New( "Vl.Cont."		, {|| aBrw24Ex[oBrw24Ex:nAt,16]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Ex:AddColumn( TcColumn():New( "Base ICMS"		, {|| aBrw24Ex[oBrw24Ex:nAt,17]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Ex:AddColumn( TcColumn():New( "Aliq.ICMS"		, {|| aBrw24Ex[oBrw24Ex:nAt,18]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Ex:AddColumn( TcColumn():New( "Vl.ICMS"		, {|| aBrw24Ex[oBrw24Ex:nAt,19]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Ex:AddColumn( TcColumn():New( "Vl.ICMS Ret."	, {|| aBrw24Ex[oBrw24Ex:nAt,20]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Ex:AddColumn( TcColumn():New( "Vl.ICMS Out."	, {|| aBrw24Ex[oBrw24Ex:nAt,21]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Ex:AddColumn( TcColumn():New( "Desconto"		, {|| aBrw24Ex[oBrw24Ex:nAt,22]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Ex:AddColumn( TcColumn():New( "Seguro"		, {|| aBrw24Ex[oBrw24Ex:nAt,23]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Ex:AddColumn( TcColumn():New( "Despesa"		, {|| aBrw24Ex[oBrw24Ex:nAt,24]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Ex:AddColumn( TcColumn():New( "Frete"			, {|| aBrw24Ex[oBrw24Ex:nAt,25]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Ex:AddColumn( TcColumn():New( "Dt.Canc."		, {|| aBrw24Ex[oBrw24Ex:nAt,26]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Ex:AddColumn( TcColumn():New( "Observações"	, {|| aBrw24Ex[oBrw24Ex:nAt,27]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Ex:AddColumn( TcColumn():New( "TES"			, {|| aBrw24Ex[oBrw24Ex:nAt,28]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Ex:AddColumn( TcColumn():New( "CFOP"			, {|| aBrw24Ex[oBrw24Ex:nAt,29]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Ex:AddColumn( TcColumn():New( "Tipo"			, {|| aBrw24Ex[oBrw24Ex:nAt,30]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Ex:AddColumn( TcColumn():New( "Espécie"		, {|| aBrw24Ex[oBrw24Ex:nAt,31]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Ex:AddColumn( TcColumn():New( "Centro Custo"	, {|| aBrw24Ex[oBrw24Ex:nAt,32]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Ex:AddColumn( TcColumn():New( "Desc. CCusto"	, {|| aBrw24Ex[oBrw24Ex:nAt,33]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Ex:AddColumn( TcColumn():New( "UF Forn."		, {|| aBrw24Ex[oBrw24Ex:nAt,34]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Ex:AddColumn( TcColumn():New( "UF Origem"		, {|| aBrw24Ex[oBrw24Ex:nAt,35]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Ex:AddColumn( TcColumn():New( "UF Destino"	, {|| aBrw24Ex[oBrw24Ex:nAt,36]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Ex:AddColumn( TcColumn():New( "Vl.ICMS Anulação",{|| aBrw24Ex[oBrw24Ex:nAt,37]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

			oBrw24Ex:SetArray(aBrw24Ex)
			oBrw24Ex:Align		:=	CONTROL_ALIGN_ALLCLIENT	
			oBrw24Ex:bLine := {||{aBrw24Ex[oBrw24Ex:nAt] } }
			
			////////////////////////////////////////////////////////////
			oFLr24p4:= FWLayer():New()
			oFLr24p4:Init( oFld24:aDialogs[4], .F., .T.) //Substituicao Tributaria
			
			//Define os Paineis 
			//TITULO
			oFLr24p4:AddLine ('TIT_DET', 6, .F.)
			oFLr24p4:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

			oFLr24p4:AddLine ('DETALHE1', 78, .F.)
			oFLr24p4:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

			oFLr24p4:AddLine ('RESUMO', 16, .F.)
			oFLr24p4:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

			oP24TE04	:= oFLr24p4:GetColPanel('TIT_ESQ','TIT_DET')
			oP24D104	:= oFLr24p4:GetColPanel('DET_ESQ1','DETALHE1')
			oP24RE04	:= oFLr24p4:GetColPanel('RES_ESQ','RESUMO')

			oP24TE04:FreeChildren()
			oP24D104:FreeChildren()
			oP24RE04:FreeChildren()
			
			//Cabecalho
			@ 001,008 SAY OemToAnsi("Fretes relacionados à Substituição Tributária Estadual - Apuração ICMS sobre Fretes")		FONT oFont003 SIZE 300,15 OF oP24TE04 PIXEL
			
			oBrw24ST:= TcBrowse():New(004,004,150,150,,,,oP24D104,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
			
			oBrw24ST:AddColumn( TcColumn():New( "Filial"		, {|| aBrw24ST[oBrw24ST:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Dt.Entrada"	, {|| aBrw24ST[oBrw24ST:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Série"			, {|| aBrw24ST[oBrw24ST:nAt,03]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "NF"			, {|| aBrw24ST[oBrw24ST:nAt,04]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Item"			, {|| aBrw24ST[oBrw24ST:nAt,05]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Cod.Forn."		, {|| aBrw24ST[oBrw24ST:nAt,06]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Loja.Forn."	, {|| aBrw24ST[oBrw24ST:nAt,07]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Fornecedor"	, {|| aBrw24ST[oBrw24ST:nAt,08]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "CNPJ"			, {|| aBrw24ST[oBrw24ST:nAt,09]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Opt.Simples"	, {|| aBrw24ST[oBrw24ST:nAt,10]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Cod.Prod."		, {|| aBrw24ST[oBrw24ST:nAt,11]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Produto"		, {|| aBrw24ST[oBrw24ST:nAt,12]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Quant."		, {|| aBrw24ST[oBrw24ST:nAt,13]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Prc.Unit"		, {|| aBrw24ST[oBrw24ST:nAt,14]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Total"			, {|| aBrw24ST[oBrw24ST:nAt,15]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Vl.Cont."		, {|| aBrw24ST[oBrw24ST:nAt,16]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Base ICMS"		, {|| aBrw24ST[oBrw24ST:nAt,17]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Aliq.ICMS"		, {|| aBrw24ST[oBrw24ST:nAt,18]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Vl.ICMS"		, {|| aBrw24ST[oBrw24ST:nAt,19]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Vl.ICMS Ret."	, {|| aBrw24ST[oBrw24ST:nAt,20]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Vl.ICMS Out."	, {|| aBrw24ST[oBrw24ST:nAt,21]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Desconto"		, {|| aBrw24ST[oBrw24ST:nAt,22]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Seguro"		, {|| aBrw24ST[oBrw24ST:nAt,23]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Despesa"		, {|| aBrw24ST[oBrw24ST:nAt,24]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Frete"			, {|| aBrw24ST[oBrw24ST:nAt,25]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Dt.Canc."		, {|| aBrw24ST[oBrw24ST:nAt,26]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Observações"	, {|| aBrw24ST[oBrw24ST:nAt,27]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "TES"			, {|| aBrw24ST[oBrw24ST:nAt,28]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "CFOP"			, {|| aBrw24ST[oBrw24ST:nAt,29]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Tipo"			, {|| aBrw24ST[oBrw24ST:nAt,30]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Espécie"		, {|| aBrw24ST[oBrw24ST:nAt,31]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Centro Custo"	, {|| aBrw24ST[oBrw24ST:nAt,32]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Desc. CCusto"	, {|| aBrw24ST[oBrw24ST:nAt,33]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "UF Forn."		, {|| aBrw24ST[oBrw24ST:nAt,34]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "UF Origem"		, {|| aBrw24ST[oBrw24ST:nAt,35]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "UF Destino"	, {|| aBrw24ST[oBrw24ST:nAt,36]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Vl.ICMS Anulação", {|| aBrw24ST[oBrw24ST:nAt,37]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

			oBrw24ST:SetArray(aBrw24ST)
			oBrw24ST:Align		:=	CONTROL_ALIGN_ALLCLIENT	
			oBrw24ST:bLine := {||{aBrw24ST[oBrw24ST:nAt] } }

			IF nA24T15 > 0
				@ 001,010 SAY OemToAnsi("ATENÇÃO: EXISTEM FORNECEDORES COM O CAMPO SIMPLES NACIONAL NÃO PREENCHIDO")		SIZE 600,15	FONT oFont003 OF oP24RE04 PIXEL
				@ 010,010 SAY OemToAnsi("Foram identificados "+Alltrim(Str(nA24T15))+" documentos cujo fornecedor está com o campo Simples Naciona em branco. Verifique a aba 'Análise Fornecedores'")		SIZE 600,15	FONT oFont002 OF oP24RE04 PIXEL
			ENDIF

			////////////////////////////////////////////////////////////

			oFLr24p9:= FWLayer():New()
			oFLr24p9:Init( oFld24:aDialogs[5], .F., .T.) //Substituicao Tributaria Interestadual
			
			//Define os Paineis 
			//TITULO
			oFLr24p9:AddLine ('TIT_DET', 6, .F.)
			oFLr24p9:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

			oFLr24p9:AddLine ('DETALHE1', 78, .F.)
			oFLr24p9:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

			oFLr24p9:AddLine ('RESUMO', 16, .F.)
			oFLr24p9:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

			oP24TE09	:= oFLr24p9:GetColPanel('TIT_ESQ','TIT_DET')
			oP24D109	:= oFLr24p9:GetColPanel('DET_ESQ1','DETALHE1')
			oP24RE09	:= oFLr24p9:GetColPanel('RES_ESQ','RESUMO')

			oP24TE09:FreeChildren()
			oP24D109:FreeChildren()
			oP24RE09:FreeChildren()
			
			//Cabecalho
			@ 001,008 SAY OemToAnsi("Fretes relacionados à Substituição Tributária Interestadual - Apuração ICMS sobre Fretes")		FONT oFont003 SIZE 300,15 OF oP24TE09 PIXEL
			
			oBrw24IE:= TcBrowse():New(004,004,150,150,,,,oP24D109,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
			
			oBrw24IE:AddColumn( TcColumn():New( "Filial"		, {|| aBrw24IE[oBrw24IE:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Dt.Entrada"	, {|| aBrw24IE[oBrw24IE:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Série"			, {|| aBrw24IE[oBrw24IE:nAt,03]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "NF"			, {|| aBrw24IE[oBrw24IE:nAt,04]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Item"			, {|| aBrw24IE[oBrw24IE:nAt,05]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Cod.Forn."		, {|| aBrw24IE[oBrw24IE:nAt,06]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Loja.Forn."	, {|| aBrw24IE[oBrw24IE:nAt,07]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Fornecedor"	, {|| aBrw24IE[oBrw24IE:nAt,08]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "CNPJ"			, {|| aBrw24IE[oBrw24IE:nAt,09]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Opt.Simples"	, {|| aBrw24IE[oBrw24IE:nAt,10]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Cod.Prod."		, {|| aBrw24IE[oBrw24IE:nAt,11]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Produto"		, {|| aBrw24IE[oBrw24IE:nAt,12]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Quant."		, {|| aBrw24IE[oBrw24IE:nAt,13]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Prc.Unit"		, {|| aBrw24IE[oBrw24IE:nAt,14]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Total"			, {|| aBrw24IE[oBrw24IE:nAt,15]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Vl.Cont."		, {|| aBrw24IE[oBrw24IE:nAt,16]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Base ICMS"		, {|| aBrw24IE[oBrw24IE:nAt,17]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Aliq.ICMS"		, {|| aBrw24IE[oBrw24IE:nAt,18]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Vl.ICMS"		, {|| aBrw24IE[oBrw24IE:nAt,19]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Vl.ICMS Ret."	, {|| aBrw24IE[oBrw24IE:nAt,20]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Vl.ICMS Out."	, {|| aBrw24IE[oBrw24IE:nAt,21]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Desconto"		, {|| aBrw24IE[oBrw24IE:nAt,22]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Seguro"		, {|| aBrw24IE[oBrw24IE:nAt,23]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Despesa"		, {|| aBrw24IE[oBrw24IE:nAt,24]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Frete"			, {|| aBrw24IE[oBrw24IE:nAt,25]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Dt.Canc."		, {|| aBrw24IE[oBrw24IE:nAt,26]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Observações"	, {|| aBrw24IE[oBrw24IE:nAt,27]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "TES"			, {|| aBrw24IE[oBrw24IE:nAt,28]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "CFOP"			, {|| aBrw24IE[oBrw24IE:nAt,29]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Tipo"			, {|| aBrw24IE[oBrw24IE:nAt,30]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Espécie"		, {|| aBrw24IE[oBrw24IE:nAt,31]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Centro Custo"	, {|| aBrw24IE[oBrw24IE:nAt,32]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Desc. CCusto"	, {|| aBrw24IE[oBrw24IE:nAt,33]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "UF Forn."		, {|| aBrw24IE[oBrw24IE:nAt,34]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "UF Origem"		, {|| aBrw24IE[oBrw24IE:nAt,35]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "UF Destino"	, {|| aBrw24IE[oBrw24IE:nAt,36]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Vl.ICMS Anulação", {|| aBrw24IE[oBrw24IE:nAt,37]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

			oBrw24IE:SetArray(aBrw24IE)
			oBrw24IE:Align		:=	CONTROL_ALIGN_ALLCLIENT	
			oBrw24IE:bLine := {||{aBrw24IE[oBrw24IE:nAt] } }

			IF nA24T15 > 0
				@ 001,010 SAY OemToAnsi("ATENÇÃO: EXISTEM FORNECEDORES COM O CAMPO SIMPLES NACIONAL NÃO PREENCHIDO")		SIZE 600,15	FONT oFont003 OF oP24RE09 PIXEL
				@ 010,010 SAY OemToAnsi("Foram identificados "+Alltrim(Str(nA24T15))+" documentos cujo fornecedor está com o campo Simples Naciona em branco. Verifique a aba 'Análise Fornecedores'")		SIZE 600,15	FONT oFont002 OF oP24RE09 PIXEL
			ENDIF

			////////////////////////////////////////////////////////////

			oFLr24p5:= FWLayer():New()
			oFLr24p5:Init( oFld24:aDialogs[6], .F., .T.) //Transporte de Funcionários
			
			//Define os Paineis 
			//TITULO
			oFLr24p5:AddLine ('TIT_DET', 6, .F.)
			oFLr24p5:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

			oFLr24p5:AddLine ('DETALHE1', 78, .F.)
			oFLr24p5:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

			oFLr24p5:AddLine ('RESUMO', 16, .F.)
			oFLr24p5:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

			oP24TE05	:= oFLr24p5:GetColPanel('TIT_ESQ','TIT_DET')
			oP24D105	:= oFLr24p5:GetColPanel('DET_ESQ1','DETALHE1')
			oP24RE05	:= oFLr24p5:GetColPanel('RES_ESQ','RESUMO')

			oP24TE05:FreeChildren()
			oP24D105:FreeChildren()
			oP24RE05:FreeChildren()
			
			//Cabecalho
			@ 001,008 SAY OemToAnsi("Fretes relacionados à Transporte de Funcionários - Apuração ICMS sobre Fretes")		FONT oFont003 SIZE 300,15 OF oP24TE05 PIXEL
			
			oBrw24TF:= TcBrowse():New(004,004,150,150,,,,oP24D105,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
			
			
			oBrw24TF:AddColumn( TcColumn():New( "Filial"		, {|| aBrw24TF[oBrw24TF:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Dt.Entrada"	, {|| aBrw24TF[oBrw24TF:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Série"			, {|| aBrw24TF[oBrw24TF:nAt,03]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "NF"			, {|| aBrw24TF[oBrw24TF:nAt,04]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Item"			, {|| aBrw24TF[oBrw24TF:nAt,05]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Cod.Forn."		, {|| aBrw24TF[oBrw24TF:nAt,06]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Loja.Forn."	, {|| aBrw24TF[oBrw24TF:nAt,07]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Fornecedor"	, {|| aBrw24TF[oBrw24TF:nAt,08]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "CNPJ"			, {|| aBrw24TF[oBrw24TF:nAt,09]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Opt.Simples"	, {|| aBrw24TF[oBrw24TF:nAt,10]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Cod.Prod."		, {|| aBrw24TF[oBrw24TF:nAt,11]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Produto"		, {|| aBrw24TF[oBrw24TF:nAt,12]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Quant."		, {|| aBrw24TF[oBrw24TF:nAt,13]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Prc.Unit"		, {|| aBrw24TF[oBrw24TF:nAt,14]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Total"			, {|| aBrw24TF[oBrw24TF:nAt,15]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Vl.Cont."		, {|| aBrw24TF[oBrw24TF:nAt,16]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Base ICMS"		, {|| aBrw24TF[oBrw24TF:nAt,17]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Aliq.ICMS"		, {|| aBrw24TF[oBrw24TF:nAt,18]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Vl.ICMS"		, {|| aBrw24TF[oBrw24TF:nAt,19]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Vl.ICMS Ret."	, {|| aBrw24TF[oBrw24TF:nAt,20]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Vl.ICMS Out."	, {|| aBrw24TF[oBrw24TF:nAt,21]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Desconto"		, {|| aBrw24TF[oBrw24TF:nAt,22]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Seguro"		, {|| aBrw24TF[oBrw24TF:nAt,23]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Despesa"		, {|| aBrw24TF[oBrw24TF:nAt,24]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Frete"			, {|| aBrw24TF[oBrw24TF:nAt,25]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Dt.Canc."		, {|| aBrw24TF[oBrw24TF:nAt,26]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Observações"	, {|| aBrw24TF[oBrw24TF:nAt,27]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "TES"			, {|| aBrw24TF[oBrw24TF:nAt,28]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "CFOP"			, {|| aBrw24TF[oBrw24TF:nAt,29]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Tipo"			, {|| aBrw24TF[oBrw24TF:nAt,30]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Espécie"		, {|| aBrw24TF[oBrw24TF:nAt,31]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Centro Custo"	, {|| aBrw24TF[oBrw24TF:nAt,32]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Desc. CCusto"	, {|| aBrw24TF[oBrw24TF:nAt,33]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "UF Forn."		, {|| aBrw24TF[oBrw24TF:nAt,34]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "UF Origem"		, {|| aBrw24TF[oBrw24TF:nAt,35]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "UF Destino"	, {|| aBrw24TF[oBrw24TF:nAt,36]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Vl.ICMS Anulação", {|| aBrw24TF[oBrw24TF:nAt,37]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

			oBrw24TF:SetArray(aBrw24TF)
			oBrw24TF:Align		:=	CONTROL_ALIGN_ALLCLIENT	
			oBrw24TF:bLine := {||{aBrw24TF[oBrw24TF:nAt] } }

			////////////////////////////////////////////////////////////
			oFLr24p6:= FWLayer():New()
			oFLr24p6:Init( oFld24:aDialogs[7], .F., .T.) //Tributado
			
			//Define os Paineis 
			//TITULO
			oFLr24p6:AddLine ('TIT_DET', 6, .F.)
			oFLr24p6:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

			oFLr24p6:AddLine ('DETALHE1', 78, .F.)
			oFLr24p6:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

			oFLr24p6:AddLine ('RESUMO', 16, .F.)
			oFLr24p6:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

			oP24TE06	:= oFLr24p6:GetColPanel('TIT_ESQ','TIT_DET')
			oP24D106	:= oFLr24p6:GetColPanel('DET_ESQ1','DETALHE1')
			oP24RE06	:= oFLr24p6:GetColPanel('RES_ESQ','RESUMO')

			oP24TE06:FreeChildren()
			oP24D106:FreeChildren()
			oP24RE06:FreeChildren()
			
			//Cabecalho
			@ 001,008 SAY OemToAnsi("Fretes Tributados - Apuração ICMS sobre Fretes")		FONT oFont003 SIZE 300,15 OF oP24TE06 PIXEL
			
			oBrw24Tr:= TcBrowse():New(004,004,150,150,,,,oP24D106,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
			
			
			oBrw24Tr:AddColumn( TcColumn():New( "Filial"		, {|| aBrw24Tr[oBrw24Tr:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Dt.Entrada"	, {|| aBrw24Tr[oBrw24Tr:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Série"			, {|| aBrw24Tr[oBrw24Tr:nAt,03]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "NF"			, {|| aBrw24Tr[oBrw24Tr:nAt,04]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Item"			, {|| aBrw24Tr[oBrw24Tr:nAt,05]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Cod.Forn."		, {|| aBrw24Tr[oBrw24Tr:nAt,06]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Loja.Forn."	, {|| aBrw24Tr[oBrw24Tr:nAt,07]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Fornecedor"	, {|| aBrw24Tr[oBrw24Tr:nAt,08]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "CNPJ"			, {|| aBrw24Tr[oBrw24Tr:nAt,09]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Opt.Simples"	, {|| aBrw24Tr[oBrw24Tr:nAt,10]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Cod.Prod."		, {|| aBrw24Tr[oBrw24Tr:nAt,11]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Produto"		, {|| aBrw24Tr[oBrw24Tr:nAt,12]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Quant."		, {|| aBrw24Tr[oBrw24Tr:nAt,13]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Prc.Unit"		, {|| aBrw24Tr[oBrw24Tr:nAt,14]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Total"			, {|| aBrw24Tr[oBrw24Tr:nAt,15]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Vl.Cont."		, {|| aBrw24Tr[oBrw24Tr:nAt,16]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Base ICMS"		, {|| aBrw24Tr[oBrw24Tr:nAt,17]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Aliq.ICMS"		, {|| aBrw24Tr[oBrw24Tr:nAt,18]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Vl.ICMS"		, {|| aBrw24Tr[oBrw24Tr:nAt,19]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Vl.ICMS Ret."	, {|| aBrw24Tr[oBrw24Tr:nAt,20]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Vl.ICMS Out."	, {|| aBrw24Tr[oBrw24Tr:nAt,21]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Desconto"		, {|| aBrw24Tr[oBrw24Tr:nAt,22]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Seguro"		, {|| aBrw24Tr[oBrw24Tr:nAt,23]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Despesa"		, {|| aBrw24Tr[oBrw24Tr:nAt,24]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Frete"			, {|| aBrw24Tr[oBrw24Tr:nAt,25]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Dt.Canc."		, {|| aBrw24Tr[oBrw24Tr:nAt,26]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Observações"	, {|| aBrw24Tr[oBrw24Tr:nAt,27]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "TES"			, {|| aBrw24Tr[oBrw24Tr:nAt,28]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "CFOP"			, {|| aBrw24Tr[oBrw24Tr:nAt,29]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Tipo"			, {|| aBrw24Tr[oBrw24Tr:nAt,30]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Espécie"		, {|| aBrw24Tr[oBrw24Tr:nAt,31]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Centro Custo"	, {|| aBrw24Tr[oBrw24Tr:nAt,32]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Desc. CCusto"	, {|| aBrw24Tr[oBrw24Tr:nAt,33]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "UF Forn."		, {|| aBrw24Tr[oBrw24Tr:nAt,34]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "UF Origem"		, {|| aBrw24Tr[oBrw24Tr:nAt,35]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "UF Destino"	, {|| aBrw24Tr[oBrw24Tr:nAt,36]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Vl.ICMS Anulação", {|| aBrw24Tr[oBrw24Tr:nAt,37]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Vl.ICMS SD1"	, {|| aBrw24Tr[oBrw24Tr:nAt,38]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
						
			oBrw24Tr:SetArray(aBrw24Tr)
			oBrw24Tr:Align		:=	CONTROL_ALIGN_ALLCLIENT	
			oBrw24Tr:bLine := {||{aBrw24Tr[oBrw24Tr:nAt] } }
			
			IF nA24T16 > 0
				@ 001,010 SAY OemToAnsi("ATENÇÃO: EXISTEM DOCUMENTOS COM O CAMPO VALOR DO ICMS EM BRANCO NA TABELA SD1")		SIZE 600,15	FONT oFont003 OF oP24RE06 PIXEL
				@ 010,010 SAY OemToAnsi("Foram identificados "+Alltrim(Str(nA24T16))+" documentos cujo o valor do ICMS está zerado na tabela SD1.")		SIZE 600,15	FONT oFont002 OF oP24RE06 PIXEL
			ENDIF

			////////////////////////////////////////////////////////////
			oFLr24p7:= FWLayer():New()
			oFLr24p7:Init( oFld24:aDialogs[8], .F., .T.) //Anulação de Frete
			
			//Define os Paineis 
			//TITULO
			oFLr24p7:AddLine ('TIT_DET', 6, .F.)
			oFLr24p7:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

			oFLr24p7:AddLine ('DETALHE1', 78, .F.)
			oFLr24p7:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

			oFLr24p7:AddLine ('RESUMO', 16, .F.)
			oFLr24p7:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

			oP24TE07	:= oFLr24p7:GetColPanel('TIT_ESQ','TIT_DET')
			oP24D107	:= oFLr24p7:GetColPanel('DET_ESQ1','DETALHE1')
			oP24RE07	:= oFLr24p7:GetColPanel('RES_ESQ','RESUMO')

			oP24TE07:FreeChildren()
			oP24D107:FreeChildren()
			oP24RE07:FreeChildren()
			
			//Cabecalho
			@ 001,008 SAY OemToAnsi("Anulação de Fretes - Apuração ICMS sobre Fretes")		FONT oFont003 SIZE 300,15 OF oP24TE07 PIXEL
			
			oBrw24An:= TcBrowse():New(004,004,150,150,,,,oP24D107,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
			
			
			oBrw24An:AddColumn( TcColumn():New( "Filial"		, {|| aBrw24An[oBrw24An:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Dt.Entrada"	, {|| aBrw24An[oBrw24An:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Série"			, {|| aBrw24An[oBrw24An:nAt,03]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "NF"			, {|| aBrw24An[oBrw24An:nAt,04]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Item"			, {|| aBrw24An[oBrw24An:nAt,05]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Cod.Forn."		, {|| aBrw24An[oBrw24An:nAt,06]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Loja.Forn."	, {|| aBrw24An[oBrw24An:nAt,07]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Fornecedor"	, {|| aBrw24An[oBrw24An:nAt,08]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "CNPJ"			, {|| aBrw24An[oBrw24An:nAt,09]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Opt.Simples"	, {|| aBrw24An[oBrw24An:nAt,10]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Cod.Prod."		, {|| aBrw24An[oBrw24An:nAt,11]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Produto"		, {|| aBrw24An[oBrw24An:nAt,12]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Quant."		, {|| aBrw24An[oBrw24An:nAt,13]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Prc.Unit"		, {|| aBrw24An[oBrw24An:nAt,14]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Total"			, {|| aBrw24An[oBrw24An:nAt,15]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Vl.Cont."		, {|| aBrw24An[oBrw24An:nAt,16]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Base ICMS"		, {|| aBrw24An[oBrw24An:nAt,17]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Aliq.ICMS"		, {|| aBrw24An[oBrw24An:nAt,18]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Vl.ICMS"		, {|| aBrw24An[oBrw24An:nAt,19]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Vl.ICMS Ret."	, {|| aBrw24An[oBrw24An:nAt,20]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Vl.ICMS Out."	, {|| aBrw24An[oBrw24An:nAt,21]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Desconto"		, {|| aBrw24An[oBrw24An:nAt,22]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Seguro"		, {|| aBrw24An[oBrw24An:nAt,23]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Despesa"		, {|| aBrw24An[oBrw24An:nAt,24]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Frete"			, {|| aBrw24An[oBrw24An:nAt,25]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Dt.Canc."		, {|| aBrw24An[oBrw24An:nAt,26]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Observações"	, {|| aBrw24An[oBrw24An:nAt,27]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "TES"			, {|| aBrw24An[oBrw24An:nAt,28]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "CFOP"			, {|| aBrw24An[oBrw24An:nAt,29]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Tipo"			, {|| aBrw24An[oBrw24An:nAt,30]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Espécie"		, {|| aBrw24An[oBrw24An:nAt,31]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Centro Custo"	, {|| aBrw24An[oBrw24An:nAt,32]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Desc. CCusto"	, {|| aBrw24An[oBrw24An:nAt,33]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "UF Forn."		, {|| aBrw24An[oBrw24An:nAt,34]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "UF Origem"		, {|| aBrw24An[oBrw24An:nAt,35]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "UF Destino"	, {|| aBrw24An[oBrw24An:nAt,36]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
						
			oBrw24An:SetArray(aBrw24An)
			oBrw24An:Align		:=	CONTROL_ALIGN_ALLCLIENT	
			oBrw24An:bLine := {||{aBrw24An[oBrw24An:nAt] } }
			
			////////////////////////////////////////////////////////////
			oFLr24p8:= FWLayer():New()
			oFLr24p8:Init( oFld24:aDialogs[9], .F., .T.) //Análise de Fornecedores
			
			//Define os Paineis 
			//TITULO
			oFLr24p8:AddLine ('TIT_DET', 6, .F.)
			oFLr24p8:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

			oFLr24p8:AddLine ('DETALHE1', 78, .F.)
			oFLr24p8:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

			oFLr24p8:AddLine ('RESUMO', 16, .F.)
			oFLr24p8:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

			oP24TE08	:= oFLr24p8:GetColPanel('TIT_ESQ','TIT_DET')
			oP24D108	:= oFLr24p8:GetColPanel('DET_ESQ1','DETALHE1')
			oP24RE08	:= oFLr24p8:GetColPanel('RES_ESQ','RESUMO')

			oP24TE08:FreeChildren()
			oP24D108:FreeChildren()
			oP24RE08:FreeChildren()
			
			//Cabecalho
			@ 001,008 SAY OemToAnsi("Análise Fornecedores - Apuração ICMS sobre Fretes (Campo Opt. Simples Nacional não preenchido)")		FONT oFont003 SIZE 500,15 OF oP24TE08 PIXEL
			
			oBrw24Sp:= TcBrowse():New(004,004,150,150,,,,oP24D108,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
			
			
			oBrw24Sp:AddColumn( TcColumn():New( "Filial"		, {|| aBrw24Sp[oBrw24Sp:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Dt.Entrada"	, {|| aBrw24Sp[oBrw24Sp:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Série"			, {|| aBrw24Sp[oBrw24Sp:nAt,03]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "NF"			, {|| aBrw24Sp[oBrw24Sp:nAt,04]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Item"			, {|| aBrw24Sp[oBrw24Sp:nAt,05]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Cod.Forn."		, {|| aBrw24Sp[oBrw24Sp:nAt,06]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Loja.Forn."	, {|| aBrw24Sp[oBrw24Sp:nAt,07]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Fornecedor"	, {|| aBrw24Sp[oBrw24Sp:nAt,08]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "CNPJ"			, {|| aBrw24Sp[oBrw24Sp:nAt,09]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Opt.Simples"	, {|| aBrw24Sp[oBrw24Sp:nAt,10]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Cod.Prod."		, {|| aBrw24Sp[oBrw24Sp:nAt,11]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Produto"		, {|| aBrw24Sp[oBrw24Sp:nAt,12]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Quant."		, {|| aBrw24Sp[oBrw24Sp:nAt,13]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Prc.Unit"		, {|| aBrw24Sp[oBrw24Sp:nAt,14]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Total"			, {|| aBrw24Sp[oBrw24Sp:nAt,15]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Vl.Cont."		, {|| aBrw24Sp[oBrw24Sp:nAt,16]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Base ICMS"		, {|| aBrw24Sp[oBrw24Sp:nAt,17]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Aliq.ICMS"		, {|| aBrw24Sp[oBrw24Sp:nAt,18]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Vl.ICMS"		, {|| aBrw24Sp[oBrw24Sp:nAt,19]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Vl.ICMS Ret."	, {|| aBrw24Sp[oBrw24Sp:nAt,20]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Vl.ICMS Out."	, {|| aBrw24Sp[oBrw24Sp:nAt,21]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Desconto"		, {|| aBrw24Sp[oBrw24Sp:nAt,22]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Seguro"		, {|| aBrw24Sp[oBrw24Sp:nAt,23]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Despesa"		, {|| aBrw24Sp[oBrw24Sp:nAt,24]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Frete"			, {|| aBrw24Sp[oBrw24Sp:nAt,25]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Dt.Canc."		, {|| aBrw24Sp[oBrw24Sp:nAt,26]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Observações"	, {|| aBrw24Sp[oBrw24Sp:nAt,27]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "TES"			, {|| aBrw24Sp[oBrw24Sp:nAt,28]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "CFOP"			, {|| aBrw24Sp[oBrw24Sp:nAt,29]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Tipo"			, {|| aBrw24Sp[oBrw24Sp:nAt,30]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Espécie"		, {|| aBrw24Sp[oBrw24Sp:nAt,31]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Centro Custo"	, {|| aBrw24Sp[oBrw24Sp:nAt,32]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Desc. CCusto"	, {|| aBrw24Sp[oBrw24Sp:nAt,33]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "UF Forn."		, {|| aBrw24Sp[oBrw24Sp:nAt,34]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "UF Origem"		, {|| aBrw24Sp[oBrw24Sp:nAt,35]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "UF Destino"	, {|| aBrw24Sp[oBrw24Sp:nAt,36]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
						
			oBrw24Sp:SetArray(aBrw24Sp)
			oBrw24Sp:Align		:=	CONTROL_ALIGN_ALLCLIENT	
			oBrw24Sp:bLine := {||{aBrw24Sp[oBrw24Sp:nAt] } }
		ELSEIF nOpMdl	== 2 .or. nOpMdl == 4
			////////////////////////////////////////////////////////////
			oFLr24p4:= FWLayer():New()
			oFLr24p4:Init( oFld24:aDialogs[3], .F., .T.) //Substituicao Tributaria
			
			//Define os Paineis 
			//TITULO
			oFLr24p4:AddLine ('TIT_DET', 6, .F.)
			oFLr24p4:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

			oFLr24p4:AddLine ('DETALHE1', 78, .F.)
			oFLr24p4:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

			oFLr24p4:AddLine ('RESUMO', 16, .F.)
			oFLr24p4:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

			oP24TE04	:= oFLr24p4:GetColPanel('TIT_ESQ','TIT_DET')
			oP24D104	:= oFLr24p4:GetColPanel('DET_ESQ1','DETALHE1')
			oP24RE04	:= oFLr24p4:GetColPanel('RES_ESQ','RESUMO')

			oP24TE04:FreeChildren()
			oP24D104:FreeChildren()
			oP24RE04:FreeChildren()
			
			//Cabecalho
			@ 001,008 SAY OemToAnsi("Fretes relacionados à Substituição Tributária Estadual - Apuração ICMS sobre Fretes")		FONT oFont003 SIZE 300,15 OF oP24TE04 PIXEL
			
			oBrw24ST:= TcBrowse():New(004,004,150,150,,,,oP24D104,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
			
			oBrw24ST:AddColumn( TcColumn():New( "Filial"		, {|| aBrw24ST[oBrw24ST:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Dt.Entrada"	, {|| aBrw24ST[oBrw24ST:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Série"			, {|| aBrw24ST[oBrw24ST:nAt,03]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "NF"			, {|| aBrw24ST[oBrw24ST:nAt,04]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Item"			, {|| aBrw24ST[oBrw24ST:nAt,05]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Cod.Forn."		, {|| aBrw24ST[oBrw24ST:nAt,06]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Loja.Forn."	, {|| aBrw24ST[oBrw24ST:nAt,07]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Fornecedor"	, {|| aBrw24ST[oBrw24ST:nAt,08]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "CNPJ"			, {|| aBrw24ST[oBrw24ST:nAt,09]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Opt.Simples"	, {|| aBrw24ST[oBrw24ST:nAt,10]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Cod.Prod."		, {|| aBrw24ST[oBrw24ST:nAt,11]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Produto"		, {|| aBrw24ST[oBrw24ST:nAt,12]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Quant."		, {|| aBrw24ST[oBrw24ST:nAt,13]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Prc.Unit"		, {|| aBrw24ST[oBrw24ST:nAt,14]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Total"			, {|| aBrw24ST[oBrw24ST:nAt,15]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Vl.Cont."		, {|| aBrw24ST[oBrw24ST:nAt,16]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Base ICMS"		, {|| aBrw24ST[oBrw24ST:nAt,17]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Aliq.ICMS"		, {|| aBrw24ST[oBrw24ST:nAt,18]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Vl.ICMS"		, {|| aBrw24ST[oBrw24ST:nAt,19]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Vl.ICMS Ret."	, {|| aBrw24ST[oBrw24ST:nAt,20]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Vl.ICMS Out."	, {|| aBrw24ST[oBrw24ST:nAt,21]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Desconto"		, {|| aBrw24ST[oBrw24ST:nAt,22]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Seguro"		, {|| aBrw24ST[oBrw24ST:nAt,23]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Despesa"		, {|| aBrw24ST[oBrw24ST:nAt,24]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Frete"			, {|| aBrw24ST[oBrw24ST:nAt,25]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Dt.Canc."		, {|| aBrw24ST[oBrw24ST:nAt,26]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Observações"	, {|| aBrw24ST[oBrw24ST:nAt,27]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "TES"			, {|| aBrw24ST[oBrw24ST:nAt,28]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "CFOP"			, {|| aBrw24ST[oBrw24ST:nAt,29]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Tipo"			, {|| aBrw24ST[oBrw24ST:nAt,30]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Espécie"		, {|| aBrw24ST[oBrw24ST:nAt,31]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Centro Custo"	, {|| aBrw24ST[oBrw24ST:nAt,32]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Desc. CCusto"	, {|| aBrw24ST[oBrw24ST:nAt,33]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "UF Forn."		, {|| aBrw24ST[oBrw24ST:nAt,34]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "UF Origem"		, {|| aBrw24ST[oBrw24ST:nAt,35]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "UF Destino"	, {|| aBrw24ST[oBrw24ST:nAt,36]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24ST:AddColumn( TcColumn():New( "Vl.ICMS Anulação", {|| aBrw24ST[oBrw24ST:nAt,37]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

			oBrw24ST:SetArray(aBrw24ST)
			oBrw24ST:Align		:=	CONTROL_ALIGN_ALLCLIENT	
			oBrw24ST:bLine := {||{aBrw24ST[oBrw24ST:nAt] } }

			IF nA24T15 > 0
				@ 001,010 SAY OemToAnsi("ATENÇÃO: EXISTEM FORNECEDORES COM O CAMPO SIMPLES NACIONAL NÃO PREENCHIDO")		SIZE 600,15	FONT oFont003 OF oP24RE04 PIXEL
				@ 010,010 SAY OemToAnsi("Foram identificados "+Alltrim(Str(nA24T15))+" documentos cujo fornecedor está com o campo Simples Naciona em branco. Verifique a aba 'Análise Fornecedores'")		SIZE 600,15	FONT oFont002 OF oP24RE04 PIXEL
			ENDIF

			////////////////////////////////////////////////////////////

			oFLr24p9:= FWLayer():New()
			oFLr24p9:Init( oFld24:aDialogs[5], .F., .T.) //Substituicao Tributaria Interestadual
			
			//Define os Paineis 
			//TITULO
			oFLr24p9:AddLine ('TIT_DET', 6, .F.)
			oFLr24p9:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

			oFLr24p9:AddLine ('DETALHE1', 78, .F.)
			oFLr24p9:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

			oFLr24p9:AddLine ('RESUMO', 16, .F.)
			oFLr24p9:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

			oP24TE09	:= oFLr24p9:GetColPanel('TIT_ESQ','TIT_DET')
			oP24D109	:= oFLr24p9:GetColPanel('DET_ESQ1','DETALHE1')
			oP24RE09	:= oFLr24p9:GetColPanel('RES_ESQ','RESUMO')

			oP24TE09:FreeChildren()
			oP24D109:FreeChildren()
			oP24RE09:FreeChildren()
			
			//Cabecalho
			@ 001,008 SAY OemToAnsi("Fretes relacionados à Substituição Tributária Interestadual - Apuração ICMS sobre Fretes")		FONT oFont003 SIZE 300,15 OF oP24TE09 PIXEL
			
			oBrw24IE:= TcBrowse():New(004,004,150,150,,,,oP24D109,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
			
			oBrw24IE:AddColumn( TcColumn():New( "Filial"		, {|| aBrw24IE[oBrw24IE:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Dt.Entrada"	, {|| aBrw24IE[oBrw24IE:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Série"			, {|| aBrw24IE[oBrw24IE:nAt,03]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "NF"			, {|| aBrw24IE[oBrw24IE:nAt,04]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Item"			, {|| aBrw24IE[oBrw24IE:nAt,05]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Cod.Forn."		, {|| aBrw24IE[oBrw24IE:nAt,06]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Loja.Forn."	, {|| aBrw24IE[oBrw24IE:nAt,07]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Fornecedor"	, {|| aBrw24IE[oBrw24IE:nAt,08]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "CNPJ"			, {|| aBrw24IE[oBrw24IE:nAt,09]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Opt.Simples"	, {|| aBrw24IE[oBrw24IE:nAt,10]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Cod.Prod."		, {|| aBrw24IE[oBrw24IE:nAt,11]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Produto"		, {|| aBrw24IE[oBrw24IE:nAt,12]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Quant."		, {|| aBrw24IE[oBrw24IE:nAt,13]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Prc.Unit"		, {|| aBrw24IE[oBrw24IE:nAt,14]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Total"			, {|| aBrw24IE[oBrw24IE:nAt,15]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Vl.Cont."		, {|| aBrw24IE[oBrw24IE:nAt,16]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Base ICMS"		, {|| aBrw24IE[oBrw24IE:nAt,17]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Aliq.ICMS"		, {|| aBrw24IE[oBrw24IE:nAt,18]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Vl.ICMS"		, {|| aBrw24IE[oBrw24IE:nAt,19]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Vl.ICMS Ret."	, {|| aBrw24IE[oBrw24IE:nAt,20]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Vl.ICMS Out."	, {|| aBrw24IE[oBrw24IE:nAt,21]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Desconto"		, {|| aBrw24IE[oBrw24IE:nAt,22]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Seguro"		, {|| aBrw24IE[oBrw24IE:nAt,23]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Despesa"		, {|| aBrw24IE[oBrw24IE:nAt,24]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Frete"			, {|| aBrw24IE[oBrw24IE:nAt,25]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Dt.Canc."		, {|| aBrw24IE[oBrw24IE:nAt,26]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Observações"	, {|| aBrw24IE[oBrw24IE:nAt,27]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "TES"			, {|| aBrw24IE[oBrw24IE:nAt,28]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "CFOP"			, {|| aBrw24IE[oBrw24IE:nAt,29]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Tipo"			, {|| aBrw24IE[oBrw24IE:nAt,30]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Espécie"		, {|| aBrw24IE[oBrw24IE:nAt,31]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Centro Custo"	, {|| aBrw24IE[oBrw24IE:nAt,32]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Desc. CCusto"	, {|| aBrw24IE[oBrw24IE:nAt,33]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "UF Forn."		, {|| aBrw24IE[oBrw24IE:nAt,34]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "UF Origem"		, {|| aBrw24IE[oBrw24IE:nAt,35]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "UF Destino"	, {|| aBrw24IE[oBrw24IE:nAt,36]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24IE:AddColumn( TcColumn():New( "Vl.ICMS Anulação", {|| aBrw24IE[oBrw24IE:nAt,37]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

			oBrw24IE:SetArray(aBrw24IE)
			oBrw24IE:Align		:=	CONTROL_ALIGN_ALLCLIENT	
			oBrw24IE:bLine := {||{aBrw24IE[oBrw24IE:nAt] } }

			IF nA24T15 > 0
				@ 001,010 SAY OemToAnsi("ATENÇÃO: EXISTEM FORNECEDORES COM O CAMPO SIMPLES NACIONAL NÃO PREENCHIDO")		SIZE 600,15	FONT oFont003 OF oP24RE09 PIXEL
				@ 010,010 SAY OemToAnsi("Foram identificados "+Alltrim(Str(nA24T15))+" documentos cujo fornecedor está com o campo Simples Naciona em branco. Verifique a aba 'Análise Fornecedores'")		SIZE 600,15	FONT oFont002 OF oP24RE09 PIXEL
			ENDIF

			////////////////////////////////////////////////////////////

			oFLr24p5:= FWLayer():New()
			oFLr24p5:Init( oFld24:aDialogs[5], .F., .T.) //Transporte de Funcionários
			
			//Define os Paineis 
			//TITULO
			oFLr24p5:AddLine ('TIT_DET', 6, .F.)
			oFLr24p5:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

			oFLr24p5:AddLine ('DETALHE1', 78, .F.)
			oFLr24p5:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

			oFLr24p5:AddLine ('RESUMO', 16, .F.)
			oFLr24p5:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

			oP24TE05	:= oFLr24p5:GetColPanel('TIT_ESQ','TIT_DET')
			oP24D105	:= oFLr24p5:GetColPanel('DET_ESQ1','DETALHE1')
			oP24RE05	:= oFLr24p5:GetColPanel('RES_ESQ','RESUMO')

			oP24TE05:FreeChildren()
			oP24D105:FreeChildren()
			oP24RE05:FreeChildren()
			
			//Cabecalho
			@ 001,008 SAY OemToAnsi("Fretes relacionados à Transporte de Funcionários - Apuração ICMS sobre Fretes")		FONT oFont003 SIZE 300,15 OF oP24TE05 PIXEL
			
			oBrw24TF:= TcBrowse():New(004,004,150,150,,,,oP24D105,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
			
			
			oBrw24TF:AddColumn( TcColumn():New( "Filial"		, {|| aBrw24TF[oBrw24TF:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Dt.Entrada"	, {|| aBrw24TF[oBrw24TF:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Série"			, {|| aBrw24TF[oBrw24TF:nAt,03]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "NF"			, {|| aBrw24TF[oBrw24TF:nAt,04]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Item"			, {|| aBrw24TF[oBrw24TF:nAt,05]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Cod.Forn."		, {|| aBrw24TF[oBrw24TF:nAt,06]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Loja.Forn."	, {|| aBrw24TF[oBrw24TF:nAt,07]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Fornecedor"	, {|| aBrw24TF[oBrw24TF:nAt,08]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "CNPJ"			, {|| aBrw24TF[oBrw24TF:nAt,09]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Opt.Simples"	, {|| aBrw24TF[oBrw24TF:nAt,10]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Cod.Prod."		, {|| aBrw24TF[oBrw24TF:nAt,11]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Produto"		, {|| aBrw24TF[oBrw24TF:nAt,12]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Quant."		, {|| aBrw24TF[oBrw24TF:nAt,13]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Prc.Unit"		, {|| aBrw24TF[oBrw24TF:nAt,14]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Total"			, {|| aBrw24TF[oBrw24TF:nAt,15]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Vl.Cont."		, {|| aBrw24TF[oBrw24TF:nAt,16]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Base ICMS"		, {|| aBrw24TF[oBrw24TF:nAt,17]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Aliq.ICMS"		, {|| aBrw24TF[oBrw24TF:nAt,18]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Vl.ICMS"		, {|| aBrw24TF[oBrw24TF:nAt,19]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Vl.ICMS Ret."	, {|| aBrw24TF[oBrw24TF:nAt,20]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Vl.ICMS Out."	, {|| aBrw24TF[oBrw24TF:nAt,21]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Desconto"		, {|| aBrw24TF[oBrw24TF:nAt,22]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Seguro"		, {|| aBrw24TF[oBrw24TF:nAt,23]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Despesa"		, {|| aBrw24TF[oBrw24TF:nAt,24]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Frete"			, {|| aBrw24TF[oBrw24TF:nAt,25]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Dt.Canc."		, {|| aBrw24TF[oBrw24TF:nAt,26]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Observações"	, {|| aBrw24TF[oBrw24TF:nAt,27]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "TES"			, {|| aBrw24TF[oBrw24TF:nAt,28]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "CFOP"			, {|| aBrw24TF[oBrw24TF:nAt,29]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Tipo"			, {|| aBrw24TF[oBrw24TF:nAt,30]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Espécie"		, {|| aBrw24TF[oBrw24TF:nAt,31]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Centro Custo"	, {|| aBrw24TF[oBrw24TF:nAt,32]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Desc. CCusto"	, {|| aBrw24TF[oBrw24TF:nAt,33]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "UF Forn."		, {|| aBrw24TF[oBrw24TF:nAt,34]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "UF Origem"		, {|| aBrw24TF[oBrw24TF:nAt,35]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "UF Destino"	, {|| aBrw24TF[oBrw24TF:nAt,36]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24TF:AddColumn( TcColumn():New( "Vl.ICMS Anulação", {|| aBrw24TF[oBrw24TF:nAt,37]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

			oBrw24TF:SetArray(aBrw24TF)
			oBrw24TF:Align		:=	CONTROL_ALIGN_ALLCLIENT	
			oBrw24TF:bLine := {||{aBrw24TF[oBrw24TF:nAt] } }

			////////////////////////////////////////////////////////////
			oFLr24p6:= FWLayer():New()
			oFLr24p6:Init( oFld24:aDialogs[6], .F., .T.) //Tributado
			
			//Define os Paineis 
			//TITULO
			oFLr24p6:AddLine ('TIT_DET', 6, .F.)
			oFLr24p6:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

			oFLr24p6:AddLine ('DETALHE1', 78, .F.)
			oFLr24p6:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

			oFLr24p6:AddLine ('RESUMO', 16, .F.)
			oFLr24p6:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

			oP24TE06	:= oFLr24p6:GetColPanel('TIT_ESQ','TIT_DET')
			oP24D106	:= oFLr24p6:GetColPanel('DET_ESQ1','DETALHE1')
			oP24RE06	:= oFLr24p6:GetColPanel('RES_ESQ','RESUMO')

			oP24TE06:FreeChildren()
			oP24D106:FreeChildren()
			oP24RE06:FreeChildren()
			
			//Cabecalho
			@ 001,008 SAY OemToAnsi("Fretes Tributados - Apuração ICMS sobre Fretes")		FONT oFont003 SIZE 300,15 OF oP24TE06 PIXEL
			
			oBrw24Tr:= TcBrowse():New(004,004,150,150,,,,oP24D106,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
			
			
			oBrw24Tr:AddColumn( TcColumn():New( "Filial"		, {|| aBrw24Tr[oBrw24Tr:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Dt.Entrada"	, {|| aBrw24Tr[oBrw24Tr:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Série"			, {|| aBrw24Tr[oBrw24Tr:nAt,03]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "NF"			, {|| aBrw24Tr[oBrw24Tr:nAt,04]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Item"			, {|| aBrw24Tr[oBrw24Tr:nAt,05]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Cod.Forn."		, {|| aBrw24Tr[oBrw24Tr:nAt,06]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Loja.Forn."	, {|| aBrw24Tr[oBrw24Tr:nAt,07]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Fornecedor"	, {|| aBrw24Tr[oBrw24Tr:nAt,08]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "CNPJ"			, {|| aBrw24Tr[oBrw24Tr:nAt,09]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Opt.Simples"	, {|| aBrw24Tr[oBrw24Tr:nAt,10]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Cod.Prod."		, {|| aBrw24Tr[oBrw24Tr:nAt,11]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Produto"		, {|| aBrw24Tr[oBrw24Tr:nAt,12]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Quant."		, {|| aBrw24Tr[oBrw24Tr:nAt,13]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Prc.Unit"		, {|| aBrw24Tr[oBrw24Tr:nAt,14]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Total"			, {|| aBrw24Tr[oBrw24Tr:nAt,15]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Vl.Cont."		, {|| aBrw24Tr[oBrw24Tr:nAt,16]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Base ICMS"		, {|| aBrw24Tr[oBrw24Tr:nAt,17]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Aliq.ICMS"		, {|| aBrw24Tr[oBrw24Tr:nAt,18]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Vl.ICMS"		, {|| aBrw24Tr[oBrw24Tr:nAt,19]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Vl.ICMS Ret."	, {|| aBrw24Tr[oBrw24Tr:nAt,20]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Vl.ICMS Out."	, {|| aBrw24Tr[oBrw24Tr:nAt,21]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Desconto"		, {|| aBrw24Tr[oBrw24Tr:nAt,22]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Seguro"		, {|| aBrw24Tr[oBrw24Tr:nAt,23]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Despesa"		, {|| aBrw24Tr[oBrw24Tr:nAt,24]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Frete"			, {|| aBrw24Tr[oBrw24Tr:nAt,25]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Dt.Canc."		, {|| aBrw24Tr[oBrw24Tr:nAt,26]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Observações"	, {|| aBrw24Tr[oBrw24Tr:nAt,27]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "TES"			, {|| aBrw24Tr[oBrw24Tr:nAt,28]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "CFOP"			, {|| aBrw24Tr[oBrw24Tr:nAt,29]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Tipo"			, {|| aBrw24Tr[oBrw24Tr:nAt,30]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Espécie"		, {|| aBrw24Tr[oBrw24Tr:nAt,31]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Centro Custo"	, {|| aBrw24Tr[oBrw24Tr:nAt,32]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Desc. CCusto"	, {|| aBrw24Tr[oBrw24Tr:nAt,33]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "UF Forn."		, {|| aBrw24Tr[oBrw24Tr:nAt,34]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "UF Origem"		, {|| aBrw24Tr[oBrw24Tr:nAt,35]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "UF Destino"	, {|| aBrw24Tr[oBrw24Tr:nAt,36]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Vl.ICMS Anulação", {|| aBrw24Tr[oBrw24Tr:nAt,37]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Tr:AddColumn( TcColumn():New( "Vl.ICMS SD1"	, {|| aBrw24Tr[oBrw24Tr:nAt,38]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
						
			oBrw24Tr:SetArray(aBrw24Tr)
			oBrw24Tr:Align		:=	CONTROL_ALIGN_ALLCLIENT	
			oBrw24Tr:bLine := {||{aBrw24Tr[oBrw24Tr:nAt] } }
			
			IF nA24T16 > 0
				@ 001,010 SAY OemToAnsi("ATENÇÃO: EXISTEM DOCUMENTOS COM O CAMPO VALOR DO ICMS EM BRANCO NA TABELA SD1")		SIZE 600,15	FONT oFont003 OF oP24RE06 PIXEL
				@ 010,010 SAY OemToAnsi("Foram identificados "+Alltrim(Str(nA24T16))+" documentos cujo o valor do ICMS está zerado na tabela SD1.")		SIZE 600,15	FONT oFont002 OF oP24RE06 PIXEL
			ENDIF

			////////////////////////////////////////////////////////////
			oFLr24p7:= FWLayer():New()
			oFLr24p7:Init( oFld24:aDialogs[7], .F., .T.) //Anulação de Frete
			
			//Define os Paineis 
			//TITULO
			oFLr24p7:AddLine ('TIT_DET', 6, .F.)
			oFLr24p7:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

			oFLr24p7:AddLine ('DETALHE1', 78, .F.)
			oFLr24p7:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

			oFLr24p7:AddLine ('RESUMO', 16, .F.)
			oFLr24p7:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

			oP24TE07	:= oFLr24p7:GetColPanel('TIT_ESQ','TIT_DET')
			oP24D107	:= oFLr24p7:GetColPanel('DET_ESQ1','DETALHE1')
			oP24RE07	:= oFLr24p7:GetColPanel('RES_ESQ','RESUMO')

			oP24TE07:FreeChildren()
			oP24D107:FreeChildren()
			oP24RE07:FreeChildren()
			
			//Cabecalho
			@ 001,008 SAY OemToAnsi("Anulação de Fretes - Apuração ICMS sobre Fretes")		FONT oFont003 SIZE 300,15 OF oP24TE07 PIXEL
			
			oBrw24An:= TcBrowse():New(004,004,150,150,,,,oP24D107,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
			
			
			oBrw24An:AddColumn( TcColumn():New( "Filial"		, {|| aBrw24An[oBrw24An:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Dt.Entrada"	, {|| aBrw24An[oBrw24An:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Série"			, {|| aBrw24An[oBrw24An:nAt,03]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "NF"			, {|| aBrw24An[oBrw24An:nAt,04]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Item"			, {|| aBrw24An[oBrw24An:nAt,05]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Cod.Forn."		, {|| aBrw24An[oBrw24An:nAt,06]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Loja.Forn."	, {|| aBrw24An[oBrw24An:nAt,07]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Fornecedor"	, {|| aBrw24An[oBrw24An:nAt,08]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "CNPJ"			, {|| aBrw24An[oBrw24An:nAt,09]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Opt.Simples"	, {|| aBrw24An[oBrw24An:nAt,10]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Cod.Prod."		, {|| aBrw24An[oBrw24An:nAt,11]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Produto"		, {|| aBrw24An[oBrw24An:nAt,12]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Quant."		, {|| aBrw24An[oBrw24An:nAt,13]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Prc.Unit"		, {|| aBrw24An[oBrw24An:nAt,14]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Total"			, {|| aBrw24An[oBrw24An:nAt,15]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Vl.Cont."		, {|| aBrw24An[oBrw24An:nAt,16]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Base ICMS"		, {|| aBrw24An[oBrw24An:nAt,17]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Aliq.ICMS"		, {|| aBrw24An[oBrw24An:nAt,18]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Vl.ICMS"		, {|| aBrw24An[oBrw24An:nAt,19]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Vl.ICMS Ret."	, {|| aBrw24An[oBrw24An:nAt,20]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Vl.ICMS Out."	, {|| aBrw24An[oBrw24An:nAt,21]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Desconto"		, {|| aBrw24An[oBrw24An:nAt,22]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Seguro"		, {|| aBrw24An[oBrw24An:nAt,23]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Despesa"		, {|| aBrw24An[oBrw24An:nAt,24]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Frete"			, {|| aBrw24An[oBrw24An:nAt,25]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Dt.Canc."		, {|| aBrw24An[oBrw24An:nAt,26]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Observações"	, {|| aBrw24An[oBrw24An:nAt,27]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "TES"			, {|| aBrw24An[oBrw24An:nAt,28]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "CFOP"			, {|| aBrw24An[oBrw24An:nAt,29]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Tipo"			, {|| aBrw24An[oBrw24An:nAt,30]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Espécie"		, {|| aBrw24An[oBrw24An:nAt,31]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Centro Custo"	, {|| aBrw24An[oBrw24An:nAt,32]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "Desc. CCusto"	, {|| aBrw24An[oBrw24An:nAt,33]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "UF Forn."		, {|| aBrw24An[oBrw24An:nAt,34]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "UF Origem"		, {|| aBrw24An[oBrw24An:nAt,35]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24An:AddColumn( TcColumn():New( "UF Destino"	, {|| aBrw24An[oBrw24An:nAt,36]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
						
			oBrw24An:SetArray(aBrw24An)
			oBrw24An:Align		:=	CONTROL_ALIGN_ALLCLIENT	
			oBrw24An:bLine := {||{aBrw24An[oBrw24An:nAt] } }
			
			////////////////////////////////////////////////////////////
			oFLr24p8:= FWLayer():New()
			oFLr24p8:Init( oFld24:aDialogs[8], .F., .T.) //Análise de Fornecedores
			
			//Define os Paineis 
			//TITULO
			oFLr24p8:AddLine ('TIT_DET', 6, .F.)
			oFLr24p8:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

			oFLr24p8:AddLine ('DETALHE1', 78, .F.)
			oFLr24p8:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

			oFLr24p8:AddLine ('RESUMO', 16, .F.)
			oFLr24p8:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

			oP24TE08	:= oFLr24p8:GetColPanel('TIT_ESQ','TIT_DET')
			oP24D108	:= oFLr24p8:GetColPanel('DET_ESQ1','DETALHE1')
			oP24RE08	:= oFLr24p8:GetColPanel('RES_ESQ','RESUMO')

			oP24TE08:FreeChildren()
			oP24D108:FreeChildren()
			oP24RE08:FreeChildren()
			
			//Cabecalho
			@ 001,008 SAY OemToAnsi("Análise Fornecedores - Apuração ICMS sobre Fretes (Campo Opt. Simples Nacional não preenchido)")		FONT oFont003 SIZE 500,15 OF oP24TE08 PIXEL
			
			oBrw24Sp:= TcBrowse():New(004,004,150,150,,,,oP24D108,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
			
			
			oBrw24Sp:AddColumn( TcColumn():New( "Filial"		, {|| aBrw24Sp[oBrw24Sp:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Dt.Entrada"	, {|| aBrw24Sp[oBrw24Sp:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Série"			, {|| aBrw24Sp[oBrw24Sp:nAt,03]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "NF"			, {|| aBrw24Sp[oBrw24Sp:nAt,04]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Item"			, {|| aBrw24Sp[oBrw24Sp:nAt,05]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Cod.Forn."		, {|| aBrw24Sp[oBrw24Sp:nAt,06]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Loja.Forn."	, {|| aBrw24Sp[oBrw24Sp:nAt,07]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Fornecedor"	, {|| aBrw24Sp[oBrw24Sp:nAt,08]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "CNPJ"			, {|| aBrw24Sp[oBrw24Sp:nAt,09]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Opt.Simples"	, {|| aBrw24Sp[oBrw24Sp:nAt,10]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Cod.Prod."		, {|| aBrw24Sp[oBrw24Sp:nAt,11]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Produto"		, {|| aBrw24Sp[oBrw24Sp:nAt,12]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Quant."		, {|| aBrw24Sp[oBrw24Sp:nAt,13]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Prc.Unit"		, {|| aBrw24Sp[oBrw24Sp:nAt,14]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Total"			, {|| aBrw24Sp[oBrw24Sp:nAt,15]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Vl.Cont."		, {|| aBrw24Sp[oBrw24Sp:nAt,16]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Base ICMS"		, {|| aBrw24Sp[oBrw24Sp:nAt,17]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Aliq.ICMS"		, {|| aBrw24Sp[oBrw24Sp:nAt,18]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Vl.ICMS"		, {|| aBrw24Sp[oBrw24Sp:nAt,19]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Vl.ICMS Ret."	, {|| aBrw24Sp[oBrw24Sp:nAt,20]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Vl.ICMS Out."	, {|| aBrw24Sp[oBrw24Sp:nAt,21]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Desconto"		, {|| aBrw24Sp[oBrw24Sp:nAt,22]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Seguro"		, {|| aBrw24Sp[oBrw24Sp:nAt,23]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Despesa"		, {|| aBrw24Sp[oBrw24Sp:nAt,24]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Frete"			, {|| aBrw24Sp[oBrw24Sp:nAt,25]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Dt.Canc."		, {|| aBrw24Sp[oBrw24Sp:nAt,26]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Observações"	, {|| aBrw24Sp[oBrw24Sp:nAt,27]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "TES"			, {|| aBrw24Sp[oBrw24Sp:nAt,28]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "CFOP"			, {|| aBrw24Sp[oBrw24Sp:nAt,29]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Tipo"			, {|| aBrw24Sp[oBrw24Sp:nAt,30]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Espécie"		, {|| aBrw24Sp[oBrw24Sp:nAt,31]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Centro Custo"	, {|| aBrw24Sp[oBrw24Sp:nAt,32]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "Desc. CCusto"	, {|| aBrw24Sp[oBrw24Sp:nAt,33]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "UF Forn."		, {|| aBrw24Sp[oBrw24Sp:nAt,34]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "UF Origem"		, {|| aBrw24Sp[oBrw24Sp:nAt,35]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
			oBrw24Sp:AddColumn( TcColumn():New( "UF Destino"	, {|| aBrw24Sp[oBrw24Sp:nAt,36]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
						
			oBrw24Sp:SetArray(aBrw24Sp)
			oBrw24Sp:Align		:=	CONTROL_ALIGN_ALLCLIENT	
			oBrw24Sp:bLine := {||{aBrw24Sp[oBrw24Sp:nAt] } }

		ENDIF
	ENDIF

	IF nOpMdl	== 1
		//--------------------------------------------------------------------------
		//ABA 25 - CELULARES
		//--------------------------------------------------------------------------

		oFLr25p1:= FWLayer():New()
		//oFLr25p1:Init( oFld018:aDialogs[1], .F., .T.) //RESUMO
		oFLr25p1:Init( oFolder030:aDialogs[24], .F., .T.) //RESUMO
		//TITULO
		oFLr25p1:AddLine ('TIT_DLG1', 6, .F.)
		oFLr25p1:AddCollumn('TIT_DLG1',100,.F.,'TIT_DLG1')
		//DETALHE
		oFLr25p1:AddLine ('DET_DLG1', 74, .F.)
		oFLr25p1:AddCollumn('DET_DLG1E',20,.F.,'DET_DLG1')
		oFLr25p1:AddCollumn('DET_DLG1D',80,.F.,'DET_DLG1')
		//RODAPE
		oFLr25p1:AddLine ('ROD_DLG1', 20, .F.)
		oFLr25p1:AddCollumn('ROD_DLG1',100,.F.,'ROD_DLG1')

		oPn25T1		:= oFLr25p1:GetColPanel('TIT_DLG1','TIT_DLG1')
		oPn25D1E	:= oFLr25p1:GetColPanel('DET_DLG1E','DET_DLG1')
		oPn25D1D	:= oFLr25p1:GetColPanel('DET_DLG1D','DET_DLG1')
		oPn25R1		:= oFLr25p1:GetColPanel('ROD_DLG1','ROD_DLG1')

		oPn25T1:FreeChildren()
		oPn25D1E:FreeChildren()
		oPn25D1D:FreeChildren()

		//Cabecalho
		@ 001,008 SAY OemToAnsi("Resumo Crédito na Venda de Celulares")		FONT oFont003 SIZE 200,15 OF oPn25T1 PIXEL

		//Rodapé
		@ 001,008 SAY OemToAnsi("Totais")									FONT oFont003 SIZE 200,15 OF oPn25R1 PIXEL

		@ 010,004 TO 028,215 OF oPn25R1 PIXEL

		//Saldo a pagar
		@ 014,008 SAY OemToAnsi("Valor Crédito ICMS (Celulares)")	FONT oFont002 SIZE 200,15 OF oPn25R1 PIXEL
		@ 014,150 MSGET nTtCel SIZE 60,08 OF oPn25R1 PIXEL When .F. PICTURE '@E 9,999,999,999.99'


		//QUADRO DE RELATÓRIO
		@ 001,558 SAY OemToAnsi("OUTRAS OPÇÕES")		SIZE 200,15	FONT oFont003 OF oPn25R1 PIXEL
		@ 014,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION xRelBr25() OF oPn25R1 PIXEL //"Exportar Excel"

		//Tree
		oTrF25p1 := DbTree():New(001,001,133,100,oPn25D1E,,,.T.,,,"Produtos")
		oTrF25p1:Align		:=	CONTROL_ALIGN_ALLCLIENT	 // CONTROL_ALIGN_TOP //
		oTrF25p1:SetScroll (1,.T.)
		oTrF25p1:SetScroll (2,.T.)
		oTrF25p1:bLClicked := {|| Iif( oTrF25p1:IsEmpty(), MsgStop("Não há dados a serem exibidos.","Função Não Catalogada"), xABrTr25()) }
		oTrF25p1:SetCss("QTreeWidget{background-color: #F9F9F9}")

		//Atualiza TreeView
		aTr25		:= {}

		oTrF25p1:AddItem("TODOS                              ","TODOS XXXX", "FOLDER5","FOLDER6",,,1	)
		For i := 1 to Len(aBrw25Rs)
			If !ASCAN(aTr25,{|X| X[1] == aBrw25Rs[i,2]}) > 0
				AADD(aTr25,{})
				nPos := Len(aTr25)
				AADD(aTr25[nPos], aBrw25Rs[i,2])		//01
				oTrF25p1:AddItem(Alltrim(aBrw25Rs[i,2])+"-"+Left(Alltrim(aBrw25Rs[i,3]),30),aBrw25Rs[i,2],"FOLDER6",,,,2)
			Endif
		Next i

		oTrF25p1:EndTree()
		oTrF25p1:PTRefresh()

		oBrw25Rs:= TcBrowse():New(010,010,10,150,,,,oPn25D1D,,,,,,,,,,,,.F.,,.T.,,.F.,,,,)
		oBrw25Rs:AddColumn( TcColumn():New( "Filial"	,{ || aBrw25Tr[oBrw25Rs:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw25Rs:AddColumn( TcColumn():New( "Produto"	,{ || aBrw25Tr[oBrw25Rs:nAt,02]}	, "@!"						,,,"LEFT"	,030,.f.,.f.,,,,.f.,) )
		oBrw25Rs:AddColumn( TcColumn():New( "Descrição"	,{ || aBrw25Tr[oBrw25Rs:nAt,03]}	, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
		oBrw25Rs:AddColumn( TcColumn():New( "Tp Oper."	,{ || aBrw25Tr[oBrw25Rs:nAt,04]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw25Rs:AddColumn( TcColumn():New( "Dt.Entrada",{ || aBrw25Tr[oBrw25Rs:nAt,05]}	, ""						,,,"CENTER"	,035,.f.,.f.,,,,.f.,) )
		oBrw25Rs:AddColumn( TcColumn():New( "Dt.Emissão",{ || aBrw25Tr[oBrw25Rs:nAt,06]}	, ""						,,,"CENTER"	,035,.f.,.f.,,,,.f.,) )
		oBrw25Rs:AddColumn( TcColumn():New( "Documento"	,{ || aBrw25Tr[oBrw25Rs:nAt,07]}	, "@!"						,,,"LEFT"	,035,.f.,.f.,,,,.f.,) )
		oBrw25Rs:AddColumn( TcColumn():New( "Serie"		,{ || aBrw25Tr[oBrw25Rs:nAt,08]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw25Rs:AddColumn( TcColumn():New( "Fornecedor",{ || aBrw25Tr[oBrw25Rs:nAt,09]}	, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw25Rs:AddColumn( TcColumn():New( "Loja"		,{ || aBrw25Tr[oBrw25Rs:nAt,10]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw25Rs:AddColumn( TcColumn():New( "Quant"		,{ || aBrw25Tr[oBrw25Rs:nAt,11]}	, "@E 999,999,999.9999"		,,,"RIGHT"	,030,.f.,.f.,,,,.f.,) )
		oBrw25Rs:AddColumn( TcColumn():New( "Vl. Unit."	,{ || aBrw25Tr[oBrw25Rs:nAt,12]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,030,.f.,.f.,,,,.f.,) )
		oBrw25Rs:AddColumn( TcColumn():New( "Vl. Total"	,{ || aBrw25Tr[oBrw25Rs:nAt,13]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,030,.f.,.f.,,,,.f.,) )
		oBrw25Rs:AddColumn( TcColumn():New( "ICMS"		,{ || aBrw25Tr[oBrw25Rs:nAt,14]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,030,.f.,.f.,,,,.f.,) )
		oBrw25Rs:AddColumn( TcColumn():New( "Vl ICMS Cr",{ || aBrw25Tr[oBrw25Rs:nAt,19]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,030,.f.,.f.,,,,.f.,) )
		oBrw25Rs:AddColumn( TcColumn():New( "Saldo Qtd" ,{ || aBrw25Tr[oBrw25Rs:nAt,20]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,030,.f.,.f.,,,,.f.,) )
		oBrw25Rs:AddColumn( TcColumn():New( "Saldo ICMS",{ || aBrw25Tr[oBrw25Rs:nAt,21]}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,030,.f.,.f.,,,,.f.,) )
		oBrw25Rs:AddColumn( TcColumn():New( "Hist.Baixa",{ || aBrw25Tr[oBrw25Rs:nAt,22]}	, "@!"						,,,"LEFT"	,400,.f.,.f.,,,,.f.,) )

		oBrw25Rs:SetArray(aBrw25Tr)
		oBrw25Rs:Align		:=	CONTROL_ALIGN_ALLCLIENT	 // CONTROL_ALIGN_TOP //
		oBrw25Rs:bLine := {||{ 	aBrw25Tr[oBrw25Rs:nAt,01],;//FILIAL
		aBrw25Tr[oBrw25Rs:nAt,02],;//Produto
		aBrw25Tr[oBrw25Rs:nAt,03],;//Descrição
		aBrw25Tr[oBrw25Rs:nAt,04],;//Tp.Ope
		aBrw25Tr[oBrw25Rs:nAt,05],;//Dt.Entrada
		aBrw25Tr[oBrw25Rs:nAt,06],;//Dt.Emissão
		aBrw25Tr[oBrw25Rs:nAt,07],;//Documento
		aBrw25Tr[oBrw25Rs:nAt,08],;//Serie
		aBrw25Tr[oBrw25Rs:nAt,09],;//Fornecedor
		aBrw25Tr[oBrw25Rs:nAt,10],;//Loja
		Transform(aBrw25Tr[oBrw25Rs:nAT,11],'@E 999,999,999.9999'),;//Quant
		Transform(aBrw25Tr[oBrw25Rs:nAT,12],'@E 999,999,999.9999'),;//Vl.Unit
		Transform(aBrw25Tr[oBrw25Rs:nAT,13],'@E 9,999,999,999.99'),;//Total
		Transform(aBrw25Tr[oBrw25Rs:nAT,14],'@E 9,999,999,999.99'),;//ICMS
		Transform(aBrw25Tr[oBrw25Rs:nAT,19],'@E 9,999,999,999.99'),;//ICMS Cred
		Transform(aBrw25Tr[oBrw25Rs:nAT,20],'@E 9,999,999,999.99'),;//Sld.Quant
		Transform(aBrw25Tr[oBrw25Rs:nAT,21],'@E 9,999,999,999.99'),;//Sld.ICMS
		aBrw25Tr[oBrw25Rs:nAt,22]} }//Historico Baixa
	ENDIF

	IF nOpMdl	== 1 .or. nOpMdl	== 2 .or. nOpMdl	== 4
		//INICIO Chamado n.055157 - OS n.056585 - Relatório Outras Entradas - Abel Babini - 28/01/2020
		//--------------------------------------------------------------------------
		//ABA 26 - OUTRAS ENTRADAS
		//--------------------------------------------------------------------------
		IF nOpMdl	== 1
			oFld26	:= TFolder():New(1,1,aFld26,{},oFolder030:aDialogs[25],,,, .T., .F.,aPosObj[2,4]-5,aPosObj[2,3]-61,)
		ELSEIF nOpMdl	== 2
			oFld26	:= TFolder():New(1,1,aFld26,{},oFolder030:aDialogs[14],,,, .T., .F.,aPosObj[2,4]-5,aPosObj[2,3]-61,)
		ELSEIF nOpMdl	== 4
			oFld26	:= TFolder():New(1,1,aFld26,{},oFolder030:aDialogs[14],,,, .T., .F.,aPosObj[2,4]-5,aPosObj[2,3]-61,)
		ENDIF
		oFld26:aDialogs[1]:oFont :=oDlg:oFont
		oFld26:aDialogs[2]:oFont :=oDlg:oFont

		////////////////////////////////////////////////////////////
		oFLr26p1:= FWLayer():New()
		oFLr26p1:Init( oFld26:aDialogs[1], .F., .T.) //RESUMO

		//Define os Paineis
		//TITULO
		oFLr26p1:AddLine ('TIT_DET1', 16, .F.)
		oFLr26p1:AddCollumn('TIT_ESQ1',100,.F.,'TIT_DET1')

		oFLr26p1:AddLine ('DETALHE1', 70, .F.)
		oFLr26p1:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

		oFLr26p1:AddLine ('RESUMO1', 14, .F.)
		oFLr26p1:AddCollumn('RES_DIR1',100,.F.,'RESUMO1')

		oPn26T1		:= oFLr26p1:GetColPanel('TIT_ESQ1','TIT_DET1')
		oPn26DE1	:= oFLr26p1:GetColPanel('DET_ESQ1','DETALHE1')
		oPn26R1		:= oFLr26p1:GetColPanel('RES_DIR1','RESUMO1')

		oPn26T1:FreeChildren()
		oPn26DE1:FreeChildren()
		oPn26R1:FreeChildren()

		//Cabecalho
		@ 001,008 SAY OemToAnsi("Classificação da Movimentação de Outras Entradas")		FONT oFont003 SIZE 400,15 OF oPn26T1 PIXEL
		@ 011,028 SAY OemToAnsi("1 > Selecione a classificação ao lado:")		FONT oFont003 SIZE 140,15 OF oPn26T1 PIXEL
		@ 011,165 COMBOBOX oClassOE VAR cClassOE ITEMS aClassOE SIZE 110,08 PIXEL OF oPn26T1 ON CHANGE nClassOE := oClassOE:nAt 
		@ 011,280 SAY OemToAnsi("2 > Selecione os itens a serem classificados")		FONT oFont003 SIZE 200,15 OF oPn26T1 PIXEL
		@ 011,450 SAY OemToAnsi("3 > Clique no botão Aplica Classif.")		FONT oFont003 SIZE 150,15 OF oPn26T1 PIXEL
		//@ 011,590 BUTTON OemToAnsi('Aplica Classif.')	SIZE 42,13	FONT oDlg:oFont ACTION MsgRun( "Processando classificação de Outras Entradas, aguarde...",,{ || Static Call(ADFIS038R,xBr26Clf, nClassOE) } ) OF oPn26T1 PIXEL //"Exportar Excel"
		//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
		@ 011,590 BUTTON OemToAnsi('Aplica Classif.')	SIZE 42,13	FONT oDlg:oFont ACTION MsgRun( "Processando classificação de Outras Entradas, aguarde...",,{ || u_FIS038B5(nClassOE) } ) OF oPn26T1 PIXEL //"Exportar Excel"

		//QUADRO DE RELATÓRIO
		@ 001,528 SAY OemToAnsi("OUTRAS OPÇÕES")		SIZE 200,15	FONT oFont003 OF oPn26R1 PIXEL
		//@ 011,528 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION Static Call(ADFIS038R,xRelBr26) OF oPn26R1 PIXEL //"Exportar Excel"
		//@ 011,580 BUTTON OemToAnsi('Grava Classif.')	SIZE 42,13	FONT oDlg:oFont ACTION Static Call(ADFIS038R,xVrfGr26) OF oPn26R1 PIXEL //"Exportar Excel"
		//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
		@ 011,528 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION u_FIS038B6() OF oPn26R1 PIXEL //"Exportar Excel"
		@ 011,580 BUTTON OemToAnsi('Grava Classif.')	SIZE 42,13	FONT oDlg:oFont ACTION u_FIS038B7() OF oPn26R1 PIXEL //"Exportar Excel"

		
		oBrw26Dt := FWMarkBrowse():New() 
		oBrw26Dt:SetOwner(oPn26DE1) 
		oBrw26Dt:SetAlias(cAlB26Z1)
		oBrw26Dt:SetTemporary(.T.)	
		oBrw26Dt:SetFields(xR09Stru())
		oBrw26Dt:SetLineHeight(12)
		oBrw26Dt:DisableConfig()
		//oBrw26Dt:DisableFilter()
		oBrw26Dt:DisableReport()
		oBrw26Dt:DisableSaveConfig()

		// oBrw26Dt:SetDescription('Itens Pendentes de Classificação')
		oBrw26Dt:SetFieldMark('OMARK')
		oBrw26Dt:AddLegend( "Alltrim(OMARK)<>''", "WHITE", "*** Marcado para classificar ***"  ) 
		oBrw26Dt:AddLegend( "CLASSIF==' 1'", "YELLOW"	, C11111 )
		oBrw26Dt:AddLegend( "CLASSIF==' 2'", "BLUE"  	, C11112) 
		oBrw26Dt:AddLegend( "CLASSIF==' 3'", "BROWN" 	, C11113) 
		oBrw26Dt:AddLegend( "CLASSIF==' 4'", "RED"  	, C11114) 
		oBrw26Dt:AddLegend( "CLASSIF==' 5'", "GREEN" 	, C11115) 
		oBrw26Dt:AddLegend( "CLASSIF==' 6'", "ORANGE"	, C11116) 
		oBrw26Dt:AddLegend( "CLASSIF==' 7'", "PINK"		, C11117) 
		oBrw26Dt:AddLegend( "CLASSIF==' 8'", "F12_MARR"	, C11118) 
		oBrw26Dt:AddLegend( "CLASSIF==' 9'", "GRAY	"		, C11119) 
		oBrw26Dt:AddLegend( "CLASSIF=='10'", "LIGHTBLU"	, C11120) 
		oBrw26Dt:AddLegend( "CLASSIF=='11'", "LIGHTBLU"	, C11121) 
		oBrw26Dt:AddLegend( "CLASSIF=='12'", "LIGHTBLU"	, C11122) 
		oBrw26Dt:AddLegend( "CLASSIF=='13'", "LIGHTBLU"	, C11123) 
		oBrw26Dt:AddLegend( "CLASSIF=='14'", "BLACK"	, C11124) 
		oBrw26Dt:Activate() 


		//@ 001,008 SAY OemToAnsi("TOTAIS ")		FONT oFont003 SIZE 200,15 OF oPn09R1 PIXEL
		//@ 001,058 SAY OemToAnsi("Vl. Contábil")	FONT oFont002 SIZE 200,15 OF oPn09R1 PIXEL
		//@ 001,128 SAY OemToAnsi("Vl. ICMS")		FONT oFont002 SIZE 200,15 OF oPn09R1 PIXEL
		//@ 001,198 SAY OemToAnsi("Quantidade ")	FONT oFont002 SIZE 200,15 OF oPn09R1 PIXEL
		//@ 011,058 MSGET nA09T001	SIZE 60,08 OF oPn09R1 PIXEL When .F. PICTURE '@E 9,999,999,999.99' // Total BC Cofins Merc Interno
		//@ 011,128 MSGET nA09T002	SIZE 60,08 OF oPn09R1 PIXEL When .F. PICTURE '@E 9,999,999,999.99' // Total BC Cofins Merc Interno
		//@ 011,198 MSGET nA09T003	SIZE 60,08 OF oPn09R1 PIXEL When .F. PICTURE '@E 9,999,999,999.99' // Total BC Cofins Merc Interno

		////////////////////////////////////////////////////////////
		oFLr26p2:= FWLayer():New()
		oFLr26p2:Init( oFld26:aDialogs[2], .F., .T.) //Resumo
		//Define os Paineis
		//TITULO
		oFLr26p2:AddLine ('TIT_DET1', 6, .F.)
		oFLr26p2:AddCollumn('TIT_ESQ1',100,.F.,'TIT_DET1')

		oFLr26p2:AddLine ('DETALHE1', 74, .F.)
		oFLr26p2:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

		oFLr26p2:AddLine ('RESUMO1', 20, .F.)
		oFLr26p2:AddCollumn('RES_DIR1',100,.F.,'RESUMO1')

		oPn26T2		:= oFLr26p2:GetColPanel('TIT_ESQ1','TIT_DET1')
		oPn26DE2	:= oFLr26p2:GetColPanel('DET_ESQ1','DETALHE1')
		oPn26R2		:= oFLr26p2:GetColPanel('RES_DIR1','RESUMO1')

		oPn26T2:FreeChildren()
		oPn26DE2:FreeChildren()
		oPn26R2:FreeChildren()

		//Cabecalho
		@ 001,008 SAY OemToAnsi("Resumo Outras Entradas")		FONT oFont003 SIZE 400,15 OF oPn26T2 PIXEL

		oBrw26Z2:= TcBrowse():New(010,050,150,150,,,,oPn26DE2,,,,,,,,,,,,.f.,cAlB26Z2,.t.,,.f.,,,,)
		oBrw26Z2:AddColumn( TcColumn():New( "Filial"			, {|| (cAlB26Z2)->FILIAL}		, "@!"						,,,"CENTER"	,040,.f.,.f.,,,,.f.,) )
		oBrw26Z2:AddColumn( TcColumn():New( "Classif."		, {|| (cAlB26Z2)->CLASSIF}	, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw26Z2:AddColumn( TcColumn():New( "Quant"				, {|| (cAlB26Z2)->QUANT}		, "@E 999,999,999.9999"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw26Z2:AddColumn( TcColumn():New( "Vl. Cont"		, {|| (cAlB26Z2)->VLCONT}		, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw26Z2:AddColumn( TcColumn():New( "Vl. ICMS"		, {|| (cAlB26Z2)->ICMSVAL}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		
		oBrw26Z2:Align		:=	CONTROL_ALIGN_ALLCLIENT
		//FIM Chamado n.055157 - OS n.056585 - Relatório Outras Entradas - Abel Babini - 28/01/2020
	ENDIF

	IF nOpMdl	== 2
		//--------------------------------------------------------------------------
		//ABA 27 - IVA
		//--------------------------------------------------------------------------
		oFld27	:= FWLayer():New()
		IF nOpMdl	== 2
			oFld27:Init( oFolder030:aDialogs[15], .F., .T.)
		ENDIF

		//TITULO
		oFld27:AddLine ('TIT_DLG1', 6, .F.)
		oFld27:AddCollumn('TIT_DLG1',100,.F.,'TIT_DLG1')
		//DETALHE
		oFld27:AddLine ('DET_DLG1', 74, .F.)
		oFld27:AddCollumn('DET_DLG1E',100,.F.,'DET_DLG1')
		//RODAPE
		oFld27:AddLine ('ROD_DLG1', 20, .F.)
		oFld27:AddCollumn('ROD_DLG1',100,.F.,'ROD_DLG1')

		oPn27T1		:= oFld27:GetColPanel('TIT_DLG1','TIT_DLG1')
		oPn27D1E	:= oFld27:GetColPanel('DET_DLG1E','DET_DLG1')
		oPn27R1		:= oFld27:GetColPanel('ROD_DLG1','ROD_DLG1')

		oPn27T1:FreeChildren()
		oPn27D1E:FreeChildren()
		oPn27R1:FreeChildren()

		@ 001,008 SAY OemToAnsi("Emissão do Relatório IVA")		FONT oFont003 SIZE 400,15 OF oPn27T1 PIXEL

		//QUADRO DE RELATÓRIO
		@ 001,558 SAY OemToAnsi("OUTRAS OPÇÕES")		SIZE 200,15	FONT oFont003 OF oPn27R1 PIXEL
		//@ 014,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION Static Call(ADFIS038R,xRelBr27)  OF oPn27R1 PIXEL //"Exportar Excel"
		//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
		@ 014,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION u_FIS038B8() OF oPn27R1 PIXEL //"Exportar Excel"

		
		oBrw27Rs:= TcBrowse():New(010,050,150,150,,,,oPn27D1E,,,,,,,,,,,,.f.,cAlB27Br,.t.,,.f.,,,,)
		oBrw27Rs:AddColumn( TcColumn():New( "Filial"			, {|| (cAlB27Br)->FILIAL}		, "@!"						,,,"CENTER"	,020,.f.,.f.,,,,.f.,) )
		oBrw27Rs:AddColumn( TcColumn():New( "CFOP"				, {|| (cAlB27Br)->CFOP}			, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw27Rs:AddColumn( TcColumn():New( "Alíquota"		, {|| (cAlB27Br)->ALIQUOTA}	, "@E 999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw27Rs:AddColumn( TcColumn():New( "Vl. Contábil", {|| (cAlB27Br)->VALCONT}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw27Rs:AddColumn( TcColumn():New( "Base ICMS"		, {|| (cAlB27Br)->BASEICMS}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw27Rs:AddColumn( TcColumn():New( "Vl. ICMS"		, {|| (cAlB27Br)->VALICMS}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw27Rs:AddColumn( TcColumn():New( "Isentas"			, {|| (cAlB27Br)->ISENTO}		, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw27Rs:AddColumn( TcColumn():New( "Outras"			, {|| (cAlB27Br)->OUTRAS}		, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw27Rs:AddColumn( TcColumn():New( "Descontos"		, {|| (cAlB27Br)->DESCONT}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw27Rs:AddColumn( TcColumn():New( "Vl. IPI"			, {|| (cAlB27Br)->VALIPI}		, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

		oBrw27Rs:Align		:=	CONTROL_ALIGN_ALLCLIENT
	ENDIF
		//--------------------------------------------------------------------------
		//ABA 28 - CREDITO CIAP
		//--------------------------------------------------------------------------
	IF nOpMdl	== 2 .or. nOpMdl	== 4
		oFld28	:= FWLayer():New()
		IF nOpMdl	== 2
			oFld28:Init( oFolder030:aDialogs[16], .F., .T.)
		ELSEIF nOpMdl	== 4
			oFld28:Init( oFolder030:aDialogs[15], .F., .T.)
		ENDIF

		//TITULO
		oFld28:AddLine ('TIT_DLG1', 6, .F.)
		oFld28:AddCollumn('TIT_DLG1',100,.F.,'TIT_DLG1')
		//DETALHE
		oFld28:AddLine ('DET_DLG1', 74, .F.)
		oFld28:AddCollumn('DET_DLG1E',100,.F.,'DET_DLG1')
		//RODAPE
		oFld28:AddLine ('ROD_DLG1', 20, .F.)
		oFld28:AddCollumn('ROD_DLG1',100,.F.,'ROD_DLG1')

		oPn28T1		:= oFld28:GetColPanel('TIT_DLG1','TIT_DLG1')
		oPn28D1E	:= oFld28:GetColPanel('DET_DLG1E','DET_DLG1')
		oPn28R1		:= oFld28:GetColPanel('ROD_DLG1','ROD_DLG1')

		oPn28T1:FreeChildren()
		oPn28D1E:FreeChildren()
		oPn28R1:FreeChildren()

		@ 001,008 SAY OemToAnsi("Emissão do Relatório CIAP")		FONT oFont003 SIZE 400,15 OF oPn28T1 PIXEL

		//QUADRO DE RELATÓRIO
		@ 001,558 SAY OemToAnsi("OUTRAS OPÇÕES")		SIZE 200,15	FONT oFont003 OF oPn28R1 PIXEL
		//@ 014,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION Static Call(ADFIS038R,xRelBr28)  OF oPn28R1 PIXEL //"Exportar Excel"
		//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
		@ 014,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION u_FIS038B9() OF oPn28R1 PIXEL //"Exportar Excel"

		@ 014,008 SAY OemToAnsi("Valor Crédito ICMS (CIAP)")	FONT oFont002 SIZE 200,15 OF oPn28R1 PIXEL
		@ 014,150 MSGET nVCiap SIZE 60,08 OF oPn28R1 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		
		oBrw28Rs:= TcBrowse():New(010,050,150,150,,,,oPn28D1E,,,,,,,,,,,,.f.,cAlB28Br,.t.,,.f.,,,,)
		oBrw28Rs:AddColumn( TcColumn():New( "Filial"			, {|| (cAlB28Br)->FILIAL}		, "@!"		,,,"CENTER"	,020,.f.,.f.,,,,.f.,) )
		oBrw28Rs:AddColumn( TcColumn():New( "Dt. Entrada"	, {|| (cAlB28Br)->DTENTRADA}, "@!"		,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw28Rs:AddColumn( TcColumn():New( "Dt. Emissao"	, {|| (cAlB28Br)->DTEMISSAO}, "@!"		,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw28Rs:AddColumn( TcColumn():New( "Serie NF"		, {|| (cAlB28Br)->NFSERIE}	, "@!"		,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
		oBrw28Rs:AddColumn( TcColumn():New( "Nota Fiscal"	, {|| (cAlB28Br)->NFISCAL}	, "@!"		,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
		oBrw28Rs:AddColumn( TcColumn():New( "CFOP"				, {|| (cAlB28Br)->CFOP}			, "@!"		,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw28Rs:AddColumn( TcColumn():New( "UF"					, {|| (cAlB28Br)->UF}				, "@!"		,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw28Rs:AddColumn( TcColumn():New( "Vl. Contábil", {|| (cAlB28Br)->VALCONT}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,060,.f.,.f.,,,,.f.,) )
		oBrw28Rs:AddColumn( TcColumn():New( "Vl. ICMS"		, {|| (cAlB28Br)->VALICMS}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,060,.f.,.f.,,,,.f.,) )
		oBrw28Rs:AddColumn( TcColumn():New( "Observação"	, {|| (cAlB28Br)->OBSERV}		, "@!"		,,,"LEFT"	,100,.f.,.f.,,,,.f.,) )

		oBrw28Rs:Align		:=	CONTROL_ALIGN_ALLCLIENT
	ENDIF
		//INICIO Chamado n.055548 - OS n.057704 - Abel Babini - 24/03/2020 - Painel Fiscal ICMS SC - Relatório Compra MP
		//--------------------------------------------------------------------------
		//ABA 29 - COMPRA MP
		//--------------------------------------------------------------------------
	IF nOpMdl	== 2 .or. nOpMdl	== 4 
		oFLr29p1:= FWLayer():New()
		IF nOpMdl	== 2
			oFLr29p1:Init( oFolder030:aDialogs[17], .F., .T.) //RESUMO
		ELSEIF nOpMdl	== 4
			oFLr29p1:Init( oFolder030:aDialogs[16], .F., .T.) //RESUMO
		ENDIF

		//TITULO
		oFLr29p1:AddLine ('TIT_DLG1', 6, .F.)
		oFLr29p1:AddCollumn('TIT_DLG1',100,.F.,'TIT_DLG1')
		//DETALHE
		oFLr29p1:AddLine ('DET_DLG1', 74, .F.)
		oFLr29p1:AddCollumn('DET_DLG1E',100,.F.,'DET_DLG1')
		//RODAPE
		oFLr29p1:AddLine ('ROD_DLG1', 20, .F.)
		oFLr29p1:AddCollumn('ROD_DLG1',100,.F.,'ROD_DLG1')

		oPn29T1		:= oFLr29p1:GetColPanel('TIT_DLG1','TIT_DLG1')
		oPn29D1E	:= oFLr29p1:GetColPanel('DET_DLG1E','DET_DLG1')
		oPn29R1		:= oFLr29p1:GetColPanel('ROD_DLG1','ROD_DLG1')

		oPn29T1:FreeChildren()
		oPn29D1E:FreeChildren()
		oPn29R1:FreeChildren()

		//Cabecalho
		@ 001,008 SAY OemToAnsi("Compra Matéria Prima")			FONT oFont003 SIZE 400,15 OF oPn29T1 PIXEL

		@ 001,008 SAY OemToAnsi("Totais")									FONT oFont003 SIZE 200,15 OF oPn29R1 PIXEL

		@ 010,004 TO 028,215 OF oPn29R1 PIXEL

		@ 014,008 SAY OemToAnsi("Total ICMS Compra Matéria Prima")		FONT oFont002 SIZE 200,15 OF oPn29R1 PIXEL
		@ 014,150 MSGET nVCOMMP	SIZE 60,08 OF oPn29R1 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		//QUADRO DE RELATÓRIO
		@ 001,558 SAY OemToAnsi("OUTRAS OPÇÕES")		SIZE 200,15	FONT oFont003 OF oPn29R1 PIXEL
		//@ 014,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION Static Call(ADFIS038R,xRelBr29) OF oPn29R1 PIXEL //"Exportar Excel"
		//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
		@ 014,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION u_FIS038C0() OF oPn29R1 PIXEL //"Exportar Excel"

		oBrw29Rs:= TcBrowse():New(010,050,150,150,,,,oPn29D1E,,,,,,,,,,,,.f.,cAlB29Br,.t.,,.f.,,,,)
		oBrw29Rs:AddColumn( TcColumn():New( "Filial"			, {|| (cAlB29Br)->FILIAL}			, "@!"						,,,"CENTER"	,015,.f.,.f.,,,,.f.,) )
		oBrw29Rs:AddColumn( TcColumn():New( "Dt. Entrada"	, {|| (cAlB29Br)->DTENTRADA}	, "@!"						,,,"LEFT"	,030,.f.,.f.,,,,.f.,) )
		oBrw29Rs:AddColumn( TcColumn():New( "Dt. Emissão"	, {|| (cAlB29Br)->DTEMISSAO}	, "@!"						,,,"LEFT"	,030,.f.,.f.,,,,.f.,) )
		oBrw29Rs:AddColumn( TcColumn():New( "Série"				, {|| (cAlB29Br)->NFSERIE}		, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw29Rs:AddColumn( TcColumn():New( "Nota Fiscal"	, {|| (cAlB29Br)->NF}					, "@!"						,,,"LEFT"	,035,.f.,.f.,,,,.f.,) )
		oBrw29Rs:AddColumn( TcColumn():New( "Item NF"			, {|| (cAlB29Br)->NFITEM}			, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw29Rs:AddColumn( TcColumn():New( "Cod.Forn"		, {|| (cAlB29Br)->CLIEFOR}		, "@!"						,,,"LEFT"	,030,.f.,.f.,,,,.f.,) )
		oBrw29Rs:AddColumn( TcColumn():New( "Loja"				, {|| (cAlB29Br)->LOJA}				, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw29Rs:AddColumn( TcColumn():New( "Fornecedor"	, {|| (cAlB29Br)->NOME}				, "@!"						,,,"LEFT"	,100,.f.,.f.,,,,.f.,) )
		oBrw29Rs:AddColumn( TcColumn():New( "CNPJ"				, {|| (cAlB29Br)->CNPJ}				, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw29Rs:AddColumn( TcColumn():New( "CFOP"				, {|| (cAlB29Br)->CFOP}				, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw29Rs:AddColumn( TcColumn():New( "Produto"			, {|| (cAlB29Br)->CODPROD}		, "@!"						,,,"LEFT"	,030,.f.,.f.,,,,.f.,) )
		oBrw29Rs:AddColumn( TcColumn():New( "Desc.Prod"		, {|| (cAlB29Br)->DESCPROD}		, "@!"						,,,"LEFT"	,080,.f.,.f.,,,,.f.,) )
		oBrw29Rs:AddColumn( TcColumn():New( "Quant"				, {|| (cAlB29Br)->QUANT}			, "@E 999,999,999.9999"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw29Rs:AddColumn( TcColumn():New( "Vl. Cont"		, {|| (cAlB29Br)->VLCONT}			, "@E 9,999,999,999.99"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw29Rs:AddColumn( TcColumn():New( "Vl. ICMS"		, {|| (cAlB29Br)->VLICMS}			, "@E 9,999,999,999.99"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

		oBrw29Rs:Align		:=	CONTROL_ALIGN_ALLCLIENT
		//FIM Chamado n.055548 - OS n.057704 - Abel Babini - 24/03/2020 - Painel Fiscal ICMS SC - Relatório Compra MP

		//--------------------------------------------------------------------------
		//ABA 30 - VENDAS
		//--------------------------------------------------------------------------
		oFLr30p1:= FWLayer():New()
		IF nOpMdl	== 2
			oFLr30p1:Init( oFolder030:aDialogs[18], .F., .T.) //RESUMO
		ELSEIF nOpMdl	== 4
			oFLr30p1:Init( oFolder030:aDialogs[17], .F., .T.) //RESUMO
		ENDIF

		//TITULO
		oFLr30p1:AddLine ('TIT_DLG1', 6, .F.)
		oFLr30p1:AddCollumn('TIT_DLG1',100,.F.,'TIT_DLG1')
		//DETALHE
		oFLr30p1:AddLine ('DET_DLG1', 74, .F.)
		oFLr30p1:AddCollumn('DET_DLG1E',100,.F.,'DET_DLG1')
		//RODAPE
		oFLr30p1:AddLine ('ROD_DLG1', 20, .F.)
		oFLr30p1:AddCollumn('ROD_DLG1',100,.F.,'ROD_DLG1')

		oPn30T1		:= oFLr30p1:GetColPanel('TIT_DLG1','TIT_DLG1')
		oPn30D1E	:= oFLr30p1:GetColPanel('DET_DLG1E','DET_DLG1')
		oPn30R1		:= oFLr30p1:GetColPanel('ROD_DLG1','ROD_DLG1')

		oPn30T1:FreeChildren()
		oPn30D1E:FreeChildren()
		oPn30R1:FreeChildren()

		//Cabecalho
		@ 001,008 SAY OemToAnsi("Vendas")			FONT oFont003 SIZE 400,15 OF oPn30T1 PIXEL

		@ 001,008 SAY OemToAnsi("Totais")									FONT oFont003 SIZE 200,15 OF oPn30R1 PIXEL

		@ 010,004 TO 028,215 OF oPn30R1 PIXEL

		@ 014,008 SAY OemToAnsi("Total ICMS Vendas")		FONT oFont002 SIZE 200,15 OF oPn30R1 PIXEL
		@ 014,150 MSGET nVVENFV	SIZE 60,08 OF oPn30R1 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		//QUADRO DE RELATÓRIO
		@ 001,558 SAY OemToAnsi("OUTRAS OPÇÕES")		SIZE 200,15	FONT oFont003 OF oPn30R1 PIXEL
		//@ 014,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION Static Call(ADFIS038R,xRelBr30) OF oPn30R1 PIXEL //"Exportar Excel"
		//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
		@ 014,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION u_FIS038C1() OF oPn30R1 PIXEL //"Exportar Excel"

		oBrw30Rs:= TcBrowse():New(010,050,150,150,,,,oPn30D1E,,,,,,,,,,,,.f.,cAlB30Br,.t.,,.f.,,,,)
		oBrw30Rs:AddColumn( TcColumn():New( "Filial"			, {|| (cAlB30Br)->FILIAL}			, "@!"						,,,"CENTER"	,015,.f.,.f.,,,,.f.,) )
		oBrw30Rs:AddColumn( TcColumn():New( "Dt. Entrada"	, {|| (cAlB30Br)->DTENTRADA}	, "@!"						,,,"LEFT"	,030,.f.,.f.,,,,.f.,) )
		oBrw30Rs:AddColumn( TcColumn():New( "Dt. Emissão"	, {|| (cAlB30Br)->DTEMISSAO}	, "@!"						,,,"LEFT"	,030,.f.,.f.,,,,.f.,) )
		oBrw30Rs:AddColumn( TcColumn():New( "Série"				, {|| (cAlB30Br)->NFSERIE}		, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw30Rs:AddColumn( TcColumn():New( "Nota Fiscal"	, {|| (cAlB30Br)->NF}					, "@!"						,,,"LEFT"	,035,.f.,.f.,,,,.f.,) )
		oBrw30Rs:AddColumn( TcColumn():New( "Item NF"			, {|| (cAlB30Br)->NFITEM}			, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw30Rs:AddColumn( TcColumn():New( "Cod.Forn"		, {|| (cAlB30Br)->CLIEFOR}		, "@!"						,,,"LEFT"	,030,.f.,.f.,,,,.f.,) )
		oBrw30Rs:AddColumn( TcColumn():New( "Loja"				, {|| (cAlB30Br)->LOJA}				, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw30Rs:AddColumn( TcColumn():New( "Fornecedor"	, {|| (cAlB30Br)->NOME}				, "@!"						,,,"LEFT"	,100,.f.,.f.,,,,.f.,) )
		oBrw30Rs:AddColumn( TcColumn():New( "CNPJ"				, {|| (cAlB30Br)->CNPJ}				, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw30Rs:AddColumn( TcColumn():New( "CFOP"				, {|| (cAlB30Br)->CFOP}				, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw30Rs:AddColumn( TcColumn():New( "Produto"			, {|| (cAlB30Br)->CODPROD}		, "@!"						,,,"LEFT"	,030,.f.,.f.,,,,.f.,) )
		oBrw30Rs:AddColumn( TcColumn():New( "Desc.Prod"		, {|| (cAlB30Br)->DESCPROD}		, "@!"						,,,"LEFT"	,080,.f.,.f.,,,,.f.,) )
		oBrw30Rs:AddColumn( TcColumn():New( "Quant"				, {|| (cAlB30Br)->QUANT}			, "@E 999,999,999.9999"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw30Rs:AddColumn( TcColumn():New( "Vl. Cont"		, {|| (cAlB30Br)->VLCONT}			, "@E 9,999,999,999.99"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw30Rs:AddColumn( TcColumn():New( "Vl. ICMS"		, {|| (cAlB30Br)->VLICMS}			, "@E 9,999,999,999.99"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

		oBrw30Rs:Align		:=	CONTROL_ALIGN_ALLCLIENT

		//--------------------------------------------------------------------------
		//ABA 33 - REL ENTRADAS E SAIDAS
		//--------------------------------------------------------------------------
		oFLr33p1:= FWLayer():New()
		IF nOpMdl	== 2
			oFLr33p1:Init( oFolder030:aDialogs[19], .F., .T.) //RESUMO
		ELSEIF nOpMdl	== 4
			oFLr33p1:Init( oFolder030:aDialogs[18], .F., .T.) //RESUMO
		ENDIF

		//TITULO
		oFLr33p1:AddLine ('TIT_DLG1', 6, .F.)
		oFLr33p1:AddCollumn('TIT_DLG1',100,.F.,'TIT_DLG1')
		//DETALHE
		oFLr33p1:AddLine ('DET_DLG1', 74, .F.)
		oFLr33p1:AddCollumn('DET_DLG1E',100,.F.,'DET_DLG1')
		//RODAPE
		oFLr33p1:AddLine ('ROD_DLG1', 20, .F.)
		oFLr33p1:AddCollumn('ROD_DLG1',100,.F.,'ROD_DLG1')

		oPn33T1		:= oFLr33p1:GetColPanel('TIT_DLG1','TIT_DLG1')
		oPn33D1E	:= oFLr33p1:GetColPanel('DET_DLG1E','DET_DLG1')
		oPn33R1		:= oFLr33p1:GetColPanel('ROD_DLG1','ROD_DLG1')

		oPn33T1:FreeChildren()
		oPn33D1E:FreeChildren()
		oPn33R1:FreeChildren()

		//Cabecalho
		@ 001,008 SAY OemToAnsi("Entradas e Saídas")			FONT oFont003 SIZE 400,15 OF oPn33T1 PIXEL

		//@ 001,008 SAY OemToAnsi("Totais")									FONT oFont003 SIZE 200,15 OF oPn33R1 PIXEL

		//@ 010,004 TO 028,215 OF oPn33R1 PIXEL

		//@ 014,008 SAY OemToAnsi("Total ICMS Vendas")		FONT oFont002 SIZE 200,15 OF oPn30R1 PIXEL
		//@ 014,150 MSGET nVVENFV	SIZE 60,08 OF oPn30R1 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		//QUADRO DE RELATÓRIO
		@ 001,558 SAY OemToAnsi("OUTRAS OPÇÕES")		SIZE 200,15	FONT oFont003 OF oPn33R1 PIXEL
		//@ 014,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION Static Call(ADFIS038R,xRelBr33) OF oPn33R1 PIXEL //"Exportar Excel"
		//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
		@ 014,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION u_FIS038C2() OF oPn33R1 PIXEL //"Exportar Excel"

		oBrw33Rs:= TcBrowse():New(010,050,150,150,,,,oPn33D1E,,,,,,,,,,,,.f.,cAlB33Br,.t.,,.f.,,,,)
		oBrw33Rs:AddColumn( TcColumn():New( "Filial"			, {|| (cAlB33Br)->FILIAL}			, "@!"						,,,"CENTER"	,015,.f.,.f.,,,,.f.,) )
		oBrw33Rs:AddColumn( TcColumn():New( "CFOP"				, {|| (cAlB33Br)->CFOP}				, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw33Rs:AddColumn( TcColumn():New( "Produto"			, {|| (cAlB33Br)->CODPROD}		, "@!"						,,,"LEFT"	,030,.f.,.f.,,,,.f.,) )
		oBrw33Rs:AddColumn( TcColumn():New( "Desc.Prod"		, {|| (cAlB33Br)->DESCPROD}		, "@!"						,,,"LEFT"	,080,.f.,.f.,,,,.f.,) )
		oBrw33Rs:AddColumn( TcColumn():New( "NCM"					, {|| (cAlB33Br)->NCM}				, "@!"						,,,"LEFT"	,080,.f.,.f.,,,,.f.,) )
		oBrw33Rs:AddColumn( TcColumn():New( "Quant"				, {|| (cAlB33Br)->QUANT}			, "@E 999,999,999.9999"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw33Rs:AddColumn( TcColumn():New( "Vl. Cont"		, {|| (cAlB33Br)->VLCONT}			, "@E 9,999,999,999.99"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw33Rs:AddColumn( TcColumn():New( "Vl. ICMS"		, {|| (cAlB33Br)->VLICMS}			, "@E 9,999,999,999.99"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

		oBrw33Rs:Align		:=	CONTROL_ALIGN_ALLCLIENT

	ENDIF

	IF nOpMdl	== 3
		//--------------------------------------------------------------------------
		//ABA 31 - APURAÇÃO ICMS MODELO GO
		//--------------------------------------------------------------------------
		oFld31	:= FWLayer():New()
		oFld31:Init( oFolder030:aDialogs[4], .F., .T.)

		//TITULO
		oFld31:AddLine ('TIT_DLG1', 6, .F.)
		oFld31:AddCollumn('TIT_DLG1',100,.F.,'TIT_DLG1')
		//DETALHE
		oFld31:AddLine ('DET_DLG1', 74, .F.)
		oFld31:AddCollumn('DET_DLG1E',100,.F.,'DET_DLG1')
		//RODAPE
		oFld31:AddLine ('ROD_DLG1', 20, .F.)
		oFld31:AddCollumn('ROD_DLG1',100,.F.,'ROD_DLG1')

		oPn31T1		:= oFld31:GetColPanel('TIT_DLG1','TIT_DLG1')
		oPn31D1E	:= oFld31:GetColPanel('DET_DLG1E','DET_DLG1')
		oPn31R1		:= oFld31:GetColPanel('ROD_DLG1','ROD_DLG1')

		oPn31T1:FreeChildren()
		oPn31D1E:FreeChildren()
		oPn31R1:FreeChildren()

		@ 001,008 SAY OemToAnsi("Detalhamento Apuração ICMS")		FONT oFont003 SIZE 400,15 OF oPn31T1 PIXEL

		//QUADRO DE RELATÓRIO
		@ 001,558 SAY OemToAnsi("OUTRAS OPÇÕES")		SIZE 200,15	FONT oFont003 OF oPn31R1 PIXEL
		//@ 014,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION Static Call(ADFIS038R,xRelBr31)  OF oPn31R1 PIXEL //"Exportar Excel"
		//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
		@ 014,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION u_FIS038C3()  OF oPn31R1 PIXEL //"Exportar Excel"

		oBrw31Rs:= TcBrowse():New(010,050,150,150,,,,oPn31D1E,,,,,,,,,,,,.f.,cAlB31Br,.t.,,.f.,,,,)
		oBrw31Rs:AddColumn( TcColumn():New( "Filial"			, {|| (cAlB31Br)->FILIAL}		, "@!"						,,,"CENTER"	,020,.f.,.f.,,,,.f.,) )
		oBrw31Rs:AddColumn( TcColumn():New( "CFOP"				, {|| (cAlB31Br)->CFOP}			, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw31Rs:AddColumn( TcColumn():New( "Alíquota"		, {|| (cAlB31Br)->ALIQUOTA}	, "@E 999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw31Rs:AddColumn( TcColumn():New( "Vl. Contábil", {|| (cAlB31Br)->VALCONT}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw31Rs:AddColumn( TcColumn():New( "Base ICMS"		, {|| (cAlB31Br)->BASEICMS}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw31Rs:AddColumn( TcColumn():New( "Vl. ICMS"		, {|| (cAlB31Br)->VALICMS}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw31Rs:AddColumn( TcColumn():New( "Isentas"			, {|| (cAlB31Br)->ISENTO}		, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw31Rs:AddColumn( TcColumn():New( "Outras"			, {|| (cAlB31Br)->OUTRAS}		, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw31Rs:AddColumn( TcColumn():New( "Descontos"		, {|| (cAlB31Br)->DESCONT}	, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw31Rs:AddColumn( TcColumn():New( "Vl. IPI"			, {|| (cAlB31Br)->VALIPI}		, "@E 9,999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

		oBrw31Rs:Align		:=	CONTROL_ALIGN_ALLCLIENT

		//--------------------------------------------------------------------------
		//ABA 32 - CONFERÊNCIA NF SERVIÇO
		//--------------------------------------------------------------------------
		oFld32	:= FWLayer():New()
		oFld32:Init( oFolder030:aDialogs[6], .F., .T.)

		//TITULO
		oFld32:AddLine ('TIT_DLG1', 6, .F.)
		oFld32:AddCollumn('TIT_DLG1',100,.F.,'TIT_DLG1')
		//DETALHE
		oFld32:AddLine ('DET_DLG1', 74, .F.)
		oFld32:AddCollumn('DET_DLG1E',100,.F.,'DET_DLG1')
		//RODAPE
		oFld32:AddLine ('ROD_DLG1', 20, .F.)
		oFld32:AddCollumn('ROD_DLG1',100,.F.,'ROD_DLG1')

		oPn32T1		:= oFld32:GetColPanel('TIT_DLG1','TIT_DLG1')
		oPn32D1E	:= oFld32:GetColPanel('DET_DLG1E','DET_DLG1')
		oPn32R1		:= oFld32:GetColPanel('ROD_DLG1','ROD_DLG1')

		oPn32T1:FreeChildren()
		oPn32D1E:FreeChildren()
		oPn32R1:FreeChildren()

		@ 001,008 SAY OemToAnsi("Conferência NF Serviço")		FONT oFont003 SIZE 400,15 OF oPn32T1 PIXEL

		//QUADRO DE RELATÓRIO
		@ 001,558 SAY OemToAnsi("OUTRAS OPÇÕES")		SIZE 200,15	FONT oFont003 OF oPn32R1 PIXEL
		//@ 014,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION Static Call(ADFIS038R,xRelBr32)  OF oPn32R1 PIXEL //"Exportar Excel"
		//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
		@ 014,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION u_FIS038C4()  OF oPn32R1 PIXEL //"Exportar Excel"

		
		oBrw32Rs:= TcBrowse():New(010,050,150,150,,,,oPn32D1E,,,,,,,,,,,,.f.,cAlB32Br,.t.,,.f.,,,,)
		oBrw32Rs:AddColumn( TcColumn():New( "Filial"			, {|| (cAlB32Br)->FILIAL}			, "@!"						,,,"CENTER"	,015,.f.,.f.,,,,.f.,) )
		oBrw32Rs:AddColumn( TcColumn():New( "Dt. Entrada"	, {|| (cAlB32Br)->DTENTRADA}	, "@!"						,,,"LEFT"	,030,.f.,.f.,,,,.f.,) )
		oBrw32Rs:AddColumn( TcColumn():New( "Dt. Emissão"	, {|| (cAlB32Br)->DTEMISSAO}	, "@!"						,,,"LEFT"	,030,.f.,.f.,,,,.f.,) )
		oBrw32Rs:AddColumn( TcColumn():New( "Série"				, {|| (cAlB32Br)->NFSERIE}		, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw32Rs:AddColumn( TcColumn():New( "Nota Fiscal"	, {|| (cAlB32Br)->NF}					, "@!"						,,,"LEFT"	,035,.f.,.f.,,,,.f.,) )
		oBrw32Rs:AddColumn( TcColumn():New( "Item NF"			, {|| (cAlB32Br)->NFITEM}			, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw32Rs:AddColumn( TcColumn():New( "Cod.Forn"		, {|| (cAlB32Br)->CLIEFOR}		, "@!"						,,,"LEFT"	,030,.f.,.f.,,,,.f.,) )
		oBrw32Rs:AddColumn( TcColumn():New( "Loja"				, {|| (cAlB32Br)->LOJA}				, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw32Rs:AddColumn( TcColumn():New( "Fornecedor"	, {|| (cAlB32Br)->NOME}				, "@!"						,,,"LEFT"	,100,.f.,.f.,,,,.f.,) )
		oBrw32Rs:AddColumn( TcColumn():New( "CNPJ"				, {|| (cAlB32Br)->CNPJ}				, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw32Rs:AddColumn( TcColumn():New( "CFOP"				, {|| (cAlB32Br)->CFOP}				, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw32Rs:AddColumn( TcColumn():New( "Produto"			, {|| (cAlB32Br)->CODPROD}		, "@!"						,,,"LEFT"	,030,.f.,.f.,,,,.f.,) )
		oBrw32Rs:AddColumn( TcColumn():New( "Desc.Prod"		, {|| (cAlB32Br)->DESCPROD}		, "@!"						,,,"LEFT"	,080,.f.,.f.,,,,.f.,) )
		oBrw32Rs:AddColumn( TcColumn():New( "Quant"				, {|| (cAlB32Br)->QUANT}			, "@E 999,999,999.9999"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw32Rs:AddColumn( TcColumn():New( "Vl. Cont"		, {|| (cAlB32Br)->VLCONT}			, "@E 9,999,999,999.99"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw32Rs:AddColumn( TcColumn():New( "Vl. ICMS"		, {|| (cAlB32Br)->VLICMS}			, "@E 9,999,999,999.99"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

		oBrw32Rs:Align		:=	CONTROL_ALIGN_ALLCLIENT

	ENDIF

	IF nOpMdl == 4 .or. nOpMdl == 2
			//--------------------------------------------------------------------------
		//ABA 34 - DEVOLUÇÃO VENDAS
		//--------------------------------------------------------------------------
		oFLr34p1:= FWLayer():New()
		IF nOpMdl	== 4
			oFLr34p1:Init(oFolder030:aDialogs[7], .F., .T.) //RESUMO
		ELSEIF nOpMdl	== 2
			oFLr34p1:Init(oFolder030:aDialogs[20], .F., .T.) //RESUMO
		ENDIF

		//TITULO
		oFLr34p1:AddLine ('TIT_DLG1', 6, .F.)
		oFLr34p1:AddCollumn('TIT_DLG1',100,.F.,'TIT_DLG1')
		//DETALHE
		oFLr34p1:AddLine ('DET_DLG1', 74, .F.)
		oFLr34p1:AddCollumn('DET_DLG1E',100,.F.,'DET_DLG1')
		//RODAPE
		oFLr34p1:AddLine ('ROD_DLG1', 20, .F.)
		oFLr34p1:AddCollumn('ROD_DLG1',100,.F.,'ROD_DLG1')

		oPn34T1		:= oFLr34p1:GetColPanel('TIT_DLG1','TIT_DLG1')
		oPn34D1E	:= oFLr34p1:GetColPanel('DET_DLG1E','DET_DLG1')
		oPn34R1		:= oFLr34p1:GetColPanel('ROD_DLG1','ROD_DLG1')

		oPn34T1:FreeChildren()
		oPn34D1E:FreeChildren()
		oPn34R1:FreeChildren()

		//Cabecalho
		@ 001,008 SAY OemToAnsi("Devolução Vendas")			FONT oFont003 SIZE 400,15 OF oPn34T1 PIXEL

		@ 001,008 SAY OemToAnsi("Totais")									FONT oFont003 SIZE 200,15 OF oPn34R1 PIXEL

		@ 010,004 TO 028,215 OF oPn34R1 PIXEL

		@ 014,008 SAY OemToAnsi("Total ICMS Devolução Vendas")		FONT oFont002 SIZE 200,15 OF oPn34R1 PIXEL
		@ 014,150 MSGET nVDVVEN	SIZE 60,08 OF oPn34R1 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		//QUADRO DE RELATÓRIO
		@ 001,558 SAY OemToAnsi("OUTRAS OPÇÕES")		SIZE 200,15	FONT oFont003 OF oPn34R1 PIXEL
		//@ 014,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION Static Call(ADFIS038R,xRelBr34) OF oPn34R1 PIXEL //"Exportar Excel"
		//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
		@ 014,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION u_FIS038C5() OF oPn34R1 PIXEL //"Exportar Excel"

		oBrw34Rs:= TcBrowse():New(010,050,150,150,,,,oPn34D1E,,,,,,,,,,,,.f.,cAlB34Br,.t.,,.f.,,,,)
		oBrw34Rs:AddColumn( TcColumn():New( "Filial"			, {|| (cAlB34Br)->FILIAL}			, "@!"						,,,"CENTER"	,015,.f.,.f.,,,,.f.,) )
		oBrw34Rs:AddColumn( TcColumn():New( "Dt. Entrada"	, {|| (cAlB34Br)->DTENTRADA}	, "@!"						,,,"LEFT"	,030,.f.,.f.,,,,.f.,) )
		oBrw34Rs:AddColumn( TcColumn():New( "Dt. Emissão"	, {|| (cAlB34Br)->DTEMISSAO}	, "@!"						,,,"LEFT"	,030,.f.,.f.,,,,.f.,) )
		oBrw34Rs:AddColumn( TcColumn():New( "Série"				, {|| (cAlB34Br)->NFSERIE}		, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw34Rs:AddColumn( TcColumn():New( "Nota Fiscal"	, {|| (cAlB34Br)->NF}					, "@!"						,,,"LEFT"	,035,.f.,.f.,,,,.f.,) )
		oBrw34Rs:AddColumn( TcColumn():New( "Item NF"			, {|| (cAlB34Br)->NFITEM}			, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw34Rs:AddColumn( TcColumn():New( "Cod.Forn"		, {|| (cAlB34Br)->CLIEFOR}		, "@!"						,,,"LEFT"	,030,.f.,.f.,,,,.f.,) )
		oBrw34Rs:AddColumn( TcColumn():New( "Loja"				, {|| (cAlB34Br)->LOJA}				, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw34Rs:AddColumn( TcColumn():New( "Fornecedor"	, {|| (cAlB34Br)->NOME}				, "@!"						,,,"LEFT"	,100,.f.,.f.,,,,.f.,) )
		oBrw34Rs:AddColumn( TcColumn():New( "CNPJ"				, {|| (cAlB34Br)->CNPJ}				, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
		oBrw34Rs:AddColumn( TcColumn():New( "CFOP"				, {|| (cAlB34Br)->CFOP}				, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw34Rs:AddColumn( TcColumn():New( "Produto"			, {|| (cAlB34Br)->CODPROD}		, "@!"						,,,"LEFT"	,030,.f.,.f.,,,,.f.,) )
		oBrw34Rs:AddColumn( TcColumn():New( "Desc.Prod"		, {|| (cAlB34Br)->DESCPROD}		, "@!"						,,,"LEFT"	,080,.f.,.f.,,,,.f.,) )
		oBrw34Rs:AddColumn( TcColumn():New( "Quant"				, {|| (cAlB34Br)->QUANT}			, "@E 999,999,999.9999"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw34Rs:AddColumn( TcColumn():New( "Vl. Cont"		, {|| (cAlB34Br)->VLCONT}			, "@E 9,999,999,999.99"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw34Rs:AddColumn( TcColumn():New( "Vl. ICMS"		, {|| (cAlB34Br)->VLICMS}			, "@E 9,999,999,999.99"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

		oBrw34Rs:Align		:=	CONTROL_ALIGN_ALLCLIENT

	ENDIF

	IF nOpMdl	== 1
		// INICIO n.040923  - Relatorio Crédito Outorgadoa - Abel Babini - 20/08/2019
		//--------------------------------------------------------------------------
		//ABA 08 - CREDITO OUTORGADO (INICIO)
		//--------------------------------------------------------------------------
		IF _mvpr01 < STOD('20210201')
			oFld08	:=TFolder():New(1,1,aFld08,{},oFolder030:aDialogs[26],,,, .T., .F.,aPosObj[2,4]-5,aPosObj[2,3]-61,)
			oFld08:aDialogs[1]:oFont :=oDlg:oFont //Resumo
			oFld08:aDialogs[2]:oFont :=oDlg:oFont //Crédito Interestadual 7%
			oFld08:aDialogs[3]:oFont :=oDlg:oFont //Crédito Estadual 5%
			oFld08:aDialogs[4]:oFont :=oDlg:oFont //Crédito Estadual 7%

			////////////////////////////////////////////////////////////
			oFLr08p1:= FWLayer():New()
			oFLr08p1:Init( oFld08:aDialogs[1], .F., .T.) //RESUMO

			//Define os Paineis
			//TITULO
			oFLr08p1:AddLine ('TIT_DET', 6, .F.)
			oFLr08p1:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

			oFLr08p1:AddLine ('DETALHE1', 84, .F.)
			oFLr08p1:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

			oFLr08p1:AddLine ('RESUMO', 10, .F.)
			oFLr08p1:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

			oP08TE01	:= oFLr08p1:GetColPanel('TIT_ESQ','TIT_DET')
			oP08D101	:= oFLr08p1:GetColPanel('DET_ESQ1','DETALHE1')
			oP08RE01	:= oFLr08p1:GetColPanel('RES_ESQ','RESUMO')

			oP08TE01:FreeChildren()
			oP08D101:FreeChildren()

			oP08RE01:FreeChildren()

			//Cabecalho
			@ 001,008 SAY OemToAnsi("Resumo Crédito Outorgado")		FONT oFont003 SIZE 200,15 OF oP08TE01 PIXEL

			//QUADRO DE RELATÓRIO
			@ 001,558 SAY OemToAnsi("OUTRAS OPÇÕES")		SIZE 200,15	FONT oFont003 OF oP08RE01 PIXEL
			@ 010,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION xRelBr08() OF oP08RE01 PIXEL //"Exportar Excel"
			@ 010,610 BUTTON OemToAnsi('DGCA')				SIZE 42,13	FONT oDlg:oFont ACTION xRelBr8c() OF oP08RE01 PIXEL //"Exportar Excel"

			oBrw08Rs:= TcBrowse():New(004,004,150,150,,,,oP08D101,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)

			oBrw08Rs:AddColumn( TcColumn():New( "Filial"		, {|| aBrw08Rs[oBrw08Rs:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw08Rs:AddColumn( TcColumn():New( "CFOP"			, {|| aBrw08Rs[oBrw08Rs:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )

			For nColBr08 = 1 To nQNCM
				fAddCols( nColBr08 , "08")
			Next nColBr08
			oBrw08Rs:AddColumn( TcColumn():New( "Total"			, {|| aBrw08Rs[oBrw08Rs:nAt,nQNCM+3]}	, "@E 999,999,999.99"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

			oBrw08Rs:SetArray(aBrw08Rs)
			oBrw08Rs:Align		:=	CONTROL_ALIGN_ALLCLIENT
			oBrw08Rs:bLine := {||{aBrw08Rs[oBrw08Rs:nAt]} }


			////////////////////////////////////////////////////////////
			oFLr08p2:= FWLayer():New()
			oFLr08p2:Init( oFld08:aDialogs[2], .F., .T.) //Crédito Interestadual 7%

			//Define os Paineis
			//TITULO
			oFLr08p2:AddLine ('TIT_DET', 6, .F.)
			oFLr08p2:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

			oFLr08p2:AddLine ('DETALHE1', 84, .F.)
			oFLr08p2:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

			oFLr08p2:AddLine ('RESUMO', 10, .F.)
			oFLr08p2:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

			oP08TE02	:= oFLr08p2:GetColPanel('TIT_ESQ','TIT_DET')
			oP08D102	:= oFLr08p2:GetColPanel('DET_ESQ1','DETALHE1')
			oP08RE02	:= oFLr08p2:GetColPanel('RES_ESQ','RESUMO')

			oP08TE02:FreeChildren()
			oP08D102:FreeChildren()
			oP08RE02:FreeChildren()

			//Cabecalho
			@ 001,008 SAY OemToAnsi("Crédito Outorgado - Interestadual Alíquota 7% - Art. 27 Anexo III")		FONT oFont003 SIZE 500,15 OF oP08TE02 PIXEL

			oBrw08p1:= TcBrowse():New(010,050,150,150,,,,oP08D102,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
			oBrw08p1:AddColumn( TcColumn():New( "Filial"				, {|| aBrw08p1[oBrw08p1:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw08p1:AddColumn( TcColumn():New( "Descrição (CFOP)"		, {|| aBrw08p1[oBrw08p1:nAt,02]}	, "@!"						,,,"LEFT"	,200,.f.,.f.,,,,.f.,) )
			oBrw08p1:AddColumn( TcColumn():New( "Valor"					, {|| aBrw08p1[oBrw08p1:nAt,03]}	, "@E 999,999,999.99"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

			oBrw08p1:SetArray(aBrw08p1)
			oBrw08p1:Align	:=	CONTROL_ALIGN_ALLCLIENT
			oBrw08p1:bLine	:= {||{aBrw08p1[oBrw08p1:nAt]} }

			////////////////////////////////////////////////////////////
			oFLr08p3:= FWLayer():New()
			oFLr08p3:Init( oFld08:aDialogs[3], .F., .T.) //Crédito Estadual 5%

			//Define os Paineis
			//TITULO
			oFLr08p3:AddLine ('TIT_DET', 6, .F.)
			oFLr08p3:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

			oFLr08p3:AddLine ('DETALHE1', 84, .F.)
			oFLr08p3:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

			oFLr08p3:AddLine ('RESUMO', 10, .F.)
			oFLr08p3:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

			oP08TE03	:= oFLr08p3:GetColPanel('TIT_ESQ','TIT_DET')
			oP08D103	:= oFLr08p3:GetColPanel('DET_ESQ1','DETALHE1')
			oP08RE03	:= oFLr08p3:GetColPanel('RES_ESQ','RESUMO')

			oP08TE03:FreeChildren()
			oP08D103:FreeChildren()
			oP08RE03:FreeChildren()

			//Cabecalho
			@ 001,008 SAY OemToAnsi("Crédito Outorgado - Estadual Alíquota 5% - Art. 35 Anexo III")		FONT oFont003 SIZE 500,15 OF oP08TE03 PIXEL

			oBrw08p2:= TcBrowse():New(010,050,150,150,,,,oP08D103,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
			oBrw08p2:AddColumn( TcColumn():New( "Filial"				, {|| aBrw08p2[oBrw08p2:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw08p2:AddColumn( TcColumn():New( "Descrição (CFOP)"		, {|| aBrw08p2[oBrw08p2:nAt,02]}	, "@!"						,,,"LEFT"	,200,.f.,.f.,,,,.f.,) )
			oBrw08p2:AddColumn( TcColumn():New( "Valor"					, {|| aBrw08p2[oBrw08p2:nAt,03]}	, "@E 999,999,999.99"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

			oBrw08p2:SetArray(aBrw08p2)
			oBrw08p2:Align	:=	CONTROL_ALIGN_ALLCLIENT
			oBrw08p2:bLine	:= {||{aBrw08p2[oBrw08p2:nAt]} }


			////////////////////////////////////////////////////////////
			oFLr08p4:= FWLayer():New()
			oFLr08p4:Init( oFld08:aDialogs[4], .F., .T.) //Crédito Estadual 7%

			//Define os Paineis
			//TITULO
			oFLr08p4:AddLine ('TIT_DET', 6, .F.)
			oFLr08p4:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

			oFLr08p4:AddLine ('DETALHE1', 84, .F.)
			oFLr08p4:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

			oFLr08p4:AddLine ('RESUMO', 10, .F.)
			oFLr08p4:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

			oP08TE04	:= oFLr08p4:GetColPanel('TIT_ESQ','TIT_DET')
			oP08D104	:= oFLr08p4:GetColPanel('DET_ESQ1','DETALHE1')
			oP08RE04	:= oFLr08p4:GetColPanel('RES_ESQ','RESUMO')

			oP08TE04:FreeChildren()
			oP08D104:FreeChildren()
			oP08RE04:FreeChildren()

			//Cabecalho
			@ 001,008 SAY OemToAnsi("Crédito Outorgado - Estadual Alíquota 7% - Art 40 Anexo III")		FONT oFont003 SIZE 500,15 OF oP08TE04 PIXEL

			oBrw08p3:= TcBrowse():New(010,050,150,150,,,,oP08D104,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
			oBrw08p3:AddColumn( TcColumn():New( "Filial"				, {|| aBrw08p3[oBrw08p3:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw08p3:AddColumn( TcColumn():New( "Descrição (CFOP)"		, {|| aBrw08p3[oBrw08p3:nAt,02]}	, "@!"						,,,"LEFT"	,200,.f.,.f.,,,,.f.,) )
			oBrw08p3:AddColumn( TcColumn():New( "Valor"					, {|| aBrw08p3[oBrw08p3:nAt,03]}	, "@E 999,999,999.99"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

			oBrw08p3:SetArray(aBrw08p3)
			oBrw08p3:Align	:=	CONTROL_ALIGN_ALLCLIENT
			oBrw08p3:bLine	:= {||{aBrw08p3[oBrw08p3:nAt]} }
			// FIM n.040923  - Relatorio Crédito Outorgadoa - Abel Babini - 20/08/2019
		ENDIF

		//INICIO Ticket 8050                    - Abel Babini - 18/01/2020 - Alteração de alíquotas nos relatórios de crédito outorgado
		//--------------------------------------------------------------------------
		//ABA 35 - CREDITO OUTORGADO 2021
		//--------------------------------------------------------------------------
		IF _mvpr01 >= STOD('20210101')
			IF _mvpr01 < STOD('20210201')
				oFld35	:=TFolder():New(1,1,aFld35,{},oFolder030:aDialogs[27],,,, .T., .F.,aPosObj[2,4]-5,aPosObj[2,3]-61,)
			ELSE
				oFld35	:=TFolder():New(1,1,aFld35,{},oFolder030:aDialogs[26],,,, .T., .F.,aPosObj[2,4]-5,aPosObj[2,3]-61,)
			ENDIF

			oFld35:aDialogs[1]:oFont :=oDlg:oFont //Resumo
			oFld35:aDialogs[2]:oFont :=oDlg:oFont //Crédito Interestadual 5,6%
			oFld35:aDialogs[3]:oFont :=oDlg:oFont //Crédito Estadual 2,8%
			oFld35:aDialogs[4]:oFont :=oDlg:oFont //Crédito Estadual 5,6%

			////////////////////////////////////////////////////////////
			oFLr35p1:= FWLayer():New()
			oFLr35p1:Init( oFld35:aDialogs[1], .F., .T.) //RESUMO

			//Define os Paineis
			//TITULO
			oFLr35p1:AddLine ('TIT_DET', 6, .F.)
			oFLr35p1:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

			oFLr35p1:AddLine ('DETALHE1', 84, .F.)
			oFLr35p1:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

			oFLr35p1:AddLine ('RESUMO', 10, .F.)
			oFLr35p1:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

			oP35TE01	:= oFLr35p1:GetColPanel('TIT_ESQ','TIT_DET')
			oP35D101	:= oFLr35p1:GetColPanel('DET_ESQ1','DETALHE1')
			oP35RE01	:= oFLr35p1:GetColPanel('RES_ESQ','RESUMO')

			oP35TE01:FreeChildren()
			oP35D101:FreeChildren()

			oP35RE01:FreeChildren()

			//Cabecalho
			@ 001,008 SAY OemToAnsi("Resumo Crédito Outorgado 2021")		FONT oFont003 SIZE 200,15 OF oP35TE01 PIXEL

			//QUADRO DE RELATÓRIO
			@ 001,558 SAY OemToAnsi("OUTRAS OPÇÕES")		SIZE 200,15	FONT oFont003 OF oP35RE01 PIXEL
			@ 010,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION xRelBr35() OF oP35RE01 PIXEL //"Exportar Excel"
			@ 010,610 BUTTON OemToAnsi('DGCA')				SIZE 42,13	FONT oDlg:oFont ACTION xRelB35c() OF oP35RE01 PIXEL //"Exportar Excel"

			oBrw35Rs:= TcBrowse():New(004,004,150,150,,,,oP35D101,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)

			oBrw35Rs:AddColumn( TcColumn():New( "Filial"		, {|| aBrw35Rs[oBrw35Rs:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw35Rs:AddColumn( TcColumn():New( "CFOP"			, {|| aBrw35Rs[oBrw35Rs:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )

			For nColBr35 = 1 To nQNCM35
				fAddCols( nColBr35 , "35")
			Next nColBr35
			oBrw35Rs:AddColumn( TcColumn():New( "Total"			, {|| aBrw35Rs[oBrw35Rs:nAt,nQNCM35+3]}	, "@E 999,999,999.99"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

			oBrw35Rs:SetArray(aBrw35Rs)
			oBrw35Rs:Align		:=	CONTROL_ALIGN_ALLCLIENT
			oBrw35Rs:bLine := {||{aBrw35Rs[oBrw35Rs:nAt]} }


			////////////////////////////////////////////////////////////
			oFLr35p2:= FWLayer():New()
			oFLr35p2:Init( oFld35:aDialogs[2], .F., .T.) //Crédito Interestadual 35%

			//Define os Paineis
			//TITULO
			oFLr35p2:AddLine ('TIT_DET', 6, .F.)
			oFLr35p2:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

			oFLr35p2:AddLine ('DETALHE1', 84, .F.)
			oFLr35p2:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

			oFLr35p2:AddLine ('RESUMO', 10, .F.)
			oFLr35p2:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

			oP35TE02	:= oFLr35p2:GetColPanel('TIT_ESQ','TIT_DET')
			oP35D102	:= oFLr35p2:GetColPanel('DET_ESQ1','DETALHE1')
			oP35RE02	:= oFLr35p2:GetColPanel('RES_ESQ','RESUMO')

			oP35TE02:FreeChildren()
			oP35D102:FreeChildren()
			oP35RE02:FreeChildren()

			//Cabecalho
			@ 001,008 SAY OemToAnsi("Crédito Outorgado - Interestadual Alíquota "+Alltrim(_cMVCON2)+"% - Art. 27 Anexo III")		FONT oFont003 SIZE 500,15 OF oP35TE02 PIXEL

			oBrw35p1:= TcBrowse():New(010,050,150,150,,,,oP35D102,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
			oBrw35p1:AddColumn( TcColumn():New( "Filial"				, {|| aBrw35p1[oBrw35p1:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw35p1:AddColumn( TcColumn():New( "Descrição (CFOP)"		, {|| aBrw35p1[oBrw35p1:nAt,02]}	, "@!"						,,,"LEFT"	,200,.f.,.f.,,,,.f.,) )
			oBrw35p1:AddColumn( TcColumn():New( "Valor"					, {|| aBrw35p1[oBrw35p1:nAt,03]}	, "@E 999,999,999.99"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

			oBrw35p1:SetArray(aBrw35p1)
			oBrw35p1:Align	:=	CONTROL_ALIGN_ALLCLIENT
			oBrw35p1:bLine	:= {||{aBrw35p1[oBrw35p1:nAt]} }

			////////////////////////////////////////////////////////////
			oFLr35p3:= FWLayer():New()
			oFLr35p3:Init( oFld35:aDialogs[3], .F., .T.) //Crédito Estadual 2,8%

			//Define os Paineis
			//TITULO
			oFLr35p3:AddLine ('TIT_DET', 6, .F.)
			oFLr35p3:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

			oFLr35p3:AddLine ('DETALHE1', 84, .F.)
			oFLr35p3:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

			oFLr35p3:AddLine ('RESUMO', 10, .F.)
			oFLr35p3:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

			oP35TE03	:= oFLr35p3:GetColPanel('TIT_ESQ','TIT_DET')
			oP35D103	:= oFLr35p3:GetColPanel('DET_ESQ1','DETALHE1')
			oP35RE03	:= oFLr35p3:GetColPanel('RES_ESQ','RESUMO')

			oP35TE03:FreeChildren()
			oP35D103:FreeChildren()
			oP35RE03:FreeChildren()

			//Cabecalho
			@ 001,008 SAY OemToAnsi("Crédito Outorgado - Estadual Alíquota "+Alltrim(_cMVCON3)+"% - Art. 35 Anexo III")		FONT oFont003 SIZE 500,15 OF oP35TE03 PIXEL

			oBrw35p2:= TcBrowse():New(010,050,150,150,,,,oP35D103,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
			oBrw35p2:AddColumn( TcColumn():New( "Filial"				, {|| aBrw35p2[oBrw35p2:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw35p2:AddColumn( TcColumn():New( "Descrição (CFOP)"		, {|| aBrw35p2[oBrw35p2:nAt,02]}	, "@!"						,,,"LEFT"	,200,.f.,.f.,,,,.f.,) )
			oBrw35p2:AddColumn( TcColumn():New( "Valor"					, {|| aBrw35p2[oBrw35p2:nAt,03]}	, "@E 999,999,999.99"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

			oBrw35p2:SetArray(aBrw35p2)
			oBrw35p2:Align	:=	CONTROL_ALIGN_ALLCLIENT
			oBrw35p2:bLine	:= {||{aBrw35p2[oBrw35p2:nAt]} }


			////////////////////////////////////////////////////////////
			oFLr35p4:= FWLayer():New()
			oFLr35p4:Init( oFld35:aDialogs[4], .F., .T.) //Crédito Estadual 5,6%

			//Define os Paineis
			//TITULO
			oFLr35p4:AddLine ('TIT_DET', 6, .F.)
			oFLr35p4:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

			oFLr35p4:AddLine ('DETALHE1', 84, .F.)
			oFLr35p4:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

			oFLr35p4:AddLine ('RESUMO', 10, .F.)
			oFLr35p4:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

			oP35TE04	:= oFLr35p4:GetColPanel('TIT_ESQ','TIT_DET')
			oP35D104	:= oFLr35p4:GetColPanel('DET_ESQ1','DETALHE1')
			oP35RE04	:= oFLr35p4:GetColPanel('RES_ESQ','RESUMO')

			oP35TE04:FreeChildren()
			oP35D104:FreeChildren()
			oP35RE04:FreeChildren()

			//Cabecalho
			@ 001,008 SAY OemToAnsi("Crédito Outorgado - Estadual Alíquota "+Alltrim(_cMVCON4)+"% - Art 40 Anexo III")		FONT oFont003 SIZE 500,15 OF oP35TE04 PIXEL

			oBrw35p3:= TcBrowse():New(010,050,150,150,,,,oP35D104,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)
			oBrw35p3:AddColumn( TcColumn():New( "Filial"				, {|| aBrw35p3[oBrw35p3:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
			oBrw35p3:AddColumn( TcColumn():New( "Descrição (CFOP)"		, {|| aBrw35p3[oBrw35p3:nAt,02]}	, "@!"						,,,"LEFT"	,200,.f.,.f.,,,,.f.,) )
			oBrw35p3:AddColumn( TcColumn():New( "Valor"					, {|| aBrw35p3[oBrw35p3:nAt,03]}	, "@E 999,999,999.99"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

			oBrw35p3:SetArray(aBrw35p3)
			oBrw35p3:Align	:=	CONTROL_ALIGN_ALLCLIENT
			oBrw35p3:bLine	:= {||{aBrw35p3[oBrw35p3:nAt]} }
			// FIM n.040923  - Relatorio Crédito Outorgadoa - Abel Babini - 20/08/2019
		ENDIF
	ENDIF
	//FIM Ticket 8050                    - Abel Babini - 18/01/2020 - Alteração de alíquotas nos relatórios de crédito outorgado

	//INICIO Ticket 10535										- Abel Babini - 09/03/2021 - Criar relatório de conferência de faturamento por tipo de cliente e regime de apuração.
	// IF nOpMdl	== 1
	// 	//-----------------------------------
	// 	//ABA 36 - CONFERÊNCIA FATURAMENTO POR TIPO DE CLIENTE E REGIME TRIBUTÁRIO
	// 	//-----------------------------------
	// 	oFld36	:=TFolder():New(1,1,aFld36,{},oFolder030:aDialogs[28],,,, .T., .F.,aPosObj[2,4]-5,aPosObj[2,3]-46,)
	// 	oFld36:aDialogs[1]:oFont :=oDlg:oFont //Resumo
	// 	oFld36:aDialogs[2]:oFont :=oDlg:oFont //Detalhe

	// 	////////////////////////////////////////////////////////////
	// 	oFLr36p1:= FWLayer():New()
	// 	oFLr36p1:Init( oFld36:aDialogs[1], .F., .T.) //RESUMO

	// 	//Define os Paineis
	// 	//TITULO
	// 	oFLr36p1:AddLine ('TIT_DET1', 8, .F.)
	// 	oFLr36p1:AddCollumn('TIT_ESQ1',50,.F.,'TIT_DET1')
	// 	oFLr36p1:AddCollumn('TIT_DIR1',50,.F.,'TIT_DET1')

	// 	oFLr36p1:AddLine ('DETALHE1', 22, .F.)
	// 	oFLr36p1:AddCollumn('DET_ESQ1',50,.F.,'DETALHE1')
	// 	oFLr36p1:AddCollumn('DET_DIR1',50,.F.,'DETALHE1')

	// 	oFLr36p1:AddLine ('TIT_DET2', 8, .F.)
	// 	oFLr36p1:AddCollumn('TIT_ESQ2',50,.F.,'TIT_DET2')
	// 	oFLr36p1:AddCollumn('TIT_DIR2',50,.F.,'TIT_DET2')

	// 	oFLr36p1:AddLine ('DETALHE2', 22, .F.)
	// 	oFLr36p1:AddCollumn('DET_ESQ2',50,.F.,'DETALHE2')
	// 	oFLr36p1:AddCollumn('DET_DIR2',50,.F.,'DETALHE2')

	// 	oFLr36p1:AddLine ('TIT_DET3', 8, .F.)
	// 	oFLr36p1:AddCollumn('TIT_ESQ3',50,.F.,'TIT_DET3')
	// 	oFLr36p1:AddCollumn('TIT_DIR3',50,.F.,'TIT_DET3')

	// 	oFLr36p1:AddLine ('DETALHE3', 22, .F.)
	// 	oFLr36p1:AddCollumn('DET_ESQ3',50,.F.,'DETALHE3')
	// 	oFLr36p1:AddCollumn('DET_DIR3',50,.F.,'DETALHE3')

	// 	oFLr36p1:AddLine ('RESUMO', 7, .F.)
	// 	oFLr36p1:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

	// 	oP36TE01	:= oFLr36p1:GetColPanel('TIT_ESQ1','TIT_DET1')
	// 	oP36TD01	:= oFLr36p1:GetColPanel('TIT_DIR1','TIT_DET1')
	// 	oP36D101	:= oFLr36p1:GetColPanel('DET_ESQ1','DETALHE1')
	// 	oP36D201	:= oFLr36p1:GetColPanel('DET_DIR1','DETALHE1')
	// 	oP36TE02	:= oFLr36p1:GetColPanel('TIT_ESQ2','TIT_DET2')
	// 	oP36TD02	:= oFLr36p1:GetColPanel('TIT_DIR2','TIT_DET2')
	// 	oP36D102	:= oFLr36p1:GetColPanel('DET_ESQ2','DETALHE2')
	// 	oP36D202	:= oFLr36p1:GetColPanel('DET_DIR2','DETALHE2')
	// 	oP36TE03	:= oFLr36p1:GetColPanel('TIT_ESQ3','TIT_DET3')
	// 	oP36TD03	:= oFLr36p1:GetColPanel('TIT_DIR3','TIT_DET3')
	// 	oP36D103	:= oFLr36p1:GetColPanel('DET_ESQ3','DETALHE3')
	// 	oP36D203	:= oFLr36p1:GetColPanel('DET_DIR3','DETALHE3')
	// 	oP36RE01	:= oFLr36p1:GetColPanel('RES_ESQ','RESUMO')

	// 	oP36TE01:FreeChildren()
	// 	oP36TD01:FreeChildren()
	// 	oP36D101:FreeChildren()
	// 	oP36D201:FreeChildren()
	// 	oP36TE02:FreeChildren()
	// 	oP36TD02:FreeChildren()
	// 	oP36D102:FreeChildren()
	// 	oP36D202:FreeChildren()
	// 	oP36TE03:FreeChildren()
	// 	oP36TD03:FreeChildren()
	// 	oP36D103:FreeChildren()
	// 	oP36D203:FreeChildren()
	// 	oP36RE01:FreeChildren()

	// 	//CONSUMIDOR FINAL
	// 	@ 001,008 SAY OemToAnsi("Resumo Conferência de Faturamento por tipo de cliente e regime tributário")		FONT oFont003 SIZE 300,15 OF oP36TE01 PIXEL
	// 	//
	// 	//VALOR CONTÁBIL
	// 	//
	// 	@ 009,008 SAY OemToAnsi("Valor Contábil")		FONT oFont002 SIZE 300,15 OF oP36TE01 PIXEL

	// 	oBrw36R1:= TcBrowse():New(004,004,150,150,,,,oP36D101,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)

	// 	oBrw36R1:AddColumn( TcColumn():New( "Filial"		, {|| aBrw36R1[oBrw36R1:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
	// 	oBrw36R1:AddColumn( TcColumn():New( "CFOP"			, {|| aBrw36R1[oBrw36R1:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )

	// 	For nColBr36 := 1 To nQNCM36
	// 		Static Call(ADFIS038R, fAddCl36, nColBr36, "361")
	// 	Next nColBr36
	// 	oBrw36R1:AddColumn( TcColumn():New( "Total"			, {|| aBrw36R1[oBrw36R1:nAt,nQNCM36+3]}	, "@E 999,999,999.99"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

	// 	oBrw36R1:SetArray(aBrw36R1)
	// 	oBrw36R1:Align		:=	CONTROL_ALIGN_ALLCLIENT
	// 	oBrw36R1:bLine := {||{aBrw36R1[oBrw36R1:nAt]} }

	// 	//
	// 	//VALOR ICMS
	// 	//
	// 	@ 009,008 SAY OemToAnsi("Valor ICMS")		FONT oFont002 SIZE 300,15 OF oP36TD01 PIXEL

	// 	oBrw36R4:= TcBrowse():New(004,004,150,150,,,,oP36D201,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)

	// 	oBrw36R4:AddColumn( TcColumn():New( "Filial"		, {|| aBrw36R4[oBrw36R4:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
	// 	oBrw36R4:AddColumn( TcColumn():New( "CFOP"			, {|| aBrw36R4[oBrw36R4:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )

	// 	For nColBr36 := 1 To nQNCM36
	// 		Static Call(ADFIS038R, fAddCl36, nColBr36, "364")

	// 	Next nColBr36
	// 	oBrw36R4:AddColumn( TcColumn():New( "Total"			, {|| aBrw36R4[oBrw36R4:nAt,nQNCM36+3]}	, "@E 999,999,999.99"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

	// 	oBrw36R4:SetArray(aBrw36R4)
	// 	oBrw36R4:Align		:=	CONTROL_ALIGN_ALLCLIENT
	// 	oBrw36R4:bLine := {||{aBrw36R4[oBrw36R4:nAt]} }


	// 	//OPTANTE SIMPLES NACIONAL
	// 	@ 001,008 SAY OemToAnsi("Optantes pelo Simples Nacional")	FONT oFont003 SIZE 300,15 OF oP36TE02 PIXEL
	// 	//
	// 	//VALOR CONTÁBIL
	// 	//
	// 	@ 009,008 SAY OemToAnsi("Valor Contábil")		FONT oFont002 SIZE 300,15 OF oP36TE02 PIXEL

	// 	oBrw36R2:= TcBrowse():New(004,004,150,150,,,,oP36D102,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)

	// 	oBrw36R2:AddColumn( TcColumn():New( "Filial"		, {|| aBrw36R2[oBrw36R2:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
	// 	oBrw36R2:AddColumn( TcColumn():New( "CFOP"			, {|| aBrw36R2[oBrw36R2:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )

	// 	For nColBr36 := 1 To nQNCM36
	// 		Static Call(ADFIS038R, fAddCl36, nColBr36, "362")
	// 	Next nColBr36
	// 	oBrw36R2:AddColumn( TcColumn():New( "Total"			, {|| aBrw36R2[oBrw36R2:nAt,nQNCM36+3]}	, "@E 999,999,999.99"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

	// 	oBrw36R2:SetArray(aBrw36R2)
	// 	oBrw36R2:Align		:=	CONTROL_ALIGN_ALLCLIENT
	// 	oBrw36R2:bLine := {||{aBrw36R2[oBrw36R2:nAt]} }

	// 	//
	// 	//VALOR ICMS
	// 	//
	// 	@ 009,008 SAY OemToAnsi("Valor ICMS")		FONT oFont002 SIZE 300,15 OF oP36TD02 PIXEL

	// 	oBrw36R5:= TcBrowse():New(004,004,150,150,,,,oP36D202,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)

	// 	oBrw36R5:AddColumn( TcColumn():New( "Filial"		, {|| aBrw36R5[oBrw36R5:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
	// 	oBrw36R5:AddColumn( TcColumn():New( "CFOP"			, {|| aBrw36R5[oBrw36R5:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )

	// 	For nColBr36 := 1 To nQNCM36
	// 		Static Call(ADFIS038R, fAddCl36, nColBr36, "365")
	// 	Next nColBr36
	// 	oBrw36R5:AddColumn( TcColumn():New( "Total"			, {|| aBrw36R5[oBrw36R5:nAt,nQNCM36+3]}	, "@E 999,999,999.99"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

	// 	oBrw36R5:SetArray(aBrw36R5)
	// 	oBrw36R5:Align		:=	CONTROL_ALIGN_ALLCLIENT
	// 	oBrw36R5:bLine := {||{aBrw36R5[oBrw36R5:nAt]} }

	// 	//NAO OPTANTE SIMPLES NACIONAL
	// 	@ 001,008 SAY OemToAnsi("Não Optantes pelo Simples Nacional ou Consumidor Final")		FONT oFont003 SIZE 300,15 OF oP36TE03 PIXEL
	// 	//
	// 	//VALOR CONTÁBIL
	// 	//
	// 	@ 009,008 SAY OemToAnsi("Valor Contábil")		FONT oFont002 SIZE 300,15 OF oP36TE03 PIXEL

	// 	oBrw36R3:= TcBrowse():New(004,004,150,150,,,,oP36D103,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)

	// 	oBrw36R3:AddColumn( TcColumn():New( "Filial"		, {|| aBrw36R3[oBrw36R3:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
	// 	oBrw36R3:AddColumn( TcColumn():New( "CFOP"			, {|| aBrw36R3[oBrw36R3:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )

	// 	For nColBr36 := 1 To nQNCM36
	// 		Static Call(ADFIS038R, fAddCl36, nColBr36, "363")
	// 	Next nColBr36
	// 	oBrw36R3:AddColumn( TcColumn():New( "Total"			, {|| aBrw36R3[oBrw36R3:nAt,nQNCM36+3]}	, "@E 999,999,999.99"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

	// 	oBrw36R3:SetArray(aBrw36R3)
	// 	oBrw36R3:Align		:=	CONTROL_ALIGN_ALLCLIENT
	// 	oBrw36R3:bLine := {||{aBrw36R3[oBrw36R3:nAt]} }

	// 	//
	// 	//VALOR ICMS
	// 	//
	// 	@ 009,008 SAY OemToAnsi("Valor ICMS")		FONT oFont002 SIZE 300,15 OF oP36TD03 PIXEL

	// 	oBrw36R6:= TcBrowse():New(004,004,150,150,,,,oP36D203,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)

	// 	oBrw36R6:AddColumn( TcColumn():New( "Filial"		, {|| aBrw36R6[oBrw36R6:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
	// 	oBrw36R6:AddColumn( TcColumn():New( "CFOP"			, {|| aBrw36R6[oBrw36R6:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )

	// 	For nColBr36 := 1 To nQNCM36
	// 		Static Call(ADFIS038R, fAddCl36, nColBr36, "366")
	// 	Next nColBr36
	// 	oBrw36R6:AddColumn( TcColumn():New( "Total"			, {|| aBrw36R6[oBrw36R6:nAt,nQNCM36+3]}	, "@E 999,999,999.99"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

	// 	oBrw36R6:SetArray(aBrw36R6)
	// 	oBrw36R6:Align		:=	CONTROL_ALIGN_ALLCLIENT
	// 	oBrw36R6:bLine := {||{aBrw36R6[oBrw36R6:nAt]} }


	// 	/*
	// 	@ 004,150 SAY OemToAnsi("Vl. Total")		FONT oFont002 SIZE 200,15 OF oP36D101 PIXEL
	// 	@ 004,250 SAY OemToAnsi("Vl. ICMS")			FONT oFont002 SIZE 200,15 OF oP36D101 PIXEL
		
	// 	@ 014,008 SAY OemToAnsi("Cliente Optante pelo Simples Nacional")		FONT oFont002 SIZE 200,15 OF oP36D101 PIXEL
	// 	@ 014,150 MSGET nVSNCTot	SIZE 60,08 OF oP36D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
	// 	@ 014,250 MSGET nVSNCIcm	SIZE 60,08 OF oP36D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

	// 	@ 025,008 SAY OemToAnsi("Cliente Não Optante pelo Simples Nac.")		FONT oFont002 SIZE 200,15 OF oP36D101 PIXEL
	// 	@ 025,150 MSGET nVOCTot	SIZE 60,08 OF oP36D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
	// 	@ 025,250 MSGET nVOCIcm	SIZE 60,08 OF oP36D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		
	// 	@ 036,008 SAY OemToAnsi("Cliente Consumidor Final")		FONT oFont002 SIZE 200,15 OF oP36D101 PIXEL
	// 	@ 036,150 MSGET nVCFLTot	SIZE 60,08 OF oP36D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
	// 	@ 036,250 MSGET nVCFLIcm	SIZE 60,08 OF oP36D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

	// 	@ 047,008 SAY OemToAnsi("Cliente Não Consumidor Final")		FONT oFont002 SIZE 200,15 OF oP36D101 PIXEL
	// 	@ 047,150 MSGET nVTPCTot	SIZE 60,08 OF oP36D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
	// 	@ 047,250 MSGET nVTPCIcm	SIZE 60,08 OF oP36D101 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

	// 	*/
	// 	//QUADRO DE RELATÓRIO

	// 	@ 001,558 SAY OemToAnsi("OUTRAS OPÇÕES")		SIZE 200,15	FONT oFont003 OF oP36RE01 PIXEL
	// 	@ 010,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION Static Call(ADFIS038R,xRelBr36) OF oP36RE01 PIXEL //"Exportar Excel"

	// 	////////////////////////////////////////////////////////////
	// 	oFLr36p2:= FWLayer():New()
	// 	oFLr36p2:Init( oFld36:aDialogs[2], .F., .T.) //MERCADO INTERNO

	// 		//Define os Paineis
	// 	//TITULO
	// 	oFLr36p2:AddLine ('TIT_DET', 6, .F.)
	// 	oFLr36p2:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

	// 	oFLr36p2:AddLine ('DETALHE1', 78, .F.)
	// 	oFLr36p2:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

	// 	oFLr36p2:AddLine ('RESUMO', 16, .F.)
	// 	oFLr36p2:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

	// 	oP36TE02	:= oFLr36p2:GetColPanel('TIT_ESQ','TIT_DET')
	// 	oP36D102	:= oFLr36p2:GetColPanel('DET_ESQ1','DETALHE1')
	// 	oP36RE02	:= oFLr36p2:GetColPanel('RES_ESQ','RESUMO')

	// 	oP36TE02:FreeChildren()
	// 	oP36D102:FreeChildren()
	// 	oP36RE02:FreeChildren()

	// 	//Cabecalho
	// 	@ 001,008 SAY OemToAnsi("Detalhamento das operações")		FONT oFont003 SIZE 300,15 OF oP36TE02 PIXEL
	// 	oBrw36Dt:= TcBrowse():New(010,050,150,150,,,,oP36D102,,,,,,,,,,,,.f.,cAlB36Dt,.t.,,.f.,,,,)
	// 	oBrw36Dt:AddColumn( TcColumn():New( "Filial"			, {|| (cAlB36Dt)->FILIAL}			, "@!"						,,,"CENTER"	,015,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "Dt. Entrada"	, {|| (cAlB36Dt)->DTENTRADA}	, "@!"						,,,"LEFT"	,030,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "Dt. Emissão"	, {|| (cAlB36Dt)->DTEMISSAO}	, "@!"						,,,"LEFT"	,030,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "Série"				, {|| (cAlB36Dt)->NFSERIE}		, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "Nota Fiscal"	, {|| (cAlB36Dt)->NF}					, "@!"						,,,"LEFT"	,035,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "Item NF"			, {|| (cAlB36Dt)->NFITEM}			, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "Cod.Forn"		, {|| (cAlB36Dt)->CLIEFOR}		, "@!"						,,,"LEFT"	,030,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "Loja"				, {|| (cAlB36Dt)->LOJA}				, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "Fornecedor"	, {|| (cAlB36Dt)->NOME}				, "@!"						,,,"LEFT"	,100,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "CNPJ"				, {|| (cAlB36Dt)->CNPJ}				, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "UF"					, {|| (cAlB36Dt)->EST}				, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "Opt Simp Nac", {|| (cAlB36Dt)->SIMPLESNAC}	, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "Tipo Cliente", {|| (cAlB36Dt)->TIPOCLI}		, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "Grupo Client", {|| (cAlB36Dt)->GRPTRCLI}		, "@!"						,,,"LEFT"	,040,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "Produto"			, {|| (cAlB36Dt)->CODPROD}		, "@!"						,,,"LEFT"	,030,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "Desc.Prod"		, {|| (cAlB36Dt)->DESCPROD}		, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "GrpTrib Prd"	, {|| (cAlB36Dt)->GRTRIB}			, "@!"						,,,"LEFT"	,030,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "TS Prd"			, {|| (cAlB36Dt)->TESPADRAO}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "Op SN Prd "	, {|| (cAlB36Dt)->XD65255}		, "@!"						,,,"LEFT"	,030,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "Quant"				, {|| (cAlB36Dt)->QUANT}			, "@E 999,999,999.9999"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "PrcUnit"			, {|| (cAlB36Dt)->PRCUNIT}		, "@E 9,999,999,999.99"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "Vl. Total"		, {|| (cAlB36Dt)->TOTAL}			, "@E 9,999,999,999.99"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "Vl. Cont"		, {|| (cAlB36Dt)->VLCONT}			, "@E 9,999,999,999.99"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "Base ICMS"		, {|| (cAlB36Dt)->ICMSBASE}		, "@E 9,999,999,999.99"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "Aliq ICMS"		, {|| (cAlB36Dt)->ICMSALIQ}		, "@E 9,999,999,999.99"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "Vl. ICMS"		, {|| (cAlB36Dt)->ICMSVAL}		, "@E 9,999,999,999.99"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "Carga Trib"	, {|| (cAlB36Dt)->CARGATRI}		, "@E 9,999,999,999.99"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "Conf.Aliq"		, {|| (cAlB36Dt)->CONFALQ}		, "@E 9,999,999,999.99"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "Conf.Base"		, {|| (cAlB36Dt)->CONFBASC}		, "@E 9,999,999,999.99"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "ICMS Ret"		, {|| (cAlB36Dt)->ICMSRET}		, "@E 9,999,999,999.99"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "ICMS Outras"	, {|| (cAlB36Dt)->ICMSOUTR}		, "@E 9,999,999,999.99"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "Desconto"		, {|| (cAlB36Dt)->DESCONT}		, "@E 9,999,999,999.99"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "Seguro"			, {|| (cAlB36Dt)->SEGURO}			, "@E 9,999,999,999.99"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "Despesas"		, {|| (cAlB36Dt)->DESPESA}		, "@E 9,999,999,999.99"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "Frete"				, {|| (cAlB36Dt)->FRETE}			, "@E 9,999,999,999.99"	,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "CFOP"				, {|| (cAlB36Dt)->CFOP}				, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "TES"					, {|| (cAlB36Dt)->TES}				, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "Observação"	, {|| (cAlB36Dt)->OBSERV}			, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )
	// 	oBrw36Dt:AddColumn( TcColumn():New( "NCM"					, {|| (cAlB36Dt)->NCM}				, "@!"						,,,"LEFT"	,050,.f.,.f.,,,,.f.,) )

	// 		// (cAlB36Dt)->PICMRET		
	// 		// (cAlB36Dt)->PICM			
	// 		// (cAlB36Dt)->TIPO			
	// 		// (cAlB36Dt)->ESPECIE		

	// 	oBrw36Dt:Align		:=	CONTROL_ALIGN_ALLCLIENT
	// ENDIF	
	//FIM Ticket 10535										- Abel Babini - 09/03/2021 - Criar relatório de conferência de faturamento por tipo de cliente e regime de apuração.

	//INICIO Ticket 18004                   - Abel Babini - 17/08/2021 - Alterações no Painel Fiscal - Apuração de Frete e criação do relatório Débito Serv. Industrialização
	//--------------------------------------------------------------------------
	//ABA 37 - DÉBITO SERVIÇO INDUSTRIALIZAÇÃO
	//--------------------------------------------------------------------------
	IF nOpMdl	== 1 .or. nOpMdl	== 2
		IF nOpMdl	== 1
			IF _mvpr01 >= STOD('20210101') .AND. _mvpr01 < STOD('20210201')
				oFld37	:=TFolder():New(1,1,aFld37,{},oFolder030:aDialogs[28],,,, .T., .F.,aPosObj[2,4]-5,aPosObj[2,3]-46,)
			ELSE
				oFld37	:=TFolder():New(1,1,aFld37,{},oFolder030:aDialogs[27],,,, .T., .F.,aPosObj[2,4]-5,aPosObj[2,3]-46,)
			ENDIF
		ELSEIF nOpMdl	== 2
			oFld37	:=TFolder():New(1,1,aFld37,{},oFolder030:aDialogs[21],,,, .T., .F.,aPosObj[2,4]-5,aPosObj[2,3]-46,)
		ENDIF
		oFld37:aDialogs[1]:oFont :=oDlg:oFont //Resumo
		oFld37:aDialogs[2]:oFont :=oDlg:oFont //Detalhe
		//SoFld37:aDialogs[3]:oFont :=oDlg:oFont //Parâmetros

		////////////////////////////////////////////////////////////
		oFLr37p1:= FWLayer():New()
		oFLr37p1:Init( oFld37:aDialogs[1], .F., .T.) //RESUMO

		//Define os Paineis
		//TITULO
		oFLr37p1:AddLine ('TIT_DET', 6, .F.)
		oFLr37p1:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

		oFLr37p1:AddLine ('DETALHE1', 58, .F.)
		oFLr37p1:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

		oFLr37p1:AddLine ('RESUMO', 36, .F.)
		oFLr37p1:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

		oP37TE01	:= oFLr37p1:GetColPanel('TIT_ESQ','TIT_DET')
		oP37D101	:= oFLr37p1:GetColPanel('DET_ESQ1','DETALHE1')
		oP37RE01	:= oFLr37p1:GetColPanel('RES_ESQ','RESUMO')

		oP37TE01:FreeChildren()
		oP37D101:FreeChildren()
		oP37RE01:FreeChildren()

		oBrw37Rs:= TcBrowse():New(004,004,150,150,,,,oP37D101,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)	
		oBrw37Rs:AddColumn( TcColumn():New( "Filial"					, {|| aBrw37Rs[oBrw37Rs:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw37Rs:AddColumn( TcColumn():New( "CFOP"						, {|| aBrw37Rs[oBrw37Rs:nAt,03]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw37Rs:AddColumn( TcColumn():New( "Produto"					, {|| aBrw37Rs[oBrw37Rs:nAt,04]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw37Rs:AddColumn( TcColumn():New( "Quant."					, {|| aBrw37Rs[oBrw37Rs:nAt,05]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw37Rs:AddColumn( TcColumn():New( "Vl.Cont."				, {|| aBrw37Rs[oBrw37Rs:nAt,06]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw37Rs:AddColumn( TcColumn():New( "Vl.ICMS"					, {|| aBrw37Rs[oBrw37Rs:nAt,07]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw37Rs:AddColumn( TcColumn():New( "Média Prc. Unit.", {|| aBrw37Rs[oBrw37Rs:nAt,08]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

		oBrw37Rs:SetArray(aBrw37Rs)
		oBrw37Rs:Align		:=	CONTROL_ALIGN_ALLCLIENT
		oBrw37Rs:bLine := {||{aBrw37Rs[oBrw37Rs:nAt,02],;
													aBrw37Rs[oBrw37Rs:nAt,03],;
													aBrw37Rs[oBrw37Rs:nAt,04],;
													aBrw37Rs[oBrw37Rs:nAt,05],;
													aBrw37Rs[oBrw37Rs:nAt,06],;
													aBrw37Rs[oBrw37Rs:nAt,07],;
													aBrw37Rs[oBrw37Rs:nAt,08] } }

		//Cabecalho
		@ 001,008 SAY OemToAnsi("Resumo Apuração Débito Serviços Industrialização")		FONT oFont003 SIZE 300,15 OF oP37TE01 PIXEL
		
		@ 001,070 SAY OemToAnsi("Quantidade")		FONT oFont002 SIZE 060,15 OF oP37RE01 PIXEL
		@ 001,140 SAY OemToAnsi("Valor Total")	FONT oFont002 SIZE 060,15 OF oP37RE01 PIXEL
		@ 001,210 SAY OemToAnsi("Valor ICMS")		FONT oFont002 SIZE 060,15 OF oP37RE01 PIXEL
		
		@ 011,015 SAY OemToAnsi("Devolução")		FONT oFont001 SIZE 200,15 OF oP37RE01 PIXEL
		@ 010,070 MSGET nA37T01	SIZE 60,08 OF oP37RE01 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 010,140 MSGET nA37T02	SIZE 60,08 OF oP37RE01 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 010,210 MSGET nA37T03	SIZE 60,08 OF oP37RE01 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		@ 025,015 SAY OemToAnsi("Compras")		FONT oFont001 SIZE 200,15 OF oP37RE01 PIXEL
		@ 024,070 MSGET nA37T04	SIZE 60,08 OF oP37RE01 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 024,140 MSGET nA37T05	SIZE 60,08 OF oP37RE01 PIXEL When .F. PICTURE '@E 9,999,999,999.99'
		@ 024,210 MSGET nA37T06	SIZE 60,08 OF oP37RE01 PIXEL When .F. PICTURE '@E 9,999,999,999.99'

		@ 001,015 SAY OemToAnsi("TOTAL")			FONT oFont002 SIZE 200,15 OF oP37RE01 PIXEL

		// @ 077,011 TO 093,274 OF oP37D101 PIXEL

		//QUADRO DE RELATÓRIO
		@ 001,558 SAY OemToAnsi("OUTRAS OPÇÕES")		SIZE 200,15	FONT oFont003 OF oP37RE01 PIXEL
		//@ 010,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION Static Call(ADFIS038R,xRelBr37) OF oP37RE01 PIXEL //"Exportar Excel"
		//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
		@ 010,558 BUTTON OemToAnsi('Gera Relatório')	SIZE 42,13	FONT oDlg:oFont ACTION u_FIS038C6() OF oP37RE01 PIXEL //"Exportar Excel"

		////////////////////////////////////////////////////////////
		oFLr37p2:= FWLayer():New()
		oFLr37p2:Init( oFld37:aDialogs[2], .F., .T.) //Detalhe

		//Define os Paineis
		//TITULO
		oFLr37p2:AddLine ('TIT_DET', 6, .F.)
		oFLr37p2:AddCollumn('TIT_ESQ',100,.F.,'TIT_DET')

		oFLr37p2:AddLine ('DETALHE1', 78, .F.)
		oFLr37p2:AddCollumn('DET_ESQ1',100,.F.,'DETALHE1')

		oFLr37p2:AddLine ('RESUMO', 16, .F.)
		oFLr37p2:AddCollumn('RES_ESQ',100,.F.,'RESUMO')

		oP37TE02	:= oFLr37p2:GetColPanel('TIT_ESQ','TIT_DET')
		oP37D102	:= oFLr37p2:GetColPanel('DET_ESQ1','DETALHE1')
		oP37RE02	:= oFLr37p2:GetColPanel('RES_ESQ','RESUMO')

		oP37TE02:FreeChildren()
		oP37D102:FreeChildren()
		oP37RE02:FreeChildren()

		//Cabecalho
		@ 001,008 SAY OemToAnsi("Detalhamento das operações para Apuração Serviço Industrialização")		FONT oFont003 SIZE 300,15 OF oP37TE02 PIXEL

		oBrw37Dt:= TcBrowse():New(004,004,150,150,,,,oP37D102,,,,,,,,,,,,.f.,,.t.,,.f.,,,,)


		oBrw37Dt:AddColumn( TcColumn():New( "Filial"			, {|| aBrw37Dt[oBrw37Dt:nAt,01]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw37Dt:AddColumn( TcColumn():New( "Dt.Entrada"	, {|| aBrw37Dt[oBrw37Dt:nAt,02]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw37Dt:AddColumn( TcColumn():New( "Série"				, {|| aBrw37Dt[oBrw37Dt:nAt,03]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw37Dt:AddColumn( TcColumn():New( "NF"					, {|| aBrw37Dt[oBrw37Dt:nAt,04]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw37Dt:AddColumn( TcColumn():New( "Item"				, {|| aBrw37Dt[oBrw37Dt:nAt,05]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw37Dt:AddColumn( TcColumn():New( "Cod.Forn."		, {|| aBrw37Dt[oBrw37Dt:nAt,06]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw37Dt:AddColumn( TcColumn():New( "Loja.Forn."	, {|| aBrw37Dt[oBrw37Dt:nAt,07]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw37Dt:AddColumn( TcColumn():New( "Fornecedor"	, {|| aBrw37Dt[oBrw37Dt:nAt,08]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw37Dt:AddColumn( TcColumn():New( "CNPJ"				, {|| aBrw37Dt[oBrw37Dt:nAt,09]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw37Dt:AddColumn( TcColumn():New( "Opt.Simples"	, {|| aBrw37Dt[oBrw37Dt:nAt,10]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw37Dt:AddColumn( TcColumn():New( "Cod.Prod."		, {|| aBrw37Dt[oBrw37Dt:nAt,11]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw37Dt:AddColumn( TcColumn():New( "Produto"			, {|| aBrw37Dt[oBrw37Dt:nAt,12]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw37Dt:AddColumn( TcColumn():New( "Quant."			, {|| aBrw37Dt[oBrw37Dt:nAt,13]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw37Dt:AddColumn( TcColumn():New( "Prc.Unit"		, {|| aBrw37Dt[oBrw37Dt:nAt,14]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw37Dt:AddColumn( TcColumn():New( "Total"				, {|| aBrw37Dt[oBrw37Dt:nAt,15]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw37Dt:AddColumn( TcColumn():New( "Vl.Cont."		, {|| aBrw37Dt[oBrw37Dt:nAt,16]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw37Dt:AddColumn( TcColumn():New( "Base ICMS"		, {|| aBrw37Dt[oBrw37Dt:nAt,17]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw37Dt:AddColumn( TcColumn():New( "Aliq.ICMS"		, {|| aBrw37Dt[oBrw37Dt:nAt,18]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw37Dt:AddColumn( TcColumn():New( "Vl.ICMS"			, {|| aBrw37Dt[oBrw37Dt:nAt,19]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw37Dt:AddColumn( TcColumn():New( "Vl.ICMS Ret.", {|| aBrw37Dt[oBrw37Dt:nAt,20]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw37Dt:AddColumn( TcColumn():New( "Vl.ICMS Out.", {|| aBrw37Dt[oBrw37Dt:nAt,21]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw37Dt:AddColumn( TcColumn():New( "Desconto"		, {|| aBrw37Dt[oBrw37Dt:nAt,22]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw37Dt:AddColumn( TcColumn():New( "Seguro"			, {|| aBrw37Dt[oBrw37Dt:nAt,23]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw37Dt:AddColumn( TcColumn():New( "Despesa"			, {|| aBrw37Dt[oBrw37Dt:nAt,24]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw37Dt:AddColumn( TcColumn():New( "Frete"				, {|| aBrw37Dt[oBrw37Dt:nAt,25]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw37Dt:AddColumn( TcColumn():New( "Dt.Canc."		, {|| aBrw37Dt[oBrw37Dt:nAt,26]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw37Dt:AddColumn( TcColumn():New( "Observações"	, {|| aBrw37Dt[oBrw37Dt:nAt,27]}	, "@!"						,,,"LEFT"	,020,.f.,.f.,,,,.f.,) )
		oBrw37Dt:AddColumn( TcColumn():New( "TES"					, {|| aBrw37Dt[oBrw37Dt:nAt,28]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw37Dt:AddColumn( TcColumn():New( "CFOP"				, {|| aBrw37Dt[oBrw37Dt:nAt,29]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw37Dt:AddColumn( TcColumn():New( "Tipo"				, {|| aBrw37Dt[oBrw37Dt:nAt,30]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw37Dt:AddColumn( TcColumn():New( "Espécie"			, {|| aBrw37Dt[oBrw37Dt:nAt,31]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
		oBrw37Dt:AddColumn( TcColumn():New( "Centro Custo", {|| aBrw37Dt[oBrw37Dt:nAt,32]}	, "@!"						,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )

		oBrw37Dt:SetArray(aBrw37Dt)
		oBrw37Dt:Align		:=	CONTROL_ALIGN_ALLCLIENT
		oBrw37Dt:bLine := {||{aBrw37Dt[oBrw37Dt:nAt] } }
	ENDIF


	//--------------------------------------------------------------------------
	//FIM DA CONSTRUÇÃO DAS ABAS
	//--------------------------------------------------------------------------
	ACTIVATE MSDIALOG oDlg
	//INICIO Ticket 1545 - Abel Babini - 14/09/2020 - Ajuste no fechamento das tabelas temporárias
	IF oAlB00Rs != NIL
		oAlB00Rs:Delete() 
	ENDIF

	IF oAlB03Rs != NIL
		oAlB03Rs:Delete() 
	ENDIF

	IF oAlB04Rs != NIL
		oAlB04Rs:Delete()
	ENDIF
	
	IF oAlB05Dt != NIL
		oAlB05Dt:Delete()
	ENDIF

	IF oAlB09D1 != NIL
		oAlB09D1:Delete()
	ENDIF

	IF oAlB09D2 != NIL
		oAlB09D2:Delete()
	ENDIF

	IF oAlB14Rs != NIL
		oAlB14Rs:Delete()
	ENDIF

	IF oAlB20D1 != NIL
		oAlB20D1:Delete()
	ENDIF

	IF oAlB22Rs != NIL
		oAlB22Rs:Delete()
	ENDIF

	IF oAlB22Dt != NIL
		oAlB22Dt:Delete()
	ENDIF

	IF oAlB26D1 != NIL
		oAlB26D1:Delete()
	ENDIF

	IF oAlB26D2 != NIL
		oAlB26D2:Delete()
	ENDIF

	IF oAlB27D1 != NIL
		oAlB27D1:Delete()
	ENDIF

	IF oAlB27D2 != NIL
		oAlB27D2:Delete()
	ENDIF

	IF oAlB28D1 != NIL
		oAlB28D1:Delete()
	ENDIF

	IF oAlB29D1 != NIL
		oAlB29D1:Delete()
	ENDIF

	IF oAlB30D1 != NIL
		oAlB30D1:Delete()
	ENDIF

	IF oAlB31D1 != NIL
		oAlB31D1:Delete()
	ENDIF

	IF oAlB32D1 != NIL
		oAlB32D1:Delete()
	ENDIF

	IF oAlB33D1 != NIL
		oAlB33D1:Delete() //Ticket 1707                    - Abel Babini - 16/09/2020 - Ajuste no fechamento das tabelas temporárias - Error.log
	ENDIF

	IF oAlB34D1 != NIL
		oAlB34D1:Delete()//Ticket 1707                    - Abel Babini - 16/09/2020 - Ajuste no fechamento das tabelas temporárias - Error.log
	ENDIF

	// IF oAlB36Dt != NIL
	// 	oAlB36Dt:Delete()//Ticket 1707                    - Abel Babini - 16/09/2020 - Ajuste no fechamento das tabelas temporárias - Error.log
	// ENDIF
	//FIM Ticket 1545 - Abel Babini - 14/09/2020 - Ajuste no fechamento das tabelas temporárias
Return

/*/{Protheus.doc} Static Function fAddCols
	Cria colunas no Browser Cred. Outorgado dinamicamente 
	@author Abel Babini Filho
	@since 14/04/2019
	@version 01
	/*/
Static Function fAddCols( pLin , cBrw)
	If cBrw == "08"
		oBrw08Rs:AddColumn( TcColumn():New( aBrw08Nc[pLin]	, {|| aBrw08Rs[oBrw08Rs:nAt,pLin+2]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
	ElseIf cBrw == "23"
		oBrw23R2:AddColumn( TcColumn():New( aBrw23Em[pLin][1]	, {|| aBrw23R2[oBrw23R2:nAt,pLin+2]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
	ElseIf cBrw == "35"
		oBrw35Rs:AddColumn( TcColumn():New( aBrw35Nc[pLin]	, {|| aBrw35Rs[oBrw35Rs:nAt,pLin+2]}	, "@E 999,999,999.99"		,,,"RIGHT"	,050,.f.,.f.,,,,.f.,) )
	Endif
Return( NIL )

/*/{Protheus.doc} Static Function SalvaXml  
	Salva Arquivo XML - Excel
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function SalvaXml()
	oExcel:Activate()
	oExcel:GetXMLFile(cArquivo)
Return()

/*/{Protheus.doc} Static Function CriaExcel  
	Cria Arquivo XML - Excel
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function CriaExcel()
	If _lAbreEx
		IF ( ApOleClient("MsExcel") )   // se nao existir o excel sai fora..
			oMsExcel := MsExcel():New()
			oMsExcel:WorkBooks:Open(cArquivo)
			oMsExcel:SetVisible( .T. )
			oMsExcel:Destroy()
		ELSE
			Alert("Nao Existe Excel Instalado ou não foi possível localizá-lo. Tente novamente!")
		ENDIF
	Endif
Return() 

/*/{Protheus.doc} Static Function xABrw00 
	Carrega da dados Ref. aba de Parâmetros  
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function xABrw00()
	Local _aFields := {}
	Local i := 0
	_cEspMes := ""
	
	If Select(cAlB00Es) > 0
		(cAlB00Es)->(dbCloseArea())
	Endif
	cAlB00Es:=GetNextAlias()

	BeginSQL  Alias cAlB00Es
		SELECT DISTINCT FT_ESPECIE
		FROM %TABLE:SFT% SFT (NOLOCK)
		WHERE
			SFT.%notDel%
		AND SFT.FT_FILIAL=%xFilial:SFT%
		AND (SFT.FT_ENTRADA>=%Exp:DToS(_mvpr01)% AND SFT.FT_ENTRADA<=%Exp:DToS(_mvpr02)%)
		
		EndSQL
	
	//Monta Arrays Auxiliares
	DbSelectArea(cAlB00Es)
	(cAlB00Es)->(DbGoTop())
		While !(cAlB00Es)->(eof())
		_cEspMes := _cEspMes+(cAlB00Es)->FT_ESPECIE+","
		(cAlB00Es)->(DbSkip())
		EndDo
	(cAlB00Es)->(dbCloseArea())
	
	//ABA 02
	//Ticket 5252                    - Abel Babini - 17/11/2020 - Painel Fiscal - Alteração de parâmetros pelo usuário		
	AADD(aBrw01Pr,{"MV_#PNUSPR",_cMVUsPr,"Usuário com permissão de alterar parâmetros","02 - PARAMETROS"})

	//ABA 03
	AADD(aBrw01Pr,{"MV_#PNUSMR",_cMVMstr,"Usuário com permissão de fechamento do Período no Painel Fiscal","03 - DEMONSTRATIVO"})
	
	//INICIO Ticket 12090										- Abel Babini - 09/04/2021 - Acrescentar CFOPs 6905 e 2906 como Outros Débitos e Outros Créditos respectivamente nas abas Demonstrativo e Abertura da Gia
	AADD(aBrw01Pr,{"MV_#CFNM01",_cCfNM01,"CFOP Mapeados Entradas Estaduais","03 - DEMONSTRATIVO"})
	AADD(aBrw01Pr,{"MV_#CFNM02",_cCfNM02,"CFOP Mapeados Entradas Interestaduais","03 - DEMONSTRATIVO"})
	AADD(aBrw01Pr,{"MV_#CFNM03",_cCfNM03,"CFOP Mapeados Entradas Importação","03 - DEMONSTRATIVO"})
	AADD(aBrw01Pr,{"MV_#CFNM04",_cCfNM04,"CFOP Mapeados Saídas Estaduais","03 - DEMONSTRATIVO"})
	AADD(aBrw01Pr,{"MV_#CFNM05",_cCfNM05,"CFOP Mapeados Saídas Interestaduais","03 - DEMONSTRATIVO"})
	AADD(aBrw01Pr,{"MV_#CFNM06",_cCfNM06,"CFOP Mapeados Saídas Exportação","03 - DEMONSTRATIVO"})

	//ABA 04
	AADD(aBrw01Pr,{"MV_#ESTIST",_cMVEIST,"Estados para destaque do ICMS ST","04 - ABERTURA GIA ST"})

	//ABA 05
	AADD(aBrw01Pr,{"MV_#CMEXCF",_cMVCFCE,"Códigos CFOP Considerado no Cálculo de Compra de Insumos para Exportação","05 - Demonstrativo"})
	AADD(aBrw01Pr,{"MV_#CMEXP1",_cMVPRC1,"Códigos de Produtos Considerado no Cálculo de Compra de Insumos para Exportação","05 - Demonstrativo"})
	AADD(aBrw01Pr,{"MV_#CMEXP2",_cMVPRC2,"Códigos de Produtos Considerado no Cálculo de Compra de Insumos para Exportação","05 - Demonstrativo"})

	//ABA 06
	AADD(aBrw01Pr,{"MV_#DFNCCF",_cMVCFDN,"Códigos CFOP Considerados como venda para validar cadastro de clientes não contribuintes","06 - DIFAL Não Contribuinte"})

	//ABA 07
	AADD(aBrw01Pr,{"MV_#CFDFAL",_cMVCFDA,"Código CFOP connsiderados no relatório de diferencial de alíquota","07 - Diferencial de Alíquota"})
	AADD(aBrw01Pr,{"MV_#CPDFAL",_cMVCPDA,"Código de Produtos desconnsiderados no relatório de diferencial de alíquota","07 - Diferencial de Alíquota"})

	//ABA 08
	AADD(aBrw01Pr,{"MV_#CROUCF",_cMVCFCO,"Códigos CFOP Considerado no Relatorio Credito Outorgado","08 - Crédito Outorgado"})

	//ABA 09
	AADD(aBrw01Pr,{"MV_#OSFRCB",_cMVFrCB,"Código do Fornecedor Padrão de Cesta Basica","09 - Outras Saídas"})
	AADD(aBrw01Pr,{"MV_#OSLJCB",_cMVLjCB,"Loja do Fornecedor Padrão de Cesta Basica","09 - Outras Saídas"})
	AADD(aBrw01Pr,{"MV_#OSPRFR",_cMVPrFr,"Código do Produto Padrão para Frango na Cesta Básica","09 - Outras Saídas"})
	AADD(aBrw01Pr,{"MV_#OSFDCB",_cMVFDCB,"Código Cliente Padrão para Devolução de Cesta Básica","09 - Outras Saídas"})
	AADD(aBrw01Pr,{"MV_#OSLDCB",_cMVLDCB,"Loja do CLiente Padrão para Devolução de Cesta Básica","09 - Outras Saídas"})

	//ABA 10
	AADD(aBrw01Pr,{"MV_#DCCFIN",_cMVCFIn,"Códigos CFOP Dev. Compras de Insumos","10 - Dev. Compras"})
	AADD(aBrw01Pr,{"MV_#DCCFMC",_cMVCFMc,"Códigos CFOP Dev. Compras Mat. Consumo e Imobilizado","10 - Dev. Compras"})

	//ABA 11
	AADD(aBrw01Pr,{"MV_#POLENT",_cPolent,"Codigo NCM para filtrar itens que serão consideras para Polenta no Painel Fiscal","11 - Polenta"})

	//ABA 12
	AADD(aBrw01Pr,{"MV_#EMBUTI",_cEmbuti,"Codigo NCM dos produtos considerados como embutidos no Painel Fiscal","12 - Embutidos"})

	//ABA 13
	AADD(aBrw01Pr,{"MV_#ALMOND",_cAlmond,"Código NCM dos produtos considerados como Almondegas no Painel Fiscal","13 - Almondegas"})

	//ABA 14
	AADD(aBrw01Pr,{"MV_#GRAXAR",_cMVGrax,"Codigo NCM dos produtos considerados como Graxaria no Painel Fiscal","14 - Graxaria"})

	//ABA 15
	AADD(aBrw01Pr,{"MV_#LENHPR",_cMVPrLn,"Código NCM dos produtos considerados Lenha no Painel Fiscal","15 - Compra Lenha"})
	AADD(aBrw01Pr,{"MV_#LENHCF",_cMVCfLn,"Código CFOP para serem considerados no relatório Lenha no Painel Fiscal","15 - Compra Lenha"})

	//ABA 16
	AADD(aBrw01Pr,{"MV_#AVESPR",_cMVPrAv,"Código dos produtos considerados Aves no Painel Fiscal","16 - Compra Aves"})
	AADD(aBrw01Pr,{"MV_#AVESCF",_cMVCfAv,"Código CFOP não considerados para compra de Aves no Painel Fiscal","16 - Compra Aves"})

	//ABA 17
	AADD(aBrw01Pr,{"MV_#LEGUME",_cMVLegu,"Código dos produtos considerados Legumes no Painel Fiscal","17 - Legumes"})
	AADD(aBrw01Pr,{"MV_#CFLEGU",_cMVCfLg,"Código CFOP considerados no relatório de legumes no Painel Fiscal","17 - Legumes"})

	//ABA 18
	AADD(aBrw01Pr,{"MV_#DTUNIF",_dUnifor,"Data inicial para relatório de Uniforme no Painel Fiscal","18 - Uniforme"})
	AADD(aBrw01Pr,{"MV_#UNIFOR",_cMVUnif,"Código NCM dos produtos de uniforme para serem considerados na relatório do Painel Fiscal","18 - Uniforme"})

	//ABA 19
	AADD(aBrw01Pr,{"MV_#NAOCOM",_cMVNCom,"Codigo NCM dos produtos considerados como Não Comestíveis no Painel Fiscal","19 - Não Comestíveis"})
	AADD(aBrw01Pr,{"MV_#NCOMCF",_cMVCFNC,"CFOP a ser considerado no relatório de Produtos Não Comestiveis no Painel Fiscal","19 - Não Comestíveis"})

	//ABA 21
	AADD(aBrw01Pr,{"MV_#DTREMI",_dRemInd,"Data inicial para relatório de Remessa para Industrialização no Painel Fiscal","21 - Industr. Uso e Consumo"})
	AADD(aBrw01Pr,{"MV_#CRIFOR",_cMVRIFo,"Fornecedores para não considerar no relatório de Remessa para Industrialização no Painel Fiscal","21 - Industr. Uso e Consumo"})

	//ABA 22
	AADD(aBrw01Pr,{"MV_#CFRVTB",_cMVCFRT,"CFOP a ser considerado no relatório de Revenda Tributada","22 - Revenda Tributada"})

	//ABA 23
	AADD(aBrw01Pr,{"MV_#DTINDT",_dIndTer,"Data inicial para relatório de Industialização por Terceiros","23 - Industr. PA"})
	AADD(aBrw01Pr,{"MV_#INDEMB",_cMVIndE,"Código CFOP que serão considerados no relatório de Industrialização de PA","23 - Industr. PA"})
	AADD(aBrw01Pr,{"MV_#P3FORN",_cMVP3Fo,"CNPJ dos Fornecedores de Industrializacao de PA","23 - Industr. PA"})
	AADD(aBrw01Pr,{"MV_#IECOMP",_cMVIECP,"Código CFOP de Compra para Industr para Industr. PA","23 - Industr. PA"})
	AADD(aBrw01Pr,{"MV_#IEINDU",_cMVIEIN,"Código CFOP de Industrialização para Industr. PA","23 - Industr. PA"})
	AADD(aBrw01Pr,{"MV_#IEREMI",_cMVIERM,"Código CFOP de Remessa Industr para Industr. PA","23 - Industr. PA"})
	AADD(aBrw01Pr,{"MV_#IERESU",_cMVIERS,"Código CFOP não considerados no painel Resumo","23 - Industr. PA"})
	AADD(aBrw01Pr,{"MV_#PRDNRM",_cMVPRDF,"Código Produtos não considerados como Remessa ou Retorno para Industr. PA","23 - Industr. PA"})
	AADD(aBrw01Pr,{"MV_#IERETI",_cMVIERI,"Código CFOP de Retorno Industr para Industr. PA","23 - Industr. PA"})
	AADD(aBrw01Pr,{"MV_#IERTNA",_cMVIERN,"Código CFOP Mercadoria Não Aplicada no Processo para Industr. PA","23 - Industr. PA"})
	AADD(aBrw01Pr,{"MV_#IEDEVI",_cMVIEDI,"Código CFOP de Devolução de Insumos para Industr. PA","23 - Industr. PA"})
	AADD(aBrw01Pr,{"MV_#IEENTB",_cMVIEEB,"Código CFOP de Entrada Bonificação para Industr. PA","23 - Industr. PA"})
	AADD(aBrw01Pr,{"MV_#IEOUTE",_cMVIEOE,"Código CFOP de Outras Entradas para Industr. PA","23 - Industr. PA"})
	AADD(aBrw01Pr,{"MV_#IEOUTS",_cMVIEOS,"Código CFOP de Outras Saídas para Industr. PA","23 - Industr. PA"})
	AADD(aBrw01Pr,{"MV_#IEALEB",_cMVIEAE,"Código Almoxarifado Entrada Bonificação","23 - Industr. PA"})
	AADD(aBrw01Pr,{"MV_#IEALEI",_cMVIEAD,"Código Almoxarifado Devolução de Insumos","23 - Industr. PA"})
	AADD(aBrw01Pr,{"MV_#IENFNC",_cMVNFNC,"Notas Fiscais que não serão consideradas","23 - Industr. PA"})
	AADD(aBrw01Pr,{"MV_#IENFIN",_cMVNFIN,"Notas Fiscais sem gerar livros fiscais, série ZZZ, para incluir no Rel. de Ind. de PA","23 - Industr. PA"})

	//ABA 24
	AADD(aBrw01Pr,{"MV_#CFFRET",_cMVCFFr,"Códigos CFOP Apuração ICMS Frete no Painel Fiscal ICMS","24 - Fretes"})
	AADD(aBrw01Pr,{"MV_#CCFREX",_cMVFrEx,"Códigos C.Custo dos Fretes destinados a exportacao","24 - Fretes"})
	AADD(aBrw01Pr,{"MV_#CCFRTF",_cMVFrTF,"Códigos C.Custo dos Fretes destinados a Transporte de Funcionários","24 - Fretes"})
	AADD(aBrw01Pr,{"MV_#CFFRAN",_cMVFrAn,"Códigos CFOP Anulação de Frete","24 - Fretes"})
	AADD(aBrw01Pr,{"MV_#ALFRST",_nAlFrST,"Alíquota ICMS ST Frete","24 - Fretes"})
	//Chamado n.060517 - OS n.062030 - Abel Babini - 17/08/2020 - Altera regra de calculo do ICMS sobre Frete para os modelos 2 e 4
	AADD(aBrw01Pr,{"MV_#FRTPRD",_cMVFrPr,"Códigos dos produtos de frete a serem desconsiderados no Painel Fiscal. Criado inicialmente para a Ceres.","24 - Fretes"})
	AADD(aBrw01Pr,{"MV_#PRFRTF",_cMVPrTF,"Códigos Produtos dos Fretes destinados a Transporte de Funcionários","24 - Fretes"})
	AADD(aBrw01Pr,{"MV_#CRFRT",IIF(_lMVCrFt,".T.",".F."),"Debita frete (.T.) no painel fiscal ou faz conta gráfica (.F.) para modelos 2 e 4?","24 - Fretes"})

	//Ticket 3035                    - Abel Babini - 16/09/2020 - Painel Fiscal Ceres - Relatório de frete - Criar regra por produto para transporte de funcion[ários
	AADD(aBrw01Pr,{"MV_#APFR",IIF(_lMVAPF,".T.",".F."),"Considera apenas a regra de produto? .T. = Apenas regra do produto (MV_#PRFRTF) .F. Considera Centro de custo ou ( MV_#CRFRT e MV_#PRFRTF)","24 - Fretes"})

	//ABA 25
	AADD(aBrw01Pr,{"MV_#CELULA",_cMVCelu,"Código NCM dos produtos de celular para serem considerados na relatório do Painel Fiscal","25 - Celular"})
	AADD(aBrw01Pr,{"MV_#DTCELU",_dCelula,"Data inicial para relatório de Celular no Painel Fiscal","25 - Celular"})
	AADD(aBrw01Pr,{"MV_#DTCEPN",_dCelPn,"Data inicial para considerar os créditos no relatório de Celular no Painel Fiscal","25 - Celular"})

	//ABA 27
	AADD(aBrw01Pr,{"MV_#IVANCF",_cMVCfIV,"Código CFOP não considerados no relatório IVA","27 - IVA"})

	//ABA 28
	AADD(aBrw01Pr,{"MV_#CFCIAP",_cMVCfCI,"Código CFOP para cálculo Vl. ICMS CIAP","28 - CIAP"})
	
	//ABA 29
	AADD(aBrw01Pr,{"MV_#COMPMP",_cMVCPMP,"Código CFOP para cálculo Vl. ICMS Compra Matéria Prima","29 - Compra Matéria Prima"})

	//ABA 30
	AADD(aBrw01Pr,{"MV_#VENDFV",_cMVVDFV,"Código CFOP para cálculo Vendas","30 - Vendas GO"})

	//ABA 31
	AADD(aBrw01Pr,{"MV_#CLISD",_cMVClSd,"Código dos Clientes para serem considerados no relatório de saída de Goias - Painel Fiscal","31 - Detalhes Apuração GO"})
	AADD(aBrw01Pr,{"MV_#FOREN",_cMVFrEn,"Código dos Fornecedores para serem considerados no relatório de entrada de Goias - Painel Fiscal","31 - Detalhes Apuração GO"})
	AADD(aBrw01Pr,{"MV_#FILEN",_cMVFlEn,"Código das Filiais para serem considerados no relatório de entrada de Goias - Painel Fiscal","31 - Detalhes Apuração GO"})

	//INICIO Ticket 5252                    - Abel Babini - 17/11/2020 - Painel Fiscal - Alteração de parâmetros pelo usuário. Exibir parâmetros que não estavam sendo exibidos
	//ABA 32
	AADD(aBrw01Pr,{"MV_#TESNFS",_cMVTNFS,"Código TES Relatório Conferencia NF Servico","32 - Conferência NF Serviço"})
	AADD(aBrw01Pr,{"MV_#PMILHO",_cMVPMIL,"Código Produtos Milho NF Serviço","32 - Conferência NF Serviço"})
	AADD(aBrw01Pr,{"MV_#PSORGO",_cMVPSOR,"Código Produtos Sorgo NF Serviço","32 - Conferência NF Serviço"})
	AADD(aBrw01Pr,{"MV_#PPROTE",_cMVPPRO,"Código Produtos PROTEGE NF Serviço","32 - Conferência NF Serviço"})

	//ABA 33
	AADD(aBrw01Pr,{"MV_#ENSACF",_cMVCfES,"Código CFOP não considerados para Entradas e Saídas no Painel Fiscal","33 - Entradas e Saídas"})
	AADD(aBrw01Pr,{"MV_#TPENSA",_cMVTPES,"Espécies de documentos não considerados para Entradas e Saídas no Painel Fiscal","33 - Entradas e Saídas"})
	AADD(aBrw01Pr,{"MV_#CFBONI",_cMVCfBN,"Código CFOP considerados bonificação Pintos de 1 dia Macho e Femea para RNX2 no Painel Fiscal","33 - Entradas e Saídas"})
	AADD(aBrw01Pr,{"MV_#PRBONI",_cMVPrBN,"Código Produtos Pintos de 1 dia considerados bonificação para RNX2 no Painel Fiscal","33 - Entradas e Saídas"})

	//ABA 34
	AADD(aBrw01Pr,{"MV_#DEVVEN",_cMVDVVD,"Código CFOP para cálculo Devolução Vendas","34 - Devolução de Vendas"})

	//INICIO Ticket 8050                    - Abel Babini - 18/01/2020 - Alteração de alíquotas nos relatórios de crédito outorgado
	//ABA 35
	AADD(aBrw01Pr,{"MV_#CROUN1",_cMVCON1,"Data de Início da nova legislação Crédito Outorgado","35 - Crédito Outorgado"})
	AADD(aBrw01Pr,{"MV_#CROUN2",_cMVCON2,"Alíquota (%) do Crédito Outorgado Interestadual","35 - Crédito Outorgado"})
	AADD(aBrw01Pr,{"MV_#CROUN3",_cMVCON3,"Alíquota (%) do Crédito Outorgado Estadual Exportação","35 - Crédito Outorgado"})
	AADD(aBrw01Pr,{"MV_#CROUN4",_cMVCON4,"Alíquota (%) do Crédito Outorgado Estadual Op. Interna","35 - Crédito Outorgado"})

	//ABA 36
	// AADD(aBrw01Pr,{"MV_#CNFTCF",_cMVCFFT,"CFOP a ser considerado no relatório de Conferência de Faturmaento","36 - Conf. Faturamento"})

	//FIM Ticket 5252                    - Abel Babini - 17/11/2020 - Painel Fiscal - Alteração de parâmetros pelo usuário. Exibir parâmetros que não estavam sendo exibidos
	
	//INICIO Ticket 18004                   - Abel Babini - 17/08/2021 - Alterações no Painel Fiscal - Apuração de Frete e criação do relatório Débito Serv. Industrialização
	//-----------------------------------
	//Variáveis BROWSER 37 - DÉBITO SERVIÇO INDUSTRIALIZAÇÃO
	//-----------------------------------
	AADD(aBrw01Pr,{"MV_#DBSRVI",_cMVPrSI,"Código dos produtos considerados no relatório de Débito Serv. de Industrialização","37 - Déb Serv Industrial"})
	AADD(aBrw01Pr,{"MV_#DBSRCF",_cMVCfDS,"Código CFOP para serem considerados no relatório no relatório de Débito Serv. de Industrialização","37 - Déb Serv Industrial"})

	//ABA
	AADD(aBrw01Pr,{"ESPÉCI DOC",_cEspMes,"Espécies de Documentos utilizadas no mês","99 - Parâmetros Informativos"})

	//Cria tabela temporária de parâmetros
	If Select(cAlB00Rs) > 0
		(cAlB00Rs)->(dbCloseArea())
	Endif
	cAlB00Rs:=GetNextAlias()

	_aFields	:= CriaExtr(T00PARAM)
	_aIndex		:= CriaInd(T00PARAM)
	oAlB00Rs		:= CriaTmpT(cAlB00Rs, _aFields, _aIndex)	
	FOR i:=1 to Len(aBrw01Pr)
		RECLOCK(cAlB00Rs,.T.)
			(cAlB00Rs)->LINHA			:= i
			(cAlB00Rs)->FILIAL		:= cFilAnt
			(cAlB00Rs)->RELATORI		:= aBrw01Pr[i,4]
			(cAlB00Rs)->PARAMETR	:= aBrw01Pr[i,1]
			IF ValType(aBrw01Pr[i,2])=="N"
				(cAlB00Rs)->CONTEUDO	:= Str(aBrw01Pr[i,2])
			ELSEIF ValType(aBrw01Pr[i,2])=="D"
				(cAlB00Rs)->CONTEUDO	:= DTOC(aBrw01Pr[i,2])
			ELSE
				(cAlB00Rs)->CONTEUDO	:= aBrw01Pr[i,2]
			ENDIF
			(cAlB00Rs)->DESCR			:= aBrw01Pr[i,3]
		MSUNLOCK()	
	NEXT i
	(cAlB00Rs)->(dbGoTOP())

	// FreeObj(aBrw01Pr)
Return

//INICIO Chamado n.050629 - OS n.054314 - Relatorio Abertura GIA ST - Abel Babini - 28/10/2019
/*/{Prot	heus.doc} Static Function xABrw04
	Gera Relatório Ref. ABERTURA GIA ICMS ST
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function xABrw04()
	Local _i
	Local _aFields := {}
	Local i := 0
	If Select(cAlB04Rs) > 0
		(cAlB04Rs)->(dbCloseArea())
	Endif
	cAlB04Rs:=GetNextAlias()

	_aFields	:= CriaExtr(T02GIAST)
	_aIndex		:= CriaInd(T02GIAST)
	oAlB04Rs		:= CriaTmpT(cAlB04Rs, _aFields, _aIndex)

	aBrw04Rs	:= {}
	aBrw04Rs	:= Array(19,3)
	For _i := 1 to Len(aBrw04Rs)
		aBrw04Rs[_i,1]	:= cFilAnt
		aBrw04Rs[_i,2]	:= ''
		aBrw04Rs[_i,3]	:= 0
	Next _i
	aBrw04Rs[01,2]	:= Alltrim(SM0->M0_NOME) + ' - ' + Alltrim(SM0->M0_FILIAL) + ' (' + _cMesI +'/'+_cAnoI +')'
	aBrw04Rs[01,3]	:= ''
	aBrw04Rs[02,2]	:= ''
	aBrw04Rs[02,3]	:= ''
	aBrw04Rs[03,2]	:= 'REF. ABERTURA DA GIA ST'
	aBrw04Rs[03,3]	:= ''
	aBrw04Rs[04,2]	:= ''
	aBrw04Rs[04,3]	:= ''
	aBrw04Rs[05,2]	:= 'TOTAL DOS DÉBITOS'
	aBrw04Rs[06,2]	:= '   ICMS RETIDO (SUBST. TRIBUTÁRIA)'
	aBrw04Rs[07,2]	:= '   ICMS RETIDO (SUBST. TRIBUTÁRIA) ' + _cMVEIST
	aBrw04Rs[08,2]	:= ''
	aBrw04Rs[08,3]	:= ''
	aBrw04Rs[09,2]	:= ''
	aBrw04Rs[09,3]	:= ''
	aBrw04Rs[10,2]	:= ''
	aBrw04Rs[10,3]	:= ''
	aBrw04Rs[11,2]	:= 'TOTAL DOS CRÉDITOS'
	aBrw04Rs[12,2]	:= '   ICMS RETIDO (SUBST. TRIBUTÁRIA)'
	aBrw04Rs[13,2]	:= '   ICMS RETIDO (SUBST. TRIBUTÁRIA) ' + _cMVEIST
	aBrw04Rs[14,2]	:= '   DEVOLUÇÃO SEM DESTAQUE DE ST'
	aBrw04Rs[15,2]	:= ''
	aBrw04Rs[15,3]	:= ''
	aBrw04Rs[16,2]	:= ''
	aBrw04Rs[16,3]	:= ''
	aBrw04Rs[17,2]	:= 'SALDO CREDOR MÊS ANTERIOR'
	aBrw04Rs[18,2]	:= ''
	aBrw04Rs[18,3]	:= ''
	aBrw04Rs[19,2]	:= 'IMPOSTO A RECOLHER (SUBST. TRIBUTÁRIA)'

	FOR i:=1 to Len(aBrw04Rs)
		RECLOCK(cAlB04Rs,.T.)
			(cAlB04Rs)->LINHA	:= i
			(cAlB04Rs)->FILIAL:= cFilAnt
			(cAlB04Rs)->DESCR	:= aBrw04Rs[i,2]
		MSUNLOCK()	
	NEXT i
	(cAlB04Rs)->(dbGoTOP())

	FreeObj(aBrw04Rs)
Return

/*/{Protheus.doc} Static Function xRelBr04
	Gera Relatório Ref. ABERTURA GIA ICMS ST
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function xRelBr04()
	Local aSays			:= {}
	Local aButtons		:= {}
	Local nOpca			:= 0
	//+-----------------------------------------------+
	//|Monta Form Batch - Interface com o Usuario     |
	//+-----------------------------------------------+
	AADD(aSays,"Este programa tem a finalidade de Gerar um arquivo Excel " )
	AADD(aSays,"Relatorio ABERTURA DA GIA ICMS ST" )

	AADD(aButtons, { 1,.T.,{|o| nOpca:=1, o:oWnd:End(), Processa({||xRelBr04b()},"Gerando arquivo","Aguarde...")    }})
	AADD(aButtons, { 2,.T.,{|o| nOpca:=2, o:oWnd:End() }})
	FormBatch( cCadastr, aSays, aButtons )

	MsgInfo("Arquivo Excel gerado!")

Return

/*/{Protheus.doc} Static Function xRelBr04b
	Gera Relatório Ref. ABERTURA GIA ICMS ST
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function xRelBr04b()
	Private oExcel     := FWMSEXCELEX():New()
	//Private cArquivo	:= cGetFile("Arquivo XML", "Selecione o diretório para salvar o relatório",,'C:\',.T.,GETF_RETDIRECTORY + GETF_LOCALHARD + GETF_NETWORKDRIVE)
	Private oMsExcel   := NIL

	cArquivo := cPathRel +  'RGIA_ICMSST_' + DTOS(DATE()) + STRTRAN(TIME(),':','') + '.XML'
	BEGIN SEQUENCE

		//IF .NOT.( ApOleClient("MsExcel") )   // se nao existir o excel sai fora..
		//	Alert("Nao Existe Excel Instalado")
		//	BREAK
		//EndIF

		CabB04p1()
		GExB04p1()

		//CabB04P2()
		//GExB04P2()

		SalvaXml()
		CriaExcel()

	END SEQUENCE

Return

/*/{Protheus.doc} Static Function CabB04p1
	Gera Relatório Ref. ABERTURA GIA ICMS ST
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function CabB04p1()
	oExcel:AddworkSheet(cFld04)
	oExcel:AddTable(cFld04,cFld04t)
	oExcel:AddColumn(cFld04,cFld04t,space(40)		,1,1) // 01 A
	oExcel:AddColumn(cFld04,cFld04t,space(20)		,2,2) // 02 B
RETURN(NIL)

/*/{Protheus.doc} Static Function GExB04p1
	Gera Relatório Ref. ABERTURA GIA ICMS ST
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function GExB04p1()
	//Local i
	//============================== INICIO IMPRIME LINHA NO EXCEL
	//For i := 1 to Len(aBrw04Rs)
	//	oExcel:AddRow(cFld04,cFld04t,{aBrw04Rs[i,2],aBrw04Rs[i,3]})
	//Next i
	(cAlB04Rs)->(dbGoTOP())
	While !(cAlB04Rs)->(eof())
		oExcel:AddRow(cFld04,cFld04t,{(cAlB04Rs)->DESCR,(cAlB04Rs)->VALOR})
		(cAlB04Rs)->(dbSkip())
	EndDo
	(cAlB04Rs)->(dbGoTOP())
	oExcel:AddRow(cFld04,cFld04t,{'',''})
	
	//============================== FINAL IMPRIME LINHA NO EXCEL

Return

//FIM Chamado n.050629 - OS n.054314 - Relatorio Abertura GIA ST - Abel Babini - 28/10/2019

// INICIO n.040924  - Relatorio Dif. de Alíquota - Abel Babini - 07/05/2019
/*/{Protheus.doc} Static Function xABrw07 
	Carrega da dados Ref. Diferencial de Aliquota
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function xABrw07()
	If Select(cAlB07Rs) > 0
		(cAlB07Rs)->(dbCloseArea())
	Endif
	cAlB07Rs:=GetNextAlias()

	If Select(cAlB07Cr) > 0
		(cAlB07Cr)->(dbCloseArea())
	Endif
	cAlB07Cr:=GetNextAlias()
	
	If Select(cAlB07Db) > 0
		(cAlB07Db)->(dbCloseArea())
	Endif
	cAlB07Db:=GetNextAlias()

	aBrw07Cr	:= {}
	aBrw07Db	:= {}
	aBrw07Rs	:= {}
	nA07T01		:= 0
	nA07T02		:= 0
	nA07T03		:= 0
	nA07T04		:= 0
	nA07T05		:= 0
	nA07T11		:= 0
	nA07T12		:= 0
	nA07T13		:= 0
	nA07T14		:= 0
	nA07T15		:= 0
	nA07T21		:= 0
	nA07T22		:= 0
	nA07T23		:= 0
	nA07T24		:= 0
	nA07T25		:= 0
	nA07T91		:= 0
	nA07T92		:= 0
	nA07T93		:= 0
	//RESUMO
	//Chamado n.055548 - OS n.056953 - Painel Fiscal São Carlos e Ajustes em VP - Abel Babini - 10/02/2020
	//Ajustes na query nos campos de base e valor do ICMS
	//Chamado n.058111 - OS n.059575 - Abel Babini - 07/05/2020 - Ajuste na query para considerar possibilidade do campo D1_PCIM estar zerado quando Fornecedores Optantes pelo Simples Nacional
	//Ticket 3037                    - Abel Babini - 16/09/2020 - Painel Fiscal Granja RNX2 - Diferencial de alíquota da granja não considerar CFOP 2251 - criado parâmetro para tratar CFOP
	//AND SFT.FT_PRODUTO NOT IN %Exp:_cCPDFAL%

	BeginSQL  Alias cAlB07Rs
		SELECT
			SFT.FT_FILIAL		AS FILIAL, 
			SFT.FT_CLIEFOR		AS FORNECE, 
			SFT.FT_LOJA			AS LOJA, 
			SA2.A2_NOME			AS NOME,
			SFT.FT_ENTRADA		AS DTDIGIT, 
			SFT.FT_EMISSAO		AS EMISSAO, 
			SFT.FT_NFISCAL		AS DOC, 
			SFT.FT_SERIE		AS SERIE,
			CASE WHEN SD1.D1_PICM = 0 AND SA2.A2_SIMPNAC = '1' THEN 12 ELSE SD1.D1_PICM END	AS ALIQICMS,
			SUM(SFT.FT_QUANT) 	AS QUANT, 
			SUM(SFT.FT_TOTAL) 	AS TOTAL,
			SUM(CASE 
				WHEN SD1.D1_BASEICM = 0 THEN (CASE 
					WHEN SFT.FT_TIPO = 'I' THEN (CASE 
						WHEN SFT.FT_BSICMOR <> SD1.D1_VALICM THEN SFT.FT_BSICMOR 
						ELSE round(SD1.D1_VALICM / 0.18,2) END) 
					ELSE (CASE 
						WHEN SFT.FT_BSICMOR > 0 THEN SFT.FT_BSICMOR 
						ELSE SFT.FT_TOTAL END)-SFT.FT_ISENICM END) 
				ELSE SD1.D1_BASEICM END) AS BASEICM,
			SUM(CASE WHEN SFT.FT_TIPO = 'I' THEN SD1.D1_VALICM 
				ELSE (CASE 
					WHEN SD1.D1_VALICM = 0 THEN 
						(CASE WHEN SD1.D1_BASEICM = 0 THEN 
							(CASE WHEN SFT.FT_BSICMOR > 0 THEN SFT.FT_BSICMOR 
								ELSE SFT.FT_TOTAL 
							END)-SFT.FT_ISENICM 
						ELSE SD1.D1_BASEICM END)*(CASE WHEN  SA2.A2_SIMPNAC = '1' AND SD1.D1_PICM = 0 THEN 0.12 ELSE ( SD1.D1_PICM/100) END) 
					ELSE SD1.D1_VALICM END) 
				END) AS VALICM, 
			SUM(CASE 
				WHEN (SD1.D1_BASEICM * ((18-CASE WHEN  SA2.A2_SIMPNAC = '1' AND SD1.D1_PICM = 0 THEN 12 ELSE ( SD1.D1_PICM) END)/100) - SFT.FT_ICMSCOM)<.5 THEN SFT.FT_ICMSCOM 
				WHEN SA2.A2_SIMPNAC = '1' THEN ROUND(SD1.D1_BASEICM * ((18-CASE WHEN  SA2.A2_SIMPNAC = '1' AND SD1.D1_PICM = 0 THEN 12 ELSE ( SD1.D1_PICM) END)/100),2)
				ELSE ROUND(SD1.D1_BASEICM * ((18-CASE WHEN  SA2.A2_SIMPNAC = '1' AND SD1.D1_PICM = 0 THEN 12 ELSE ( SD1.D1_PICM) END)/100),2) END ) AS ICMSCOM
		FROM %TABLE:SFT% SFT (NOLOCK)
		LEFT JOIN %TABLE:SA2% SA2 (NOLOCK) ON
			SA2.%notDel%
		AND SA2.A2_COD = SFT.FT_CLIEFOR
		AND SA2.A2_LOJA = SFT.FT_LOJA
		LEFT JOIN %TABLE:SB1% SB1 (NOLOCK) ON
			SB1.%notDel%
		AND SB1.B1_COD = SFT.FT_PRODUTO
		LEFT JOIN %TABLE:SD1% SD1 (NOLOCK) ON
			SD1.%notDel%
		AND SD1.D1_FILIAL = SFT.FT_FILIAL
		AND SD1.D1_DOC = SFT.FT_NFISCAL
		AND SD1.D1_SERIE = SFT.FT_SERIE
		AND SD1.D1_ITEM = SFT.FT_ITEM
		AND SD1.D1_FORNECE = SFT.FT_CLIEFOR
		AND SD1.D1_LOJA = SFT.FT_LOJA
		WHERE
			SFT.%notDel%
		AND SFT.FT_FILIAL=%xFilial:SD1%
		AND (SFT.FT_ENTRADA>=%Exp:DToS(_mvpr01)% AND SFT.FT_ENTRADA<=%Exp:DToS(_mvpr02)%) 
		AND SFT.FT_CFOP IN %Exp:_cCFDFAL%
		AND SFT.FT_PRODUTO NOT IN %Exp:_cCPDFAL%
		AND SFT.FT_DTCANC = ''
		GROUP BY
			SFT.FT_FILIAL, 
			SFT.FT_CLIEFOR, 
			SFT.FT_LOJA, 
			SA2.A2_NOME,
			SFT.FT_ENTRADA, 
			SFT.FT_EMISSAO, 
			SFT.FT_NFISCAL, 
			SFT.FT_SERIE,
			SD1.D1_PICM,
			SA2.A2_SIMPNAC
		UNION
			SELECT
			SFT.FT_FILIAL		AS FILIAL, 
			SFT.FT_CLIEFOR		AS FORNECE, 
			SFT.FT_LOJA			AS LOJA, 
			SA2.A2_NOME			AS NOME,
			SFT.FT_ENTRADA		AS DTDIGIT, 
			SFT.FT_EMISSAO		AS EMISSAO, 
			SFT.FT_NFISCAL		AS DOC, 
			SFT.FT_SERIE		AS SERIE,
			SD2.D2_PICM AS ALIQICM,
			-SUM(SFT.FT_QUANT) 	AS QUANT, 
			-SUM(SFT.FT_TOTAL) 	AS TOTAL, 
			-SUM(SD2.D2_BASEICM) 	AS BASEICM, 
			-SUM(SD2.D2_VALICM) 	AS VALICM, 
			-SUM(SFT.FT_ICMSCOM)	AS ICMSCOM
		FROM %TABLE:SFT% SFT (NOLOCK)
		LEFT JOIN %TABLE:SA2% SA2 (NOLOCK) ON
			SA2.%notDel%
		AND SA2.A2_COD = SFT.FT_CLIEFOR
		AND SA2.A2_LOJA = SFT.FT_LOJA
		LEFT JOIN %TABLE:SB1% SB1 (NOLOCK) ON
			SB1.%notDel%
		AND SB1.B1_COD = SFT.FT_PRODUTO
		LEFT JOIN %TABLE:SD2% SD2 (NOLOCK) ON
			SD2.%notDel%
		AND SD2.D2_FILIAL = SFT.FT_FILIAL
		AND SD2.D2_DOC = SFT.FT_NFISCAL
		AND SD2.D2_SERIE = SFT.FT_SERIE
		AND SD2.D2_ITEM = SFT.FT_ITEM
		AND SD2.D2_CLIENTE = SFT.FT_CLIEFOR
		AND SD2.D2_LOJA = SFT.FT_LOJA
		WHERE
			SFT.%notDel%
		AND SFT.FT_FILIAL=%xFilial:SD1%
		AND (SFT.FT_EMISSAO>=%Exp:DToS(_mvpr01)% AND SFT.FT_EMISSAO<=%Exp:DToS(_mvpr02)%) 
		AND SFT.FT_CFOP IN ('6553','6413','6556') 
		AND SFT.FT_DTCANC = ''
			GROUP BY
			SFT.FT_FILIAL, 
			SFT.FT_CLIEFOR, 
			SFT.FT_LOJA, 
			SA2.A2_NOME,
			SFT.FT_ENTRADA, 
			SFT.FT_EMISSAO, 
			SFT.FT_NFISCAL, 
			SFT.FT_SERIE,
			SD2.D2_PICM	,
			SA2.A2_SIMPNAC
			ORDER BY FILIAL, NOME, DTDIGIT, DOC
	EndSQL
			//SUM(SD1.D1_BASEICM) AS BASEICM, 
	DbSelectArea(cAlB07Rs)
	(cAlB07Rs)->(DbGoTop())
	While !(cAlB07Rs)->(eof())
		If((cAlB07Rs)->VALICM >= 0 )
			aAdd(aBrw07Rs,{	(cAlB07Rs)->FILIAL,;
											(cAlB07Rs)->FORNECE,;
											(cAlB07Rs)->LOJA,;
											(cAlB07Rs)->NOME,;
											(cAlB07Rs)->DTDIGIT,;
											(cAlB07Rs)->EMISSAO,;
											(cAlB07Rs)->DOC,;
											(cAlB07Rs)->SERIE,;
											(cAlB07Rs)->QUANT,;
											(cAlB07Rs)->TOTAL,;
											(cAlB07Rs)->BASEICM,;
											(cAlB07Rs)->VALICM,; 
											(cAlB07Rs)->ICMSCOM,;
											(cAlB07Rs)->ALIQICMS})

			nA07T01		+= (cAlB07Rs)->QUANT
			nA07T02		+= (cAlB07Rs)->TOTAL
			nA07T03		+= (cAlB07Rs)->BASEICM
			nA07T04		+= (cAlB07Rs)->VALICM
			nA07T05		+= (cAlB07Rs)->ICMSCOM
				
			nA07T91		+= (cAlB07Rs)->BASEICM * 0.18
			nA07T92		+= (cAlB07Rs)->VALICM
			nA07T93		+= (cAlB07Rs)->ICMSCOM
		Endif
		
		(cAlB07Rs)->(DbSkip())
	EndDo
	(cAlB07Rs)->(dbCloseArea())
	
	//CREDITOS	
	//Ticket 3037                    - Abel Babini - 16/09/2020 - Painel Fiscal Granja RNX2 - Diferencial de alíquota da granja não considerar CFOP 2251 - criado parâmetro para tratar CFOP
	BeginSQL  Alias cAlB07Cr
		SELECT
			SD1.D1_FILIAL	AS FILIAL, 
			SD1.D1_FORNECE	AS FORNECE, 
			SD1.D1_LOJA		AS LOJA, 
			SA2.A2_NOME		AS NOME,
			SD1.D1_DTDIGIT	AS DTDIGIT, 
			SD1.D1_EMISSAO	AS EMISSAO, 
			SD1.D1_DOC		AS DOC, 
			SD1.D1_SERIE	AS SERIE,
			SD1.D1_ITEM		AS ITEM,
			SD1.D1_COD		AS COD,
			SB1.B1_DESC		AS DESCR,
			SD1.D1_CF		AS CFOP, 
			SD1.D1_QUANT	AS QUANT, 
			SD1.D1_TOTAL	AS TOTAL, 
			SD1.D1_BASEICM	AS BASEICM, 
			SD1.D1_VALICM	AS VALICM, 
			SD1.D1_ICMSCOM	AS ICMSCOM,
			SD1.D1_PICM	AS ALIQICMS
		FROM %TABLE:SD1% SD1 (NOLOCK)
		LEFT JOIN %TABLE:SA2% SA2 (NOLOCK) ON
			SA2.%notDel%
		AND SA2.A2_COD = SD1.D1_FORNECE
		AND SA2.A2_LOJA = SD1.D1_LOJA
		LEFT JOIN %TABLE:SB1% SB1 (NOLOCK) ON
			SB1.%notDel%
		AND SB1.B1_COD = SD1.D1_COD
		WHERE
			SD1.%notDel%
		AND SD1.D1_FILIAL=%xFilial:SD1%
		AND (SD1.D1_DTDIGIT>=%Exp:DToS(_mvpr01)% AND SD1.D1_DTDIGIT<=%Exp:DToS(_mvpr02)%) 
		AND SD1.D1_CF IN %Exp:_cCFDFAL%
		AND SD1.D1_COD NOT IN %Exp:_cCPDFAL%
		ORDER BY D1_FILIAL, D1_FORNECE, D1_LOJA, D1_DTDIGIT, D1_DOC, D1_COD, D1_ITEM
	EndSQL

	DbSelectArea(cAlB07Cr)
	(cAlB07Cr)->(DbGoTop())
	While !(cAlB07Cr)->(eof())
		aAdd(aBrw07Cr,{	(cAlB07Cr)->FILIAL,;
										(cAlB07Cr)->FORNECE,;
										(cAlB07Cr)->LOJA,;
										(cAlB07Cr)->NOME,;
										(cAlB07Cr)->DTDIGIT,;
										(cAlB07Cr)->EMISSAO,;
										(cAlB07Cr)->DOC,;
										(cAlB07Cr)->SERIE,;
										(cAlB07Cr)->ITEM,;
										(cAlB07Cr)->COD,;
										(cAlB07Cr)->DESCR,;
										(cAlB07Cr)->CFOP,;
										(cAlB07Cr)->QUANT,;
										(cAlB07Cr)->TOTAL,;
										(cAlB07Cr)->BASEICM,;
										(cAlB07Cr)->VALICM,; 
										(cAlB07Cr)->ICMSCOM,;
										IIF((cAlB07Cr)->BASEICM > 0, ROUND(((cAlB07Cr)->VALICM / (cAlB07Cr)->BASEICM), 2)*100, 0)})

		nA07T11		+= (cAlB07Cr)->QUANT
		nA07T12		+= (cAlB07Cr)->TOTAL
		nA07T13		+= (cAlB07Cr)->BASEICM
		nA07T14		+= (cAlB07Cr)->VALICM
		nA07T15		+= (cAlB07Cr)->ICMSCOM
		(cAlB07Cr)->(DbSkip())
	EndDo
	(cAlB07Cr)->(dbCloseArea())
	
	//DEBITOS
	BeginSQL  Alias cAlB07Db
		SELECT
			SD2.D2_FILIAL 	AS FILIAL, 
			SD2.D2_CLIENTE	AS CLIENTE, 
			SD2.D2_LOJA		AS LOJA, 
			SA2.A2_NOME		AS NOME,
			SD2.D2_DTDIGIT	AS DTDIGIT, 
			SD2.D2_EMISSAO	AS EMISSAO,
			SD2.D2_DOC		AS DOC, 
			SD2.D2_SERIE	AS SERIE,
			SD2.D2_ITEM		AS ITEM,
			SD2.D2_COD		AS COD,
			SB1.B1_DESC		AS DESCR,
			SD2.D2_CF		AS CFOP, 
			SD2.D2_QUANT	AS QUANT, 
			SD2.D2_TOTAL	AS TOTAL, 
			SD2.D2_BASEICM	AS BASEICM, 
			SD2.D2_VALICM	AS VALICM,
			SD2.D2_ICMSCOM	AS ICMSCOM,
			SD2.D2_PICM	AS ALIQICMS,
			SD2.D2_NFORI	AS NFORI,
			SD2.D2_SERIORI	AS SERIORI,
			SD2.D2_ITEMORI	AS ITEMORI
		FROM %TABLE:SD2% SD2 (NOLOCK)
		LEFT JOIN %TABLE:SA2% SA2 (NOLOCK) ON
			SA2.%notDel%
		AND SA2.A2_COD = SD2.D2_CLIENTE
		AND SA2.A2_LOJA = SD2.D2_LOJA
		LEFT JOIN %TABLE:SB1% SB1 (NOLOCK) ON
			SB1.%notDel%
		AND SB1.B1_COD = SD2.D2_COD
		WHERE
			SD2.%notDel%
		AND SD2.D2_FILIAL=%xFilial:SD2%
		AND (SD2.D2_EMISSAO>=%Exp:DToS(_mvpr01)% AND SD2.D2_EMISSAO<=%Exp:DToS(_mvpr02)%) 
		AND SD2.D2_CF IN ('6553','6413','6556') 
		ORDER BY D2_FILIAL, D2_CLIENTE, D2_LOJA, D2_EMISSAO, D2_DOC, D2_COD, D2_ITEM
	EndSQL

	DbSelectArea(cAlB07Db)
	(cAlB07Db)->(DbGoTop())
	While !(cAlB07Db)->(eof())
		aAdd(aBrw07Db,{	(cAlB07Db)->FILIAL,;
										(cAlB07Db)->CLIENTE,; 
										(cAlB07Db)->LOJA,;
										(cAlB07Db)->NOME,;
										(cAlB07Db)->DTDIGIT,;
										(cAlB07Db)->EMISSAO,;
										(cAlB07Db)->DOC,;
										(cAlB07Db)->SERIE,;
										(cAlB07Db)->ITEM,;
										(cAlB07Db)->COD,;
										(cAlB07Db)->DESCR,;
										(cAlB07Db)->CFOP,;
										(cAlB07Db)->QUANT,;
										(cAlB07Db)->TOTAL,;
										IIF((cAlB07Db)->BASEICM > 0,(cAlB07Db)->BASEICM,(cAlB07Db)->TOTAL),; 
										IIF((cAlB07Db)->BASEICM > 0,(cAlB07Db)->VALICM,(cAlB07Db)->TOTAL * (cAlB07Db)->ALIQICMS),;
										Round((IIF((cAlB07Db)->BASEICM > 0,(cAlB07Db)->BASEICM,(cAlB07Db)->TOTAL)*0.18)-IIF((cAlB07Db)->BASEICM > 0,(cAlB07Db)->VALICM,(cAlB07Db)->TOTAL * (cAlB07Db)->ALIQICMS),2),;
										IIF((cAlB07Db)->BASEICM > 0,ROUND((cAlB07Db)->VALICM/(cAlB07Db)->BASEICM,2),0)*100,;
										(cAlB07Db)->NFORI,;
										(cAlB07Db)->SERIORI,;
										(cAlB07Db)->ITEMORI})
		nA07T21		+= (cAlB07Db)->QUANT
		nA07T22		+= (cAlB07Db)->TOTAL
		nA07T23		+= IIF((cAlB07Db)->BASEICM > 0,(cAlB07Db)->BASEICM,(cAlB07Db)->TOTAL)
		nA07T24		+= IIF((cAlB07Db)->BASEICM > 0,(cAlB07Db)->VALICM,(cAlB07Db)->TOTAL * (cAlB07Db)->ALIQICMS)
		nA07T25		+= Round((IIF((cAlB07Db)->BASEICM > 0,(cAlB07Db)->BASEICM,(cAlB07Db)->TOTAL)*0.18)-IIF((cAlB07Db)->BASEICM > 0,(cAlB07Db)->VALICM,(cAlB07Db)->TOTAL * (cAlB07Db)->ALIQICMS),2)
		(cAlB07Db)->(DbSkip())
	EndDo
	(cAlB07Db)->(dbCloseArea())

	SysRefresh()
Return

/*/{Protheus.doc} Static Function xRelBr07 
	Gera Relatório Ref. Diferencial de Aliquota   
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function xRelBr07()
	Local aSays			:= {}
	Local aButtons		:= {}
	Local nOpca			:= 0
	//+-----------------------------------------------+
	//|Monta Form Batch - Interface com o Usuario     |
	//+-----------------------------------------------+
	AADD(aSays,"Este programa tem a finalidade de Gerar um arquivo Excel " )
	AADD(aSays,"Relatorio de Diferencial de Aliquota" )
    
	AADD(aButtons, { 1,.T.,{|o| nOpca:=1, o:oWnd:End(), Processa({||xRelBr07b()},"Gerando arquivo","Aguarde...")    }})
	AADD(aButtons, { 2,.T.,{|o| nOpca:=2, o:oWnd:End() }})	
	FormBatch( cCadastr, aSays, aButtons )

	MsgInfo("Arquivo Excel gerado!")        
	
Return

/*/{Protheus.doc} Static Function xRelBr07b 
	Gera Relatório Ref. Diferencial de Aliquota   
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function xRelBr07b()
	Private oExcel     := FWMSEXCELEX():New()
	//Private cArquivo	:= cGetFile("Arquivo XML", "Selecione o diretório para salvar o relatório",,'C:\',.T.,GETF_RETDIRECTORY + GETF_LOCALHARD + GETF_NETWORKDRIVE)	
	Private oMsExcel   := NIL
	
	cArquivo := cPathRel +  'RDIFAL_' + DTOS(DATE()) + STRTRAN(TIME(),':','') + '.XML'

	BEGIN SEQUENCE
		
		//IF .NOT.( ApOleClient("MsExcel") )   // se nao existir o excel sai fora..
		//    Alert("Nao Existe Excel Instalado")
    //        BREAK
		//EndIF
        	
		Cab07P1()             
		GEx07P1()

		Cab07P2()             
		GEx07P2()

		Cab07P3()             
		GEx07P3()

		SalvaXml()
		CriaExcel()
	
	END SEQUENCE

Return

/*/{Protheus.doc} Static Function Cab07P1 
	Gera Relatório Ref. Diferencial de Aliquota   
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function Cab07P1()
	oExcel:AddworkSheet(cFld07)
	oExcel:AddTable(cFld07,cFld07t1)
	oExcel:AddColumn(cFld07,cFld07t1,"Filial"  		,1,1) // 01 A
	oExcel:AddColumn(cFld07,cFld07t1,"Cod.Forn" 	,1,1) // 02 B
	oExcel:AddColumn(cFld07,cFld07t1,"Loja Forn"	,1,1) // 03 C
	oExcel:AddColumn(cFld07,cFld07t1,"Fornecedor" 	,1,1) // 04 D
	oExcel:AddColumn(cFld07,cFld07t1,"Dt. Entrada"	,1,1) // 05 E
	oExcel:AddColumn(cFld07,cFld07t1,"Dt. Emissão"	,1,1) // 05 E
	oExcel:AddColumn(cFld07,cFld07t1,"Nota Fiscal"	,1,1) // 05 E
	oExcel:AddColumn(cFld07,cFld07t1,"Serie"		,1,1) // 05 E
	oExcel:AddColumn(cFld07,cFld07t1,"Quantidade"	,2,2) // 05 E
	oExcel:AddColumn(cFld07,cFld07t1,"Vl. Total"	,2,3) // 05 E
	oExcel:AddColumn(cFld07,cFld07t1,"Base ICMS"	,2,3) // 05 E
	oExcel:AddColumn(cFld07,cFld07t1,"Vl. ICMS"		,2,3) // 05 E
	oExcel:AddColumn(cFld07,cFld07t1,"Vl. ICMS COM"	,2,3) // 05 E
	oExcel:AddColumn(cFld07,cFld07t1,"Aliq. ICMS"	,2,2) // 05 E
RETURN(NIL) 

/*/{Protheus.doc} Static Function Cab07P2 
	Gera Relatório Ref. Diferencial de Aliquota   
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function Cab07P2()
	oExcel:AddworkSheet(cFld072)
	oExcel:AddTable(cFld072,cFld07t2)
	oExcel:AddColumn(cFld072,cFld07t2,"Filial"  	,1,1) // 01 A
	oExcel:AddColumn(cFld072,cFld07t2,"Cod.Forn" 	,1,1) // 02 B
	oExcel:AddColumn(cFld072,cFld07t2,"Loja Forn"	,1,1) // 03 C
	oExcel:AddColumn(cFld072,cFld07t2,"Fornecedor" 	,1,1) // 04 D
	oExcel:AddColumn(cFld072,cFld07t2,"Dt. Entrada"	,1,1) // 05 E
	oExcel:AddColumn(cFld072,cFld07t2,"Dt. Emissão"	,1,1) // 05 E
	oExcel:AddColumn(cFld072,cFld07t2,"Nota Fiscal"	,1,1) // 05 E
	oExcel:AddColumn(cFld072,cFld07t2,"Serie"		,1,1) // 05 E
	oExcel:AddColumn(cFld072,cFld07t2,"Item"		,1,1) // 05 E
	oExcel:AddColumn(cFld072,cFld07t2,"Cod.Prod."	,1,1) // 05 E
	oExcel:AddColumn(cFld072,cFld07t2,"Produto"		,1,1) // 05 E
	oExcel:AddColumn(cFld072,cFld07t2,"CFOP"		,1,1) // 05 E
	oExcel:AddColumn(cFld072,cFld07t2,"Quantidade"	,2,2) // 05 E
	oExcel:AddColumn(cFld072,cFld07t2,"Vl. Total"	,2,3) // 05 E
	oExcel:AddColumn(cFld072,cFld07t2,"Base ICMS"	,2,3) // 05 E
	oExcel:AddColumn(cFld072,cFld07t2,"Vl. ICMS"	,2,3) // 05 E
	oExcel:AddColumn(cFld072,cFld07t2,"Vl. ICMS COM",2,3) // 05 E
	oExcel:AddColumn(cFld072,cFld07t2,"Aliq.ICMS"	,2,2) // 05 E
RETURN(NIL) 

/*/{Protheus.doc} Static Function Cab07P3 
	Gera Relatório Ref. Diferencial de Aliquota   
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function Cab07P3()
	oExcel:AddworkSheet(cFld073)
	oExcel:AddTable(cFld073,cFld07t3)
	oExcel:AddColumn(cFld073,cFld07t3,"Filial"  	,1,1) // 01 A
	oExcel:AddColumn(cFld073,cFld07t3,"Cod.Forn" 	,1,1) // 02 B
	oExcel:AddColumn(cFld073,cFld07t3,"Loja Forn"	,1,1) // 03 C
	oExcel:AddColumn(cFld073,cFld07t3,"Fornecedor" 	,1,1) // 04 D
	oExcel:AddColumn(cFld073,cFld07t3,"Dt. Entrada"	,1,1) // 05 E
	oExcel:AddColumn(cFld073,cFld07t3,"Dt. Emissão"	,1,1) // 05 E
	oExcel:AddColumn(cFld073,cFld07t3,"Nota Fiscal"	,1,1) // 05 E
	oExcel:AddColumn(cFld073,cFld07t3,"Serie"		,1,1) // 05 E
	oExcel:AddColumn(cFld073,cFld07t3,"Item"		,1,1) // 05 E
	oExcel:AddColumn(cFld073,cFld07t3,"Cod.Prod."	,1,1) // 05 E
	oExcel:AddColumn(cFld073,cFld07t3,"Produto"		,1,1) // 05 E
	oExcel:AddColumn(cFld073,cFld07t3,"CFOP"		,1,1) // 05 E
	oExcel:AddColumn(cFld073,cFld07t3,"Quantidade"	,2,2) // 05 E
	oExcel:AddColumn(cFld073,cFld07t3,"Vl. Total"	,2,3) // 05 E
	oExcel:AddColumn(cFld073,cFld07t3,"Base ICMS"	,2,3) // 05 E
	oExcel:AddColumn(cFld073,cFld07t3,"Vl. ICMS"	,2,3) // 05 E
	oExcel:AddColumn(cFld073,cFld07t3,"Vl. ICMS COM",2,3) // 05 E
	oExcel:AddColumn(cFld073,cFld07t3,"Aliq.ICMS"	,2,2) // 05 E
	oExcel:AddColumn(cFld073,cFld07t3,"NF Orig"		,1,1) // 05 E
	oExcel:AddColumn(cFld073,cFld07t3,"Serie Orig"	,1,1) // 05 E
	oExcel:AddColumn(cFld073,cFld07t3,"Item Orig"	,1,1) // 05 E
RETURN(NIL) 

/*/{Protheus.doc} Static Function GEx07P1 
	Gera Relatório Ref. Diferencial de Aliquota   
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function GEx07P1()
	Local _nTtQtd	:= 0
	Local _nTtVlCr	:= 0
	Local nExcel1
	FOR nExcel1 := 1 TO Len(aBrw07Rs)
		oExcel:AddRow(cFld07,cFld07t1,;
					{aBrw07Rs[nExcel1][01],;
					aBrw07Rs[nExcel1][02],;
					aBrw07Rs[nExcel1][03],;
					aBrw07Rs[nExcel1][04],;
					aBrw07Rs[nExcel1][05],;
					aBrw07Rs[nExcel1][06],;
					aBrw07Rs[nExcel1][07],;
					aBrw07Rs[nExcel1][08],;
					aBrw07Rs[nExcel1][09],;
					aBrw07Rs[nExcel1][10],;
					aBrw07Rs[nExcel1][11],;
					aBrw07Rs[nExcel1][12],;
					aBrw07Rs[nExcel1][13],;
					aBrw07Rs[nExcel1][14];
					})					
	NEXT nExcel1
	//Linha em Branco
	oExcel:AddRow(cFld07,cFld07t1,;
			   {"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				""; 
				})
	//TOTAL
	oExcel:AddRow(cFld07,cFld07t1,;
			   {"",;
				"TOTAL",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				nA07T01,;
				nA07T02,;
				nA07T03,;
				nA07T04,;
				nA07T05,;
				"";
				})

	//Linha em Branco
	oExcel:AddRow(cFld07,cFld07t1,;
			   {"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				""; 
				})
	//Linha em Branco
	oExcel:AddRow(cFld07,cFld07t1,;
			   {"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				""; 
				})
	//Calculos
	oExcel:AddRow(cFld07,cFld07t1,{"","","","Débito ICMS - 18%","","","","",nA07T91,"","","","",""})
	oExcel:AddRow(cFld07,cFld07t1,{"","","","Crédito ICMS - 12% E 4%","","","","",nA07T92,"","","","",""})
	oExcel:AddRow(cFld07,cFld07t1,{"","","","Valor do Diferencial","","","","",nA07T93,"","","","",""})	
	
Return

/*/{Protheus.doc} Static Function GEx07P2 
	Gera Relatório Ref. Diferencial de Aliquota   
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function GEx07P2()
	Local _nTtQtd	:= 0
	Local _nTtVlCr	:= 0
	Local nExcel1
	FOR nExcel1 := 1 TO Len(aBrw07Cr)
		oExcel:AddRow(cFld072,cFld07t2,;
				   {aBrw07Cr[nExcel1][01],;
					aBrw07Cr[nExcel1][02],;
					aBrw07Cr[nExcel1][03],;
					aBrw07Cr[nExcel1][04],;
					aBrw07Cr[nExcel1][05],;
					aBrw07Cr[nExcel1][06],;
					aBrw07Cr[nExcel1][07],;
					aBrw07Cr[nExcel1][08],;
					aBrw07Cr[nExcel1][09],;
					aBrw07Cr[nExcel1][10],;
					aBrw07Cr[nExcel1][11],;
					aBrw07Cr[nExcel1][12],;
					aBrw07Cr[nExcel1][13],;
					aBrw07Cr[nExcel1][14],;
					aBrw07Cr[nExcel1][15],;
					aBrw07Cr[nExcel1][16],;
					aBrw07Cr[nExcel1][17],;
					aBrw07Cr[nExcel1][18];
					})					
	NEXT nExcel1
	//Linha em Branco
	oExcel:AddRow(cFld072,cFld07t2,;
			   {"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				""; 
				})
	//TOTAL
	oExcel:AddRow(cFld072,cFld07t2,;
			   {"",;
				"TOTAL",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				nA07T11,;
				nA07T12,;
				nA07T13,;
				nA07T14,;
				nA07T15,;
				"";
				})
Return

/*/{Protheus.doc} Static Function GEx07P3 
	Gera Relatório Ref. Diferencial de Aliquota   
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function GEx07P3()
	Local _nTtQtd	:= 0
	Local _nTtVlCr	:= 0
	Local nExcel1
	FOR nExcel1 := 1 TO Len(aBrw07Db)
		oExcel:AddRow(cFld073,cFld07t3,;
				   {aBrw07Db[nExcel1][01],;
					aBrw07Db[nExcel1][02],;
					aBrw07Db[nExcel1][03],;
					aBrw07Db[nExcel1][04],;
					aBrw07Db[nExcel1][05],;
					aBrw07Db[nExcel1][06],;
					aBrw07Db[nExcel1][07],;
					aBrw07Db[nExcel1][08],;
					aBrw07Db[nExcel1][09],;
					aBrw07Db[nExcel1][10],;
					aBrw07Db[nExcel1][11],;
					aBrw07Db[nExcel1][12],;
					aBrw07Db[nExcel1][13],;
					aBrw07Db[nExcel1][14],;
					aBrw07Db[nExcel1][15],;
					aBrw07Db[nExcel1][16],;
					aBrw07Db[nExcel1][17],;
					aBrw07Db[nExcel1][18],;
					aBrw07Db[nExcel1][19],;
					aBrw07Db[nExcel1][20],;
					aBrw07Db[nExcel1][21];
					})					
	NEXT nExcel1
	//Linha em Branco
	oExcel:AddRow(cFld073,cFld07t3,;
			   {"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				""; 
				})
	//TOTAL
	oExcel:AddRow(cFld073,cFld07t3,;
			   {"",;
				"TOTAL",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				"",;
				nA07T21,;
				nA07T22,;
				nA07T23,;
				nA07T24,;
				nA07T25,;
				"",;
				"",;
				"",;
				"";
				})
Return
// FIM n.040924  - Relatorio Dif. de Alíquota - Abel Babini - 07/05/2019

// INICIO n.040923  - Relatorio Crédito Outorgadoa - Abel Babini - 20/08/2019
/*/{Protheus.doc} Static Function xABrw08  
	Carrega da dados Ref. Credito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function xABrw08()
	Local nPCFO := 0
	Local nPNCM 
	Local _PNCM
	Local _PCFO
	Local _iAux
	Local _i
	
	If Select(cAlB08Rs) > 0
		(cAlB08Rs)->(dbCloseArea())
	Endif
	cAlB08Rs:=GetNextAlias()

	aBrw08Rs	:= {}
	aBrw08Nc	:= {}
	aBrw08Cf	:= {}
	aBrw08p1	:= {}
	aBrw08p2	:= {}
	aBrw08p3	:= {}
	aBrw08dm	:= {}
	aBrw08Rl	:= {}
	aBrw08Rk	:= {}
	aBrw08x1	:= {}
	aBrw08x2	:= {}
	aBrw08x3	:= {}
	aBrw08x4	:= {}
	aBrw08x5	:= {}
	aBrw08x6	:= {}
	aBrw08x7	:= {}
	aBrw08x8	:= {}
	nA08T01		:= 0
	nA08T11		:= 0
	nA08T12		:= 0
	nA08T13		:= 0
	nA08T14		:= 0
	nA08T15		:= 0
	nA08T16		:= 0
	nA08T17		:= 0
	//RESUMO
	BeginSQL  Alias cAlB08Rs
		column ENTRADA as Date
		column EMISSAO as Date
		column DTEMBARQUE as Date

		SELECT
			SFT.FT_FILIAL	AS FILIAL, 
			SFT.FT_CFOP		AS CFOP, 
			SFT.FT_POSIPI	AS NCM, 
			SFT.FT_ENTRADA	AS ENTRADA, 
			SFT.FT_EMISSAO	AS EMISSAO,
			SFT.FT_NFISCAL	AS NFISCAL, 
			SFT.FT_SERIE	AS SERIE, 
			SFT.FT_CLIEFOR	AS CLIEFOR,
			SFT.FT_LOJA		AS LOJA,
			CASE WHEN (SFT.FT_TIPO IN ('D','B') AND SFT.FT_CFOP > '5000' ) OR (SFT.FT_TIPO NOT IN ('D','B') AND SFT.FT_CFOP < '5000' ) THEN SA2.A2_NOME	ELSE SA1.A1_NOME  	END AS NOME,
			CASE WHEN (SFT.FT_TIPO IN ('D','B') AND SFT.FT_CFOP > '5000' ) OR (SFT.FT_TIPO NOT IN ('D','B') AND SFT.FT_CFOP < '5000' ) THEN SA2.A2_CGC 	ELSE SA1.A1_CGC 	END AS CNPJ,
			CASE WHEN (SFT.FT_TIPO IN ('D','B') AND SFT.FT_CFOP > '5000' ) OR (SFT.FT_TIPO NOT IN ('D','B') AND SFT.FT_CFOP < '5000' ) THEN SA2.A2_INSCR	ELSE SA1.A1_INSCR	END AS IEST,
			SFT.FT_ESTADO	AS ESTADO, 
			SFT.FT_VALCONT	AS VALCONT, 
			SFT.FT_VALICM	AS VALICM,
			SFT.FT_VALIPI	AS VALIPI, 
			SFT.FT_ICMSRET	AS ICMSRET, 
			SFT.FT_OBSERV	AS OBSERV, 
			SFT.FT_DTCANC	AS DTCANC, 
			SFT.FT_CONTA	AS CONTACTB, 
			SFT.FT_PRODUTO	AS CODPROD, 
			SB1.B1_DESC		AS PRODUTO,
			SFT.FT_QUANT	AS QUANT, 
			SFT.FT_TOTAL	AS VLTOTAL, 
			SFT.FT_ESPECIE	AS ESPECIE,
			SYA.YA_DESCR	AS PAIS,
			EEC.EEC_DTEMBA	AS DTEMBARQUE,
			EEC.EEC_NRODUE	AS NRODUE, 
			EEC.EEC_NRCONH	AS NROCONHEC,
			FT_BASEICM		AS BASEICMS,
			FT_OUTRICM		AS OUTROSICMS,
			FT_ISENICM		AS ISENTOICMS,
			SFT.FT_TIPO		AS TIPO,
			SFT.FT_TIPOMOV	AS TIPOMOV
		FROM %TABLE:SFT% SFT (NOLOCK)
		LEFT JOIN %TABLE:SB1% SB1 (NOLOCK) ON
			SB1.B1_FILIAL = %xFilial:SB1%
		AND SB1.B1_COD = SFT.FT_PRODUTO
		AND SB1.%notDel%
		LEFT JOIN %TABLE:SA2% SA2 (NOLOCK) ON
			SA2.A2_FILIAL = %xFilial:SA2%
		AND SA2.A2_COD = SFT.FT_CLIEFOR
		AND SA2.A2_LOJA = SFT.FT_LOJA
		AND ((SFT.FT_TIPO IN ('D','B') AND SFT.FT_CFOP > '5000') OR (SFT.FT_TIPO NOT IN ('D','B') AND SFT.FT_CFOP < '5000'))
		AND SA2.%notDel%
		LEFT JOIN %TABLE:SA1% SA1 (NOLOCK) ON
			SA1.A1_FILIAL = %xFilial:SA1%
		AND SA1.A1_COD = SFT.FT_CLIEFOR
		AND SA1.A1_LOJA = SFT.FT_LOJA
		AND ((SFT.FT_TIPO IN ('D','B') AND SFT.FT_CFOP < '5000') OR (SFT.FT_TIPO NOT IN ('D','B') AND SFT.FT_CFOP > '5000'))
		AND SA1.%notDel%
		LEFT JOIN %TABLE:EE9% EE9 (NOLOCK) ON
			EE9.EE9_FILIAL=%xFilial:EE9%
		AND EE9.EE9_NF = SFT.FT_NFISCAL
		AND EE9.EE9_SERIE = SFT.FT_SERIE
		AND EE9.EE9_COD_I = SFT.FT_PRODUTO
		AND EE9.%notDel%
		LEFT JOIN %TABLE:EEC% EEC (NOLOCK) ON
			EEC.EEC_FILIAL=%xFilial:EEC%
		AND EEC.EEC_PREEMB = EE9.EE9_PEDIDO
		AND EEC.%notDel%
		LEFT JOIN %TABLE:EE7% EE7 (NOLOCK) ON
			EE7.EE7_FILIAL=%xFilial:EE7%
		AND EE7.EE7_PEDIDO = EE9.EE9_PEDIDO
		AND EE7.%notDel%
		LEFT JOIN %TABLE:SY9% SY9 (NOLOCK) ON
			SY9.Y9_FILIAL=%xFilial:SY9%
		AND SY9.Y9_COD = EE7.EE7_DEST 
		AND SY9.%notDel%
		LEFT JOIN %TABLE:SYA% SYA (NOLOCK) ON
			SYA.YA_FILIAL=%xFilial:SYA%
		AND SYA.YA_CODGI = SY9.Y9_PAIS
		AND SYA.%notDel%
		WHERE
			SFT.%notDel%
		AND SFT.FT_FILIAL=%xFilial:SFT%
		AND (SFT.FT_ENTRADA>=%Exp:DToS(_mvpr01)% AND SFT.FT_ENTRADA<=%Exp:DToS(_mvpr02)%)
		AND SFT.FT_ENTRADA < %Exp:_cMVCON1%
		AND SFT.FT_DTCANC=''
		AND SFT.FT_CFOP IN %Exp:_cCFCrOu%
		ORDER BY SFT.FT_FILIAL, SFT.FT_POSIPI, SFT.FT_CFOP, SFT.FT_CLIEFOR, SFT.FT_LOJA, SFT.FT_ENTRADA, SFT.FT_NFISCAL, SFT.FT_SERIE

	EndSQL
	
	//Monta Arrays Auxiliares
	DbSelectArea(cAlB08Rs)
	(cAlB08Rs)->(DbGoTop())
	While !(cAlB08Rs)->(eof())
		lNCM := .F.
		For _PNCM = 1 to Len(aBrw08Nc)
			If Alltrim((cAlB08Rs)->NCM) == Alltrim(aBrw08Nc[_PNCM])
				lNCM := .T.
				Exit
			Endif
		Next _PNCM
		If !lNCM
			AADD(aBrw08Nc,Alltrim((cAlB08Rs)->NCM))
			nQNCM += 1
		Endif
		
		lCFO := .F.
		For _PCFO = 1 to Len(aBrw08Cf)
			If Alltrim((cAlB08Rs)->CFOP) == Alltrim(aBrw08Cf[_PCFO])
				lCFO := .T.
				Exit
			Endif
		Next _PCFO
		If !lCFO
			AADD(aBrw08Cf,Alltrim((cAlB08Rs)->CFOP))
			nQCFO += 1
		Endif
		
		(cAlB08Rs)->(DbSkip())
	EndDo

	ASORT(aBrw08Cf)
	ASORT(aBrw08Nc)
	
	//Monta Arrays para Browser
	aBrw08Rs := Array(nQCFO,nQNCM+3) // Cria o Array do tamanho necessário (Linha x Coluna), acrescentando 2 colunas para filial e o próprio CFOP, e mais uma para o total por CFOP
	
	//Inicializa Array
	For nPCFO := 1 to nQCFO
		//Filial e CFOP inicializa com espaço
		For _iAux = 1 to 2
			aBrw08Rs[nPCFO,_iAux]:= ""
		Next _iAux
		//Campos de Valor Contábil inicializa com zero
		For nPNCM = 3 to nQNCM+3
			aBrw08Rs[nPCFO,nPNCM]:= 0
		Next nPNCM
	Next nPCFO

	//Inicializa Arrays dos Resumos 5%Estadual, 7%Estadual, 7%Interestadual
	xAB08IVr()
		
	//Preenche os Arrays do Browse e do detalhamento para relatório.
	(cAlB08Rs)->(DbGoTop())	
	While !(cAlB08Rs)->(eof())
	
		nPCFO := ASCAN(aBrw08Cf,Alltrim((cAlB08Rs)->CFOP))
		nPNCM := ASCAN(aBrw08Nc,Alltrim((cAlB08Rs)->NCM))
		If nPCFO == 0 .OR. nPNCM == 0
			Alert('Erro!')
		Else
			aBrw08Rs[nPCFO,1]		:= (cAlB08Rs)->FILIAL
			aBrw08Rs[nPCFO,2]		:= (cAlB08Rs)->CFOP
			aBrw08Rs[nPCFO,nPNCM+2]	+= (cAlB08Rs)->VALCONT
			aBrw08Rs[nPCFO,nQNCM+3]	+= Round((cAlB08Rs)->VALCONT,2)
		Endif

		AADD(aBrw08Rl,{;
			(cAlB08Rs)->FILIAL+(cAlB08Rs)->TIPOMOV+(cAlB08Rs)->SERIE+(cAlB08Rs)->NFISCAL+(cAlB08Rs)->CLIEFOR+(cAlB08Rs)->LOJA+Alltrim((cAlB08Rs)->CFOP),;
			(cAlB08Rs)->FILIAL,;		//02
			(cAlB08Rs)->ENTRADA,; 		//03
			(cAlB08Rs)->EMISSAO,;		//04
			(cAlB08Rs)->NFISCAL,;		//05
			(cAlB08Rs)->SERIE,;			//06
			(cAlB08Rs)->ESTADO,;		//07
			(cAlB08Rs)->NOME,;			//08
			(cAlB08Rs)->CNPJ,;			//09
			(cAlB08Rs)->IEST,;			//10
			Alltrim((cAlB08Rs)->CFOP),;	//11
			(cAlB08Rs)->VALCONT,;		//12
			(cAlB08Rs)->BASEICMS,;		//13
			(cAlB08Rs)->VALICM,;		//14
			(cAlB08Rs)->ISENTOICMS,;	//15
			(cAlB08Rs)->OUTROSICMS,;	//16
			(cAlB08Rs)->VALIPI,;		//17
			(cAlB08Rs)->PAIS,;			//18
			(cAlB08Rs)->NRODUE,;		//19
			(cAlB08Rs)->DTEMBARQUE,;	//20
			(cAlB08Rs)->NROCONHEC,;		//21
			(cAlB08Rs)->ESPECIE,;		//22
			(cAlB08Rs)->VLTOTAL,;		//23
			(cAlB08Rs)->TIPOMOV,;		//24
			Alltrim((cAlB08Rs)->NCM);	//25
			})
		nA08T01 += (cAlB08Rs)->VALCONT
		(cAlB08Rs)->(DbSkip())
	EndDo
	(cAlB08Rs)->(dbCloseArea())

	///////////////////////////////////////////////////////////////
	//PREPARA ARRAYS DE RELATÓRIOS DETALHADOS
	///////////////////////////////////////////////////////////////
	ASORT(aBrw08Rl,1,Len(aBrw08Rl))
	cXvAux	:= ""
	nLenX1	:= 0
	nLenX2	:= 0
	nLenX3	:= 0
	nLenX4	:= 0
	nLenX5	:= 0
	nLenX6	:= 0
	nLenX7	:= 0
	nLenX8	:= 0

	//////////////////////////////////////////////
	//Novo formato de preenchimento dos Arrays  //
	//////////////////////////////////////////////
	For _i := 1 to Len(aBrw08Rl)
		nPNCM := ASCAN(aBrw08Nc,Alltrim(aBrw08Rl[_i,25]))

		//////////////////////////////////
		//CREDITO OUTORGADO 5% ESTADUAL //
		//////////////////////////////////
		If Alltrim(aBrw08Rl[_i,11]) == '5101'
			aBrw08p2[01,3] += aBrw08Rl[_i,12]
			If ! (Alltrim(aBrw08Rl[_i,25])$_cEmbuti .OR. Alltrim(aBrw08Rl[_i,25])$_cMVGrax .OR. Alltrim(aBrw08Rl[_i,25])$_cMVNCom)
				aBrw08p2[06,3] += aBrw08Rl[_i,12]
				aBrw08dm[01,3] += aBrw08Rl[_i,12]
				xCredOut(1,_i)
				xCredOut(3,_i)
			ElseIf Alltrim(aBrw08Rl[_i,25])$_cEmbuti
				aBrw08p2[02,3] += aBrw08Rl[_i,12]
			ElseIf Alltrim(aBrw08Rl[_i,25])$_cMVNCom
				aBrw08p2[03,3] += aBrw08Rl[_i,12]
			ElseIf Alltrim(aBrw08Rl[_i,25])$_cMVGrax
				aBrw08p2[04,3] += aBrw08Rl[_i,12]
			Endif
		Endif
		
		If Alltrim(aBrw08Rl[_i,11]) == '5105'
			xCredOut(1,_i)
			aBrw08p2[08,3] += aBrw08Rl[_i,12]
			aBrw08dm[02,3] += aBrw08Rl[_i,12]
		Endif
		
		If Alltrim(aBrw08Rl[_i,11]) == '5118' .OR. Alltrim(aBrw08Rl[_i,11]) == '5122'
			aBrw08p2[09,3] += aBrw08Rl[_i,12]
			If ! (Alltrim(aBrw08Rl[_i,25])$_cEmbuti .OR. Alltrim(aBrw08Rl[_i,25])$_cMVGrax .OR. Alltrim(aBrw08Rl[_i,25])$_cMVNCom)
				aBrw08p2[11,3] += aBrw08Rl[_i,12]
				aBrw08dm[3,3] += aBrw08Rl[_i,12]
				xCredOut(1,_i)
				xCredOut(3,_i)
			Else
				aBrw08p2[10,3] += aBrw08Rl[_i,12]
			Endif
		Endif
		//Chamado n.058111 - OS n.059575 - Abel Babini - 07/05/2020 - Considerar também o CFOP 7105 no Rel. Cred. Outorgado
		If Alltrim(aBrw08Rl[_i,11]) == '7101' .or. Alltrim(aBrw08Rl[_i,11]) == '7105'
			aBrw08p2[13,3] += aBrw08Rl[_i,12]
			If ! (Alltrim(aBrw08Rl[_i,25])$_cEmbuti .OR. Alltrim(aBrw08Rl[_i,25])$_cMVGrax .OR. Alltrim(aBrw08Rl[_i,25])$_cMVNCom)
				aBrw08p2[16,3] += aBrw08Rl[_i,12]
				aBrw08dm[04,3] += aBrw08Rl[_i,12]
				xCredOut(1,_i)
			Else
				aBrw08p2[14,3] += aBrw08Rl[_i,12]
			Endif
		Endif

		//Devoluções
		If Alltrim(aBrw08Rl[_i,11]) == '1201'
			aBrw08p2[20,3] += aBrw08Rl[_i,12]
			If ! (Alltrim(aBrw08Rl[_i,25])$_cEmbuti .OR. Alltrim(aBrw08Rl[_i,25])$_cMVGrax .OR. Alltrim(aBrw08Rl[_i,25])$_cMVNCom)
				aBrw08p2[24,3] += aBrw08Rl[_i,12]
				aBrw08dm[08,3] += aBrw08Rl[_i,12]
				xCredOut(1,_i)
				xCredOut(3,_i)
			Elseif Alltrim(aBrw08Rl[_i,25])$_cMVGrax .OR. Alltrim(aBrw08Rl[_i,25])$_cMVNCom
				aBrw08p2[21,3] += aBrw08Rl[_i,12]
			Elseif Alltrim(aBrw08Rl[_i,25])$_cEmbuti
				aBrw08p2[22,3] += aBrw08Rl[_i,12]
			Endif
		Endif
		If Alltrim(aBrw08Rl[_i,11]) == '3201'
			aBrw08p2[26,3] += aBrw08Rl[_i,12]
			If ! (Alltrim(aBrw08Rl[_i,25])$_cEmbuti .OR. Alltrim(aBrw08Rl[_i,25])$_cMVGrax .OR. Alltrim(aBrw08Rl[_i,25])$_cMVNCom)
				aBrw08p2[29,3] += aBrw08Rl[_i,12]
				aBrw08dm[09,3] += aBrw08Rl[_i,12]
				xCredOut(1,_i)
			Else
				aBrw08p2[27,3] += aBrw08Rl[_i,12]
			Endif
		Endif
		If Alltrim(aBrw08Rl[_i,11]) == '1151'
			aBrw08p2[35,3] += aBrw08Rl[_i,12]
			aBrw08dm[15,3] += aBrw08Rl[_i,12]
			xCredOut(1,_i)
		Endif
		//TRANSFERENCIAS
		If Alltrim(aBrw08Rl[_i,11]) == '5151'
			aBrw08p2[40,3] += aBrw08Rl[_i,12]
			If ! (Alltrim(aBrw08Rl[_i,25])$_cEmbuti .OR. Alltrim(aBrw08Rl[_i,25])$_cMVGrax .OR. Alltrim(aBrw08Rl[_i,25])$_cMVNCom)
				aBrw08p2[45,3] += aBrw08Rl[_i,12]
			ElseIf Alltrim(aBrw08Rl[_i,25])$_cEmbuti
				aBrw08p2[42,3] += aBrw08Rl[_i,12]
			ElseIf Alltrim(aBrw08Rl[_i,25])$_cMVNCom
				aBrw08p2[43,3] += aBrw08Rl[_i,12]
			ElseIf Alltrim(aBrw08Rl[_i,25])$_cMVGrax
				aBrw08p2[41,3] += aBrw08Rl[_i,12]
			Endif
		Endif

		If Alltrim(aBrw08Rl[_i,11]) == '1152'
			aBrw08p2[49,3] += aBrw08Rl[_i,12]
			If ! (Alltrim(aBrw08Rl[_i,25])$_cEmbuti .OR. Alltrim(aBrw08Rl[_i,25])$_cMVGrax .OR. Alltrim(aBrw08Rl[_i,25])$_cMVNCom)
				aBrw08p2[54,3] += aBrw08Rl[_i,12]
			ElseIf Alltrim(aBrw08Rl[_i,25])$_cEmbuti
				aBrw08p2[51,3] += aBrw08Rl[_i,12]
			ElseIf Alltrim(aBrw08Rl[_i,25])$_cMVNCom
				aBrw08p2[50,3] += aBrw08Rl[_i,12]
			ElseIf Alltrim(aBrw08Rl[_i,25])$_cMVGrax
				aBrw08p2[52,3] += aBrw08Rl[_i,12]
			Endif
		Endif

		///////////////////////////////////////
		//CREDITO OUTORGADO 7% INTERESTADUAL //
		///////////////////////////////////////
		If Alltrim(aBrw08Rl[_i,11]) == '6101'
			aBrw08p1[01,3] += aBrw08Rl[_i,12]
			aBrw08p1[07,3] += aBrw08Rl[_i,12]
			aBrw08p1[10,3] += aBrw08Rl[_i,12]
			aBrw08p1[19,3] += aBrw08Rl[_i,12]
			//Exclusao da venda de embutidos
			If Alltrim(aBrw08Rl[_i,25])$_cEmbuti
				aBrw08p1[08,3] += aBrw08Rl[_i,12]
				aBrw08p1[10,3] -= aBrw08Rl[_i,12]
				aBrw08p1[19,3] -= aBrw08Rl[_i,12]
			//Exclusao da venda de graxaria
			Elseif Alltrim(aBrw08Rl[_i,25])$_cMVGrax
				aBrw08p1[09,3] -= aBrw08Rl[_i,12]
				aBrw08p1[10,3] -= aBrw08Rl[_i,12]
				aBrw08p1[19,3] -= aBrw08Rl[_i,12]
			Else
				xCredOut(2,_i)
			Endif
		Endif
		
		If Alltrim(aBrw08Rl[_i,11]) == '6122'
			aBrw08p1[02,3] += aBrw08Rl[_i,12]
			aBrw08p1[07,3] += aBrw08Rl[_i,12]
			aBrw08p1[10,3] += aBrw08Rl[_i,12]
			aBrw08p1[19,3] += aBrw08Rl[_i,12]
		Endif

		If Alltrim(aBrw08Rl[_i,11]) == '6105'
			aBrw08p1[03,3] += aBrw08Rl[_i,12]
			aBrw08p1[07,3] += aBrw08Rl[_i,12]
			aBrw08p1[10,3] += aBrw08Rl[_i,12]
			aBrw08p1[19,3] += aBrw08Rl[_i,12]
			If Alltrim(aBrw08Rl[_i,25])$_cEmbuti
				aBrw08p1[08,3] -= aBrw08Rl[_i,12]
				aBrw08p1[10,3] -= aBrw08Rl[_i,12]
				aBrw08p1[19,3] -= aBrw08Rl[_i,12]
			Endif
		Endif

		If Alltrim(aBrw08Rl[_i,11]) == '6922'
			aBrw08p1[04,3] += aBrw08Rl[_i,12]
			aBrw08p1[07,3] += aBrw08Rl[_i,12]
			aBrw08p1[10,3] += aBrw08Rl[_i,12]
			aBrw08p1[19,3] += aBrw08Rl[_i,12]
		Endif

		If Alltrim(aBrw08Rl[_i,11]) == '6118'
			aBrw08p1[05,3] += aBrw08Rl[_i,12]
			aBrw08p1[07,3] += aBrw08Rl[_i,12]
			aBrw08p1[10,3] += aBrw08Rl[_i,12]
			aBrw08p1[19,3] += aBrw08Rl[_i,12]
		Endif

		//INICIO Ticket 6216                    - Abel Babini - 07/12/2020 - Painel Fiscal - Acrescentar CFOP 6109 no relatório Credito Outorgado 7% Interestadual
		If Alltrim(aBrw08Rl[_i,11]) == '6109'
			aBrw08p1[06,3] += aBrw08Rl[_i,12]
			aBrw08p1[07,3] += aBrw08Rl[_i,12]
			aBrw08p1[10,3] += aBrw08Rl[_i,12]
			aBrw08p1[19,3] += aBrw08Rl[_i,12]
		Endif
		//FIM Ticket 6216                    - Abel Babini - 07/12/2020 - Painel Fiscal - Acrescentar CFOP 6109 no relatório Credito Outorgado 7% Interestadual		
		
		If Alltrim(aBrw08Rl[_i,11]) $ '2201,2202,2203'
			aBrw08p1[12,3] += aBrw08Rl[_i,12]
			aBrw08p1[17,3] += aBrw08Rl[_i,12]
			aBrw08p1[19,3] -= aBrw08Rl[_i,12]
			//Exclusao da devolução de embutidos			
			If Alltrim(aBrw08Rl[_i,25])$_cEmbuti .AND. Alltrim(aBrw08Rl[_i,11])=="2201"
				aBrw08p1[14,3] += aBrw08Rl[_i,12]
				aBrw08p1[17,3] -= aBrw08Rl[_i,12]
				aBrw08p1[19,3] += aBrw08Rl[_i,12]
			//Exclusao da devolução de graxaria
			ElseIf Alltrim(aBrw08Rl[_i,25])$_cMVGrax .AND. Alltrim(aBrw08Rl[_i,11])=="2201"
				aBrw08p1[15,3] += aBrw08Rl[_i,12]
				aBrw08p1[17,3] -= aBrw08Rl[_i,12]
				aBrw08p1[19,3] += aBrw08Rl[_i,12]
			Else
				xCredOut(2,_i)
			Endif
			
			//Exclusao da devolucao de revenda de paletes
			//PARA IMPLEMENTAR
		Endif
		
		//////////////////////////////////
		//CREDITO OUTORGADO 7% ESTADUAL //
		//////////////////////////////////
		If Alltrim(aBrw08Rl[_i,11]) == '5101'
			aBrw08p3[01,3] += aBrw08Rl[_i,12]
			If ! (Alltrim(aBrw08Rl[_i,25])$_cEmbuti .OR. Alltrim(aBrw08Rl[_i,25])$_cMVGrax .OR. Alltrim(aBrw08Rl[_i,25])$_cMVNCom)
				aBrw08p3[06,3] += aBrw08Rl[_i,12]
			ElseIf Alltrim(aBrw08Rl[_i,25])$_cEmbuti
				aBrw08p3[02,3] += aBrw08Rl[_i,12]
			ElseIf Alltrim(aBrw08Rl[_i,25])$_cMVNCom
				aBrw08p3[03,3] += aBrw08Rl[_i,12]
			ElseIf Alltrim(aBrw08Rl[_i,25])$_cMVGrax
				aBrw08p3[04,3] += aBrw08Rl[_i,12]
			Endif
		Endif
		If Alltrim(aBrw08Rl[_i,11]) == '5105'
			aBrw08p3[08,3] += aBrw08Rl[_i,12]
		Endif
		If Alltrim(aBrw08Rl[_i,11]) == '5118' .OR. Alltrim(aBrw08Rl[_i,11]) == '5122'
			aBrw08p3[09,3] += aBrw08Rl[_i,12]
			If ! (Alltrim(aBrw08Rl[_i,25])$_cEmbuti .OR. Alltrim(aBrw08Rl[_i,25])$_cMVGrax .OR. Alltrim(aBrw08Rl[_i,25])$_cMVNCom)
				aBrw08p3[11,3] += aBrw08Rl[_i,12]
			Else
				aBrw08p3[10,3] += aBrw08Rl[_i,12]
			Endif
		Endif
		
		//Devoluções
		If Alltrim(aBrw08Rl[_i,11]) == '1201'
			aBrw08p3[15,3] += aBrw08Rl[_i,12]
			If ! (Alltrim(aBrw08Rl[_i,25])$_cEmbuti .OR. Alltrim(aBrw08Rl[_i,25])$_cMVGrax .OR. Alltrim(aBrw08Rl[_i,25])$_cMVNCom)
				aBrw08p3[19,3] += aBrw08Rl[_i,12]
			Elseif Alltrim(aBrw08Rl[_i,25])$_cMVGrax .OR. Alltrim(aBrw08Rl[_i,25])$_cMVNCom
				aBrw08p3[16,3] += aBrw08Rl[_i,12]
			Elseif Alltrim(aBrw08Rl[_i,25])$_cEmbuti
				aBrw08p3[17,3] += aBrw08Rl[_i,12]
			Endif
		Endif
		
		cXvAux	:=	aBrw08Rl[_i,02]+DTOS(aBrw08Rl[_i,03])+DTOS(aBrw08Rl[_i,04])+aBrw08Rl[_i,05]+aBrw08Rl[_i,06]+aBrw08Rl[_i,07]+aBrw08Rl[_i,08]+aBrw08Rl[_i,09]
	Next _i
	
	//////////////////////////////////////////////

	//TOTAIS 7% INTERESTADUAL
	aBrw08p1[21,3] := Round(aBrw08p1[19,3]*0.07,2)

	//TOTAIS 5% ESTADUAL
	aBrw08p2[18,3] := Round(aBrw08p2[06,3]+aBrw08p2[08,3]+aBrw08p2[11,3]+aBrw08p2[16,3],2)
	aBrw08p2[31,3] := Round(aBrw08p2[24,3]+aBrw08p2[29,3],2)
	aBrw08p2[33,3] := Round(aBrw08p2[18,3]-aBrw08p2[31,3],2)
	aBrw08p2[37,3] := Round(aBrw08p2[33,3]*0.05,2)
	aBrw08p2[47,3] := Round(aBrw08p2[45,3],2)
	aBrw08p2[56,3] := Round(aBrw08p2[47,3]-aBrw08p2[54,3],2)
	aBrw08p2[58,3] := Round(aBrw08p2[56,3]*0.05,2)
	aBrw08p2[61,3] := Round(aBrw08p2[37,3]+aBrw08p2[58,3],2)

	aBrw08dm[06,3] := Round(aBrw08p2[06,3]+aBrw08p2[08,3]+aBrw08p2[11,3]+aBrw08p2[16,3],2)
	aBrw08dm[11,3] := Round(aBrw08p2[24,3]+aBrw08p2[29,3],2)
	aBrw08dm[13,3] := Round(aBrw08p2[18,3]-aBrw08p2[31,3],2)
	aBrw08dm[17,3] := Round(aBrw08p2[33,3]*0.05,2)

	//TOTAIS 7% ESTADUAL
	aBrw08p3[13,3] := Round(aBrw08p3[06,3]+aBrw08p3[08,3]+aBrw08p3[11,3],2)
	aBrw08p3[21,3] := Round(aBrw08p3[13,3]-aBrw08p3[19,3],2)
	aBrw08p3[23,3] := Round(aBrw08p3[21,3]*0.07,2)

	//Converte os principais arrays em tabelas temporárias
	//Fim da conversão dos arrays em tabelas temporárias
	//Limpa Array da memória
	aBrw08Rl := nil
	SysRefresh()
Return

/*/{Protheus.doc} Static Function xCredOut  
	Carrega da dados Ref. Credito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function xCredOut(nOpc,_i)
	/////////////////////////////////
	//CREDITO ESTADUAL 5%
	/////////////////////////////////
	If nOpc == 1
		//Relatório Faturamento Estadual
		If (aBrw08Rl[_i,11] >= '5000' .AND. aBrw08Rl[_i,11] <= '5999') .OR. (aBrw08Rl[_i,11] >= '7000')
			IF cXvAux	== aBrw08Rl[_i,02]+DTOS(aBrw08Rl[_i,03])+DTOS(aBrw08Rl[_i,04])+aBrw08Rl[_i,05]+aBrw08Rl[_i,06]+aBrw08Rl[_i,07]+aBrw08Rl[_i,08]+aBrw08Rl[_i,09]
				aBrw08x1[nLenX1,11] += aBrw08Rl[_i,12]
				aBrw08x1[nLenX1,12] += aBrw08Rl[_i,13]
				aBrw08x1[nLenX1,13] += aBrw08Rl[_i,14]
				aBrw08x1[nLenX1,14] += aBrw08Rl[_i,15]
				aBrw08x1[nLenX1,15] += aBrw08Rl[_i,16]
				aBrw08x1[nLenX1,16] += aBrw08Rl[_i,17]			
			ELSE
				AADD(aBrw08x1,{;
					aBrw08Rl[_i,02],;
					aBrw08Rl[_i,03],;
					aBrw08Rl[_i,04],;
					aBrw08Rl[_i,05],;
					aBrw08Rl[_i,06],;
					aBrw08Rl[_i,07],;
					aBrw08Rl[_i,08],;
					aBrw08Rl[_i,09],;
					aBrw08Rl[_i,10],;
					aBrw08Rl[_i,11],;
					aBrw08Rl[_i,12],;
					aBrw08Rl[_i,13],;
					aBrw08Rl[_i,14],;
					aBrw08Rl[_i,15],;
					aBrw08Rl[_i,16],;
					aBrw08Rl[_i,17]})
				nLenX1	:= Len(aBrw08x1)
			endif
		//Relatório Entrada Aves Estadual
		ElseIf aBrw08Rl[_i,11] == '1151'
			IF cXvAux	== aBrw08Rl[_i,02]+DTOS(aBrw08Rl[_i,03])+DTOS(aBrw08Rl[_i,04])+aBrw08Rl[_i,05]+aBrw08Rl[_i,06]+aBrw08Rl[_i,07]+aBrw08Rl[_i,08]+aBrw08Rl[_i,09]
				aBrw08x2[nLenX2,11] += aBrw08Rl[_i,12]
				aBrw08x2[nLenX2,12] += aBrw08Rl[_i,13]
				aBrw08x2[nLenX2,13] += aBrw08Rl[_i,14]
				aBrw08x2[nLenX2,14] += aBrw08Rl[_i,15]
				aBrw08x2[nLenX2,15] += aBrw08Rl[_i,16]
				aBrw08x2[nLenX2,16] += aBrw08Rl[_i,17]			
			ELSE
				AADD(aBrw08x2,{;
					aBrw08Rl[_i,02],;
					aBrw08Rl[_i,03],;
					aBrw08Rl[_i,04],;
					aBrw08Rl[_i,05],;
					aBrw08Rl[_i,06],;
					aBrw08Rl[_i,07],;
					aBrw08Rl[_i,08],;
					aBrw08Rl[_i,09],;
					aBrw08Rl[_i,10],;
					aBrw08Rl[_i,11],;
					aBrw08Rl[_i,12],;
					aBrw08Rl[_i,13],;
					aBrw08Rl[_i,14],;
					aBrw08Rl[_i,15],;
					aBrw08Rl[_i,16],;
					aBrw08Rl[_i,17]})
				nLenX2	:= Len(aBrw08x2)
			ENDIF
		//Relatório Devoluções Estadual
		ElseIf aBrw08Rl[_i,11] == '1201' .OR. aBrw08Rl[_i,11] == '3201'
			IF cXvAux	== aBrw08Rl[_i,02]+DTOS(aBrw08Rl[_i,03])+DTOS(aBrw08Rl[_i,04])+aBrw08Rl[_i,05]+aBrw08Rl[_i,06]+aBrw08Rl[_i,07]+aBrw08Rl[_i,08]+aBrw08Rl[_i,09]
				aBrw08x3[nLenX3,11] += aBrw08Rl[_i,12]
				aBrw08x3[nLenX3,12] += aBrw08Rl[_i,13]
				aBrw08x3[nLenX3,13] += aBrw08Rl[_i,14]
				aBrw08x3[nLenX3,14] += aBrw08Rl[_i,15]
				aBrw08x3[nLenX3,15] += aBrw08Rl[_i,16]
				aBrw08x3[nLenX3,16] += aBrw08Rl[_i,17]			
			ELSE
				AADD(aBrw08x3,{;
					aBrw08Rl[_i,02],;
					aBrw08Rl[_i,03],;
					aBrw08Rl[_i,04],;
					aBrw08Rl[_i,05],;
					aBrw08Rl[_i,06],;
					aBrw08Rl[_i,07],;
					aBrw08Rl[_i,08],;
					aBrw08Rl[_i,09],;
					aBrw08Rl[_i,10],;
					aBrw08Rl[_i,11],;
					aBrw08Rl[_i,12],;
					aBrw08Rl[_i,13],;
					aBrw08Rl[_i,14],;
					aBrw08Rl[_i,15],;
					aBrw08Rl[_i,16],;
					aBrw08Rl[_i,17]})
				nLenX3	:= Len(aBrw08x3)
			ENDIF
		ENDIF
		//Relatório Exportações
		/*Else*/If aBrw08Rl[_i,11] >= '7000' .AND. aBrw08Rl[_i,11] <= '7999'
			IF cXvAux	== aBrw08Rl[_i,02]+DTOS(aBrw08Rl[_i,03])+DTOS(aBrw08Rl[_i,04])+aBrw08Rl[_i,05]+aBrw08Rl[_i,06]+aBrw08Rl[_i,07]+aBrw08Rl[_i,08]+aBrw08Rl[_i,09]
					aBrw08x4[nLenX4,09] += aBrw08Rl[_i,23]
			ELSE
				AADD(aBrw08x4,{;
					aBrw08Rl[_i,02],;
					aBrw08Rl[_i,04],;
					aBrw08Rl[_i,07],;
					aBrw08Rl[_i,22],;
					aBrw08Rl[_i,06],;
					aBrw08Rl[_i,05],;
					aBrw08Rl[_i,11],;
					aBrw08Rl[_i,08],;
					aBrw08Rl[_i,23],;
					IIF(Alltrim(aBrw08Rl[_i,18])=="",,aBrw08Rl[_i,18]),;
					aBrw08Rl[_i,19],;
					IIF(Alltrim(DTOS(aBrw08Rl[_i,20]))=="","*** NÃO OCORREU O EMBARQUE DA MERCADORIA ***",aBrw08Rl[_i,20]),;
					aBrw08Rl[_i,21]})
				nLenX4	:= Len(aBrw08x4)
			ENDIF
		Endif
	ElseIf nOpc == 2
	
		/////////////////////////////////
		//CREDITO INTERESTADUAL 7%
		/////////////////////////////////
		//Relatório Faturamento Interestadual 7%
		If (aBrw08Rl[_i,11] >= '6000' .AND. aBrw08Rl[_i,11] <= '6999')
			IF cXvAux	== aBrw08Rl[_i,02]+DTOS(aBrw08Rl[_i,03])+DTOS(aBrw08Rl[_i,04])+aBrw08Rl[_i,05]+aBrw08Rl[_i,06]+aBrw08Rl[_i,07]+aBrw08Rl[_i,08]+aBrw08Rl[_i,09]
					aBrw08x5[nLenX5,11] += aBrw08Rl[_i,12]
					aBrw08x5[nLenX5,12] += aBrw08Rl[_i,13]
					aBrw08x5[nLenX5,13] += aBrw08Rl[_i,14]
					aBrw08x5[nLenX5,14] += aBrw08Rl[_i,15]
					aBrw08x5[nLenX5,15] += aBrw08Rl[_i,16]
					aBrw08x5[nLenX5,16] += aBrw08Rl[_i,17]			
			ELSE
					AADD(aBrw08x5,{;
						aBrw08Rl[_i,02],;
						aBrw08Rl[_i,03],;
						aBrw08Rl[_i,04],;
						aBrw08Rl[_i,05],;
						aBrw08Rl[_i,06],;
						aBrw08Rl[_i,07],;
						aBrw08Rl[_i,08],;
						aBrw08Rl[_i,09],;
						aBrw08Rl[_i,10],;
						aBrw08Rl[_i,11],;
						aBrw08Rl[_i,12],;
						aBrw08Rl[_i,13],;
						aBrw08Rl[_i,14],;
						aBrw08Rl[_i,15],;
						aBrw08Rl[_i,16],;
						aBrw08Rl[_i,17]})
					nLenX5	:= Len(aBrw08x5)
			ENDIF
		//Relatório Devolução de Vendas Interestadual 7%
		ElseIf (aBrw08Rl[_i,11] >= '2000' .AND. aBrw08Rl[_i,11] <= '2999')
			IF cXvAux	== aBrw08Rl[_i,02]+DTOS(aBrw08Rl[_i,03])+DTOS(aBrw08Rl[_i,04])+aBrw08Rl[_i,05]+aBrw08Rl[_i,06]+aBrw08Rl[_i,07]+aBrw08Rl[_i,08]+aBrw08Rl[_i,09]
					aBrw08x6[nLenX6,11] += aBrw08Rl[_i,12]
					aBrw08x6[nLenX6,12] += aBrw08Rl[_i,13]
					aBrw08x6[nLenX6,13] += aBrw08Rl[_i,14]
					aBrw08x6[nLenX6,14] += aBrw08Rl[_i,15]
					aBrw08x6[nLenX6,15] += aBrw08Rl[_i,16]
					aBrw08x6[nLenX6,16] += aBrw08Rl[_i,17]			
			ELSE
					AADD(aBrw08x6,{;
						aBrw08Rl[_i,02],;
						aBrw08Rl[_i,03],;
						aBrw08Rl[_i,04],;
						aBrw08Rl[_i,05],;
						aBrw08Rl[_i,06],;
						aBrw08Rl[_i,07],;
						aBrw08Rl[_i,08],;
						aBrw08Rl[_i,09],;
						aBrw08Rl[_i,10],;
						aBrw08Rl[_i,11],;
						aBrw08Rl[_i,12],;
						aBrw08Rl[_i,13],;
						aBrw08Rl[_i,14],;
						aBrw08Rl[_i,15],;
						aBrw08Rl[_i,16],;
						aBrw08Rl[_i,17]})
					nLenX6	:= Len(aBrw08x6)
			ENDIF
		Endif
	ElseIf nOpc == 3
		If (aBrw08Rl[_i,11] >= '5000' .AND. aBrw08Rl[_i,11] <= '5999')
			IF cXvAux	== aBrw08Rl[_i,02]+DTOS(aBrw08Rl[_i,03])+DTOS(aBrw08Rl[_i,04])+aBrw08Rl[_i,05]+aBrw08Rl[_i,06]+aBrw08Rl[_i,07]+aBrw08Rl[_i,08]+aBrw08Rl[_i,09]
					aBrw08x7[nLenX7,11] += aBrw08Rl[_i,12]
					aBrw08x7[nLenX7,12] += aBrw08Rl[_i,13]
					aBrw08x7[nLenX7,13] += aBrw08Rl[_i,14]
					aBrw08x7[nLenX7,14] += aBrw08Rl[_i,15]
					aBrw08x7[nLenX7,15] += aBrw08Rl[_i,16]
					aBrw08x7[nLenX7,16] += aBrw08Rl[_i,17]			
			ELSE
					AADD(aBrw08x7,{;
						aBrw08Rl[_i,02],;
						aBrw08Rl[_i,03],;
						aBrw08Rl[_i,04],;
						aBrw08Rl[_i,05],;
						aBrw08Rl[_i,06],;
						aBrw08Rl[_i,07],;
						aBrw08Rl[_i,08],;
						aBrw08Rl[_i,09],;
						aBrw08Rl[_i,10],;
						aBrw08Rl[_i,11],;
						aBrw08Rl[_i,12],;
						aBrw08Rl[_i,13],;
						aBrw08Rl[_i,14],;
						aBrw08Rl[_i,15],;
						aBrw08Rl[_i,16],;
						aBrw08Rl[_i,17]})
					nLenX7	:= Len(aBrw08x7)
			ENDIF
			//Relatório Devoluções Estadual
		ElseIf aBrw08Rl[_i,11] == '1201'
			IF cXvAux	== aBrw08Rl[_i,02]+DTOS(aBrw08Rl[_i,03])+DTOS(aBrw08Rl[_i,04])+aBrw08Rl[_i,05]+aBrw08Rl[_i,06]+aBrw08Rl[_i,07]+aBrw08Rl[_i,08]+aBrw08Rl[_i,09]
					aBrw08x8[nLenX8,11] += aBrw08Rl[_i,12]
					aBrw08x8[nLenX8,12] += aBrw08Rl[_i,13]
					aBrw08x8[nLenX8,13] += aBrw08Rl[_i,14]
					aBrw08x8[nLenX8,14] += aBrw08Rl[_i,15]
					aBrw08x8[nLenX8,15] += aBrw08Rl[_i,16]
					aBrw08x8[nLenX8,16] += aBrw08Rl[_i,17]			
			ELSE
					AADD(aBrw08x8,{;
						aBrw08Rl[_i,02],;
						aBrw08Rl[_i,03],;
						aBrw08Rl[_i,04],;
						aBrw08Rl[_i,05],;
						aBrw08Rl[_i,06],;
						aBrw08Rl[_i,07],;
						aBrw08Rl[_i,08],;
						aBrw08Rl[_i,09],;
						aBrw08Rl[_i,10],;
						aBrw08Rl[_i,11],;
						aBrw08Rl[_i,12],;
						aBrw08Rl[_i,13],;
						aBrw08Rl[_i,14],;
						aBrw08Rl[_i,15],;
						aBrw08Rl[_i,16],;
						aBrw08Rl[_i,17]})
					nLenX8	:= Len(aBrw08x8)
			ENDIF
		Endif
	Endif
Return

/*/{Protheus.doc} Static Function xAB08IVr  
	Carrega da dados Ref. Credito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function xAB08IVr()
	Local _i
	///////////////////////////////////////////////////////////////
	//CREDITO PRESUMIDO INTERESTADUAL 7%
	///////////////////////////////////////////////////////////////
	//Inicializa Array Interestadual 7%
	aBrw08p1	:= Array(21,3)
	For _i := 1 to 21
		aBrw08p1[_i,1]	:= cFilAnt
		aBrw08p1[_i,3]	:= 0
	Next _i
	
	aBrw08p1[01,2]	:= "CFOP 6.101 - Venda Interestadual"
	aBrw08p1[02,2]	:= "6.122"
	aBrw08p1[03,2]	:= "6.105"
	aBrw08p1[04,2]	:= "6.922"
	aBrw08p1[05,2]	:= "6.118"
	aBrw08p1[06,2]	:= "6.109" //Ticket 6216                    - Abel Babini - 07/12/2020 - Painel Fiscal - Acrescentar CFOP 6109 no relatório Credito Outorgado 7% Interestadual
	aBrw08p1[07,2]	:= "Total" //Ticket 6216                    - Abel Babini - 07/12/2020 - Painel Fiscal - Acrescentar CFOP 6109 no relatório Credito Outorgado 7% Interestadual
	//aBrw08p1[07,2]	:= ""
	aBrw08p1[08,2]	:= "(-) Exclusão Venda Interestadual Embutidos ( 6.101, 6.105)"
	aBrw08p1[09,2]	:= "(-) Exclusão Venda Interestadual Graxaria ( 6.101)"
	aBrw08p1[10,2]	:= "Total de Vendas"
	aBrw08p1[11,2]	:= ""
	aBrw08p1[12,2]	:= "(-) Devolução de Venda Interestadual 2.201, 2.202, 2.203" 
	aBrw08p1[13,2]	:= ""
	aBrw08p1[14,2]	:= "(-) Exclusão Devolução Interestadual Embutidos ( 2.201)"
	aBrw08p1[15,2]	:= "(-) Exclusão Devolução Graxaria ( 2.201)"
	aBrw08p1[16,2]	:= "(-) Exclusão Devolução Revenda - Paletes ( 2.202)"
	aBrw08p1[17,2]	:= "Total de Devolução de Venda Interestadual"
	aBrw08p1[18,2]	:= ""
	aBrw08p1[19,2]	:= "Base de Cálculo"
	aBrw08p1[20,2]	:= ""
	aBrw08p1[21,2]	:= "Valor do Crédito Outorgado - 7%"
	
	///////////////////////////////////////////////////////////////
	//CREDITO PRESUMIDO ESTADUAL 5%                              //
	///////////////////////////////////////////////////////////////
	//Inicializa Array Estadual 5%
	aBrw08p2	:= Array(61,3)
	For _i := 1 to 61
		aBrw08p2[_i,1]	:= IIF(Len(aBrw08Rs) > 0,aBrw08Rs[1,1],0)
		aBrw08p2[_i,3]	:= 0
	Next _i
	
	aBrw08p2[01,2]	:= "5101 - Venda Interna"
	aBrw08p2[02,2]	:= "(-) Venda Embutidos"
	aBrw08p2[03,2]	:= "(-) Venda Produto Não Comestível"
	aBrw08p2[04,2]	:= "(-) Venda Graxaria"
	aBrw08p2[05,2]	:= ""
	aBrw08p2[06,2]	:= "5101 - Venda Interna de Frango e Cortes"
	aBrw08p2[07,2]	:= ""
	aBrw08p2[08,2]	:= "5105 - Venda Interna - Saída Armazem"
	aBrw08p2[09,2]	:= "5118/ 5122 - Venda a Ordem"
	aBrw08p2[10,2]	:= "(-) Venda Produto Não Comestível"
	aBrw08p2[11,2]	:= "5118 / 5122- Venda Ordem de Frango e Cortes"
	aBrw08p2[12,2]	:= ""
	aBrw08p2[13,2]	:= "7101 / 7105 - Venda Exportação"
	aBrw08p2[14,2]	:= "(-) Venda Produto Não Comestível"
	aBrw08p2[15,2]	:= ""
	aBrw08p2[16,2]	:= "7101 / 7105 - Venda Exportação de Frangos e Cortes"
	aBrw08p2[17,2]	:= ""
	aBrw08p2[18,2]	:= "TOTAL SAÍDA"
	aBrw08p2[19,2]	:= ""
	aBrw08p2[20,2]	:= "1201 - Devolução Interna"
	aBrw08p2[21,2]	:= "(-) Devolução Graxaria e Não Comestível"
	aBrw08p2[22,2]	:= "(-) Devolução Embutidos"
	aBrw08p2[23,2]	:= ""
	aBrw08p2[24,2]	:= "1201 Devolução Frango e Cortes" 
	aBrw08p2[25,2]	:= ""
	aBrw08p2[26,2]	:= "3201 Devolução Exportação Frango e Cortes" 
	aBrw08p2[27,2]	:= "(-) Devolução Exportação Não Comestível" 
	aBrw08p2[28,2]	:= ""
	aBrw08p2[29,2]	:= "3201 Devolução Frango e Cortes" 
	aBrw08p2[30,2]	:= ""
	aBrw08p2[31,2]	:= "(-) Total de Devolução de Venda Estadual"
	aBrw08p2[32,2]	:= ""
	aBrw08p2[33,2]	:= "Base de Cálculo"
	aBrw08p2[34,2]	:= ""
	aBrw08p2[35,2]	:= "1151 - Entrada de Aves - Internas"
	aBrw08p2[36,2]	:= ""
	aBrw08p2[37,2]	:= "Valor do Crédito Outorgado - 5% - Venda"
	aBrw08p2[38,2]	:= ""
	aBrw08p2[39,2]	:= ""
	aBrw08p2[40,2]	:= "5151 - Transferencia"
	aBrw08p2[41,2]	:= "(-) Transferencia Graxaria - SC"
	aBrw08p2[42,2]	:= "(-) Transferencia Embutidos"
	aBrw08p2[43,2]	:= "(-) Transferencia Produto não Comestivel"
	aBrw08p2[44,2]	:= ""
	aBrw08p2[45,2]	:= "5151 - Transferencia de Frango e Corte"
	aBrw08p2[46,2]	:= ""
	aBrw08p2[47,2]	:= "Total Transferencia"
	aBrw08p2[48,2]	:= ""
	aBrw08p2[49,2]	:= "1152 -Entrada de Transferencia"
	aBrw08p2[50,2]	:= "(-) Produto não comestivel"
	aBrw08p2[51,2]	:= "(-) Embutidos"
	aBrw08p2[52,2]	:= "(-) Insumos de Embutidos"
	aBrw08p2[53,2]	:= ""
	aBrw08p2[54,2]	:= "1152 - Entrada de Transferencia"
	aBrw08p2[55,2]	:= ""
	aBrw08p2[56,2]	:= "Base de Calculo"
	aBrw08p2[57,2]	:= ""
	aBrw08p2[58,2]	:= "Valor do Crédito Outorgado - 5%"
	aBrw08p2[59,2]	:= ""
	aBrw08p2[60,2]	:= ""
	aBrw08p2[61,2]	:= "Valor Total do Crédito Gerado no Mês"
	
	///////////////////////////////////////////////////////////////
	//CREDITO PRESUMIDO ESTADUAL 7%
	///////////////////////////////////////////////////////////////
	//Inicializa Array Estadual 7%
	aBrw08p3	:= Array(23,3)
	For _i := 1 to 23
		aBrw08p3[_i,1]	:= IIF(Len(aBrw08Rs) > 0,aBrw08Rs[1,1],0)
		aBrw08p3[_i,3]	:= 0
	Next _i
	
	aBrw08p3[01,2]	:= "5101 - Venda Interna"
	aBrw08p3[02,2]	:= "(-) Venda Embutidos"
	aBrw08p3[03,2]	:= "(-) Venda Produto Não Comestível"
	aBrw08p3[04,2]	:= "(-) Venda Graxaria"
	aBrw08p3[05,2]	:= ""
	aBrw08p3[06,2]	:= "5101 - Venda Interna de Frango e Cortes"
	aBrw08p3[07,2]	:= ""
	aBrw08p3[08,2]	:= "5105 - Venda Interna - Saída Armazem"
	aBrw08p3[09,2]	:= "5118/ 5122 - Venda a Ordem"
	aBrw08p3[10,2]	:= "(-) Venda Produto Não Comestível"
	aBrw08p3[11,2]	:= "5118 / 5122- Venda Ordem de Frango e Cortes"
	aBrw08p3[12,2]	:= ""
	//aBrw08p3[13,2]	:= "7101 - Venda Exportação"
	//aBrw08p3[14,2]	:= "(-) Venda Produto Não Comestível"
	//aBrw08p3[15,2]	:= ""
	//aBrw08p3[16,2]	:= "7101 - Venda Exportação de Frangos e Cortes"
	//aBrw08p3[17,2]	:= ""
	aBrw08p3[13,2]	:= "TOTAL SAÍDA"
	aBrw08p3[14,2]	:= ""
	aBrw08p3[15,2]	:= "1201 - Devolução Interna"
	aBrw08p3[16,2]	:= "(-) Devolução Graxaria e Não Comestível"
	aBrw08p3[17,2]	:= "(-) Devolução Embutidos"
	aBrw08p3[18,2]	:= ""
	//aBrw08p3[19,2]	:= "1201 Devolução Frango e Cortes" 
	//aBrw08p3[20,2]	:= ""
	aBrw08p3[19,2]	:= "(-) Total de Devolução de Venda Estadual"
	aBrw08p3[20,2]	:= ""
	aBrw08p3[21,2]	:= "Base de Cálculo"
	aBrw08p3[22,2]	:= ""
	aBrw08p3[23,2]	:= "Valor do Crédito Outorgado - 7% - Venda"

	///////////////////////////////////////////////////////////////
	//CREDITO PRESUMIDO ESTADUAL 5% DEMONSTRATIVO DGCA           //
	///////////////////////////////////////////////////////////////
	//Inicializa Array Estadual 5%
	aBrw08dm	:= Array(17,3)
	For _i := 1 to 17
		aBrw08dm[_i,1]	:= IIF(Len(aBrw08Rs) > 0,aBrw08Rs[1,1],0)
		aBrw08dm[_i,3]	:= 0
	Next _i
	
	aBrw08dm[01,2]	:= "5101 - Venda Interna de Frango e Cortes"
	aBrw08dm[02,2]	:= "5105 - Venda Interna - Saída Armazém"
	aBrw08dm[03,2]	:= "5118 / 5122 - Venda Ordem de Frango e Cortes"
	aBrw08dm[04,2]	:= "7101 / 7105 - Venda Exportação de Frangos e Cortes"
	aBrw08dm[05,2]	:= ""
	aBrw08dm[06,2]	:= "TOTAL SAÍDA"
	aBrw08dm[07,2]	:= ""
	aBrw08dm[08,2]	:= "1201 Devolução Frango e Cortes" 
	aBrw08dm[09,2]	:= "3201 Devolução Frango e Cortes" 
	aBrw08dm[10,2]	:= ""
	aBrw08dm[11,2]	:= "(-) Total de Devolução de Venda Estadual"
	aBrw08dm[12,2]	:= ""
	aBrw08dm[13,2]	:= "Base de Cálculo"
	aBrw08dm[14,2]	:= ""
	aBrw08dm[15,2]	:= "1151 - Entrada de Aves - Internas"
	aBrw08dm[16,2]	:= ""
	aBrw08dm[17,2]	:= "Valor do Crédito Outorgado - 5% - Venda"
Return

/*/{Protheus.doc} Static Function xRelBr08  
	Gera Relatório Ref. Crédito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function xRelBr08()
	Local aSays			:= {}
	Local aButtons		:= {}
	Local nOpca			:= 0
	//+-----------------------------------------------+
	//|Monta Form Batch - Interface com o Usuario     |
	//+-----------------------------------------------+
	AADD(aSays,"Este programa tem a finalidade de Gerar um arquivo Excel " )
	AADD(aSays,"Relatorio de Crédito Outorgado" )
    
	AADD(aButtons, { 1,.T.,{|o| nOpca:=1, o:oWnd:End(), Processa({||xRelBr8b()},"Gerando arquivo","Aguarde...")    }})
	AADD(aButtons, { 2,.T.,{|o| nOpca:=2, o:oWnd:End() }})	
	FormBatch( cCadastr, aSays, aButtons )
	
	MsgInfo("Arquivo Excel gerado!")        
	
Return

/*/{Protheus.doc} Static Function xRelBr8c  
	Gera Relatório Ref. Crédito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function xRelBr8c()
	Local aSays			:= {}
	Local aButtons		:= {}
	Local nOpca			:= 0
	//+-----------------------------------------------+
	//|Monta Form Batch - Interface com o Usuario     |
	//+-----------------------------------------------+
	AADD(aSays,"Este programa tem a finalidade de Gerar um arquivo Excel " )
	AADD(aSays,"Relatorio de Crédito Outorgado - DADOS DGCA" )
    
	AADD(aButtons, { 1,.T.,{|o| nOpca:=1, o:oWnd:End(), Processa({||xRelB8d()},"Gerando arquivo","Aguarde...")    }})
	AADD(aButtons, { 2,.T.,{|o| nOpca:=2, o:oWnd:End() }})	
	FormBatch( cCadastr, aSays, aButtons )
	
	MsgInfo("Arquivo Excel gerado!")        
	
Return

/*/{Protheus.doc} Static Function xRelB8d  
	Gera Relatório Ref. Crédito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function xRelB8d()
	Private oExcel
	Private oMsExcel
	
	BEGIN SEQUENCE
	
		//5% Estadual Faturamento
		oExcel		:= FWMSEXCELEX():New()
		oMsExcel	:= NIL
		cArquivo	:= cPathRel +  'Relação de Notas Fiscais de Saída_' + MesExtenso(_mvpr02) + ' ' + Alltrim(Str(Ano(_mvpr02))) + '.XML'
		//IF .NOT.( ApOleClient("MsExcel") )   // se nao existir o excel sai fora..
		//    Alert("Nao Existe Excel Instalado")
    //        BREAK
		//EndIF
		Cab08P3b()
		GEx08P3b()
		SalvaXml()
		CriaExcel()

        //5% Estadual Devolução
		oExcel		:= FWMSEXCELEX():New()
		oMsExcel	:= NIL
		cArquivo	:= cPathRel +  'Relação de Notas Fiscais de Devolução_' + MesExtenso(_mvpr02) + ' ' + Alltrim(Str(Ano(_mvpr02))) + '.XML'
		Cab08P5b()
		GEx08P5b()
		SalvaXml()
		CriaExcel()

        //5% Estadual Exportação
		oExcel		:= FWMSEXCELEX():New()
		oMsExcel	:= NIL
		cArquivo	:= cPathRel +  'Relação Exportação_' + MesExtenso(_mvpr02) + ' ' + Alltrim(Str(Ano(_mvpr02))) + '.XML'
		Cab08P6b()
		GEx08P6b()
		SalvaXml()
		CriaExcel()

        //5% Estadual Compra Aves
		oExcel		:= FWMSEXCELEX():New()
		oMsExcel	:= NIL
		cArquivo	:= cPathRel +  'Relação de Notas Fiscais Entrada Aves_' + MesExtenso(_mvpr02) + ' ' + Alltrim(Str(Ano(_mvpr02))) + '.XML'
		Cab08P4b()
		GEx08P4b()
		SalvaXml()
		CriaExcel()
        
		//Demonstrativo Credito
		oExcel		:= FWMSEXCELEX():New()
		oMsExcel	:= NIL
		cArquivo	:= cPathRel +  'Demonstrativo Cred Outorgado_' + MesExtenso(_mvpr02) + ' ' + Alltrim(Str(Ano(_mvpr02))) + '.XML'
		Cab08PA()
		GEx08PA()
		SalvaXml()
		CriaExcel()
		
	END SEQUENCE

Return

/*/{Protheus.doc} Static Function xRelBr8b  
	Gera Relatório Ref. Crédito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function xRelBr8b()
	Private oExcel     := FWMSEXCELEX():New()
	//Private cArquivo	:= cGetFile("Arquivo XML", "Selecione o diretório para salvar o relatório",,'C:\',.T.,GETF_RETDIRECTORY + GETF_LOCALHARD + GETF_NETWORKDRIVE)	
	Private oMsExcel   := NIL
	
	cArquivo := cPathRel +  'ROUTORGADO_' + DTOS(DATE()) + STRTRAN(TIME(),':','') + '.XML'
	BEGIN SEQUENCE
		
		//IF .NOT.( ApOleClient("MsExcel") )   // se nao existir o excel sai fora..
		//    Alert("Nao Existe Excel Instalado")
    //        BREAK
		//EndIF
        	
		//Quadros
		Cab08P1()             
		GEx08P1()
			
		//Resumo
		Cab08P2()
		GEx08P2()

		//5% Estadual Faturamento 
		Cab08P3()
		GEx08P3()

		//5% Estadual Devolução
		Cab08P5()
		GEx08P5()

		//5% Estadual Exportação
		Cab08P6()
		GEx08P6()

		//5% Estadual Compra Aves
		Cab08P4()
		GEx08P4()

		//7% Interestadual Faturamento
		Cab08P7()
		GEx08P7()

			//7% Interestadual Devolucao
		Cab08P8()
			GEx08P8()
			
			//7% Estadual Faturamento 
		Cab08P9()
		GEx08P9()
			
			//7% Estadual Devolução
		Cab08P0()
		GEx08P0()
        
    SalvaXml()
		CriaExcel()
	
	END SEQUENCE

Return

/*/{Protheus.doc} Static Function Cab08P1  
	Gera Relatório Ref. Crédito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function Cab08P1()
	Local nColBr08	:= 0
	//PLANILHA 1 - QUADROS
    oExcel:AddworkSheet(cFld08)
	oExcel:AddTable(cFld08,cFld08t1)
	oExcel:AddColumn(cFld08,cFld08t1,"Filial"	,1,1)
	oExcel:AddColumn(cFld08,cFld08t1,"Descrição",1,1)
	oExcel:AddColumn(cFld08,cFld08t1,"Valor"	,2,2)
RETURN(NIL)  

/*/{Protheus.doc} Static Function Cab08P2  
	Gera Relatório Ref. Crédito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function Cab08P2()
	Local nColBr08	:= 0
	//PLANILHA 1 - RESUMO
    oExcel:AddworkSheet(cFld082)
	oExcel:AddTable(cFld082,cFld08t2)
	oExcel:AddColumn(cFld082,cFld08t2,"Filial"	,1,1)
	oExcel:AddColumn(cFld082,cFld08t2,"CFOP"		,1,1)
	
	For nColBr08 := 1 To nQNCM
		oExcel:AddColumn(cFld082,cFld08t2,aBrw08Nc[nColBr08],2,2)
	Next nColBr08
	
	oExcel:AddColumn(cFld082,cFld08t2,"Total"	,2,2)

RETURN(NIL)  

/*/{Protheus.doc} Static Function Cab08P3  
	Gera Relatório Ref. Crédito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function Cab08P3()
	//PLANILHA 2 - DETALHE CREDITO OUTORGADO
    oExcel:AddworkSheet(cFld083)
	oExcel:AddTable(cFld083,cFld08t3)
	oExcel:AddColumn(cFld083,cFld08t3,"Filial"  	,1,1)
	oExcel:AddColumn(cFld083,cFld08t3,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld083,cFld08t3,"Dt.Emissao"	,1,1)
	oExcel:AddColumn(cFld083,cFld08t3,"Nota Fiscal"	,1,1)
	oExcel:AddColumn(cFld083,cFld08t3,"Serie NF"	,1,1)
	oExcel:AddColumn(cFld083,cFld08t3,"UF"			,1,1)
	oExcel:AddColumn(cFld083,cFld08t3,"Nome"		,1,1)
	oExcel:AddColumn(cFld083,cFld08t3,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld083,cFld08t3,"Insc.Est."	,1,1)
	oExcel:AddColumn(cFld083,cFld08t3,"CFOP"		,1,1)
	oExcel:AddColumn(cFld083,cFld08t3,"Vl. Contab."	,2,3)
	oExcel:AddColumn(cFld083,cFld08t3,"Base ICMS"	,2,3)
	oExcel:AddColumn(cFld083,cFld08t3,"ICMS"		,2,3)
	oExcel:AddColumn(cFld083,cFld08t3,"ICMS Isento"	,2,3)
	oExcel:AddColumn(cFld083,cFld08t3,"ICMS Outras"	,2,3)
	oExcel:AddColumn(cFld083,cFld08t3,"IPI"			,2,3)

	/*oExcel:AddColumn(cFld082,cFld08t2,"NCM"			,1,1)
	oExcel:AddColumn(cFld082,cFld08t2,"Clie/Forn"	,1,1)
	oExcel:AddColumn(cFld082,cFld08t2,"Loja"		,1,1)
	oExcel:AddColumn(cFld082,cFld08t2,"Nome"		,1,1)
	oExcel:AddColumn(cFld082,cFld08t2,"Vl. ICMS Ret.",2,3)
	oExcel:AddColumn(cFld082,cFld08t2,"Observ."		,1,1)
	oExcel:AddColumn(cFld082,cFld08t2,"Dt.Canc."	,1,1)	
	oExcel:AddColumn(cFld082,cFld08t2,"Conta Cont."	,1,1)	
	oExcel:AddColumn(cFld082,cFld08t2,"Cod.Produto"	,1,1)
	oExcel:AddColumn(cFld082,cFld08t2,"Descrição"	,1,1)
	oExcel:AddColumn(cFld082,cFld08t2,"Quant."		,2,2)
	oExcel:AddColumn(cFld082,cFld08t2,"Vl.Total"	,2,3)
	oExcel:AddColumn(cFld082,cFld08t2,"Espécie"		,1,1)
	oExcel:AddColumn(cFld082,cFld08t2,"Tipo Doc."	,1,1)*/

Return(NIL)

/*/{Protheus.doc} Static Function Cab08P3b  
	Gera Relatório Ref. Crédito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function Cab08P3b()
	//PLANILHA 2 - DETALHE CREDITO OUTORGADO
  oExcel:AddworkSheet(cFld083b)
	oExcel:AddTable(cFld083b,cFld08t3)
	oExcel:AddColumn(cFld083b,cFld08t3,"Filial"  	,1,1)
	oExcel:AddColumn(cFld083b,cFld08t3,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld083b,cFld08t3,"Dt.Emissao"	,1,1)
	oExcel:AddColumn(cFld083b,cFld08t3,"Nota Fiscal"	,1,1)
	oExcel:AddColumn(cFld083b,cFld08t3,"Serie NF"	,1,1)
	oExcel:AddColumn(cFld083b,cFld08t3,"UF"			,1,1)
	oExcel:AddColumn(cFld083b,cFld08t3,"Nome"		,1,1)
	oExcel:AddColumn(cFld083b,cFld08t3,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld083b,cFld08t3,"Insc.Est."	,1,1)
	oExcel:AddColumn(cFld083b,cFld08t3,"CFOP"		,1,1)
	oExcel:AddColumn(cFld083b,cFld08t3,"Vl. Contab."	,2,3)
	oExcel:AddColumn(cFld083b,cFld08t3,"Base ICMS"	,2,3)
	oExcel:AddColumn(cFld083b,cFld08t3,"ICMS"		,2,3)
	oExcel:AddColumn(cFld083b,cFld08t3,"ICMS Isento"	,2,3)
	oExcel:AddColumn(cFld083b,cFld08t3,"ICMS Outras"	,2,3)
	oExcel:AddColumn(cFld083b,cFld08t3,"IPI"			,2,3)

Return(NIL)

/*/{Protheus.doc} Static Function Cab08P4  
	Gera Relatório Ref. Crédito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function Cab08P4()
	//PLANILHA 2 - DETALHE CREDITO OUTORGADO
    oExcel:AddworkSheet(cFld084)
	oExcel:AddTable(cFld084,cFld08t4)
	oExcel:AddColumn(cFld084,cFld08t4,"Filial"  	,1,1)
	oExcel:AddColumn(cFld084,cFld08t4,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld084,cFld08t4,"Dt.Emissao"	,1,1)
	oExcel:AddColumn(cFld084,cFld08t4,"Nota Fiscal"	,1,1)
	oExcel:AddColumn(cFld084,cFld08t4,"Serie NF"	,1,1)
	oExcel:AddColumn(cFld084,cFld08t4,"UF"			,1,1)
	oExcel:AddColumn(cFld084,cFld08t4,"Nome"		,1,1)
	oExcel:AddColumn(cFld084,cFld08t4,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld084,cFld08t4,"Insc.Est."	,1,1)
	oExcel:AddColumn(cFld084,cFld08t4,"CFOP"		,1,1)
	oExcel:AddColumn(cFld084,cFld08t4,"Vl. Contab."	,2,3)
	oExcel:AddColumn(cFld084,cFld08t4,"Base ICMS"	,2,3)
	oExcel:AddColumn(cFld084,cFld08t4,"ICMS"		,2,3)
	oExcel:AddColumn(cFld084,cFld08t4,"ICMS Isento"	,2,3)
	oExcel:AddColumn(cFld084,cFld08t4,"ICMS Outras"	,2,3)
	oExcel:AddColumn(cFld084,cFld08t4,"IPI"			,2,3)
				
Return(NIL)

/*/{Protheus.doc} Static Function Cab08P4b  
	Gera Relatório Ref. Crédito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function Cab08P4b()
	//PLANILHA 2 - DETALHE CREDITO OUTORGADO
  oExcel:AddworkSheet(cFld084b)
	oExcel:AddTable(cFld084b,cFld08t4)
	oExcel:AddColumn(cFld084b,cFld08t4,"Filial"  	,1,1)
	oExcel:AddColumn(cFld084b,cFld08t4,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld084b,cFld08t4,"Dt.Emissao"	,1,1)
	oExcel:AddColumn(cFld084b,cFld08t4,"Nota Fiscal"	,1,1)
	oExcel:AddColumn(cFld084b,cFld08t4,"Serie NF"	,1,1)
	oExcel:AddColumn(cFld084b,cFld08t4,"UF"			,1,1)
	oExcel:AddColumn(cFld084b,cFld08t4,"Nome"		,1,1)
	oExcel:AddColumn(cFld084b,cFld08t4,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld084b,cFld08t4,"Insc.Est."	,1,1)
	oExcel:AddColumn(cFld084b,cFld08t4,"CFOP"		,1,1)
	oExcel:AddColumn(cFld084b,cFld08t4,"Vl. Contab."	,2,3)
	oExcel:AddColumn(cFld084b,cFld08t4,"Base ICMS"	,2,3)
	oExcel:AddColumn(cFld084b,cFld08t4,"ICMS"		,2,3)
	oExcel:AddColumn(cFld084b,cFld08t4,"ICMS Isento"	,2,3)
	oExcel:AddColumn(cFld084b,cFld08t4,"ICMS Outras"	,2,3)
	oExcel:AddColumn(cFld084b,cFld08t4,"IPI"			,2,3)
				
Return(NIL)

/*/{Protheus.doc} Static Function Cab08P5  
	Gera Relatório Ref. Crédito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function Cab08P5()
	//PLANILHA 2 - DETALHE CREDITO OUTORGADO
    oExcel:AddworkSheet(cFld085)
	oExcel:AddTable(cFld085,cFld08t5)
	oExcel:AddColumn(cFld085,cFld08t5,"Filial"  	,1,1)
	oExcel:AddColumn(cFld085,cFld08t5,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld085,cFld08t5,"Dt.Emissao"	,1,1)
	oExcel:AddColumn(cFld085,cFld08t5,"Nota Fiscal"	,1,1)
	oExcel:AddColumn(cFld085,cFld08t5,"Serie NF"	,1,1)
	oExcel:AddColumn(cFld085,cFld08t5,"UF"			,1,1)
	oExcel:AddColumn(cFld085,cFld08t5,"Nome"		,1,1)
	oExcel:AddColumn(cFld085,cFld08t5,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld085,cFld08t5,"Insc.Est."	,1,1)
	oExcel:AddColumn(cFld085,cFld08t5,"CFOP"		,1,1)
	oExcel:AddColumn(cFld085,cFld08t5,"Vl. Contab."	,2,3)
	oExcel:AddColumn(cFld085,cFld08t5,"Base ICMS"	,2,3)
	oExcel:AddColumn(cFld085,cFld08t5,"ICMS"		,2,3)
	oExcel:AddColumn(cFld085,cFld08t5,"ICMS Isento"	,2,3)
	oExcel:AddColumn(cFld085,cFld08t5,"ICMS Outras"	,2,3)
	oExcel:AddColumn(cFld085,cFld08t5,"IPI"			,2,3)
				
Return(NIL)

/*/{Protheus.doc} Static Function Cab08P5b  
	Gera Relatório Ref. Crédito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function Cab08P5b()
	//PLANILHA 2 - DETALHE CREDITO OUTORGADO
  oExcel:AddworkSheet(cFld085b)
	oExcel:AddTable(cFld085b,cFld08t5)
	oExcel:AddColumn(cFld085b,cFld08t5,"Filial"  	,1,1)
	oExcel:AddColumn(cFld085b,cFld08t5,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld085b,cFld08t5,"Dt.Emissao"	,1,1)
	oExcel:AddColumn(cFld085b,cFld08t5,"Nota Fiscal"	,1,1)
	oExcel:AddColumn(cFld085b,cFld08t5,"Serie NF"	,1,1)
	oExcel:AddColumn(cFld085b,cFld08t5,"UF"			,1,1)
	oExcel:AddColumn(cFld085b,cFld08t5,"Nome"		,1,1)
	oExcel:AddColumn(cFld085b,cFld08t5,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld085b,cFld08t5,"Insc.Est."	,1,1)
	oExcel:AddColumn(cFld085b,cFld08t5,"CFOP"		,1,1)
	oExcel:AddColumn(cFld085b,cFld08t5,"Vl. Contab."	,2,3)
	oExcel:AddColumn(cFld085b,cFld08t5,"Base ICMS"	,2,3)
	oExcel:AddColumn(cFld085b,cFld08t5,"ICMS"		,2,3)
	oExcel:AddColumn(cFld085b,cFld08t5,"ICMS Isento"	,2,3)
	oExcel:AddColumn(cFld085b,cFld08t5,"ICMS Outras"	,2,3)
	oExcel:AddColumn(cFld085b,cFld08t5,"IPI"			,2,3)
				
Return(NIL)

/*/{Protheus.doc} Static Function Cab08P6  
	Gera Relatório Ref. Crédito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function Cab08P6()
	//PLANILHA 2 - DETALHE CREDITO OUTORGADO
  oExcel:AddworkSheet(cFld086)
	oExcel:AddTable(cFld086,cFld08t6)
	oExcel:AddColumn(cFld086,cFld08t6,"Filial"  	,1,1)
	oExcel:AddColumn(cFld086,cFld08t6,"Dt.Emissao"	,1,1)
	oExcel:AddColumn(cFld086,cFld08t6,"UF"			,1,1)
	oExcel:AddColumn(cFld086,cFld08t6,"Espécie"		,1,1)
	oExcel:AddColumn(cFld086,cFld08t6,"Serie NF"	,1,1)	
	oExcel:AddColumn(cFld086,cFld08t6,"Nota Fiscal"	,1,1)
	oExcel:AddColumn(cFld086,cFld08t6,"CFOP"		,1,1)	
	oExcel:AddColumn(cFld086,cFld08t6,"Nome"		,1,1)
	oExcel:AddColumn(cFld086,cFld08t6,"Vl. Total"	,2,3)
	oExcel:AddColumn(cFld086,cFld08t6,"Destino"		,1,1)
	oExcel:AddColumn(cFld086,cFld08t6,"Nro.DU-E"	,1,1)
	oExcel:AddColumn(cFld086,cFld08t6,"Dt.Embarque"	,1,1)
	oExcel:AddColumn(cFld086,cFld08t6,"Nro. BL"		,1,1)
Return(NIL)

/*/{Protheus.doc} Static Function Cab08P6b  
	Gera Relatório Ref. Crédito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function Cab08P6b()
	//PLANILHA 2 - DETALHE CREDITO OUTORGADO
  oExcel:AddworkSheet(cFld086b)
	oExcel:AddTable(cFld086b,cFld08t6)
	oExcel:AddColumn(cFld086b,cFld08t6,"Filial"  	,1,1)
	oExcel:AddColumn(cFld086b,cFld08t6,"Dt.Emissao"	,1,1)
	oExcel:AddColumn(cFld086b,cFld08t6,"UF"			,1,1)
	oExcel:AddColumn(cFld086b,cFld08t6,"Espécie"		,1,1)
	oExcel:AddColumn(cFld086b,cFld08t6,"Serie NF"	,1,1)	
	oExcel:AddColumn(cFld086b,cFld08t6,"Nota Fiscal"	,1,1)
	oExcel:AddColumn(cFld086b,cFld08t6,"CFOP"		,1,1)	
	oExcel:AddColumn(cFld086b,cFld08t6,"Nome"		,1,1)
	oExcel:AddColumn(cFld086b,cFld08t6,"Vl. Total"	,2,3)
	oExcel:AddColumn(cFld086b,cFld08t6,"Destino"		,1,1)
	oExcel:AddColumn(cFld086b,cFld08t6,"Nro.DU-E"	,1,1)
	oExcel:AddColumn(cFld086b,cFld08t6,"Dt.Embarque"	,1,1)
	oExcel:AddColumn(cFld086b,cFld08t6,"Nro. BL"		,1,1)
Return(NIL)

/*/{Protheus.doc} Static Function Cab08P7  
	Gera Relatório Ref. Crédito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function Cab08P7()
	//PLANILHA 2 - DETALHE CREDITO OUTORGADO
  oExcel:AddworkSheet(cFld087)
	oExcel:AddTable(cFld087,cFld08t7)
	oExcel:AddColumn(cFld087,cFld08t7,"Filial"  	,1,1)
	oExcel:AddColumn(cFld087,cFld08t7,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld087,cFld08t7,"Dt.Emissao"	,1,1)
	oExcel:AddColumn(cFld087,cFld08t7,"Nota Fiscal"	,1,1)
	oExcel:AddColumn(cFld087,cFld08t7,"Serie NF"	,1,1)
	oExcel:AddColumn(cFld087,cFld08t7,"UF"			,1,1)
	oExcel:AddColumn(cFld087,cFld08t7,"Nome"		,1,1)
	oExcel:AddColumn(cFld087,cFld08t7,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld087,cFld08t7,"Insc.Est."	,1,1)
	oExcel:AddColumn(cFld087,cFld08t7,"CFOP"		,1,1)
	oExcel:AddColumn(cFld087,cFld08t7,"Vl. Contab."	,2,3)
	oExcel:AddColumn(cFld087,cFld08t7,"Base ICMS"	,2,3)
	oExcel:AddColumn(cFld087,cFld08t7,"ICMS"		,2,3)
	oExcel:AddColumn(cFld087,cFld08t7,"ICMS Isento"	,2,3)
	oExcel:AddColumn(cFld087,cFld08t7,"ICMS Outras"	,2,3)
	oExcel:AddColumn(cFld087,cFld08t7,"IPI"			,2,3)

Return(nil)

/*/{Protheus.doc} Static Function Cab08P8  
	Gera Relatório Ref. Crédito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function Cab08P8()
	//PLANILHA 2 - DETALHE CREDITO OUTORGADO
  oExcel:AddworkSheet(cFld088)
	oExcel:AddTable(cFld088,cFld08t8)
	oExcel:AddColumn(cFld088,cFld08t8,"Filial"  	,1,1)
	oExcel:AddColumn(cFld088,cFld08t8,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld088,cFld08t8,"Dt.Emissao"	,1,1)
	oExcel:AddColumn(cFld088,cFld08t8,"Nota Fiscal"	,1,1)
	oExcel:AddColumn(cFld088,cFld08t8,"Serie NF"	,1,1)
	oExcel:AddColumn(cFld088,cFld08t8,"UF"			,1,1)
	oExcel:AddColumn(cFld088,cFld08t8,"Nome"		,1,1)
	oExcel:AddColumn(cFld088,cFld08t8,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld088,cFld08t8,"Insc.Est."	,1,1)
	oExcel:AddColumn(cFld088,cFld08t8,"CFOP"		,1,1)
	oExcel:AddColumn(cFld088,cFld08t8,"Vl. Contab."	,2,3)
	oExcel:AddColumn(cFld088,cFld08t8,"Base ICMS"	,2,3)
	oExcel:AddColumn(cFld088,cFld08t8,"ICMS"		,2,3)
	oExcel:AddColumn(cFld088,cFld08t8,"ICMS Isento"	,2,3)
	oExcel:AddColumn(cFld088,cFld08t8,"ICMS Outras"	,2,3)
	oExcel:AddColumn(cFld088,cFld08t8,"IPI"			,2,3)
				
Return(NIL)

/*/{Protheus.doc} Static Function Cab08P9  
	Gera Relatório Ref. Crédito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function Cab08P9()
	//PLANILHA 2 - DETALHE CREDITO OUTORGADO
  oExcel:AddworkSheet(cFld089)
	oExcel:AddTable(cFld089,cFld08t9)
	oExcel:AddColumn(cFld089,cFld08t9,"Filial"  	,1,1)
	oExcel:AddColumn(cFld089,cFld08t9,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld089,cFld08t9,"Dt.Emissao"	,1,1)
	oExcel:AddColumn(cFld089,cFld08t9,"Nota Fiscal"	,1,1)
	oExcel:AddColumn(cFld089,cFld08t9,"Serie NF"	,1,1)
	oExcel:AddColumn(cFld089,cFld08t9,"UF"			,1,1)
	oExcel:AddColumn(cFld089,cFld08t9,"Nome"		,1,1)
	oExcel:AddColumn(cFld089,cFld08t9,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld089,cFld08t9,"Insc.Est."	,1,1)
	oExcel:AddColumn(cFld089,cFld08t9,"CFOP"		,1,1)
	oExcel:AddColumn(cFld089,cFld08t9,"Vl. Contab."	,2,3)
	oExcel:AddColumn(cFld089,cFld08t9,"Base ICMS"	,2,3)
	oExcel:AddColumn(cFld089,cFld08t9,"ICMS"		,2,3)
	oExcel:AddColumn(cFld089,cFld08t9,"ICMS Isento"	,2,3)
	oExcel:AddColumn(cFld089,cFld08t9,"ICMS Outras"	,2,3)
	oExcel:AddColumn(cFld089,cFld08t9,"IPI"			,2,3)
				
Return(NIL)

/*/{Protheus.doc} Static Function Cab08P0  
	Gera Relatório Ref. Crédito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function Cab08P0()
	//PLANILHA 2 - DETALHE CREDITO OUTORGADO
  oExcel:AddworkSheet(cFld080)
	oExcel:AddTable(cFld080,cFld08t0)
	oExcel:AddColumn(cFld080,cFld08t0,"Filial"  	,1,1)
	oExcel:AddColumn(cFld080,cFld08t0,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld080,cFld08t0,"Dt.Emissao"	,1,1)
	oExcel:AddColumn(cFld080,cFld08t0,"Nota Fiscal"	,1,1)
	oExcel:AddColumn(cFld080,cFld08t0,"Serie NF"	,1,1)
	oExcel:AddColumn(cFld080,cFld08t0,"UF"			,1,1)
	oExcel:AddColumn(cFld080,cFld08t0,"Nome"		,1,1)
	oExcel:AddColumn(cFld080,cFld08t0,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld080,cFld08t0,"Insc.Est."	,1,1)
	oExcel:AddColumn(cFld080,cFld08t0,"CFOP"		,1,1)
	oExcel:AddColumn(cFld080,cFld08t0,"Vl. Contab."	,2,3)
	oExcel:AddColumn(cFld080,cFld08t0,"Base ICMS"	,2,3)
	oExcel:AddColumn(cFld080,cFld08t0,"ICMS"		,2,3)
	oExcel:AddColumn(cFld080,cFld08t0,"ICMS Isento"	,2,3)
	oExcel:AddColumn(cFld080,cFld08t0,"ICMS Outras"	,2,3)
	oExcel:AddColumn(cFld080,cFld08t0,"IPI"			,2,3)
				
Return(NIL)

/*/{Protheus.doc} Static Function Cab08PA  
Gera Relatório Ref. Crédito Outorgado
@author Abel Babini Filho
@since 01/04/2019
@version 01
/*/
Static Function Cab08PA()
	Local nColBr08	:= 0
	//PLANILHA 1 - QUADROS
  oExcel:AddworkSheet(cFld08)
	oExcel:AddTable(cFld08,cFld08ta)
	oExcel:AddColumn(cFld08,cFld08ta,"Filial"	,1,1)
	oExcel:AddColumn(cFld08,cFld08ta,"Descrição",1,1)
	oExcel:AddColumn(cFld08,cFld08ta,"Valor"	,2,2)
RETURN(NIL)  

/*/{Protheus.doc} Static Function GEx08P1  
Gera Relatório Ref. Crédito Outorgado
@author Abel Babini Filho
@since 01/04/2019
@version 01
/*/
Static Function GEx08P1()
	Local nExcel1
	oExcel:AddRow(cFld08,cFld08t1,{"","CRÉDITO OUTORGADO INTERESTADUAL 7%",""})
	FOR nExcel1 := 1 TO Len(aBrw08p1)
		oExcel:AddRow(cFld08,cFld08t1,aBrw08p1[nExcel1])
	Next nExcel1
	//Linha Em branco
	oExcel:AddRow(cFld08,cFld08t1,{"","",""})
	//
	oExcel:AddRow(cFld08,cFld08t1,{"","CRÉDITO OUTORGADO ESTADUAL 5%",""})
	FOR nExcel1 := 1 TO Len(aBrw08p2)
		oExcel:AddRow(cFld08,cFld08t1,aBrw08p2[nExcel1])
	Next nExcel1
	//Linha Em branco
	oExcel:AddRow(cFld08,cFld08t1,{"","",""})
	//
	oExcel:AddRow(cFld08,cFld08t1,{"","CRÉDITO OUTORGADO ESTADUAL 7%",""})
	FOR nExcel1 := 1 TO Len(aBrw08p3)
		oExcel:AddRow(cFld08,cFld08t1,aBrw08p3[nExcel1])
	Next nExcel1
	//Linha Em branco
	oExcel:AddRow(cFld08,cFld08t1,{"","",""})
Return(NIL)

/*/{Protheus.doc} Static Function GEx08P2  
Gera Relatório Ref. Crédito Outorgado
@author Abel Babini Filho
@since 01/04/2019
@version 01
/*/
Static Function GEx08P2()
	Local _nTLin	:= 0
	Local _nTGer	:= 0
	Local nCol		:= 0
	Local nPos		:= 0
	Local aExRow	:= {}
	Local aExTt		:= {}
	Local aExVz		:= {}
	Local nExcel1
	
	//Inicializa Array da Linha em Branco
	AADD(aExVz,{})
	//AADD(aExVz[1],"")
	//AADD(aExVz[1],"")
	FOR nCol := 1 TO nQNCM+3
		AADD(aExVz[1],"")
	NEXT nCol
	
	//Inicializa Array do Total das Colunas
	AADD(aExTt,{})
	AADD(aExTt[1],"")
	AADD(aExTt[1],"TOTAL")
	FOR nCol := 1 TO nQNCM+1
		AADD(aExTt[1],0)
	NEXT nCol
	
		
	FOR nExcel1 := 1 TO Len(aBrw08Rs)
		
		//AADD(aExRow,{})
		nPos 	:= Len(aExRow)
		_nTLin	:= 0
		
		FOR nCol := 1 TO nQNCM+2

			//AADD(aExRow[nPos], aBrw08Rs[nExcel1,nCol])
			If nCol > 2
				//_nTLin			+= aBrw08Rs[nExcel1,nCol]
				_nTGer			+= aBrw08Rs[nExcel1,nCol]
				aExTt[1,nCol] 	+= aBrw08Rs[nExcel1,nCol]
			Endif
		NEXT nCol
		//AADD(aExRow[nExcel1],_nTLin)
		//oExcel:AddRow(cFld082,cFld08t2,aExRow[nExcel1])
		oExcel:AddRow(cFld082,cFld08t2,aBrw08Rs[nExcel1])
	NEXT nExcel1
	
	oExcel:AddRow(cFld082,cFld08t2,aExVz[1])
	
	aExTt[1,nQNCM+3] := _nTGer
	IF Len(aBrw08Rs) > 0
		oExcel:AddRow(cFld082,cFld08t2,aExTt[1])
	ENDIF
	
Return

/*/{Protheus.doc} Static Function GEx08P3  
Gera Relatório Ref. Crédito Outorgado
@author Abel Babini Filho
@since 01/04/2019
@version 01
/*/
Static Function GEx08P3()
	Local nExcel1
	//PLANILHA 2 - FATURAMENTO		
	FOR nExcel1 := 1 TO Len(aBrw08x1)
		oExcel:AddRow(cFld083,cFld08t3,aBrw08x1[nExcel1])
	NEXT nExcel1
	oExcel:AddRow(cFld083,cFld08t3,{"","","","","","","","","","","","","","","",""})

Return

/*/{Protheus.doc} Static Function GEx08P3b  
Gera Relatório Ref. Crédito Outorgado
@author Abel Babini Filho
@since 01/04/2019
@version 01
/*/
Static Function GEx08P3b()
	Local nExcel1
	//PLANILHA 2 - FATURAMENTO		
	FOR nExcel1 := 1 TO Len(aBrw08x1)
		oExcel:AddRow(cFld083b,cFld08t3,aBrw08x1[nExcel1])
	NEXT nExcel1
	oExcel:AddRow(cFld083b,cFld08t3,{"","","","","","","","","","","","","","","",""})

Return

/*/{Protheus.doc} Static Function GEx08P4  
Gera Relatório Ref. Crédito Outorgado
@author Abel Babini Filho
@since 01/04/2019
@version 01
/*/
Static Function GEx08P4()
	Local nExcel1
	//PLANILHA 2 - FATURAMENTO		
	FOR nExcel1 := 1 TO Len(aBrw08x2)
		oExcel:AddRow(cFld084,cFld08t4,aBrw08x2[nExcel1])
	NEXT nExcel1
	oExcel:AddRow(cFld084,cFld08t4,{"","","","","","","","","","","","","","","",""})

Return

/*/{Protheus.doc} Static Function GEx08P4b  
Gera Relatório Ref. Crédito Outorgado
@author Abel Babini Filho
@since 01/04/2019
@version 01
/*/
Static Function GEx08P4b()
	Local nExcel1
	//PLANILHA 2 - FATURAMENTO		
	FOR nExcel1 := 1 TO Len(aBrw08x2)
		oExcel:AddRow(cFld084b,cFld08t4,aBrw08x2[nExcel1])
	NEXT nExcel1
	oExcel:AddRow(cFld084b,cFld08t4,{"","","","","","","","","","","","","","","",""})

Return

/*/{Protheus.doc} Static Function GEx08P5  
Gera Relatório Ref. Crédito Outorgado
@author Abel Babini Filho
@since 01/04/2019
@version 01
/*/
Static Function GEx08P5()
	Local nExcel1
	//PLANILHA 2 - FATURAMENTO		
	FOR nExcel1 := 1 TO Len(aBrw08x3)
		oExcel:AddRow(cFld085,cFld08t5,aBrw08x3[nExcel1])
	NEXT nExcel1
	oExcel:AddRow(cFld085,cFld08t5,{"","","","","","","","","","","","","","","",""})

Return

/*/{Protheus.doc} Static Function GEx08P5b  
Gera Relatório Ref. Crédito Outorgado
@author Abel Babini Filho
@since 01/04/2019
@version 01
/*/
Static Function GEx08P5b()
	Local nExcel1
	//PLANILHA 2 - FATURAMENTO		
	FOR nExcel1 := 1 TO Len(aBrw08x3)
		oExcel:AddRow(cFld085b,cFld08t5,aBrw08x3[nExcel1])
	NEXT nExcel1
	oExcel:AddRow(cFld085b,cFld08t5,{"","","","","","","","","","","","","","","",""})

Return

/*/{Protheus.doc} Static Function GEx08P6  
Gera Relatório Ref. Crédito Outorgado
@author Abel Babini Filho
@since 01/04/2019
@version 01
/*/
Static Function GEx08P6()
	Local nExcel1
	//PLANILHA 2 - FATURAMENTO		
	FOR nExcel1 := 1 TO Len(aBrw08x4)
		oExcel:AddRow(cFld086,cFld08t6,aBrw08x4[nExcel1])
	NEXT nExcel1
	oExcel:AddRow(cFld086,cFld08t6,{"","","","","","","","","","","","",""})

Return

/*/{Protheus.doc} Static Function GEx08P6b  
Gera Relatório Ref. Crédito Outorgado
@author Abel Babini Filho
@since 01/04/2019
@version 01
/*/
Static Function GEx08P6b()
	Local nExcel1
	//PLANILHA 2 - FATURAMENTO		
	FOR nExcel1 := 1 TO Len(aBrw08x4)
		oExcel:AddRow(cFld086b,cFld08t6,aBrw08x4[nExcel1])
	NEXT nExcel1
	oExcel:AddRow(cFld086b,cFld08t6,{"","","","","","","","","","","","",""})

Return

/*/{Protheus.doc} Static Function GEx08P7  
Gera Relatório Ref. Crédito Outorgado
@author Abel Babini Filho
@since 01/04/2019
@version 01
/*/
Static Function GEx08P7()
	Local nExcel1
	//PLANILHA 2 - FATURAMENTO		
	FOR nExcel1 := 1 TO Len(aBrw08x5)
		oExcel:AddRow(cFld087,cFld08t7,aBrw08x5[nExcel1])
	NEXT nExcel1
	oExcel:AddRow(cFld087,cFld08t7,{"","","","","","","","","","","","","","","",""})

Return

/*/{Protheus.doc} Static Function GEx08P8  
Gera Relatório Ref. Crédito Outorgado
@author Abel Babini Filho
@since 01/04/2019
@version 01
/*/
Static Function GEx08P8()
	Local nExcel1
	//PLANILHA 2 - FATURAMENTO		
	FOR nExcel1 := 1 TO Len(aBrw08x6)
		oExcel:AddRow(cFld088,cFld08t8,aBrw08x6[nExcel1])
	NEXT nExcel1
	oExcel:AddRow(cFld088,cFld08t8,{"","","","","","","","","","","","","","","",""})

Return

/*/{Protheus.doc} Static Function GEx08P9  
Gera Relatório Ref. Crédito Outorgado
@author Abel Babini Filho
@since 01/04/2019
@version 01
/*/
Static Function GEx08P9()
	Local nExcel1
	//PLANILHA 2 - FATURAMENTO		
	FOR nExcel1 := 1 TO Len(aBrw08x7)
		oExcel:AddRow(cFld089,cFld08t9,aBrw08x7[nExcel1])
	NEXT nExcel1
	oExcel:AddRow(cFld089,cFld08t9,{"","","","","","","","","","","","","","","",""})

Return

/*/{Protheus.doc} Static Function GEx08P0  
Gera Relatório Ref. Crédito Outorgado
@author Abel Babini Filho
@since 01/04/2019
@version 01
/*/
Static Function GEx08P0()
	Local nExcel1
	//PLANILHA 2 - FATURAMENTO		
	FOR nExcel1 := 1 TO Len(aBrw08x8)
		oExcel:AddRow(cFld080,cFld08t0,aBrw08x8[nExcel1])
	NEXT nExcel1
	oExcel:AddRow(cFld080,cFld08t0,{"","","","","","","","","","","","","","","",""})

Return

/*/{Protheus.doc} Static Function GEx08PA  
Gera Relatório Ref. Crédito Outorgado
@author Abel Babini Filho
@since 01/04/2019
@version 01
/*/
Static Function GEx08PA()
	Local nExcel1
	//
	oExcel:AddRow(cFld08,cFld08ta,{"","DEMONSTRATIVO CRÉDITO OUTORGADO ESTADUAL 5%",""})
	FOR nExcel1 := 1 TO Len(aBrw08dm)
		oExcel:AddRow(cFld08,cFld08ta,aBrw08dm[nExcel1])
	Next nExcel1
	//Linha Em branco
	oExcel:AddRow(cFld08,cFld08ta,{"","",""})
	//
Return(NIL)
// FIM n.040923  - Relatorio Crédito Outorgadoa - Abel Babini - 20/08/2019

// INICIO n.050629  - Relatorio Outras Saidas - Abel Babini - 02/09/2019
/*/{Protheus.doc} Static Function xABrw09  
	Carrega da dados Ref. Outras Saídas 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function xABrw09()
	Local cClass:=''
	Local _i

	//Cria array utilizado como legenda e como classificação na tabela temporária de Totais de Outras Saidas
	//Nao alterar a ordem de criação do array abaixo
	AAdd(aClassif,"01- Distr. Cesta Básica")
	AAdd(aClassif,"02- Distr. Cesta Básica Frango")
	AAdd(aClassif,"03- Dev. Cesta Básica")
	AAdd(aClassif,"04- Remessa Estadual Análise")
	AAdd(aClassif,"05- Remessa Interestadual Análise")
	AAdd(aClassif,"06- Remessa Estadual Garantia")
	AAdd(aClassif,"07- Remessa Interestadual Garantia")
	AAdd(aClassif,"08- Retorno de Aluguel")
	AAdd(aClassif,"09- Remessa Degustação")
	AAdd(aClassif,"10- Premiação")
	AAdd(aClassif,"11- Remessa Integrado")
	AAdd(aClassif,"12- Outras Remessas 2")
	AAdd(aClassif,"13- Outros Retornos 2")
	AAdd(aClassif,"14- *** Sem Classificação ***")	
	//AAdd(aClassif,"8- *** Sem Classificação ***")

	If Select(cAlB09Dt) > 0
		(cAlB09Dt)->(dbCloseArea())
	Endif
	cAlB09Dt:=GetNextAlias()

	nA09T001 := 0
	nA09T002 := 0
	nA09T003 := 0
		
	nA09T021 := 0
	nA09T022 := 0
	nA09T023 := 0

	nA09T031 := 0
	nA09T032 := 0
	nA09T033 := 0

	nA09T041 := 0
	nA09T042 := 0
	nA09T043 := 0

	nA09T051 := 0
	nA09T052 := 0
	nA09T053 := 0

	nA09T061 := 0
	nA09T062 := 0
	nA09T063 := 0

	nA09T071 := 0
	nA09T072 := 0
	nA09T073 := 0

	nA09T081 := 0
	nA09T082 := 0
	nA09T083 := 0

	nA09T091 := 0
	nA09T092 := 0
	nA09T093 := 0

	nA09T101 := 0
	nA09T102 := 0
	nA09T103 := 0

	nA09T111 := 0
	nA09T112 := 0
	nA09T113 := 0

	nA09T121 := 0
	nA09T122 := 0
	nA09T123 := 0

	nA09T131 := 0
	nA09T132 := 0
	nA09T133 := 0

	nA09T141 := 0
	nA09T142 := 0
	nA09T143 := 0

	nA09T151 := 0
	nA09T152 := 0
	nA09T153 := 0


	BeginSQL  Alias cAlB09Dt
		column DTENTRADA as Date
		column DTENTRADAORI as Date
		column DTCANC	as Date
		SELECT
			SFT.FT_FILIAL		AS FILIAL, 
			SFT.FT_ENTRADA		AS DTENTRADA, 
			SFT.FT_SERIE		AS SERIE,
			SFT.FT_NFISCAL		AS NFISCAL, 
			SFT.FT_ITEM			AS ITEM,
			SFT.FT_CLIEFOR		AS CLIEFOR, 
			SFT.FT_LOJA			AS LOJA,
			CASE WHEN (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) THEN SA2.A2_NOME ELSE SA1.A1_NOME END AS NOME,
			CASE WHEN (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) THEN SA2.A2_CGC ELSE SA1.A1_CGC END AS CGC,
			SFT.FT_PRODUTO		AS CODPROD, 
			SB1.B1_DESC			AS PRODUTO,
			SFT.FT_QUANT		AS QUANT,
			SFT.FT_PRCUNIT		AS PRCUNIT,
			SFT.FT_TOTAL		AS TOTAL,
			SFT.FT_VALCONT		AS VALCONT,
			SFT.FT_BASEICM		AS ICMSBASE,
			SFT.FT_ALIQICM		AS ICMSALIQ,
			SFT.FT_VALICM		AS ICMSVAL,
			SFT.FT_ICMSRET		AS ICMSRET,
			SFT.FT_OUTRICM		AS ICMSOUTR,
			SFT.FT_DESCONT		AS DESCONT,
			SFT.FT_SEGURO		AS SEGURO,
			SFT.FT_DESPESA		AS DESPESA,
			SFT.FT_FRETE		AS FRETE,
			SFT.FT_VALPIS		AS VALPIS,
			SFT.FT_VALCOF		AS VALCOF,
			SFT.FT_DTCANC		AS DTCANC,
			SFT.FT_OBSERV		AS OBSERV,
			SFT.FT_CONTA		AS CONTACONT,
			SFT.FT_TES			AS TES, 
			SFT.FT_CFOP			AS CFOP, 
			SFT.FT_TIPOMOV		AS TIPOMOV,
			SFT.FT_TIPO			AS TIPO,
			SFT.FT_NFORI		AS NFORI,
			SFT.FT_SERORI		AS SERORI,
			SFT.FT_ITEMORI		AS ITEMORI,
			SFT.FT_ESPECIE		AS ESPECIE,
			SF4.F4_ICM			AS CALCICMS,
			CASE WHEN SF4.F4_CREDICM = 'S' THEN 'SIM' ELSE 'NAO' END AS CREDICMS,
			SF4.F4_PISCOF		AS CALCPIS,
			CASE WHEN SF4.F4_PISCOF = '3' AND SF4.F4_PISCRED IN ('1','2') THEN 'SIM' ELSE 'NAO' END AS CREDPIS
		FROM %TABLE:SFT% SFT (NOLOCK)
		LEFT JOIN %TABLE:SB1% SB1 (NOLOCK) ON
			SB1.%notDel%
		AND SB1.B1_COD = SFT.FT_PRODUTO
		LEFT JOIN %TABLE:SA2% SA2 (NOLOCK) ON
			SA2.%notDel%
		AND SA2.A2_COD = SFT.FT_CLIEFOR
		AND SA2.A2_LOJA = SFT.FT_LOJA
		AND ( (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) )
		LEFT JOIN %TABLE:SA1% SA1 (NOLOCK) ON
			SA1.%notDel%
		AND SA1.A1_COD = SFT.FT_CLIEFOR
		AND SA1.A1_LOJA = SFT.FT_LOJA
		AND ( (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO IN ('D','B') ) )
		LEFT JOIN %TABLE:SF4% SF4 (NOLOCK) ON
			SF4.%notDel%
		AND SF4.F4_CODIGO = SFT.FT_TES
		WHERE SFT.FT_FILIAL = %xFilial:SFT%
		AND SFT.FT_ENTRADA BETWEEN %Exp:DToS(_mvpr01)% AND %Exp:DToS(_mvpr02)%
		AND SFT.FT_CFOP IN ('5949','6949','7949')
		AND SFT.FT_DTCANC = ''
		AND SFT.FT_VALICM > 0
		AND SFT.%notDel%
	EndSQL
	//Chamado n.058111 - OS n.059575 - Abel Babini - 11/05/2020 - Ajuste na query para considerar toda operação de outras saídas, independente do campo F4_CREDICM, mas que o campo FT_VALICM > 0
	//AND SF4.F4_CREDICM = 'S'
	//Tabela Detalhe a Classificar - Completa
	If Select(cAlB09Z1) > 0
		(cAlB09Z1)->(dbCloseArea())
	Endif
	cAlB09Z1:=GetNextAlias()

	_aFields	:= CriaExtr(T09OUT01)
	_aIndex		:= CriaInd(T09OUT01)
	oAlB09D1	:= CriaTmpT(cAlB09Z1, _aFields, _aIndex)

	//Tabela Cesta Basiica
	If Select(cAlB09Z2) > 0
		(cAlB09Z2)->(dbCloseArea())
	Endif
	cAlB09Z2:=GetNextAlias()

	_aFields	:= CriaExtr(T09OUT02)
	_aIndex		:= CriaInd(T09OUT02)
	oAlB09D2	:= CriaTmpT(cAlB09Z2, _aFields, _aIndex)

	DbSelectArea(cAlB09Dt)
	(cAlB09Dt)->(DbGoTop())
	While !(cAlB09Dt)->(eof())
		cClass	:= xRecCl09((cAlB09Dt)->FILIAL+(cAlB09Dt)->CLIEFOR+(cAlB09Dt)->LOJA+DTOS((cAlB09Dt)->DTENTRADA)+(cAlB09Dt)->SERIE+(cAlB09Dt)->NFISCAL+(cAlB09Dt)->ITEM)//' 8'
		If Alltrim(cClass) == ''
			If  Alltrim((cAlB09Dt)->CLIEFOR) == Alltrim(_cMVFrCB) .AND.;
					Alltrim((cAlB09Dt)->LOJA) == Alltrim(_cMVLjCB) .AND.;
					Alltrim((cAlB09Dt)->CODPROD) <> Alltrim(_cMVPrFr)
				cClass:=' 1'
				nA09T021 += (cAlB09Dt)->VALCONT
				nA09T022 += (cAlB09Dt)->ICMSVAL
				nA09T023 += (cAlB09Dt)->QUANT
			ElseIf  Alltrim((cAlB09Dt)->CLIEFOR) == Alltrim(_cMVFrCB) .AND.;
							Alltrim((cAlB09Dt)->LOJA) == Alltrim(_cMVLjCB) .AND.;
							Alltrim((cAlB09Dt)->CODPROD) == Alltrim(_cMVPrFr)
				cClass:=' 2'
				nA09T031 += (cAlB09Dt)->VALCONT
				nA09T032 += (cAlB09Dt)->ICMSVAL
				nA09T033 += (cAlB09Dt)->QUANT
			ElseIf  Alltrim((cAlB09Dt)->CLIEFOR) == Alltrim(_cMVFDCB) .AND.;
							Alltrim((cAlB09Dt)->LOJA) == Alltrim(_cMVLDCB)
				cClass:=' 3'
				nA09T041 += (cAlB09Dt)->VALCONT
				nA09T042 += (cAlB09Dt)->ICMSVAL
				nA09T043 += (cAlB09Dt)->QUANT
			ElseIf  Alltrim((cAlB09Dt)->CODPROD) == Alltrim(_cMVPrFr) .AND.;
						((Alltrim((cAlB09Dt)->CLIEFOR) == '049564' .AND. Alltrim((cAlB09Dt)->LOJA) == '00') .OR.;
						(Alltrim((cAlB09Dt)->CLIEFOR) == '049581' .AND. Alltrim((cAlB09Dt)->LOJA) == '00'))
				cClass:=' 4'
				nA09T051 += (cAlB09Dt)->VALCONT
				nA09T052 += (cAlB09Dt)->ICMSVAL
				nA09T053 += (cAlB09Dt)->QUANT
			ElseIf  Alltrim((cAlB09Dt)->CODPROD) == '100276' .AND.;
							Alltrim((cAlB09Dt)->CLIEFOR) == '052236' .AND. Alltrim((cAlB09Dt)->LOJA) == '00'
				cClass:=' 5'
				nA09T061 += (cAlB09Dt)->VALCONT
				nA09T062 += (cAlB09Dt)->ICMSVAL
				nA09T063 += (cAlB09Dt)->QUANT
			ElseIf  Alltrim((cAlB09Dt)->CFOP) == '5949'
				cClass:=' 6'
				nA09T071 += (cAlB09Dt)->VALCONT
				nA09T072 += (cAlB09Dt)->ICMSVAL
				nA09T073 += (cAlB09Dt)->QUANT
			ElseIf  Alltrim((cAlB09Dt)->CFOP) == '6949'
				cClass:=' 7'
				nA09T081 += (cAlB09Dt)->VALCONT
				nA09T082 += (cAlB09Dt)->ICMSVAL
				nA09T083 += (cAlB09Dt)->QUANT
			Else
				cClass:='14'
				nA09T151 += (cAlB09Dt)->VALCONT
				nA09T152 += (cAlB09Dt)->ICMSVAL
				nA09T153 += (cAlB09Dt)->QUANT
			Endif
		ELSE
			If cClass ==' 1'
				nA09T021 += (cAlB09Dt)->VALCONT
				nA09T022 += (cAlB09Dt)->ICMSVAL
				nA09T023 += (cAlB09Dt)->QUANT
			ElseIf  cClass ==' 2'
				nA09T031 += (cAlB09Dt)->VALCONT
				nA09T032 += (cAlB09Dt)->ICMSVAL
				nA09T033 += (cAlB09Dt)->QUANT
			ElseIf  cClass ==' 3'
				nA09T041 += (cAlB09Dt)->VALCONT
				nA09T042 += (cAlB09Dt)->ICMSVAL
				nA09T043 += (cAlB09Dt)->QUANT
			ElseIf  cClass ==' 4'
				nA09T051 += (cAlB09Dt)->VALCONT
				nA09T052 += (cAlB09Dt)->ICMSVAL
				nA09T053 += (cAlB09Dt)->QUANT
			ElseIf  cClass ==' 5'
				nA09T061 += (cAlB09Dt)->VALCONT
				nA09T062 += (cAlB09Dt)->ICMSVAL
				nA09T063 += (cAlB09Dt)->QUANT
			ElseIf  cClass ==' 6'
				nA09T071 += (cAlB09Dt)->VALCONT
				nA09T072 += (cAlB09Dt)->ICMSVAL
				nA09T073 += (cAlB09Dt)->QUANT
			ElseIf  cClass ==' 7'
				nA09T081 += (cAlB09Dt)->VALCONT
				nA09T082 += (cAlB09Dt)->ICMSVAL
				nA09T083 += (cAlB09Dt)->QUANT
			ElseIf  cClass ==' 8'
				nA09T091 += (cAlB09Dt)->VALCONT
				nA09T092 += (cAlB09Dt)->ICMSVAL
				nA09T093 += (cAlB09Dt)->QUANT
			ElseIf  cClass ==' 9'
				nA09T101 += (cAlB09Dt)->VALCONT
				nA09T102 += (cAlB09Dt)->ICMSVAL
				nA09T103 += (cAlB09Dt)->QUANT
			ElseIf  cClass =='10'
				nA09T111 += (cAlB09Dt)->VALCONT
				nA09T112 += (cAlB09Dt)->ICMSVAL
				nA09T113 += (cAlB09Dt)->QUANT
			ElseIf  cClass =='11'
				nA09T121 += (cAlB09Dt)->VALCONT
				nA09T122 += (cAlB09Dt)->ICMSVAL
				nA09T123 += (cAlB09Dt)->QUANT
			ElseIf  cClass =='12'
				nA09T131 += (cAlB09Dt)->VALCONT
				nA09T132 += (cAlB09Dt)->ICMSVAL
				nA09T133 += (cAlB09Dt)->QUANT
			ElseIf  cClass =='13'
				nA09T141 += (cAlB09Dt)->VALCONT
				nA09T142 += (cAlB09Dt)->ICMSVAL
				nA09T143 += (cAlB09Dt)->QUANT
			Else
				nA09T151 += (cAlB09Dt)->VALCONT
				nA09T152 += (cAlB09Dt)->ICMSVAL
				nA09T153 += (cAlB09Dt)->QUANT
			Endif
			
		Endif
		//TOTAIS
		nA09T001 += (cAlB09Dt)->VALCONT
		nA09T002 += (cAlB09Dt)->ICMSVAL
		nA09T003 += (cAlB09Dt)->QUANT

		RECLOCK(cAlB09Z1,.T.)
			(cAlB09Z1)->CLASSIF 	:= cClass
			(cAlB09Z1)->FILIAL 		:= (cAlB09Dt)->FILIAL
			(cAlB09Z1)->DTENTRADA := (cAlB09Dt)->DTENTRADA
			(cAlB09Z1)->NFSERIE 	:= (cAlB09Dt)->SERIE
			(cAlB09Z1)->NF 				:= (cAlB09Dt)->NFISCAL
			(cAlB09Z1)->NFITEM 		:= (cAlB09Dt)->ITEM
			(cAlB09Z1)->CLIEFOR 	:= (cAlB09Dt)->CLIEFOR
			(cAlB09Z1)->LOJA 			:= (cAlB09Dt)->LOJA
			(cAlB09Z1)->NOME 			:= (cAlB09Dt)->NOME
			(cAlB09Z1)->CNPJ 			:= (cAlB09Dt)->CGC
			(cAlB09Z1)->CODPROD 	:= (cAlB09Dt)->CODPROD
			(cAlB09Z1)->DESCPROD	:= (cAlB09Dt)->PRODUTO
			(cAlB09Z1)->CFOP 			:= (cAlB09Dt)->CFOP
			(cAlB09Z1)->QUANT			:= (cAlB09Dt)->QUANT
			(cAlB09Z1)->PRCUNIT 	:= (cAlB09Dt)->PRCUNIT
			(cAlB09Z1)->TOTAL			:= (cAlB09Dt)->TOTAL
			(cAlB09Z1)->VLCONT 		:= (cAlB09Dt)->VALCONT
			(cAlB09Z1)->ICMSBASE	:= (cAlB09Dt)->ICMSBASE
			(cAlB09Z1)->ICMSALIQ	:= (cAlB09Dt)->ICMSALIQ
			(cAlB09Z1)->ICMSVAL		:= (cAlB09Dt)->ICMSVAL
			(cAlB09Z1)->ICMSRET		:= (cAlB09Dt)->ICMSRET
			(cAlB09Z1)->ICMSOUTR	:= (cAlB09Dt)->ICMSOUTR
			(cAlB09Z1)->DESCONT		:= (cAlB09Dt)->DESCONT
			(cAlB09Z1)->SEGURO		:= (cAlB09Dt)->SEGURO
			(cAlB09Z1)->DESPESA		:= (cAlB09Dt)->DESPESA
			(cAlB09Z1)->FRETE			:= (cAlB09Dt)->FRETE
			(cAlB09Z1)->DTCANC		:= (cAlB09Dt)->DTCANC
			(cAlB09Z1)->OBSERV		:= (cAlB09Dt)->OBSERV
			(cAlB09Z1)->CONTACONT	:= (cAlB09Dt)->CONTACONT
			(cAlB09Z1)->TES				:= (cAlB09Dt)->TES
			(cAlB09Z1)->TIPOMOV		:= (cAlB09Dt)->TIPOMOV
			(cAlB09Z1)->TIPO			:= (cAlB09Dt)->TIPO
			(cAlB09Z1)->ESPECIE		:= (cAlB09Dt)->ESPECIE
			(cAlB09Z1)->CALCICMS	:= (cAlB09Dt)->CALCICMS
			(cAlB09Z1)->CREDICMS	:= (cAlB09Dt)->CREDICMS
			(cAlB09Z1)->CALCPIS		:= (cAlB09Dt)->CALCPIS
			(cAlB09Z1)->CREDPIS		:= (cAlB09Dt)->CREDPIS
			(cAlB09Z1)->VALPIS		:= (cAlB09Dt)->VALPIS
			(cAlB09Z1)->VALCOF		:= (cAlB09Dt)->VALCOF
		MSUNLOCK()	
	
		(cAlB09Dt)->(DbSkip())
	EndDo
	For _i:=1 to 15
		RECLOCK(cAlB09Z2,.T.)
			(cAlB09Z2)->FILIAL := xFilial('SFT')
			IF _i < 15
				(cAlB09Z2)->CLASSIF := aClassif[_i]
				(cAlB09Z2)->QUANT := &('nA09T'+StrZero(_i+1,2)+'3')
				(cAlB09Z2)->VLCONT := &('nA09T'+StrZero(_i+1,2)+'1')
				(cAlB09Z2)->ICMSVAL := &('nA09T'+StrZero(_i+1,2)+'2')
			ELSE
				(cAlB09Z2)->CLASSIF := "TOTAL"
				(cAlB09Z2)->QUANT := nA09T003
				(cAlB09Z2)->VLCONT := nA09T001
				(cAlB09Z2)->ICMSVAL := nA09T002
			ENDIF
		MSUNLOCK()
	Next _i
	(cAlB09Z2)->(dbGoTop())
	(cAlB09Dt)->(dbCloseArea())	

	IF nOpMdl	== 1
		MsgRun( "Atualizando dados - Demonstrativo, aguarde...",,{ || xABrw05() } ) //DEMONSTRATIVO
	ELSEIF nOpMdl	== 2 .or. nOpMdl == 4
		//MsgRun( "Atualizando dados - Abertura GIA, aguarde...",,{ || Static Call(ADFIS038R,xABrw27) } ) //DEMONSTRATIVO
		//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
		MsgRun( "Atualizando dados - Abertura GIA, aguarde...",,{ || u_FIS038B0() } ) //DEMONSTRATIVO

	ENDIF

	SysRefresh()
Return

/*/{Protheus.doc} Static Function xBr09Clf  
	Aplica classificação dos itens do Rel. Outras Saídas
	@author Abel Babini Filho
	@since 03/12/2019
	@version 01
	/*/
Static Function xBr09Clf(nClassif)
	Local cMarca
	Local _i

	nA09T001 := 0
	nA09T002 := 0
	nA09T003 := 0
		
	nA09T021 := 0
	nA09T022 := 0
	nA09T023 := 0

	nA09T031 := 0
	nA09T032 := 0
	nA09T033 := 0

	nA09T041 := 0
	nA09T042 := 0
	nA09T043 := 0

	nA09T051 := 0
	nA09T052 := 0
	nA09T053 := 0

	nA09T061 := 0
	nA09T062 := 0
	nA09T063 := 0

	nA09T071 := 0
	nA09T072 := 0
	nA09T073 := 0

	nA09T081 := 0
	nA09T082 := 0
	nA09T083 := 0

	nA09T091 := 0
	nA09T092 := 0
	nA09T093 := 0

	nA09T101 := 0
	nA09T102 := 0
	nA09T103 := 0

	nA09T111 := 0
	nA09T112 := 0
	nA09T113 := 0

	nA09T121 := 0
	nA09T122 := 0
	nA09T123 := 0

	nA09T131 := 0
	nA09T132 := 0
	nA09T133 := 0

	nA09T141 := 0
	nA09T142 := 0
	nA09T143 := 0

	dbSelectArea(cAlB09Z1)
	(cAlB09Z1)->( dbGoTop() )
	ProcRegua((cAlB09Z1)->(RecCount()))
	(cAlB09Z1)->( dbGoTop() )
	cMarca := oBrw09Dt:Mark()

	While !(cAlB09Z1)->(Eof())
		IncProc()	
		
		IF oBrw09Dt:IsMark(cMarca)
			RECLOCK(cAlB09Z1,.F.)
				(cAlB09Z1)->CLASSIF 	:= PadL(nClassif,2)
				(cAlB09Z1)->OMARK			:= ''
			MSUNLOCK()	
		ENDIF

		//REFAZ OS TOTAIS
		If  (cAlB09Z1)->CLASSIF == ' 1'
			nA09T021 += (cAlB09Z1)->VLCONT
			nA09T022 += (cAlB09Z1)->ICMSVAL
			nA09T023 += (cAlB09Z1)->QUANT
		ElseIf  (cAlB09Z1)->CLASSIF == ' 2'
			nA09T031 += (cAlB09Z1)->VLCONT
			nA09T032 += (cAlB09Z1)->ICMSVAL
			nA09T033 += (cAlB09Z1)->QUANT
		ElseIf  (cAlB09Z1)->CLASSIF == ' 3'
			nA09T041 += (cAlB09Z1)->VLCONT
			nA09T042 += (cAlB09Z1)->ICMSVAL
			nA09T043 += (cAlB09Z1)->QUANT
		ElseIf  (cAlB09Z1)->CLASSIF == ' 4'
			nA09T051 += (cAlB09Z1)->VLCONT
			nA09T052 += (cAlB09Z1)->ICMSVAL
			nA09T053 += (cAlB09Z1)->QUANT
		ElseIf  (cAlB09Z1)->CLASSIF == ' 5'
			nA09T061 += (cAlB09Z1)->VLCONT
			nA09T062 += (cAlB09Z1)->ICMSVAL
			nA09T063 += (cAlB09Z1)->QUANT
		ElseIf  (cAlB09Z1)->CLASSIF == ' 6'
			nA09T071 += (cAlB09Z1)->VLCONT
			nA09T072 += (cAlB09Z1)->ICMSVAL
			nA09T073 += (cAlB09Z1)->QUANT
		ElseIf  (cAlB09Z1)->CLASSIF == ' 7'
			nA09T081 += (cAlB09Z1)->VLCONT
			nA09T082 += (cAlB09Z1)->ICMSVAL
			nA09T083 += (cAlB09Z1)->QUANT
		ElseIf  (cAlB09Z1)->CLASSIF == ' 8'
			nA09T091 += (cAlB09Z1)->VLCONT
			nA09T092 += (cAlB09Z1)->ICMSVAL
			nA09T093 += (cAlB09Z1)->QUANT
		ElseIf  (cAlB09Z1)->CLASSIF == ' 9'
			nA09T101 += (cAlB09Z1)->VLCONT
			nA09T102 += (cAlB09Z1)->ICMSVAL
			nA09T103 += (cAlB09Z1)->QUANT
		ElseIf  (cAlB09Z1)->CLASSIF == '10'
			nA09T111 += (cAlB09Z1)->VLCONT
			nA09T112 += (cAlB09Z1)->ICMSVAL
			nA09T113 += (cAlB09Z1)->QUANT
		ElseIf  (cAlB09Z1)->CLASSIF == '11'
			nA09T121 += (cAlB09Z1)->VLCONT
			nA09T122 += (cAlB09Z1)->ICMSVAL
			nA09T123 += (cAlB09Z1)->QUANT
		ElseIf  (cAlB09Z1)->CLASSIF == '12'
			nA09T131 += (cAlB09Z1)->VLCONT
			nA09T132 += (cAlB09Z1)->ICMSVAL
			nA09T133 += (cAlB09Z1)->QUANT
		ElseIf  (cAlB09Z1)->CLASSIF == '13'
			nA09T141 += (cAlB09Z1)->VLCONT
			nA09T142 += (cAlB09Z1)->ICMSVAL
			nA09T143 += (cAlB09Z1)->QUANT
		Else
			nA09T151 += (cAlB09Z1)->VLCONT
			nA09T152 += (cAlB09Z1)->ICMSVAL
			nA09T153 += (cAlB09Z1)->QUANT
		Endif
		//TOTAIS
		nA09T001 += (cAlB09Z1)->VLCONT
		nA09T002 += (cAlB09Z1)->ICMSVAL
		nA09T003 += (cAlB09Z1)->QUANT

		(cAlB09Z1)->( dbSkip() )
	EndDo

	(cAlB09Z2)->(dbGoTop())
	While !(cAlB09Z2)->(Eof())
		RECLOCK(cAlB09Z2,.F.)
		(cAlB09Z2)->(dbDelete())
		MSUNLOCK()
		(cAlB09Z2)->(dbSkip())
	ENDDO
	For _i:=1 to 15
		RECLOCK(cAlB09Z2,.T.)
			(cAlB09Z2)->FILIAL := xFilial('SFT')
			IF _i < 15
				(cAlB09Z2)->CLASSIF := aClassif[_i]
				(cAlB09Z2)->QUANT := &('nA09T'+StrZero(_i+1,2)+'3')
				(cAlB09Z2)->VLCONT := &('nA09T'+StrZero(_i+1,2)+'1')
				(cAlB09Z2)->ICMSVAL := &('nA09T'+StrZero(_i+1,2)+'2')
			ELSE
				(cAlB09Z2)->CLASSIF := "TOTAL"
				(cAlB09Z2)->QUANT := nA09T003
				(cAlB09Z2)->VLCONT := nA09T001
				(cAlB09Z2)->ICMSVAL := nA09T002
			ENDIF
		MSUNLOCK()
	Next _i
	(cAlB09Z2)->(dbGoTop())

	//xVrfGr09()

	oBrw09Dt:Refresh(.T.)
	oBrw09Z2:Refresh(.T.)
	//MsgRun( "Atualizando dados - Demonstrativo, aguarde...",,{ || xABrw05() } )
Return


/*/{Protheus.doc} Statix Function xRecVer
	Retorna a última versão salva na tabela ZFU
	@type  Function
	@author Abel Babini Filho
	@since 10/12/2019
	@version 1
/*/
Static Function xRecVer(cTabZFU)
	Local cVerAnt := ''
	Local cQuery1
	If Select(cQuery1) > 0
		(cQuery1)->(dbCloseArea())
	Endif
	cQuery1:=GetNextAlias()
	
	BeginSQL Alias cQuery1
		SELECT DISTINCT
			MAX(ZFU.ZFU_VERSAO)	AS VERSAO
		FROM %TABLE:ZFU% ZFU (NOLOCK)
		WHERE ZFU.ZFU_FILIAL = %xFilial:ZFU%
			AND ZFU.ZFU_PERIOD = %Exp:_cAnoI+_cMesI%
			AND ZFU.ZFU_TABELA = %Exp:cTabZFU%
			AND ZFU.ZFU_STATUS <> '3'
			AND ZFU.%notDel%			
	EndSQL

	DbSelectArea(cQuery1)
	(cQuery1)->(dbGoTop())
	IF !(cQuery1)->(eof())
		cVerAnt := Alltrim((cQuery1)->VERSAO)
	ENDIF
	(cQuery1)->(dbCloseArea())
Return cVerAnt
	
/*/{Protheus.doc} Static Function xRecCl09
	Recupera classificação de Outras Saídas
	@author Abel Babini Filho
	@since 09/12/2019
	@version 01
/*/
Static Function xRecCl09(cKeyDoc)
	Local cVerAnt	:= xRecVer('09')
	Local cClass	:= ''
	Local cQuery	:= GetNextAlias()
	Local cTabSZU	:= C09990
	IF Alltrim(cVerAnt) <> ''
		BeginSQL  Alias cQuery
			SELECT
				ZFU.ZFU_STSDOC			AS CLASSIF
			FROM %TABLE:ZFU% ZFU (NOLOCK)
			WHERE
					ZFU.ZFU_FILIAL = %xFilial:ZFU%
			AND ZFU.ZFU_PERIOD = %Exp:_cAnoI+_cMesI%
			AND ZFU.ZFU_STATUS <> '3'
			AND ZFU.ZFU_TABELA	= '09'
			AND ZFU.ZFU_CHAVE	= %Exp:cTabSZU%
			AND ZFU.ZFU_KEYDOC = %Exp:cKeyDoc%
			AND ZFU.ZFU_VERSAO = %Exp:cVerAnt%
			AND ZFU.%notDel%
		EndSQL
		cClass := PadL((cQuery)->CLASSIF,2)
		(cQuery)->(dbCloseArea())
	ENDIF
Return cClass

/*/{Protheus.doc} Static Function xGrvCl09
	Grava classificação de Outras Saídas
	@author Abel Babini Filho
	@since 09/12/2019
	@version 01
/*/
Static Function xGrvCl09(cNewVers)
	Local cVerAnt := StrZero(Val(cNewVers)-1,3)
	//Grava uma nova versão
	(cAlB09Z1)->(dbGoTop())
	While !(cAlB09Z1)->(eof())
		RECLOCK('ZFU',.T.)
			ZFU->ZFU_FILIAL	:= xFilial()
			ZFU->ZFU_PERIOD	:= _cAnoI+_cMesI
			ZFU->ZFU_VERSAO	:= cNewVers
			ZFU->ZFU_DTGRV	:= dDATABASE
			ZFU->ZFU_TABELA	:= '09'
			ZFU->ZFU_CHAVE	:= C09990
			ZFU->ZFU_USUARI	:= _cNomUse
			ZFU->ZFU_STATUS	:= '1' //1-Aberto | 2-Fechado e Exportado | 3-Cancelado
			ZFU->ZFU_KEYDOC	:= (cAlB09Z1)->FILIAL+(cAlB09Z1)->CLIEFOR+(cAlB09Z1)->LOJA+DTOS((cAlB09Z1)->DTENTRADA)+(cAlB09Z1)->NFSERIE+(cAlB09Z1)->NF+(cAlB09Z1)->NFITEM
			ZFU->ZFU_STSDOC	:= PadL((cAlB09Z1)->CLASSIF,2)
		MSUNLOCK()
		(cAlB09Z1)->(dbSkip())
	EndDo
	//Altera o status da última versão

	IF cNewVers <> '001' .AND. ZFU->(dbSeek(xFilial()+_cAnoI+_cMesI+cVerAnt))
	
		While !ZFU->(eof()) .AND. ;
					ZFU->ZFU_FILIAL == xFilial() .AND. ;
					ZFU->ZFU_PERIOD == _cAnoI+_cMesI .AND. ;
					ZFU->ZFU_VERSAO == cVerAnt
			
			IncProc()
			RECLOCK('ZFU',.F.)
				ZFU->ZFU_STATUS	:= '3' //1-Aberto | 2-Fechado e Exportado | 3-Cancelado
			MSUNLOCK()
			ZFU->(dbSkip())

		EndDo
	ENDIF

Return

/*/{Protheus.doc} Static Function xVrfGr09
	Verifica se precisa gravar nova versão da tabela 09 - Outras Saídas
	@author Abel Babini Filho
	@since 09/12/2019
	@version 01
/*/
Static Function xVrfGr09
	Local lGrvZFU := .F.
	Local cClassif := ''
	Local cVerAnt := Alltrim(xRecVer('09'))
	oBrw09Dt:CleanFilter()
	(cAlB09Z1)->(dbGoTop())

	While !(cAlB09Z1)->(eof())
		cClassif := xRecCl09((cAlB09Z1)->FILIAL+(cAlB09Z1)->CLIEFOR+(cAlB09Z1)->LOJA+DTOS((cAlB09Z1)->DTENTRADA)+(cAlB09Z1)->NFSERIE+(cAlB09Z1)->NF+(cAlB09Z1)->NFITEM)
		IF /*cVerAnt != '' .OR.*/ (cAlB09Z1)->CLASSIF != PadL(cClassif,2)
			lGrvZFU	:= .T.
			exit
		ENDIF
		(cAlB09Z1)->(dbSkip())
	EndDo
	(cAlB09Z1)->(dbGoTop())

	IF lGrvZFU
		IF cVerAnt = ''
			xGrvCl09('001')
		ELSE
			xGrvCl09(StrZero(Val(cVerAnt)+1,3))
		ENDIF
	ENDIF
	(cAlB09Z1)->(dbGoTop())
Return

/*/{Protheus.doc} Static Function xR09Stru  
	Gera Estrutura do FWMarkBrowser do Rel. Outras Saídas
	@author Abel Babini Filho
	@since 03/12/2019
	@version 01
	/*/
Static Function xR09Stru()
	Local aCampos := {}
	Local aSFil 	:= FWTamSX3("FT_FILIAL")
	Local aSDtEnt := FWTamSX3("FT_ENTRADA")
	Local aSNFSer := FWTamSX3("FT_SERIE")
	Local aSNF		:= FWTamSX3("FT_NFISCAL")
	Local aSNFIte := FWTamSX3("FT_ITEM")
	Local aSCliFo := FWTamSX3("FT_CLIEFOR")
	Local aSNome	:= FWTamSX3("A2_NOME")
	Local aSCNPJ	:= FWTamSX3("A2_CGC")
	Local aSLoja	:= FWTamSX3("FT_LOJA")
	Local aSCfo 	:= FWTamSX3("FT_CFOP")
	Local aSPrd 	:= FWTamSX3("FT_PRODUTO")
	Local aSDPr		:= FWTamSX3("B1_DESC")
	Local aSQtd 	:= FWTamSX3("FT_QUANT")
	Local aSPrcUn := FWTamSX3("FT_PRCUNIT")
	Local aSVTot	:= FWTamSX3("FT_TOTAL")
	Local aSVCt 	:= FWTamSX3("FT_VALCONT")
	Local aSBsICM := FWTamSX3("FT_BASEICM")
	Local aSAlqICM:= FWTamSX3("FT_ALIQICM")
	Local aSVlICM := FWTamSX3("FT_VALICM")
	Local aSVlICRe:= FWTamSX3("FT_ICMSRET")
	Local aSVlICOu:= FWTamSX3("FT_OUTRICM")
	Local aSVDesc := FWTamSX3("FT_DESCONT")
	Local aSVSegur:= FWTamSX3("FT_SEGURO")
	Local aSVDespe:= FWTamSX3("FT_DESPESA")
	Local aSVFrete:= FWTamSX3("FT_FRETE")
	Local aSDtCanc:= FWTamSX3("FT_DTCANC")
	Local aSObserv:= FWTamSX3("FT_OBSERV")
	Local aSCConta:= FWTamSX3("FT_CONTA")
	Local aSTes 	:= FWTamSX3("FT_TES")
	Local aSTpMov := FWTamSX3("FT_TIPOMOV")
	Local aSTpDoc := FWTamSX3("FT_TIPO")
	Local aSEspeci:= FWTamSX3("FT_ESPECIE")
	Local aSClcICM:= FWTamSX3("F4_ICM")
	Local aSClcPis:= FWTamSX3("F4_PISCOF")
	Local aSVPis 	:= FWTamSX3("FT_VALPIS")
	Local aSVCof 	:= FWTamSX3("FT_VALCOF")

	aadd(aCampos,{"Classif.","CLASSIF","C",2,0,"@!"})
	aadd(aCampos,{"Filial","FILIAL",aSFil[3],aSFil[1],aSFil[2],"@!"})
	aadd(aCampos,{"Dt.Entrada","DTENTRADA",aSDtEnt[3],aSDtEnt[1],aSDtEnt[2],"@!"})
	aadd(aCampos,{"Série","NFSERIE",aSNFSer[3],aSNFSer[1],aSNFSer[2],"@!"})
	aadd(aCampos,{"Nfiscal","NF",aSNF[3],aSNF[1],aSNF[2],"@!"})
	aadd(aCampos,{"Item NF","NFITEM",aSNFIte[3],aSNFIte[1],aSNFIte[2],"@!"})
	aadd(aCampos,{"Cod.Forn","CLIEFOR",aSCliFo[3],aSCliFo[1],aSCliFo[2],"@!"})
	aadd(aCampos,{"Loja","LOJA",aSLoja[3],aSLoja[1],aSLoja[2],"@!"})
	aadd(aCampos,{"Fornecedor","NOME",aSNome[3],aSNome[1],aSNome[2],"@!"})
	aadd(aCampos,{"CNPJ","CNPJ",aSCNPJ[3],aSCNPJ[1],aSCNPJ[2],"@!"})
	aadd(aCampos,{"Cod. Prod.","CODPROD",aSPrd[3],aSPrd[1],aSPrd[2],"@!"})
	aadd(aCampos,{"Produto","DESCPROD",aSDPr[3],aSDPr[1],aSDPr[2],"@!"})
	aadd(aCampos,{"CFOP","CFOP",aSCfo[3],aSCfo[1],aSCfo[2],"@!"})
	aadd(aCampos,{"Quant.","QUANT",aSQtd[3],aSQtd[1],aSQtd[2], "@E 999,999,999.9999"})
	aadd(aCampos,{"Prc.Unit.","PRCUNIT",aSPrcUn[3],aSPrcUn[1],aSPrcUn[2],"@E 999,999,999.9999"})
	aadd(aCampos,{"Vl.Total","TOTAL",aSVTot[3],aSVTot[1],aSVTot[2], "@E 999,999,999.9999"})
	aadd(aCampos,{"Vl.Contab.","VLCONT",aSVCt[3],aSVCt[1],aSVCt[2], "@E 9,999,999,999.99"})
	aadd(aCampos,{"Bs ICMS","ICMSBASE",aSBsICM[3],aSBsICM[1],aSBsICM[2], "@E 9,999,999,999.99"})
	aadd(aCampos,{"Alq ICMS","ICMSALIQ",aSAlqICM[3],aSAlqICM[1],aSAlqICM[2], "@E 9,999,999,999.99"})
	aadd(aCampos,{"Vl.ICMS","ICMSVAL",aSVlICM[3],aSVlICM[1],aSVlICM[2], "@E 9,999,999,999.99"})
	aadd(aCampos,{"ICMS Ret.","ICMSRET",aSVlICRe[3],aSVlICRe[1],aSVlICRe[2], "@E 9,999,999,999.99"})
	aadd(aCampos,{"ICMS Outras","ICMSOUTR",aSVlICOu[3],aSVlICOu[1],aSVlICOu[2], "@E 9,999,999,999.99"})
	aadd(aCampos,{"Descont.","DESCONT",aSVDesc[3],aSVDesc[1],aSVDesc[2], "@E 9,999,999,999.99"})
	aadd(aCampos,{"Seguro","SEGURO",aSVSegur[3],aSVSegur[1],aSVSegur[2], "@E 9,999,999,999.99"})
	aadd(aCampos,{"Despesas","DESPESA",aSVDespe[3],aSVDespe[1],aSVDespe[2], "@E 9,999,999,999.99"})
	aadd(aCampos,{"Frete","FRETE",aSVFrete[3],aSVFrete[1],aSVFrete[2], "@E 9,999,999,999.99"})
	aadd(aCampos,{"Dt.Canc.","DTCANC",aSDtCanc[3],aSDtCanc[1],aSDtCanc[2],"@!"})
	aadd(aCampos,{"Observ.","OBSERV",aSObserv[3],aSObserv[1],aSObserv[2],"@!"})
	aadd(aCampos,{"Conta Contab.","CONTACONT",aSCConta[3],aSCConta[1],aSCConta[2],"@!"})
	aadd(aCampos,{"TES","TES",aSTes[3],aSTes[1],aSTes[2],"@!"})
	aadd(aCampos,{"Tipo Mov.","TIPOMOV",aSTpMov[3],aSTpMov[1],aSTpMov[2],"@!"})
	aadd(aCampos,{"Tipo Doc.","TIPO",aSTpDoc[3],aSTpDoc[1],aSTpDoc[2],"@!"})
	aadd(aCampos,{"Especie","ESPECIE",aSEspeci[3],aSEspeci[1],aSEspeci[2],"@!"})
	aadd(aCampos,{"Calc.ICMS","CALCICMS",aSClcICM[3],aSClcICM[1],aSClcICM[2],"@!"})
	aadd(aCampos,{"Cred.ICMS","CREDICMS","C",3,0,"@!"})
	aadd(aCampos,{"Calc.Pis/Cof","CALCPIS",aSClcPis[3],aSClcPis[1],aSClcPis[2],"@!"})
	aadd(aCampos,{"Cred.Pis/Cof","CREDPIS","C",3,0,"@!"})
	aadd(aCampos,{"Vl.Pis","VALPIS",aSVPis[3],aSVPis[1],aSVPis[2], "@E 999,999,999.99"})
	aadd(aCampos,{"Vl.Cof","VALCOF",aSVCof[3],aSVCof[1],aSVCof[2], "@E 999,999,999.99"})
Return aCampos

/*/{Protheus.doc} Static Function xRelBr09  
	Gera Relatório Ref. Outras Saidas 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function xRelBr09()
	Local aSays			:= {}
	Local aButtons		:= {}
	Local nOpca			:= 0
	//+-----------------------------------------------+
	//|Monta Form Batch - Interface com o Usuario     |
	//+-----------------------------------------------+
	AADD(aSays,"Este programa tem a finalidade de Gerar um arquivo Excel " )
	AADD(aSays,"Relatorio de Outras Saídas" )
    
	AADD(aButtons, { 1,.T.,{|o| nOpca:=1, o:oWnd:End(), Processa({||xRelBr09b()},"Gerando arquivo","Aguarde...")    }})
	AADD(aButtons, { 2,.T.,{|o| nOpca:=2, o:oWnd:End() }})	
	FormBatch( cCadastr, aSays, aButtons )
	
	MsgInfo("Arquivo Excel gerado!")        
	
Return

/*/{Protheus.doc} Static Function xRelBr09b  
	Gera Relatório Ref. Outras Saidas 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function xRelBr09b()
	Private oExcel     := FWMSEXCELEX():New()
	//Private cArquivo	:= cGetFile("Arquivo XML", "Selecione o diretório para salvar o relatório",,'C:\',.T.,GETF_RETDIRECTORY + GETF_LOCALHARD + GETF_NETWORKDRIVE)	
	Private oMsExcel   := NIL

	//Limpa Filtros aplicados
	oBrw09Dt:CleanFilter()

	//Verifica se houve alteração na classificação e grava versão antes de gerar relatorio.
	xVrfGr09()

	cArquivo := cPathRel +  'ROUTSAIDAS_' + DTOS(DATE()) + STRTRAN(TIME(),':','') + '.XML'
	BEGIN SEQUENCE
		
		//IF .NOT.( ApOleClient("MsExcel") )   // se nao existir o excel sai fora..
		//    Alert("Nao Existe Excel Instalado")
    //        BREAK
		//EndIF
        	
		//Planilha1 - Resumo
		Cab09P1()             
		GEx09P1()
        
		//Planilha2 - Detalhamento
		Cab09P2()
		GEx09P2()

		//Planilha2 - Cesta Basica
		Cab09P3()
		GEx09P3()

		//Planilha2 - Cesta Basica Frango
		Cab09P4()
		GEx09P4()

		//Planilha2 - Devolução Cesta Basica
		Cab09P5()
		GEx09P5()

		//Planilha2 - Remessa Analise Estadual
		Cab09P6()
		GEx09P6()

		//Planilha2 - Remessa Analisa Interestadual
		Cab09P7()
		GEx09P7()

		//Planilha2 - Remessa Garantia Estadual
		Cab09P8()
		GEx09P8()
			
		//Planilha2 - Remessa Garantia Interestadual
		Cab09P9()
		GEx09P9()

		//Planilha2 - Aluguel
		Cab09P0()
		GEx09P0()

		//Planilha2 - Remessa Degustação
		Cab09PA()
		GEx09PA()

		//Planilha2 - Remessa Integrado
		Cab09PB()
		GEx09PB()

		//Planilha2 - Outras Remessas 1
		Cab09PC()
		GEx09PC()

		//Planilha2 - Outros retornos 2
		Cab09PD()
		GEx09PD()

		//Planilha2 - Outras Remessas 2
		Cab09PE()
		GEx09PE()

		//Planilha2 - Outras saídas sem classificação
		Cab09PZ()
		GEx09PZ()

		SalvaXml()
		CriaExcel()
	
	END SEQUENCE

Return

/*/{Protheus.doc} Static Function Cab09P1  
	Gera Relatório Ref. Outras Saidas 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function Cab09P1()
	oExcel:AddworkSheet(cFld091)
	oExcel:AddTable(cFld091,cFld09t1)
	oExcel:AddColumn(cFld091,cFld09t1,"Filial",1,1)
	oExcel:AddColumn(cFld091,cFld09t1,"Classificação",1,1)
	oExcel:AddColumn(cFld091,cFld09t1,"Quant.",2,2)
	oExcel:AddColumn(cFld091,cFld09t1,"Vl. Contábil",2,3)
	oExcel:AddColumn(cFld091,cFld09t1,"Vl. ICMS",2,3)
	//oExcel:AddRow(cFld091,cFld09t1,{ "", "","" ,"" ,"" })
RETURN(NIL)  

/*/{Protheus.doc} Static Function GEx09P1  
	Gera Relatório Ref. Outras Saidas 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function GEx09P1()
	//
	(cAlB09Z2)->(dbGoTop())
	While !(cAlB09Z2)->(Eof())
		oExcel:AddRow(cFld091,cFld09t1,{(cAlB09Z2)->FILIAL,;
																		(cAlB09Z2)->CLASSIF,;
																		(cAlB09Z2)->QUANT,;
																		(cAlB09Z2)->VLCONT,;
																		(cAlB09Z2)->ICMSVAL})

		(cAlB09Z2)->(dbSkip())
	ENDDO
Return

/*/{Protheus.doc} Static Function Cab09P2  
	Gera Relatório Ref. Outras Saidas 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function Cab09P2()
	oExcel:AddworkSheet(cFld092)
	oExcel:AddTable(cFld092,cFld09t2)
	oExcel:AddColumn(cFld092,cFld09t2,"Classif.",1,1)
	oExcel:AddColumn(cFld092,cFld09t2,"Filial",1,1)
	oExcel:AddColumn(cFld092,cFld09t2,"Dt. Entrada",1,1)
	oExcel:AddColumn(cFld092,cFld09t2,"Série",1,1)
	oExcel:AddColumn(cFld092,cFld09t2,"Nota Fiscal",1,1)
	oExcel:AddColumn(cFld092,cFld09t2,"Item NF",1,1)
	oExcel:AddColumn(cFld092,cFld09t2,"Forn.",1,1)
	oExcel:AddColumn(cFld092,cFld09t2,"Loja",1,1)
	oExcel:AddColumn(cFld092,cFld09t2,"Nome Forn.",1,1)
	oExcel:AddColumn(cFld092,cFld09t2,"CNPJ",1,1)
	oExcel:AddColumn(cFld092,cFld09t2,"Cod. Produto",1,1)
	oExcel:AddColumn(cFld092,cFld09t2,"Produto",1,1)
	oExcel:AddColumn(cFld092,cFld09t2,"CFOP",1,1)
	oExcel:AddColumn(cFld092,cFld09t2,"Quant",2,2)
	oExcel:AddColumn(cFld092,cFld09t2,"Prc.Unit.",2,3)
	oExcel:AddColumn(cFld092,cFld09t2,"Vl.Total",2,3)
	oExcel:AddColumn(cFld092,cFld09t2,"Vl.Contabil",2,3)
	oExcel:AddColumn(cFld092,cFld09t2,"Base ICMS",2,3)
	oExcel:AddColumn(cFld092,cFld09t2,"Aliq ICMS",2,3)
	oExcel:AddColumn(cFld092,cFld09t2,"Valor ICMS",2,3)
	oExcel:AddColumn(cFld092,cFld09t2,"ICMS Retido",2,3)
	oExcel:AddColumn(cFld092,cFld09t2,"ICMS Outras",2,3)
	oExcel:AddColumn(cFld092,cFld09t2,"Desconto",2,3)
	oExcel:AddColumn(cFld092,cFld09t2,"Seguro",2,3)
	oExcel:AddColumn(cFld092,cFld09t2,"Despesas",2,3)
	oExcel:AddColumn(cFld092,cFld09t2,"Frete",2,3)
	oExcel:AddColumn(cFld092,cFld09t2,"Observações",1,1)
	oExcel:AddColumn(cFld092,cFld09t2,"Conta Contabil",1,1)
	oExcel:AddColumn(cFld092,cFld09t2,"TES",1,1)
	oExcel:AddColumn(cFld092,cFld09t2,"Tipo Mov",1,1)
	oExcel:AddColumn(cFld092,cFld09t2,"Tipo Doc",1,1)
	oExcel:AddColumn(cFld092,cFld09t2,"Espécie",1,1)
	oExcel:AddColumn(cFld092,cFld09t2,"Calc. ICMS",1,1)
	oExcel:AddColumn(cFld092,cFld09t2,"Créd ICMS",2,3)
	oExcel:AddColumn(cFld092,cFld09t2,"Calc. Pis/Cof",1,1)
	oExcel:AddColumn(cFld092,cFld09t2,"Créd Pis/Cof",2,3)
	oExcel:AddColumn(cFld092,cFld09t2,"Vl Pis",2,3)
	oExcel:AddColumn(cFld092,cFld09t2,"Vl Cofins",2,3)
RETURN(NIL)  

/*/{Protheus.doc} Static Function Cab09P3  
	Gera Relatório Ref. Outras Saidas 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function Cab09P3()
	oExcel:AddworkSheet(cFld093)
	oExcel:AddTable(cFld093,cFld09t3)
	oExcel:AddColumn(cFld093,cFld09t3,"Classif.",1,1)
	oExcel:AddColumn(cFld093,cFld09t3,"Filial",1,1)
	oExcel:AddColumn(cFld093,cFld09t3,"Dt. Entrada",1,1)
	oExcel:AddColumn(cFld093,cFld09t3,"Série",1,1)
	oExcel:AddColumn(cFld093,cFld09t3,"Nota Fiscal",1,1)
	oExcel:AddColumn(cFld093,cFld09t3,"Item NF",1,1)
	oExcel:AddColumn(cFld093,cFld09t3,"Forn.",1,1)
	oExcel:AddColumn(cFld093,cFld09t3,"Loja",1,1)
	oExcel:AddColumn(cFld093,cFld09t3,"Nome Forn.",1,1)
	oExcel:AddColumn(cFld093,cFld09t3,"CNPJ",1,1)
	oExcel:AddColumn(cFld093,cFld09t3,"Cod. Produto",1,1)
	oExcel:AddColumn(cFld093,cFld09t3,"Produto",1,1)
	oExcel:AddColumn(cFld093,cFld09t3,"CFOP",1,1)
	oExcel:AddColumn(cFld093,cFld09t3,"Quant",2,2)
	oExcel:AddColumn(cFld093,cFld09t3,"Prc.Unit.",2,3)
	oExcel:AddColumn(cFld093,cFld09t3,"Vl.Total",2,3)
	oExcel:AddColumn(cFld093,cFld09t3,"Vl.Contabil",2,3)
	oExcel:AddColumn(cFld093,cFld09t3,"Base ICMS",2,3)
	oExcel:AddColumn(cFld093,cFld09t3,"Aliq ICMS",2,3)
	oExcel:AddColumn(cFld093,cFld09t3,"Valor ICMS",2,3)
	oExcel:AddColumn(cFld093,cFld09t3,"ICMS Retido",2,3)
	oExcel:AddColumn(cFld093,cFld09t3,"ICMS Outras",2,3)
	oExcel:AddColumn(cFld093,cFld09t3,"Desconto",2,3)
	oExcel:AddColumn(cFld093,cFld09t3,"Seguro",2,3)
	oExcel:AddColumn(cFld093,cFld09t3,"Despesas",2,3)
	oExcel:AddColumn(cFld093,cFld09t3,"Frete",2,3)
	oExcel:AddColumn(cFld093,cFld09t3,"Observações",1,1)
	oExcel:AddColumn(cFld093,cFld09t3,"Conta Contabil",1,1)
	oExcel:AddColumn(cFld093,cFld09t3,"TES",1,1)
	oExcel:AddColumn(cFld093,cFld09t3,"Tipo Mov",1,1)
	oExcel:AddColumn(cFld093,cFld09t3,"Tipo Doc",1,1)
	oExcel:AddColumn(cFld093,cFld09t3,"Espécie",1,1)
	oExcel:AddColumn(cFld093,cFld09t3,"Calc. ICMS",1,1)
	oExcel:AddColumn(cFld093,cFld09t3,"Créd ICMS",2,3)
	oExcel:AddColumn(cFld093,cFld09t3,"Calc. Pis/Cof",1,1)
	oExcel:AddColumn(cFld093,cFld09t3,"Créd Pis/Cof",2,3)
	oExcel:AddColumn(cFld093,cFld09t3,"Vl Pis",2,3)
	oExcel:AddColumn(cFld093,cFld09t3,"Vl Cofins",2,3)
	
RETURN(NIL)  

/*/{Protheus.doc} Static Function Cab09P4  
	Gera Relatório Ref. Outras Saidas 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function Cab09P4()
  oExcel:AddworkSheet(cFld094)
  oExcel:AddTable(cFld094,cFld09t4)
	oExcel:AddColumn(cFld094,cFld09t4,"Classif.",1,1)
	oExcel:AddColumn(cFld094,cFld09t4,"Filial",1,1)
	oExcel:AddColumn(cFld094,cFld09t4,"Dt. Entrada",1,1)
	oExcel:AddColumn(cFld094,cFld09t4,"Série",1,1)
	oExcel:AddColumn(cFld094,cFld09t4,"Nota Fiscal",1,1)
	oExcel:AddColumn(cFld094,cFld09t4,"Item NF",1,1)
	oExcel:AddColumn(cFld094,cFld09t4,"Forn.",1,1)
	oExcel:AddColumn(cFld094,cFld09t4,"Loja",1,1)
	oExcel:AddColumn(cFld094,cFld09t4,"Nome Forn.",1,1)
	oExcel:AddColumn(cFld094,cFld09t4,"CNPJ",1,1)
	oExcel:AddColumn(cFld094,cFld09t4,"Cod. Produto",1,1)
	oExcel:AddColumn(cFld094,cFld09t4,"Produto",1,1)
	oExcel:AddColumn(cFld094,cFld09t4,"CFOP",1,1)
	oExcel:AddColumn(cFld094,cFld09t4,"Quant",2,2)
	oExcel:AddColumn(cFld094,cFld09t4,"Prc.Unit.",2,3)
	oExcel:AddColumn(cFld094,cFld09t4,"Vl.Total",2,3)
	oExcel:AddColumn(cFld094,cFld09t4,"Vl.Contabil",2,3)
	oExcel:AddColumn(cFld094,cFld09t4,"Base ICMS",2,3)
	oExcel:AddColumn(cFld094,cFld09t4,"Aliq ICMS",2,3)
	oExcel:AddColumn(cFld094,cFld09t4,"Valor ICMS",2,3)
	oExcel:AddColumn(cFld094,cFld09t4,"ICMS Retido",2,3)
	oExcel:AddColumn(cFld094,cFld09t4,"ICMS Outras",2,3)
	oExcel:AddColumn(cFld094,cFld09t4,"Desconto",2,3)
	oExcel:AddColumn(cFld094,cFld09t4,"Seguro",2,3)
	oExcel:AddColumn(cFld094,cFld09t4,"Despesas",2,3)
	oExcel:AddColumn(cFld094,cFld09t4,"Frete",2,3)
	oExcel:AddColumn(cFld094,cFld09t4,"Observações",1,1)
	oExcel:AddColumn(cFld094,cFld09t4,"Conta Contabil",1,1)
	oExcel:AddColumn(cFld094,cFld09t4,"TES",1,1)
	oExcel:AddColumn(cFld094,cFld09t4,"Tipo Mov",1,1)
	oExcel:AddColumn(cFld094,cFld09t4,"Tipo Doc",1,1)
	oExcel:AddColumn(cFld094,cFld09t4,"Espécie",1,1)
	oExcel:AddColumn(cFld094,cFld09t4,"Calc. ICMS",1,1)
	oExcel:AddColumn(cFld094,cFld09t4,"Créd ICMS",2,3)
	oExcel:AddColumn(cFld094,cFld09t4,"Calc. Pis/Cof",1,1)
	oExcel:AddColumn(cFld094,cFld09t4,"Créd Pis/Cof",2,3)
	oExcel:AddColumn(cFld094,cFld09t4,"Vl Pis",2,3)
	oExcel:AddColumn(cFld094,cFld09t4,"Vl Cofins",2,3)
	RETURN(NIL)  

/*/{Protheus.doc} Static Function Cab09P5  
	Gera Relatório Ref. Outras Saidas 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function Cab09P5()
	oExcel:AddworkSheet(cFld095)
	oExcel:AddTable(cFld095,cFld09t5)
	oExcel:AddColumn(cFld095,cFld09t5,"Classif.",1,1)
	oExcel:AddColumn(cFld095,cFld09t5,"Filial",1,1)
	oExcel:AddColumn(cFld095,cFld09t5,"Dt. Entrada",1,1)
	oExcel:AddColumn(cFld095,cFld09t5,"Série",1,1)
	oExcel:AddColumn(cFld095,cFld09t5,"Nota Fiscal",1,1)
	oExcel:AddColumn(cFld095,cFld09t5,"Item NF",1,1)
	oExcel:AddColumn(cFld095,cFld09t5,"Forn.",1,1)
	oExcel:AddColumn(cFld095,cFld09t5,"Loja",1,1)
	oExcel:AddColumn(cFld095,cFld09t5,"Nome Forn.",1,1)
	oExcel:AddColumn(cFld095,cFld09t5,"CNPJ",1,1)
	oExcel:AddColumn(cFld095,cFld09t5,"Cod. Produto",1,1)
	oExcel:AddColumn(cFld095,cFld09t5,"Produto",1,1)
	oExcel:AddColumn(cFld095,cFld09t5,"CFOP",1,1)
	oExcel:AddColumn(cFld095,cFld09t5,"Quant",2,2)
	oExcel:AddColumn(cFld095,cFld09t5,"Prc.Unit.",2,3)
	oExcel:AddColumn(cFld095,cFld09t5,"Vl.Total",2,3)
	oExcel:AddColumn(cFld095,cFld09t5,"Vl.Contabil",2,3)
	oExcel:AddColumn(cFld095,cFld09t5,"Base ICMS",2,3)
	oExcel:AddColumn(cFld095,cFld09t5,"Aliq ICMS",2,3)
	oExcel:AddColumn(cFld095,cFld09t5,"Valor ICMS",2,3)
	oExcel:AddColumn(cFld095,cFld09t5,"ICMS Retido",2,3)
	oExcel:AddColumn(cFld095,cFld09t5,"ICMS Outras",2,3)
	oExcel:AddColumn(cFld095,cFld09t5,"Desconto",2,3)
	oExcel:AddColumn(cFld095,cFld09t5,"Seguro",2,3)
	oExcel:AddColumn(cFld095,cFld09t5,"Despesas",2,3)
	oExcel:AddColumn(cFld095,cFld09t5,"Frete",2,3)
	oExcel:AddColumn(cFld095,cFld09t5,"Observações",1,1)
	oExcel:AddColumn(cFld095,cFld09t5,"Conta Contabil",1,1)
	oExcel:AddColumn(cFld095,cFld09t5,"TES",1,1)
	oExcel:AddColumn(cFld095,cFld09t5,"Tipo Mov",1,1)
	oExcel:AddColumn(cFld095,cFld09t5,"Tipo Doc",1,1)
	oExcel:AddColumn(cFld095,cFld09t5,"Espécie",1,1)
	oExcel:AddColumn(cFld095,cFld09t5,"Calc. ICMS",1,1)
	oExcel:AddColumn(cFld095,cFld09t5,"Créd ICMS",2,3)
	oExcel:AddColumn(cFld095,cFld09t5,"Calc. Pis/Cof",1,1)
	oExcel:AddColumn(cFld095,cFld09t5,"Créd Pis/Cof",2,3)
	oExcel:AddColumn(cFld095,cFld09t5,"Vl Pis",2,3)
	oExcel:AddColumn(cFld095,cFld09t5,"Vl Cofins",2,3)
RETURN(NIL)  

/*/{Protheus.doc} Static Function Cab09P6  
	Gera Relatório Ref. Outras Saidas 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function Cab09P6()
	oExcel:AddworkSheet(cFld096)
	oExcel:AddTable(cFld096,cFld09t6)
	oExcel:AddColumn(cFld096,cFld09t6,"Classif.",1,1)
	oExcel:AddColumn(cFld096,cFld09t6,"Filial",1,1)
	oExcel:AddColumn(cFld096,cFld09t6,"Dt. Entrada",1,1)
	oExcel:AddColumn(cFld096,cFld09t6,"Série",1,1)
	oExcel:AddColumn(cFld096,cFld09t6,"Nota Fiscal",1,1)
	oExcel:AddColumn(cFld096,cFld09t6,"Item NF",1,1)
	oExcel:AddColumn(cFld096,cFld09t6,"Forn.",1,1)
	oExcel:AddColumn(cFld096,cFld09t6,"Loja",1,1)
	oExcel:AddColumn(cFld096,cFld09t6,"Nome Forn.",1,1)
	oExcel:AddColumn(cFld096,cFld09t6,"CNPJ",1,1)
	oExcel:AddColumn(cFld096,cFld09t6,"Cod. Produto",1,1)
	oExcel:AddColumn(cFld096,cFld09t6,"Produto",1,1)
	oExcel:AddColumn(cFld096,cFld09t6,"CFOP",1,1)
	oExcel:AddColumn(cFld096,cFld09t6,"Quant",2,2)
	oExcel:AddColumn(cFld096,cFld09t6,"Prc.Unit.",2,3)
	oExcel:AddColumn(cFld096,cFld09t6,"Vl.Total",2,3)
	oExcel:AddColumn(cFld096,cFld09t6,"Vl.Contabil",2,3)
	oExcel:AddColumn(cFld096,cFld09t6,"Base ICMS",2,3)
	oExcel:AddColumn(cFld096,cFld09t6,"Aliq ICMS",2,3)
	oExcel:AddColumn(cFld096,cFld09t6,"Valor ICMS",2,3)
	oExcel:AddColumn(cFld096,cFld09t6,"ICMS Retido",2,3)
	oExcel:AddColumn(cFld096,cFld09t6,"ICMS Outras",2,3)
	oExcel:AddColumn(cFld096,cFld09t6,"Desconto",2,3)
	oExcel:AddColumn(cFld096,cFld09t6,"Seguro",2,3)
	oExcel:AddColumn(cFld096,cFld09t6,"Despesas",2,3)
	oExcel:AddColumn(cFld096,cFld09t6,"Frete",2,3)
	oExcel:AddColumn(cFld096,cFld09t6,"Observações",1,1)
	oExcel:AddColumn(cFld096,cFld09t6,"Conta Contabil",1,1)
	oExcel:AddColumn(cFld096,cFld09t6,"TES",1,1)
	oExcel:AddColumn(cFld096,cFld09t6,"Tipo Mov",1,1)
	oExcel:AddColumn(cFld096,cFld09t6,"Tipo Doc",1,1)
	oExcel:AddColumn(cFld096,cFld09t6,"Espécie",1,1)
	oExcel:AddColumn(cFld096,cFld09t6,"Calc. ICMS",1,1)
	oExcel:AddColumn(cFld096,cFld09t6,"Créd ICMS",2,3)
	oExcel:AddColumn(cFld096,cFld09t6,"Calc. Pis/Cof",1,1)
	oExcel:AddColumn(cFld096,cFld09t6,"Créd Pis/Cof",2,3)
	oExcel:AddColumn(cFld096,cFld09t6,"Vl Pis",2,3)
	oExcel:AddColumn(cFld096,cFld09t6,"Vl Cofins",2,3)
RETURN(NIL)  

/*/{Protheus.doc} Static Function Cab09P7  
	Gera Relatório Ref. Outras Saidas 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function Cab09P7()
	oExcel:AddworkSheet(cFld097)
	oExcel:AddTable(cFld097,cFld09t7)
	oExcel:AddColumn(cFld097,cFld09t7,"Classif.",1,1)
	oExcel:AddColumn(cFld097,cFld09t7,"Filial",1,1)
	oExcel:AddColumn(cFld097,cFld09t7,"Dt. Entrada",1,1)
	oExcel:AddColumn(cFld097,cFld09t7,"Série",1,1)
	oExcel:AddColumn(cFld097,cFld09t7,"Nota Fiscal",1,1)
	oExcel:AddColumn(cFld097,cFld09t7,"Item NF",1,1)
	oExcel:AddColumn(cFld097,cFld09t7,"Forn.",1,1)
	oExcel:AddColumn(cFld097,cFld09t7,"Loja",1,1)
	oExcel:AddColumn(cFld097,cFld09t7,"Nome Forn.",1,1)
	oExcel:AddColumn(cFld097,cFld09t7,"CNPJ",1,1)
	oExcel:AddColumn(cFld097,cFld09t7,"Cod. Produto",1,1)
	oExcel:AddColumn(cFld097,cFld09t7,"Produto",1,1)
	oExcel:AddColumn(cFld097,cFld09t7,"CFOP",1,1)
	oExcel:AddColumn(cFld097,cFld09t7,"Quant",2,2)
	oExcel:AddColumn(cFld097,cFld09t7,"Prc.Unit.",2,3)
	oExcel:AddColumn(cFld097,cFld09t7,"Vl.Total",2,3)
	oExcel:AddColumn(cFld097,cFld09t7,"Vl.Contabil",2,3)
	oExcel:AddColumn(cFld097,cFld09t7,"Base ICMS",2,3)
	oExcel:AddColumn(cFld097,cFld09t7,"Aliq ICMS",2,3)
	oExcel:AddColumn(cFld097,cFld09t7,"Valor ICMS",2,3)
	oExcel:AddColumn(cFld097,cFld09t7,"ICMS Retido",2,3)
	oExcel:AddColumn(cFld097,cFld09t7,"ICMS Outras",2,3)
	oExcel:AddColumn(cFld097,cFld09t7,"Desconto",2,3)
	oExcel:AddColumn(cFld097,cFld09t7,"Seguro",2,3)
	oExcel:AddColumn(cFld097,cFld09t7,"Despesas",2,3)
	oExcel:AddColumn(cFld097,cFld09t7,"Frete",2,3)
	oExcel:AddColumn(cFld097,cFld09t7,"Observações",1,1)
	oExcel:AddColumn(cFld097,cFld09t7,"Conta Contabil",1,1)
	oExcel:AddColumn(cFld097,cFld09t7,"TES",1,1)
	oExcel:AddColumn(cFld097,cFld09t7,"Tipo Mov",1,1)
	oExcel:AddColumn(cFld097,cFld09t7,"Tipo Doc",1,1)
	oExcel:AddColumn(cFld097,cFld09t7,"Espécie",1,1)
	oExcel:AddColumn(cFld097,cFld09t7,"Calc. ICMS",1,1)
	oExcel:AddColumn(cFld097,cFld09t7,"Créd ICMS",2,3)
	oExcel:AddColumn(cFld097,cFld09t7,"Calc. Pis/Cof",1,1)
	oExcel:AddColumn(cFld097,cFld09t7,"Créd Pis/Cof",2,3)
	oExcel:AddColumn(cFld097,cFld09t7,"Vl Pis",2,3)
	oExcel:AddColumn(cFld097,cFld09t7,"Vl Cofins",2,3)
RETURN(NIL)  

/*/{Protheus.doc} Static Function Cab09P8  
	Gera Relatório Ref. Outras Saidas 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function Cab09P8()
	oExcel:AddworkSheet(cFld098)
	oExcel:AddTable(cFld098,cFld09t8)
	oExcel:AddColumn(cFld098,cFld09t8,"Classif.",1,1)
	oExcel:AddColumn(cFld098,cFld09t8,"Filial",1,1)
	oExcel:AddColumn(cFld098,cFld09t8,"Dt. Entrada",1,1)
	oExcel:AddColumn(cFld098,cFld09t8,"Série",1,1)
	oExcel:AddColumn(cFld098,cFld09t8,"Nota Fiscal",1,1)
	oExcel:AddColumn(cFld098,cFld09t8,"Item NF",1,1)
	oExcel:AddColumn(cFld098,cFld09t8,"Forn.",1,1)
	oExcel:AddColumn(cFld098,cFld09t8,"Loja",1,1)
	oExcel:AddColumn(cFld098,cFld09t8,"Nome Forn.",1,1)
	oExcel:AddColumn(cFld098,cFld09t8,"CNPJ",1,1)
	oExcel:AddColumn(cFld098,cFld09t8,"Cod. Produto",1,1)
	oExcel:AddColumn(cFld098,cFld09t8,"Produto",1,1)
	oExcel:AddColumn(cFld098,cFld09t8,"CFOP",1,1)
	oExcel:AddColumn(cFld098,cFld09t8,"Quant",2,2)
	oExcel:AddColumn(cFld098,cFld09t8,"Prc.Unit.",2,3)
	oExcel:AddColumn(cFld098,cFld09t8,"Vl.Total",2,3)
	oExcel:AddColumn(cFld098,cFld09t8,"Vl.Contabil",2,3)
	oExcel:AddColumn(cFld098,cFld09t8,"Base ICMS",2,3)
	oExcel:AddColumn(cFld098,cFld09t8,"Aliq ICMS",2,3)
	oExcel:AddColumn(cFld098,cFld09t8,"Valor ICMS",2,3)
	oExcel:AddColumn(cFld098,cFld09t8,"ICMS Retido",2,3)
	oExcel:AddColumn(cFld098,cFld09t8,"ICMS Outras",2,3)
	oExcel:AddColumn(cFld098,cFld09t8,"Desconto",2,3)
	oExcel:AddColumn(cFld098,cFld09t8,"Seguro",2,3)
	oExcel:AddColumn(cFld098,cFld09t8,"Despesas",2,3)
	oExcel:AddColumn(cFld098,cFld09t8,"Frete",2,3)
	oExcel:AddColumn(cFld098,cFld09t8,"Observações",1,1)
	oExcel:AddColumn(cFld098,cFld09t8,"Conta Contabil",1,1)
	oExcel:AddColumn(cFld098,cFld09t8,"TES",1,1)
	oExcel:AddColumn(cFld098,cFld09t8,"Tipo Mov",1,1)
	oExcel:AddColumn(cFld098,cFld09t8,"Tipo Doc",1,1)
	oExcel:AddColumn(cFld098,cFld09t8,"Espécie",1,1)
	oExcel:AddColumn(cFld098,cFld09t8,"Calc. ICMS",1,1)
	oExcel:AddColumn(cFld098,cFld09t8,"Créd ICMS",2,3)
	oExcel:AddColumn(cFld098,cFld09t8,"Calc. Pis/Cof",1,1)
	oExcel:AddColumn(cFld098,cFld09t8,"Créd Pis/Cof",2,3)
	oExcel:AddColumn(cFld098,cFld09t8,"Vl Pis",2,3)
	oExcel:AddColumn(cFld098,cFld09t8,"Vl Cofins",2,3)
RETURN(NIL)  

/*/{Protheus.doc} Static Function Cab09P9  
	Gera Relatório Ref. Outras Saidas 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function Cab09P9()
	oExcel:AddworkSheet(cFld099)
	oExcel:AddTable(cFld099,cFld09t9)
	oExcel:AddColumn(cFld099,cFld09t9,"Classif.",1,1)
	oExcel:AddColumn(cFld099,cFld09t9,"Filial",1,1)
	oExcel:AddColumn(cFld099,cFld09t9,"Dt. Entrada",1,1)
	oExcel:AddColumn(cFld099,cFld09t9,"Série",1,1)
	oExcel:AddColumn(cFld099,cFld09t9,"Nota Fiscal",1,1)
	oExcel:AddColumn(cFld099,cFld09t9,"Item NF",1,1)
	oExcel:AddColumn(cFld099,cFld09t9,"Forn.",1,1)
	oExcel:AddColumn(cFld099,cFld09t9,"Loja",1,1)
	oExcel:AddColumn(cFld099,cFld09t9,"Nome Forn.",1,1)
	oExcel:AddColumn(cFld099,cFld09t9,"CNPJ",1,1)
	oExcel:AddColumn(cFld099,cFld09t9,"Cod. Produto",1,1)
	oExcel:AddColumn(cFld099,cFld09t9,"Produto",1,1)
	oExcel:AddColumn(cFld099,cFld09t9,"CFOP",1,1)
	oExcel:AddColumn(cFld099,cFld09t9,"Quant",2,2)
	oExcel:AddColumn(cFld099,cFld09t9,"Prc.Unit.",2,3)
	oExcel:AddColumn(cFld099,cFld09t9,"Vl.Total",2,3)
	oExcel:AddColumn(cFld099,cFld09t9,"Vl.Contabil",2,3)
	oExcel:AddColumn(cFld099,cFld09t9,"Base ICMS",2,3)
	oExcel:AddColumn(cFld099,cFld09t9,"Aliq ICMS",2,3)
	oExcel:AddColumn(cFld099,cFld09t9,"Valor ICMS",2,3)
	oExcel:AddColumn(cFld099,cFld09t9,"ICMS Retido",2,3)
	oExcel:AddColumn(cFld099,cFld09t9,"ICMS Outras",2,3)
	oExcel:AddColumn(cFld099,cFld09t9,"Desconto",2,3)
	oExcel:AddColumn(cFld099,cFld09t9,"Seguro",2,3)
	oExcel:AddColumn(cFld099,cFld09t9,"Despesas",2,3)
	oExcel:AddColumn(cFld099,cFld09t9,"Frete",2,3)
	oExcel:AddColumn(cFld099,cFld09t9,"Observações",1,1)
	oExcel:AddColumn(cFld099,cFld09t9,"Conta Contabil",1,1)
	oExcel:AddColumn(cFld099,cFld09t9,"TES",1,1)
	oExcel:AddColumn(cFld099,cFld09t9,"Tipo Mov",1,1)
	oExcel:AddColumn(cFld099,cFld09t9,"Tipo Doc",1,1)
	oExcel:AddColumn(cFld099,cFld09t9,"Espécie",1,1)
	oExcel:AddColumn(cFld099,cFld09t9,"Calc. ICMS",1,1)
	oExcel:AddColumn(cFld099,cFld09t9,"Créd ICMS",2,3)
	oExcel:AddColumn(cFld099,cFld09t9,"Calc. Pis/Cof",1,1)
	oExcel:AddColumn(cFld099,cFld09t9,"Créd Pis/Cof",2,3)
	oExcel:AddColumn(cFld099,cFld09t9,"Vl Pis",2,3)
	oExcel:AddColumn(cFld099,cFld09t9,"Vl Cofins",2,3)
RETURN(NIL)  

/*/{Protheus.doc} Static Function Cab09P0
	Gera Relatório Ref. Outras Saidas 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function Cab09P0()
	oExcel:AddworkSheet(cFld090)
	oExcel:AddTable(cFld090,cFld09t0)
	oExcel:AddColumn(cFld090,cFld09t0,"Classif.",1,1)
	oExcel:AddColumn(cFld090,cFld09t0,"Filial",1,1)
	oExcel:AddColumn(cFld090,cFld09t0,"Dt. Entrada",1,1)
	oExcel:AddColumn(cFld090,cFld09t0,"Série",1,1)
	oExcel:AddColumn(cFld090,cFld09t0,"Nota Fiscal",1,1)
	oExcel:AddColumn(cFld090,cFld09t0,"Item NF",1,1)
	oExcel:AddColumn(cFld090,cFld09t0,"Forn.",1,1)
	oExcel:AddColumn(cFld090,cFld09t0,"Loja",1,1)
	oExcel:AddColumn(cFld090,cFld09t0,"Nome Forn.",1,1)
	oExcel:AddColumn(cFld090,cFld09t0,"CNPJ",1,1)
	oExcel:AddColumn(cFld090,cFld09t0,"Cod. Produto",1,1)
	oExcel:AddColumn(cFld090,cFld09t0,"Produto",1,1)
	oExcel:AddColumn(cFld090,cFld09t0,"CFOP",1,1)
	oExcel:AddColumn(cFld090,cFld09t0,"Quant",2,2)
	oExcel:AddColumn(cFld090,cFld09t0,"Prc.Unit.",2,3)
	oExcel:AddColumn(cFld090,cFld09t0,"Vl.Total",2,3)
	oExcel:AddColumn(cFld090,cFld09t0,"Vl.Contabil",2,3)
	oExcel:AddColumn(cFld090,cFld09t0,"Base ICMS",2,3)
	oExcel:AddColumn(cFld090,cFld09t0,"Aliq ICMS",2,3)
	oExcel:AddColumn(cFld090,cFld09t0,"Valor ICMS",2,3)
	oExcel:AddColumn(cFld090,cFld09t0,"ICMS Retido",2,3)
	oExcel:AddColumn(cFld090,cFld09t0,"ICMS Outras",2,3)
	oExcel:AddColumn(cFld090,cFld09t0,"Desconto",2,3)
	oExcel:AddColumn(cFld090,cFld09t0,"Seguro",2,3)
	oExcel:AddColumn(cFld090,cFld09t0,"Despesas",2,3)
	oExcel:AddColumn(cFld090,cFld09t0,"Frete",2,3)
	oExcel:AddColumn(cFld090,cFld09t0,"Observações",1,1)
	oExcel:AddColumn(cFld090,cFld09t0,"Conta Contabil",1,1)
	oExcel:AddColumn(cFld090,cFld09t0,"TES",1,1)
	oExcel:AddColumn(cFld090,cFld09t0,"Tipo Mov",1,1)
	oExcel:AddColumn(cFld090,cFld09t0,"Tipo Doc",1,1)
	oExcel:AddColumn(cFld090,cFld09t0,"Espécie",1,1)
	oExcel:AddColumn(cFld090,cFld09t0,"Calc. ICMS",1,1)
	oExcel:AddColumn(cFld090,cFld09t0,"Créd ICMS",2,3)
	oExcel:AddColumn(cFld090,cFld09t0,"Calc. Pis/Cof",1,1)
	oExcel:AddColumn(cFld090,cFld09t0,"Créd Pis/Cof",2,3)
	oExcel:AddColumn(cFld090,cFld09t0,"Vl Pis",2,3)
	oExcel:AddColumn(cFld090,cFld09t0,"Vl Cofins",2,3)
RETURN(NIL)  

/*/{Protheus.doc} Static Function Cab09PA
	Gera Relatório Ref. Outras Saidas 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function Cab09PA()
	oExcel:AddworkSheet(cFld09A)
	oExcel:AddTable(cFld09A,cFld09tA)
	oExcel:AddColumn(cFld09A,cFld09tA,"Classif.",1,1)
	oExcel:AddColumn(cFld09A,cFld09tA,"Filial",1,1)
	oExcel:AddColumn(cFld09A,cFld09tA,"Dt. Entrada",1,1)
	oExcel:AddColumn(cFld09A,cFld09tA,"Série",1,1)
	oExcel:AddColumn(cFld09A,cFld09tA,"Nota Fiscal",1,1)
	oExcel:AddColumn(cFld09A,cFld09tA,"Item NF",1,1)
	oExcel:AddColumn(cFld09A,cFld09tA,"Forn.",1,1)
	oExcel:AddColumn(cFld09A,cFld09tA,"Loja",1,1)
	oExcel:AddColumn(cFld09A,cFld09tA,"Nome Forn.",1,1)
	oExcel:AddColumn(cFld09A,cFld09tA,"CNPJ",1,1)
	oExcel:AddColumn(cFld09A,cFld09tA,"Cod. Produto",1,1)
	oExcel:AddColumn(cFld09A,cFld09tA,"Produto",1,1)
	oExcel:AddColumn(cFld09A,cFld09tA,"CFOP",1,1)
	oExcel:AddColumn(cFld09A,cFld09tA,"Quant",2,2)
	oExcel:AddColumn(cFld09A,cFld09tA,"Prc.Unit.",2,3)
	oExcel:AddColumn(cFld09A,cFld09tA,"Vl.Total",2,3)
	oExcel:AddColumn(cFld09A,cFld09tA,"Vl.Contabil",2,3)
	oExcel:AddColumn(cFld09A,cFld09tA,"Base ICMS",2,3)
	oExcel:AddColumn(cFld09A,cFld09tA,"Aliq ICMS",2,3)
	oExcel:AddColumn(cFld09A,cFld09tA,"Valor ICMS",2,3)
	oExcel:AddColumn(cFld09A,cFld09tA,"ICMS Retido",2,3)
	oExcel:AddColumn(cFld09A,cFld09tA,"ICMS Outras",2,3)
	oExcel:AddColumn(cFld09A,cFld09tA,"Desconto",2,3)
	oExcel:AddColumn(cFld09A,cFld09tA,"Seguro",2,3)
	oExcel:AddColumn(cFld09A,cFld09tA,"Despesas",2,3)
	oExcel:AddColumn(cFld09A,cFld09tA,"Frete",2,3)
	oExcel:AddColumn(cFld09A,cFld09tA,"Observações",1,1)
	oExcel:AddColumn(cFld09A,cFld09tA,"Conta Contabil",1,1)
	oExcel:AddColumn(cFld09A,cFld09tA,"TES",1,1)
	oExcel:AddColumn(cFld09A,cFld09tA,"Tipo Mov",1,1)
	oExcel:AddColumn(cFld09A,cFld09tA,"Tipo Doc",1,1)
	oExcel:AddColumn(cFld09A,cFld09tA,"Espécie",1,1)
	oExcel:AddColumn(cFld09A,cFld09tA,"Calc. ICMS",1,1)
	oExcel:AddColumn(cFld09A,cFld09tA,"Créd ICMS",2,3)
	oExcel:AddColumn(cFld09A,cFld09tA,"Calc. Pis/Cof",1,1)
	oExcel:AddColumn(cFld09A,cFld09tA,"Créd Pis/Cof",2,3)
	oExcel:AddColumn(cFld09A,cFld09tA,"Vl Pis",2,3)
	oExcel:AddColumn(cFld09A,cFld09tA,"Vl Cofins",2,3)
RETURN(NIL)  

/*/{Protheus.doc} Static Function Cab09PB
	Gera Relatório Ref. Outras Saidas 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function Cab09PB()
	oExcel:AddworkSheet(cFld09B)
	oExcel:AddTable(cFld09B,cFld09tB)
	oExcel:AddColumn(cFld09B,cFld09tB,"Classif.",1,1)
	oExcel:AddColumn(cFld09B,cFld09tB,"Filial",1,1)
	oExcel:AddColumn(cFld09B,cFld09tB,"Dt. Entrada",1,1)
	oExcel:AddColumn(cFld09B,cFld09tB,"Série",1,1)
	oExcel:AddColumn(cFld09B,cFld09tB,"Nota Fiscal",1,1)
	oExcel:AddColumn(cFld09B,cFld09tB,"Item NF",1,1)
	oExcel:AddColumn(cFld09B,cFld09tB,"Forn.",1,1)
	oExcel:AddColumn(cFld09B,cFld09tB,"Loja",1,1)
	oExcel:AddColumn(cFld09B,cFld09tB,"Nome Forn.",1,1)
	oExcel:AddColumn(cFld09B,cFld09tB,"CNPJ",1,1)
	oExcel:AddColumn(cFld09B,cFld09tB,"Cod. Produto",1,1)
	oExcel:AddColumn(cFld09B,cFld09tB,"Produto",1,1)
	oExcel:AddColumn(cFld09B,cFld09tB,"CFOP",1,1)
	oExcel:AddColumn(cFld09B,cFld09tB,"Quant",2,2)
	oExcel:AddColumn(cFld09B,cFld09tB,"Prc.Unit.",2,3)
	oExcel:AddColumn(cFld09B,cFld09tB,"Vl.Total",2,3)
	oExcel:AddColumn(cFld09B,cFld09tB,"Vl.Contabil",2,3)
	oExcel:AddColumn(cFld09B,cFld09tB,"Base ICMS",2,3)
	oExcel:AddColumn(cFld09B,cFld09tB,"Aliq ICMS",2,3)
	oExcel:AddColumn(cFld09B,cFld09tB,"Valor ICMS",2,3)
	oExcel:AddColumn(cFld09B,cFld09tB,"ICMS Retido",2,3)
	oExcel:AddColumn(cFld09B,cFld09tB,"ICMS Outras",2,3)
	oExcel:AddColumn(cFld09B,cFld09tB,"Desconto",2,3)
	oExcel:AddColumn(cFld09B,cFld09tB,"Seguro",2,3)
	oExcel:AddColumn(cFld09B,cFld09tB,"Despesas",2,3)
	oExcel:AddColumn(cFld09B,cFld09tB,"Frete",2,3)
	oExcel:AddColumn(cFld09B,cFld09tB,"Observações",1,1)
	oExcel:AddColumn(cFld09B,cFld09tB,"Conta Contabil",1,1)
	oExcel:AddColumn(cFld09B,cFld09tB,"TES",1,1)
	oExcel:AddColumn(cFld09B,cFld09tB,"Tipo Mov",1,1)
	oExcel:AddColumn(cFld09B,cFld09tB,"Tipo Doc",1,1)
	oExcel:AddColumn(cFld09B,cFld09tB,"Espécie",1,1)
	oExcel:AddColumn(cFld09B,cFld09tB,"Calc. ICMS",1,1)
	oExcel:AddColumn(cFld09B,cFld09tB,"Créd ICMS",2,3)
	oExcel:AddColumn(cFld09B,cFld09tB,"Calc. Pis/Cof",1,1)
	oExcel:AddColumn(cFld09B,cFld09tB,"Créd Pis/Cof",2,3)
	oExcel:AddColumn(cFld09B,cFld09tB,"Vl Pis",2,3)
	oExcel:AddColumn(cFld09B,cFld09tB,"Vl Cofins",2,3)
RETURN(NIL)  

/*/{Protheus.doc} Static Function Cab09PC
	Gera Relatório Ref. Outras Saidas 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function Cab09PC()
	oExcel:AddworkSheet(cFld09C)
	oExcel:AddTable(cFld09C,cFld09tC)
	oExcel:AddColumn(cFld09C,cFld09tC,"Classif.",1,1)
	oExcel:AddColumn(cFld09C,cFld09tC,"Filial",1,1)
	oExcel:AddColumn(cFld09C,cFld09tC,"Dt. Entrada",1,1)
	oExcel:AddColumn(cFld09C,cFld09tC,"Série",1,1)
	oExcel:AddColumn(cFld09C,cFld09tC,"Nota Fiscal",1,1)
	oExcel:AddColumn(cFld09C,cFld09tC,"Item NF",1,1)
	oExcel:AddColumn(cFld09C,cFld09tC,"Forn.",1,1)
	oExcel:AddColumn(cFld09C,cFld09tC,"Loja",1,1)
	oExcel:AddColumn(cFld09C,cFld09tC,"Nome Forn.",1,1)
	oExcel:AddColumn(cFld09C,cFld09tC,"CNPJ",1,1)
	oExcel:AddColumn(cFld09C,cFld09tC,"Cod. Produto",1,1)
	oExcel:AddColumn(cFld09C,cFld09tC,"Produto",1,1)
	oExcel:AddColumn(cFld09C,cFld09tC,"CFOP",1,1)
	oExcel:AddColumn(cFld09C,cFld09tC,"Quant",2,2)
	oExcel:AddColumn(cFld09C,cFld09tC,"Prc.Unit.",2,3)
	oExcel:AddColumn(cFld09C,cFld09tC,"Vl.Total",2,3)
	oExcel:AddColumn(cFld09C,cFld09tC,"Vl.Contabil",2,3)
	oExcel:AddColumn(cFld09C,cFld09tC,"Base ICMS",2,3)
	oExcel:AddColumn(cFld09C,cFld09tC,"Aliq ICMS",2,3)
	oExcel:AddColumn(cFld09C,cFld09tC,"Valor ICMS",2,3)
	oExcel:AddColumn(cFld09C,cFld09tC,"ICMS Retido",2,3)
	oExcel:AddColumn(cFld09C,cFld09tC,"ICMS Outras",2,3)
	oExcel:AddColumn(cFld09C,cFld09tC,"Desconto",2,3)
	oExcel:AddColumn(cFld09C,cFld09tC,"Seguro",2,3)
	oExcel:AddColumn(cFld09C,cFld09tC,"Despesas",2,3)
	oExcel:AddColumn(cFld09C,cFld09tC,"Frete",2,3)
	oExcel:AddColumn(cFld09C,cFld09tC,"Observações",1,1)
	oExcel:AddColumn(cFld09C,cFld09tC,"Conta Contabil",1,1)
	oExcel:AddColumn(cFld09C,cFld09tC,"TES",1,1)
	oExcel:AddColumn(cFld09C,cFld09tC,"Tipo Mov",1,1)
	oExcel:AddColumn(cFld09C,cFld09tC,"Tipo Doc",1,1)
	oExcel:AddColumn(cFld09C,cFld09tC,"Espécie",1,1)
	oExcel:AddColumn(cFld09C,cFld09tC,"Calc. ICMS",1,1)
	oExcel:AddColumn(cFld09C,cFld09tC,"Créd ICMS",2,3)
	oExcel:AddColumn(cFld09C,cFld09tC,"Calc. Pis/Cof",1,1)
	oExcel:AddColumn(cFld09C,cFld09tC,"Créd Pis/Cof",2,3)
	oExcel:AddColumn(cFld09C,cFld09tC,"Vl Pis",2,3)
	oExcel:AddColumn(cFld09C,cFld09tC,"Vl Cofins",2,3)
RETURN(NIL)  

/*/{Protheus.doc} Static Function Cab09PD
	Gera Relatório Ref. Outras Saidas 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function Cab09PD()
	oExcel:AddworkSheet(cFld09D)
	oExcel:AddTable(cFld09D,cFld09tD)
	oExcel:AddColumn(cFld09D,cFld09tD,"Classif.",1,1)
	oExcel:AddColumn(cFld09D,cFld09tD,"Filial",1,1)
	oExcel:AddColumn(cFld09D,cFld09tD,"Dt. Entrada",1,1)
	oExcel:AddColumn(cFld09D,cFld09tD,"Série",1,1)
	oExcel:AddColumn(cFld09D,cFld09tD,"Nota Fiscal",1,1)
	oExcel:AddColumn(cFld09D,cFld09tD,"Item NF",1,1)
	oExcel:AddColumn(cFld09D,cFld09tD,"Forn.",1,1)
	oExcel:AddColumn(cFld09D,cFld09tD,"Loja",1,1)
	oExcel:AddColumn(cFld09D,cFld09tD,"Nome Forn.",1,1)
	oExcel:AddColumn(cFld09D,cFld09tD,"CNPJ",1,1)
	oExcel:AddColumn(cFld09D,cFld09tD,"Cod. Produto",1,1)
	oExcel:AddColumn(cFld09D,cFld09tD,"Produto",1,1)
	oExcel:AddColumn(cFld09D,cFld09tD,"CFOP",1,1)
	oExcel:AddColumn(cFld09D,cFld09tD,"Quant",2,2)
	oExcel:AddColumn(cFld09D,cFld09tD,"Prc.Unit.",2,3)
	oExcel:AddColumn(cFld09D,cFld09tD,"Vl.Total",2,3)
	oExcel:AddColumn(cFld09D,cFld09tD,"Vl.Contabil",2,3)
	oExcel:AddColumn(cFld09D,cFld09tD,"Base ICMS",2,3)
	oExcel:AddColumn(cFld09D,cFld09tD,"Aliq ICMS",2,3)
	oExcel:AddColumn(cFld09D,cFld09tD,"Valor ICMS",2,3)
	oExcel:AddColumn(cFld09D,cFld09tD,"ICMS Retido",2,3)
	oExcel:AddColumn(cFld09D,cFld09tD,"ICMS Outras",2,3)
	oExcel:AddColumn(cFld09D,cFld09tD,"Desconto",2,3)
	oExcel:AddColumn(cFld09D,cFld09tD,"Seguro",2,3)
	oExcel:AddColumn(cFld09D,cFld09tD,"Despesas",2,3)
	oExcel:AddColumn(cFld09D,cFld09tD,"Frete",2,3)
	oExcel:AddColumn(cFld09D,cFld09tD,"Observações",1,1)
	oExcel:AddColumn(cFld09D,cFld09tD,"Conta Contabil",1,1)
	oExcel:AddColumn(cFld09D,cFld09tD,"TES",1,1)
	oExcel:AddColumn(cFld09D,cFld09tD,"Tipo Mov",1,1)
	oExcel:AddColumn(cFld09D,cFld09tD,"Tipo Doc",1,1)
	oExcel:AddColumn(cFld09D,cFld09tD,"Espécie",1,1)
	oExcel:AddColumn(cFld09D,cFld09tD,"Calc. ICMS",1,1)
	oExcel:AddColumn(cFld09D,cFld09tD,"Créd ICMS",2,3)
	oExcel:AddColumn(cFld09D,cFld09tD,"Calc. Pis/Cof",1,1)
	oExcel:AddColumn(cFld09D,cFld09tD,"Créd Pis/Cof",2,3)
	oExcel:AddColumn(cFld09D,cFld09tD,"Vl Pis",2,3)
	oExcel:AddColumn(cFld09D,cFld09tD,"Vl Cofins",2,3)
RETURN(NIL)  

/*/{Protheus.doc} Static Function Cab09PE
	Gera Relatório Ref. Outras Saidas 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function Cab09PE()
	oExcel:AddworkSheet(cFld09E)
	oExcel:AddTable(cFld09E,cFld09tE)
	oExcel:AddColumn(cFld09E,cFld09tE,"Classif.",1,1)
	oExcel:AddColumn(cFld09E,cFld09tE,"Filial",1,1)
	oExcel:AddColumn(cFld09E,cFld09tE,"Dt. Entrada",1,1)
	oExcel:AddColumn(cFld09E,cFld09tE,"Série",1,1)
	oExcel:AddColumn(cFld09E,cFld09tE,"Nota Fiscal",1,1)
	oExcel:AddColumn(cFld09E,cFld09tE,"Item NF",1,1)
	oExcel:AddColumn(cFld09E,cFld09tE,"Forn.",1,1)
	oExcel:AddColumn(cFld09E,cFld09tE,"Loja",1,1)
	oExcel:AddColumn(cFld09E,cFld09tE,"Nome Forn.",1,1)
	oExcel:AddColumn(cFld09E,cFld09tE,"CNPJ",1,1)
	oExcel:AddColumn(cFld09E,cFld09tE,"Cod. Produto",1,1)
	oExcel:AddColumn(cFld09E,cFld09tE,"Produto",1,1)
	oExcel:AddColumn(cFld09E,cFld09tE,"CFOP",1,1)
	oExcel:AddColumn(cFld09E,cFld09tE,"Quant",2,2)
	oExcel:AddColumn(cFld09E,cFld09tE,"Prc.Unit.",2,3)
	oExcel:AddColumn(cFld09E,cFld09tE,"Vl.Total",2,3)
	oExcel:AddColumn(cFld09E,cFld09tE,"Vl.Contabil",2,3)
	oExcel:AddColumn(cFld09E,cFld09tE,"Base ICMS",2,3)
	oExcel:AddColumn(cFld09E,cFld09tE,"Aliq ICMS",2,3)
	oExcel:AddColumn(cFld09E,cFld09tE,"Valor ICMS",2,3)
	oExcel:AddColumn(cFld09E,cFld09tE,"ICMS Retido",2,3)
	oExcel:AddColumn(cFld09E,cFld09tE,"ICMS Outras",2,3)
	oExcel:AddColumn(cFld09E,cFld09tE,"Desconto",2,3)
	oExcel:AddColumn(cFld09E,cFld09tE,"Seguro",2,3)
	oExcel:AddColumn(cFld09E,cFld09tE,"Despesas",2,3)
	oExcel:AddColumn(cFld09E,cFld09tE,"Frete",2,3)
	oExcel:AddColumn(cFld09E,cFld09tE,"Observações",1,1)
	oExcel:AddColumn(cFld09E,cFld09tE,"Conta Contabil",1,1)
	oExcel:AddColumn(cFld09E,cFld09tE,"TES",1,1)
	oExcel:AddColumn(cFld09E,cFld09tE,"Tipo Mov",1,1)
	oExcel:AddColumn(cFld09E,cFld09tE,"Tipo Doc",1,1)
	oExcel:AddColumn(cFld09E,cFld09tE,"Espécie",1,1)
	oExcel:AddColumn(cFld09E,cFld09tE,"Calc. ICMS",1,1)
	oExcel:AddColumn(cFld09E,cFld09tE,"Créd ICMS",2,3)
	oExcel:AddColumn(cFld09E,cFld09tE,"Calc. Pis/Cof",1,1)
	oExcel:AddColumn(cFld09E,cFld09tE,"Créd Pis/Cof",2,3)
	oExcel:AddColumn(cFld09E,cFld09tE,"Vl Pis",2,3)
	oExcel:AddColumn(cFld09E,cFld09tE,"Vl Cofins",2,3)
RETURN(NIL)  

/*/{Protheus.doc} Static Function Cab09PZ
	Gera Relatório Ref. Outras Saidas 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function Cab09PZ()
	oExcel:AddworkSheet(cFld09Z)
	oExcel:AddTable(cFld09Z,cFld09tZ)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"Classif.",1,1)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"Filial",1,1)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"Dt. Entrada",1,1)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"Série",1,1)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"Nota Fiscal",1,1)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"Item NF",1,1)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"Forn.",1,1)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"Loja",1,1)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"Nome Forn.",1,1)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"CNPJ",1,1)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"Cod. Produto",1,1)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"Produto",1,1)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"CFOP",1,1)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"Quant",2,2)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"Prc.Unit.",2,3)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"Vl.Total",2,3)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"Vl.Contabil",2,3)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"Base ICMS",2,3)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"Aliq ICMS",2,3)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"Valor ICMS",2,3)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"ICMS Retido",2,3)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"ICMS Outras",2,3)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"Desconto",2,3)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"Seguro",2,3)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"Despesas",2,3)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"Frete",2,3)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"Observações",1,1)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"Conta Contabil",1,1)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"TES",1,1)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"Tipo Mov",1,1)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"Tipo Doc",1,1)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"Espécie",1,1)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"Calc. ICMS",1,1)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"Créd ICMS",2,3)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"Calc. Pis/Cof",1,1)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"Créd Pis/Cof",2,3)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"Vl Pis",2,3)
	oExcel:AddColumn(cFld09Z,cFld09tZ,"Vl Cofins",2,3)
RETURN(NIL)  

/*/{Protheus.doc} Static Function GEx09P2  
	Gera Relatório Ref. Outras Saidas 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function GEx09P2()
	(cAlB09Z1)->(dbGoTop())
	While !(cAlB09Z1)->(Eof())
		oExcel:AddRow(cFld092,cFld09t2,{(cAlB09Z1)->CLASSIF,;
																		(cAlB09Z1)->FILIAL,;
																		(cAlB09Z1)->DTENTRADA,;
																		(cAlB09Z1)->NFSERIE,;
																		(cAlB09Z1)->NF,;
																		(cAlB09Z1)->NFITEM,;
																		(cAlB09Z1)->CLIEFOR,;
																		(cAlB09Z1)->LOJA,;
																		(cAlB09Z1)->NOME,;
																		(cAlB09Z1)->CNPJ,;
																		(cAlB09Z1)->CODPROD,;
																		(cAlB09Z1)->DESCPROD,;
																		(cAlB09Z1)->CFOP,;
																		(cAlB09Z1)->QUANT,;
																		(cAlB09Z1)->PRCUNIT,;
																		(cAlB09Z1)->TOTAL,;
																		(cAlB09Z1)->VLCONT,;
																		(cAlB09Z1)->ICMSBASE,;
																		(cAlB09Z1)->ICMSALIQ,;
																		(cAlB09Z1)->ICMSVAL,;
																		(cAlB09Z1)->ICMSRET,;
																		(cAlB09Z1)->ICMSOUTR,;
																		(cAlB09Z1)->DESCONT,;
																		(cAlB09Z1)->SEGURO,;
																		(cAlB09Z1)->DESPESA,;
																		(cAlB09Z1)->FRETE,;
																		(cAlB09Z1)->OBSERV,;
																		(cAlB09Z1)->CONTACONT,;
																		(cAlB09Z1)->TES,;
																		(cAlB09Z1)->TIPOMOV,;
																		(cAlB09Z1)->TIPO,;
																		(cAlB09Z1)->ESPECIE,;
																		(cAlB09Z1)->CALCICMS,;
																		(cAlB09Z1)->CREDICMS,;
																		(cAlB09Z1)->CALCPIS,;
																		(cAlB09Z1)->CREDPIS,;
																		(cAlB09Z1)->VALPIS,;
																		(cAlB09Z1)->VALCOF})
		(cAlB09Z1)->(dbSkip())
	ENDDO																
	//Linha Em branco
	oExcel:AddRow(cFld092,cFld09t2,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
Return

/*/{Protheus.doc} Static Function GEx09P3  
	Gera Relatório Ref. Outras Saidas 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function GEx09P3()
	(cAlB09Z1)->(dbGoTop())
	While !(cAlB09Z1)->(Eof())
		IF (cAlB09Z1)->CLASSIF == ' 1'
		oExcel:AddRow(cFld093,cFld09t3,{(cAlB09Z1)->CLASSIF,;
																		(cAlB09Z1)->FILIAL,;
																		(cAlB09Z1)->DTENTRADA,;
																		(cAlB09Z1)->NFSERIE,;
																		(cAlB09Z1)->NF,;
																		(cAlB09Z1)->NFITEM,;
																		(cAlB09Z1)->CLIEFOR,;
																		(cAlB09Z1)->LOJA,;
																		(cAlB09Z1)->NOME,;
																		(cAlB09Z1)->CNPJ,;
																		(cAlB09Z1)->CODPROD,;
																		(cAlB09Z1)->DESCPROD,;
																		(cAlB09Z1)->CFOP,;
																		(cAlB09Z1)->QUANT,;
																		(cAlB09Z1)->PRCUNIT,;
																		(cAlB09Z1)->TOTAL,;
																		(cAlB09Z1)->VLCONT,;
																		(cAlB09Z1)->ICMSBASE,;
																		(cAlB09Z1)->ICMSALIQ,;
																		(cAlB09Z1)->ICMSVAL,;
																		(cAlB09Z1)->ICMSRET,;
																		(cAlB09Z1)->ICMSOUTR,;
																		(cAlB09Z1)->DESCONT,;
																		(cAlB09Z1)->SEGURO,;
																		(cAlB09Z1)->DESPESA,;
																		(cAlB09Z1)->FRETE,;
																		(cAlB09Z1)->OBSERV,;
																		(cAlB09Z1)->CONTACONT,;
																		(cAlB09Z1)->TES,;
																		(cAlB09Z1)->TIPOMOV,;
																		(cAlB09Z1)->TIPO,;
																		(cAlB09Z1)->ESPECIE,;
																		(cAlB09Z1)->CALCICMS,;
																		(cAlB09Z1)->CREDICMS,;
																		(cAlB09Z1)->CALCPIS,;
																		(cAlB09Z1)->CREDPIS,;
																		(cAlB09Z1)->VALPIS,;
																		(cAlB09Z1)->VALCOF})
		ENDIF
		(cAlB09Z1)->(dbSkip())
	ENDDO																
	//Linha Em branco
	oExcel:AddRow(cFld093,cFld09t3,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
Return

/*/{Protheus.doc} Static Function GEx09P4  
	Gera Relatório Ref. Outras Saidas 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function GEx09P4()
	(cAlB09Z1)->(dbGoTop())
	While !(cAlB09Z1)->(Eof())
		IF (cAlB09Z1)->CLASSIF == ' 2'
		oExcel:AddRow(cFld094,cFld09t4,{(cAlB09Z1)->CLASSIF,;
																		(cAlB09Z1)->FILIAL,;
																		(cAlB09Z1)->DTENTRADA,;
																		(cAlB09Z1)->NFSERIE,;
																		(cAlB09Z1)->NF,;
																		(cAlB09Z1)->NFITEM,;
																		(cAlB09Z1)->CLIEFOR,;
																		(cAlB09Z1)->LOJA,;
																		(cAlB09Z1)->NOME,;
																		(cAlB09Z1)->CNPJ,;
																		(cAlB09Z1)->CODPROD,;
																		(cAlB09Z1)->DESCPROD,;
																		(cAlB09Z1)->CFOP,;
																		(cAlB09Z1)->QUANT,;
																		(cAlB09Z1)->PRCUNIT,;
																		(cAlB09Z1)->TOTAL,;
																		(cAlB09Z1)->VLCONT,;
																		(cAlB09Z1)->ICMSBASE,;
																		(cAlB09Z1)->ICMSALIQ,;
																		(cAlB09Z1)->ICMSVAL,;
																		(cAlB09Z1)->ICMSRET,;
																		(cAlB09Z1)->ICMSOUTR,;
																		(cAlB09Z1)->DESCONT,;
																		(cAlB09Z1)->SEGURO,;
																		(cAlB09Z1)->DESPESA,;
																		(cAlB09Z1)->FRETE,;
																		(cAlB09Z1)->OBSERV,;
																		(cAlB09Z1)->CONTACONT,;
																		(cAlB09Z1)->TES,;
																		(cAlB09Z1)->TIPOMOV,;
																		(cAlB09Z1)->TIPO,;
																		(cAlB09Z1)->ESPECIE,;
																		(cAlB09Z1)->CALCICMS,;
																		(cAlB09Z1)->CREDICMS,;
																		(cAlB09Z1)->CALCPIS,;
																		(cAlB09Z1)->CREDPIS,;
																		(cAlB09Z1)->VALPIS,;
																		(cAlB09Z1)->VALCOF})
		ENDIF
		(cAlB09Z1)->(dbSkip())
	ENDDO																
	//Linha Em branco
	oExcel:AddRow(cFld094,cFld09t4,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})	
Return

/*/{Protheus.doc} Static Function GEx09P5  
	Gera Relatório Ref. Outras Saidas 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function GEx09P5()
	(cAlB09Z1)->(dbGoTop())
	While !(cAlB09Z1)->(Eof())
		IF (cAlB09Z1)->CLASSIF == ' 3'
		oExcel:AddRow(cFld095,cFld09t5,{(cAlB09Z1)->CLASSIF,;
																		(cAlB09Z1)->FILIAL,;
																		(cAlB09Z1)->DTENTRADA,;
																		(cAlB09Z1)->NFSERIE,;
																		(cAlB09Z1)->NF,;
																		(cAlB09Z1)->NFITEM,;
																		(cAlB09Z1)->CLIEFOR,;
																		(cAlB09Z1)->LOJA,;
																		(cAlB09Z1)->NOME,;
																		(cAlB09Z1)->CNPJ,;
																		(cAlB09Z1)->CODPROD,;
																		(cAlB09Z1)->DESCPROD,;
																		(cAlB09Z1)->CFOP,;
																		(cAlB09Z1)->QUANT,;
																		(cAlB09Z1)->PRCUNIT,;
																		(cAlB09Z1)->TOTAL,;
																		(cAlB09Z1)->VLCONT,;
																		(cAlB09Z1)->ICMSBASE,;
																		(cAlB09Z1)->ICMSALIQ,;
																		(cAlB09Z1)->ICMSVAL,;
																		(cAlB09Z1)->ICMSRET,;
																		(cAlB09Z1)->ICMSOUTR,;
																		(cAlB09Z1)->DESCONT,;
																		(cAlB09Z1)->SEGURO,;
																		(cAlB09Z1)->DESPESA,;
																		(cAlB09Z1)->FRETE,;
																		(cAlB09Z1)->OBSERV,;
																		(cAlB09Z1)->CONTACONT,;
																		(cAlB09Z1)->TES,;
																		(cAlB09Z1)->TIPOMOV,;
																		(cAlB09Z1)->TIPO,;
																		(cAlB09Z1)->ESPECIE,;
																		(cAlB09Z1)->CALCICMS,;
																		(cAlB09Z1)->CREDICMS,;
																		(cAlB09Z1)->CALCPIS,;
																		(cAlB09Z1)->CREDPIS,;
																		(cAlB09Z1)->VALPIS,;
																		(cAlB09Z1)->VALCOF})
		ENDIF
		(cAlB09Z1)->(dbSkip())
	ENDDO																
	//Linha Em branco
	oExcel:AddRow(cFld095,cFld09t5,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
Return

/*/{Protheus.doc} Static Function GEx09P6  
	Gera Relatório Ref. Outras Saidas 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function GEx09P6()
	(cAlB09Z1)->(dbGoTop())
	While !(cAlB09Z1)->(Eof())
		IF (cAlB09Z1)->CLASSIF == ' 4'
		oExcel:AddRow(cFld096,cFld09t6,{(cAlB09Z1)->CLASSIF,;
																		(cAlB09Z1)->FILIAL,;
																		(cAlB09Z1)->DTENTRADA,;
																		(cAlB09Z1)->NFSERIE,;
																		(cAlB09Z1)->NF,;
																		(cAlB09Z1)->NFITEM,;
																		(cAlB09Z1)->CLIEFOR,;
																		(cAlB09Z1)->LOJA,;
																		(cAlB09Z1)->NOME,;
																		(cAlB09Z1)->CNPJ,;
																		(cAlB09Z1)->CODPROD,;
																		(cAlB09Z1)->DESCPROD,;
																		(cAlB09Z1)->CFOP,;
																		(cAlB09Z1)->QUANT,;
																		(cAlB09Z1)->PRCUNIT,;
																		(cAlB09Z1)->TOTAL,;
																		(cAlB09Z1)->VLCONT,;
																		(cAlB09Z1)->ICMSBASE,;
																		(cAlB09Z1)->ICMSALIQ,;
																		(cAlB09Z1)->ICMSVAL,;
																		(cAlB09Z1)->ICMSRET,;
																		(cAlB09Z1)->ICMSOUTR,;
																		(cAlB09Z1)->DESCONT,;
																		(cAlB09Z1)->SEGURO,;
																		(cAlB09Z1)->DESPESA,;
																		(cAlB09Z1)->FRETE,;
																		(cAlB09Z1)->OBSERV,;
																		(cAlB09Z1)->CONTACONT,;
																		(cAlB09Z1)->TES,;
																		(cAlB09Z1)->TIPOMOV,;
																		(cAlB09Z1)->TIPO,;
																		(cAlB09Z1)->ESPECIE,;
																		(cAlB09Z1)->CALCICMS,;
																		(cAlB09Z1)->CREDICMS,;
																		(cAlB09Z1)->CALCPIS,;
																		(cAlB09Z1)->CREDPIS,;
																		(cAlB09Z1)->VALPIS,;
																		(cAlB09Z1)->VALCOF})
		ENDIF
		(cAlB09Z1)->(dbSkip())
	ENDDO																
	//Linha Em branco
	oExcel:AddRow(cFld096,cFld09t6,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
Return

/*/{Protheus.doc} Static Function GEx09P7  
	Gera Relatório Ref. Outras Saidas 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function GEx09P7()
	(cAlB09Z1)->(dbGoTop())
	While !(cAlB09Z1)->(Eof())
		IF (cAlB09Z1)->CLASSIF == ' 5'
		oExcel:AddRow(cFld097,cFld09t7,{(cAlB09Z1)->CLASSIF,;
																		(cAlB09Z1)->FILIAL,;
																		(cAlB09Z1)->DTENTRADA,;
																		(cAlB09Z1)->NFSERIE,;
																		(cAlB09Z1)->NF,;
																		(cAlB09Z1)->NFITEM,;
																		(cAlB09Z1)->CLIEFOR,;
																		(cAlB09Z1)->LOJA,;
																		(cAlB09Z1)->NOME,;
																		(cAlB09Z1)->CNPJ,;
																		(cAlB09Z1)->CODPROD,;
																		(cAlB09Z1)->DESCPROD,;
																		(cAlB09Z1)->CFOP,;
																		(cAlB09Z1)->QUANT,;
																		(cAlB09Z1)->PRCUNIT,;
																		(cAlB09Z1)->TOTAL,;
																		(cAlB09Z1)->VLCONT,;
																		(cAlB09Z1)->ICMSBASE,;
																		(cAlB09Z1)->ICMSALIQ,;
																		(cAlB09Z1)->ICMSVAL,;
																		(cAlB09Z1)->ICMSRET,;
																		(cAlB09Z1)->ICMSOUTR,;
																		(cAlB09Z1)->DESCONT,;
																		(cAlB09Z1)->SEGURO,;
																		(cAlB09Z1)->DESPESA,;
																		(cAlB09Z1)->FRETE,;
																		(cAlB09Z1)->OBSERV,;
																		(cAlB09Z1)->CONTACONT,;
																		(cAlB09Z1)->TES,;
																		(cAlB09Z1)->TIPOMOV,;
																		(cAlB09Z1)->TIPO,;
																		(cAlB09Z1)->ESPECIE,;
																		(cAlB09Z1)->CALCICMS,;
																		(cAlB09Z1)->CREDICMS,;
																		(cAlB09Z1)->CALCPIS,;
																		(cAlB09Z1)->CREDPIS,;
																		(cAlB09Z1)->VALPIS,;
																		(cAlB09Z1)->VALCOF})
		ENDIF
		(cAlB09Z1)->(dbSkip())
	ENDDO																
	//Linha Em branco
	oExcel:AddRow(cFld097,cFld09t7,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
Return

/*/{Protheus.doc} Static Function GEx09P8  
	Gera Relatório Ref. Outras Saidas 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function GEx09P8()
	(cAlB09Z1)->(dbGoTop())
	While !(cAlB09Z1)->(Eof())
		IF (cAlB09Z1)->CLASSIF == ' 6'
		oExcel:AddRow(cFld098,cFld09t8,{(cAlB09Z1)->CLASSIF,;
																		(cAlB09Z1)->FILIAL,;
																		(cAlB09Z1)->DTENTRADA,;
																		(cAlB09Z1)->NFSERIE,;
																		(cAlB09Z1)->NF,;
																		(cAlB09Z1)->NFITEM,;
																		(cAlB09Z1)->CLIEFOR,;
																		(cAlB09Z1)->LOJA,;
																		(cAlB09Z1)->NOME,;
																		(cAlB09Z1)->CNPJ,;
																		(cAlB09Z1)->CODPROD,;
																		(cAlB09Z1)->DESCPROD,;
																		(cAlB09Z1)->CFOP,;
																		(cAlB09Z1)->QUANT,;
																		(cAlB09Z1)->PRCUNIT,;
																		(cAlB09Z1)->TOTAL,;
																		(cAlB09Z1)->VLCONT,;
																		(cAlB09Z1)->ICMSBASE,;
																		(cAlB09Z1)->ICMSALIQ,;
																		(cAlB09Z1)->ICMSVAL,;
																		(cAlB09Z1)->ICMSRET,;
																		(cAlB09Z1)->ICMSOUTR,;
																		(cAlB09Z1)->DESCONT,;
																		(cAlB09Z1)->SEGURO,;
																		(cAlB09Z1)->DESPESA,;
																		(cAlB09Z1)->FRETE,;
																		(cAlB09Z1)->OBSERV,;
																		(cAlB09Z1)->CONTACONT,;
																		(cAlB09Z1)->TES,;
																		(cAlB09Z1)->TIPOMOV,;
																		(cAlB09Z1)->TIPO,;
																		(cAlB09Z1)->ESPECIE,;
																		(cAlB09Z1)->CALCICMS,;
																		(cAlB09Z1)->CREDICMS,;
																		(cAlB09Z1)->CALCPIS,;
																		(cAlB09Z1)->CREDPIS,;
																		(cAlB09Z1)->VALPIS,;
																		(cAlB09Z1)->VALCOF})
		ENDIF
		(cAlB09Z1)->(dbSkip())
	ENDDO																
	//Linha Em branco
	oExcel:AddRow(cFld098,cFld09t8,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
Return

/*/{Protheus.doc} Static Function GEx09P9  
	Gera Relatório Ref. Outras Saidas 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function GEx09P9()
	(cAlB09Z1)->(dbGoTop())
	While !(cAlB09Z1)->(Eof())
		IF (cAlB09Z1)->CLASSIF == ' 7'
		oExcel:AddRow(cFld099,cFld09t9,{(cAlB09Z1)->CLASSIF,;
																		(cAlB09Z1)->FILIAL,;
																		(cAlB09Z1)->DTENTRADA,;
																		(cAlB09Z1)->NFSERIE,;
																		(cAlB09Z1)->NF,;
																		(cAlB09Z1)->NFITEM,;
																		(cAlB09Z1)->CLIEFOR,;
																		(cAlB09Z1)->LOJA,;
																		(cAlB09Z1)->NOME,;
																		(cAlB09Z1)->CNPJ,;
																		(cAlB09Z1)->CODPROD,;
																		(cAlB09Z1)->DESCPROD,;
																		(cAlB09Z1)->CFOP,;
																		(cAlB09Z1)->QUANT,;
																		(cAlB09Z1)->PRCUNIT,;
																		(cAlB09Z1)->TOTAL,;
																		(cAlB09Z1)->VLCONT,;
																		(cAlB09Z1)->ICMSBASE,;
																		(cAlB09Z1)->ICMSALIQ,;
																		(cAlB09Z1)->ICMSVAL,;
																		(cAlB09Z1)->ICMSRET,;
																		(cAlB09Z1)->ICMSOUTR,;
																		(cAlB09Z1)->DESCONT,;
																		(cAlB09Z1)->SEGURO,;
																		(cAlB09Z1)->DESPESA,;
																		(cAlB09Z1)->FRETE,;
																		(cAlB09Z1)->OBSERV,;
																		(cAlB09Z1)->CONTACONT,;
																		(cAlB09Z1)->TES,;
																		(cAlB09Z1)->TIPOMOV,;
																		(cAlB09Z1)->TIPO,;
																		(cAlB09Z1)->ESPECIE,;
																		(cAlB09Z1)->CALCICMS,;
																		(cAlB09Z1)->CREDICMS,;
																		(cAlB09Z1)->CALCPIS,;
																		(cAlB09Z1)->CREDPIS,;
																		(cAlB09Z1)->VALPIS,;
																		(cAlB09Z1)->VALCOF})
		ENDIF
		(cAlB09Z1)->(dbSkip())
	ENDDO																
	//Linha Em branco
	oExcel:AddRow(cFld099,cFld09t9,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
Return


/*/{Protheus.doc} Static Function GEx09P0
	Gera Relatório Ref. Outras Saidas 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function GEx09P0()
	(cAlB09Z1)->(dbGoTop())
	While !(cAlB09Z1)->(Eof())
		IF (cAlB09Z1)->CLASSIF == ' 8'
		oExcel:AddRow(cFld090,cFld09t0,{(cAlB09Z1)->CLASSIF,;
																		(cAlB09Z1)->FILIAL,;
																		(cAlB09Z1)->DTENTRADA,;
																		(cAlB09Z1)->NFSERIE,;
																		(cAlB09Z1)->NF,;
																		(cAlB09Z1)->NFITEM,;
																		(cAlB09Z1)->CLIEFOR,;
																		(cAlB09Z1)->LOJA,;
																		(cAlB09Z1)->NOME,;
																		(cAlB09Z1)->CNPJ,;
																		(cAlB09Z1)->CODPROD,;
																		(cAlB09Z1)->DESCPROD,;
																		(cAlB09Z1)->CFOP,;
																		(cAlB09Z1)->QUANT,;
																		(cAlB09Z1)->PRCUNIT,;
																		(cAlB09Z1)->TOTAL,;
																		(cAlB09Z1)->VLCONT,;
																		(cAlB09Z1)->ICMSBASE,;
																		(cAlB09Z1)->ICMSALIQ,;
																		(cAlB09Z1)->ICMSVAL,;
																		(cAlB09Z1)->ICMSRET,;
																		(cAlB09Z1)->ICMSOUTR,;
																		(cAlB09Z1)->DESCONT,;
																		(cAlB09Z1)->SEGURO,;
																		(cAlB09Z1)->DESPESA,;
																		(cAlB09Z1)->FRETE,;
																		(cAlB09Z1)->OBSERV,;
																		(cAlB09Z1)->CONTACONT,;
																		(cAlB09Z1)->TES,;
																		(cAlB09Z1)->TIPOMOV,;
																		(cAlB09Z1)->TIPO,;
																		(cAlB09Z1)->ESPECIE,;
																		(cAlB09Z1)->CALCICMS,;
																		(cAlB09Z1)->CREDICMS,;
																		(cAlB09Z1)->CALCPIS,;
																		(cAlB09Z1)->CREDPIS,;
																		(cAlB09Z1)->VALPIS,;
																		(cAlB09Z1)->VALCOF})
		ENDIF
		(cAlB09Z1)->(dbSkip())
	ENDDO																
	//Linha Em branco
	oExcel:AddRow(cFld090,cFld09t0,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
Return

/*/{Protheus.doc} Static Function GEx09PA
	Gera Relatório Ref. Outras Saidas 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function GEx09PA()
	(cAlB09Z1)->(dbGoTop())
	While !(cAlB09Z1)->(Eof())
		IF (cAlB09Z1)->CLASSIF == ' 9'
		oExcel:AddRow(cFld09A,cFld09tA,{(cAlB09Z1)->CLASSIF,;
																		(cAlB09Z1)->FILIAL,;
																		(cAlB09Z1)->DTENTRADA,;
																		(cAlB09Z1)->NFSERIE,;
																		(cAlB09Z1)->NF,;
																		(cAlB09Z1)->NFITEM,;
																		(cAlB09Z1)->CLIEFOR,;
																		(cAlB09Z1)->LOJA,;
																		(cAlB09Z1)->NOME,;
																		(cAlB09Z1)->CNPJ,;
																		(cAlB09Z1)->CODPROD,;
																		(cAlB09Z1)->DESCPROD,;
																		(cAlB09Z1)->CFOP,;
																		(cAlB09Z1)->QUANT,;
																		(cAlB09Z1)->PRCUNIT,;
																		(cAlB09Z1)->TOTAL,;
																		(cAlB09Z1)->VLCONT,;
																		(cAlB09Z1)->ICMSBASE,;
																		(cAlB09Z1)->ICMSALIQ,;
																		(cAlB09Z1)->ICMSVAL,;
																		(cAlB09Z1)->ICMSRET,;
																		(cAlB09Z1)->ICMSOUTR,;
																		(cAlB09Z1)->DESCONT,;
																		(cAlB09Z1)->SEGURO,;
																		(cAlB09Z1)->DESPESA,;
																		(cAlB09Z1)->FRETE,;
																		(cAlB09Z1)->OBSERV,;
																		(cAlB09Z1)->CONTACONT,;
																		(cAlB09Z1)->TES,;
																		(cAlB09Z1)->TIPOMOV,;
																		(cAlB09Z1)->TIPO,;
																		(cAlB09Z1)->ESPECIE,;
																		(cAlB09Z1)->CALCICMS,;
																		(cAlB09Z1)->CREDICMS,;
																		(cAlB09Z1)->CALCPIS,;
																		(cAlB09Z1)->CREDPIS,;
																		(cAlB09Z1)->VALPIS,;
																		(cAlB09Z1)->VALCOF})
		ENDIF
		(cAlB09Z1)->(dbSkip())
	ENDDO																
	//Linha Em branco
	oExcel:AddRow(cFld09A,cFld09tA,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
Return

/*/{Protheus.doc} Static Function GEx09PB
	Gera Relatório Ref. Outras Saidas 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function GEx09PB()
	(cAlB09Z1)->(dbGoTop())
	While !(cAlB09Z1)->(Eof())
		IF (cAlB09Z1)->CLASSIF == '10'
		oExcel:AddRow(cFld09B,cFld09tB,{(cAlB09Z1)->CLASSIF,;
																		(cAlB09Z1)->FILIAL,;
																		(cAlB09Z1)->DTENTRADA,;
																		(cAlB09Z1)->NFSERIE,;
																		(cAlB09Z1)->NF,;
																		(cAlB09Z1)->NFITEM,;
																		(cAlB09Z1)->CLIEFOR,;
																		(cAlB09Z1)->LOJA,;
																		(cAlB09Z1)->NOME,;
																		(cAlB09Z1)->CNPJ,;
																		(cAlB09Z1)->CODPROD,;
																		(cAlB09Z1)->DESCPROD,;
																		(cAlB09Z1)->CFOP,;
																		(cAlB09Z1)->QUANT,;
																		(cAlB09Z1)->PRCUNIT,;
																		(cAlB09Z1)->TOTAL,;
																		(cAlB09Z1)->VLCONT,;
																		(cAlB09Z1)->ICMSBASE,;
																		(cAlB09Z1)->ICMSALIQ,;
																		(cAlB09Z1)->ICMSVAL,;
																		(cAlB09Z1)->ICMSRET,;
																		(cAlB09Z1)->ICMSOUTR,;
																		(cAlB09Z1)->DESCONT,;
																		(cAlB09Z1)->SEGURO,;
																		(cAlB09Z1)->DESPESA,;
																		(cAlB09Z1)->FRETE,;
																		(cAlB09Z1)->OBSERV,;
																		(cAlB09Z1)->CONTACONT,;
																		(cAlB09Z1)->TES,;
																		(cAlB09Z1)->TIPOMOV,;
																		(cAlB09Z1)->TIPO,;
																		(cAlB09Z1)->ESPECIE,;
																		(cAlB09Z1)->CALCICMS,;
																		(cAlB09Z1)->CREDICMS,;
																		(cAlB09Z1)->CALCPIS,;
																		(cAlB09Z1)->CREDPIS,;
																		(cAlB09Z1)->VALPIS,;
																		(cAlB09Z1)->VALCOF})
		ENDIF
		(cAlB09Z1)->(dbSkip())
	ENDDO																
	//Linha Em branco
	oExcel:AddRow(cFld09B,cFld09tB,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
Return

/*/{Protheus.doc} Static Function GEx09PC
	Gera Relatório Ref. Outras Saidas 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function GEx09PC()
	(cAlB09Z1)->(dbGoTop())
	While !(cAlB09Z1)->(Eof())
		IF (cAlB09Z1)->CLASSIF == '11'
		oExcel:AddRow(cFld09C,cFld09tC,{(cAlB09Z1)->CLASSIF,;
																		(cAlB09Z1)->FILIAL,;
																		(cAlB09Z1)->DTENTRADA,;
																		(cAlB09Z1)->NFSERIE,;
																		(cAlB09Z1)->NF,;
																		(cAlB09Z1)->NFITEM,;
																		(cAlB09Z1)->CLIEFOR,;
																		(cAlB09Z1)->LOJA,;
																		(cAlB09Z1)->NOME,;
																		(cAlB09Z1)->CNPJ,;
																		(cAlB09Z1)->CODPROD,;
																		(cAlB09Z1)->DESCPROD,;
																		(cAlB09Z1)->CFOP,;
																		(cAlB09Z1)->QUANT,;
																		(cAlB09Z1)->PRCUNIT,;
																		(cAlB09Z1)->TOTAL,;
																		(cAlB09Z1)->VLCONT,;
																		(cAlB09Z1)->ICMSBASE,;
																		(cAlB09Z1)->ICMSALIQ,;
																		(cAlB09Z1)->ICMSVAL,;
																		(cAlB09Z1)->ICMSRET,;
																		(cAlB09Z1)->ICMSOUTR,;
																		(cAlB09Z1)->DESCONT,;
																		(cAlB09Z1)->SEGURO,;
																		(cAlB09Z1)->DESPESA,;
																		(cAlB09Z1)->FRETE,;
																		(cAlB09Z1)->OBSERV,;
																		(cAlB09Z1)->CONTACONT,;
																		(cAlB09Z1)->TES,;
																		(cAlB09Z1)->TIPOMOV,;
																		(cAlB09Z1)->TIPO,;
																		(cAlB09Z1)->ESPECIE,;
																		(cAlB09Z1)->CALCICMS,;
																		(cAlB09Z1)->CREDICMS,;
																		(cAlB09Z1)->CALCPIS,;
																		(cAlB09Z1)->CREDPIS,;
																		(cAlB09Z1)->VALPIS,;
																		(cAlB09Z1)->VALCOF})
		ENDIF
		(cAlB09Z1)->(dbSkip())
	ENDDO																
	//Linha Em branco
	oExcel:AddRow(cFld09C,cFld09tC,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
Return

/*/{Protheus.doc} Static Function GEx09PD
	Gera Relatório Ref. Outras Saidas 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function GEx09PD()
	(cAlB09Z1)->(dbGoTop())
	While !(cAlB09Z1)->(Eof())
		IF (cAlB09Z1)->CLASSIF == '12'
		oExcel:AddRow(cFld09D,cFld09tD,{(cAlB09Z1)->CLASSIF,;
																		(cAlB09Z1)->FILIAL,;
																		(cAlB09Z1)->DTENTRADA,;
																		(cAlB09Z1)->NFSERIE,;
																		(cAlB09Z1)->NF,;
																		(cAlB09Z1)->NFITEM,;
																		(cAlB09Z1)->CLIEFOR,;
																		(cAlB09Z1)->LOJA,;
																		(cAlB09Z1)->NOME,;
																		(cAlB09Z1)->CNPJ,;
																		(cAlB09Z1)->CODPROD,;
																		(cAlB09Z1)->DESCPROD,;
																		(cAlB09Z1)->CFOP,;
																		(cAlB09Z1)->QUANT,;
																		(cAlB09Z1)->PRCUNIT,;
																		(cAlB09Z1)->TOTAL,;
																		(cAlB09Z1)->VLCONT,;
																		(cAlB09Z1)->ICMSBASE,;
																		(cAlB09Z1)->ICMSALIQ,;
																		(cAlB09Z1)->ICMSVAL,;
																		(cAlB09Z1)->ICMSRET,;
																		(cAlB09Z1)->ICMSOUTR,;
																		(cAlB09Z1)->DESCONT,;
																		(cAlB09Z1)->SEGURO,;
																		(cAlB09Z1)->DESPESA,;
																		(cAlB09Z1)->FRETE,;
																		(cAlB09Z1)->OBSERV,;
																		(cAlB09Z1)->CONTACONT,;
																		(cAlB09Z1)->TES,;
																		(cAlB09Z1)->TIPOMOV,;
																		(cAlB09Z1)->TIPO,;
																		(cAlB09Z1)->ESPECIE,;
																		(cAlB09Z1)->CALCICMS,;
																		(cAlB09Z1)->CREDICMS,;
																		(cAlB09Z1)->CALCPIS,;
																		(cAlB09Z1)->CREDPIS,;
																		(cAlB09Z1)->VALPIS,;
																		(cAlB09Z1)->VALCOF})
		ENDIF
		(cAlB09Z1)->(dbSkip())
	ENDDO																
	//Linha Em branco
	oExcel:AddRow(cFld09D,cFld09tD,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
Return

/*/{Protheus.doc} Static Function GEx09PE
	Gera Relatório Ref. Outras Saidas 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function GEx09PE()
	(cAlB09Z1)->(dbGoTop())
	While !(cAlB09Z1)->(Eof())
		IF (cAlB09Z1)->CLASSIF == '13'
		oExcel:AddRow(cFld09E,cFld09tE,{(cAlB09Z1)->CLASSIF,;
																		(cAlB09Z1)->FILIAL,;
																		(cAlB09Z1)->DTENTRADA,;
																		(cAlB09Z1)->NFSERIE,;
																		(cAlB09Z1)->NF,;
																		(cAlB09Z1)->NFITEM,;
																		(cAlB09Z1)->CLIEFOR,;
																		(cAlB09Z1)->LOJA,;
																		(cAlB09Z1)->NOME,;
																		(cAlB09Z1)->CNPJ,;
																		(cAlB09Z1)->CODPROD,;
																		(cAlB09Z1)->DESCPROD,;
																		(cAlB09Z1)->CFOP,;
																		(cAlB09Z1)->QUANT,;
																		(cAlB09Z1)->PRCUNIT,;
																		(cAlB09Z1)->TOTAL,;
																		(cAlB09Z1)->VLCONT,;
																		(cAlB09Z1)->ICMSBASE,;
																		(cAlB09Z1)->ICMSALIQ,;
																		(cAlB09Z1)->ICMSVAL,;
																		(cAlB09Z1)->ICMSRET,;
																		(cAlB09Z1)->ICMSOUTR,;
																		(cAlB09Z1)->DESCONT,;
																		(cAlB09Z1)->SEGURO,;
																		(cAlB09Z1)->DESPESA,;
																		(cAlB09Z1)->FRETE,;
																		(cAlB09Z1)->OBSERV,;
																		(cAlB09Z1)->CONTACONT,;
																		(cAlB09Z1)->TES,;
																		(cAlB09Z1)->TIPOMOV,;
																		(cAlB09Z1)->TIPO,;
																		(cAlB09Z1)->ESPECIE,;
																		(cAlB09Z1)->CALCICMS,;
																		(cAlB09Z1)->CREDICMS,;
																		(cAlB09Z1)->CALCPIS,;
																		(cAlB09Z1)->CREDPIS,;
																		(cAlB09Z1)->VALPIS,;
																		(cAlB09Z1)->VALCOF})
		ENDIF
		(cAlB09Z1)->(dbSkip())
	ENDDO																
	//Linha Em branco
	oExcel:AddRow(cFld09E,cFld09tE,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
Return

/*/{Protheus.doc} Static Function GEx09PZ  
	Gera Relatório Ref. Outras Saidas 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function GEx09PZ()
	(cAlB09Z1)->(dbGoTop())
	While !(cAlB09Z1)->(Eof())
		IF (cAlB09Z1)->CLASSIF == '14'
		oExcel:AddRow(cFld09Z,cFld09tZ,{(cAlB09Z1)->CLASSIF,;
																		(cAlB09Z1)->FILIAL,;
																		(cAlB09Z1)->DTENTRADA,;
																		(cAlB09Z1)->NFSERIE,;
																		(cAlB09Z1)->NF,;
																		(cAlB09Z1)->NFITEM,;
																		(cAlB09Z1)->CLIEFOR,;
																		(cAlB09Z1)->LOJA,;
																		(cAlB09Z1)->NOME,;
																		(cAlB09Z1)->CNPJ,;
																		(cAlB09Z1)->CODPROD,;
																		(cAlB09Z1)->DESCPROD,;
																		(cAlB09Z1)->CFOP,;
																		(cAlB09Z1)->QUANT,;
																		(cAlB09Z1)->PRCUNIT,;
																		(cAlB09Z1)->TOTAL,;
																		(cAlB09Z1)->VLCONT,;
																		(cAlB09Z1)->ICMSBASE,;
																		(cAlB09Z1)->ICMSALIQ,;
																		(cAlB09Z1)->ICMSVAL,;
																		(cAlB09Z1)->ICMSRET,;
																		(cAlB09Z1)->ICMSOUTR,;
																		(cAlB09Z1)->DESCONT,;
																		(cAlB09Z1)->SEGURO,;
																		(cAlB09Z1)->DESPESA,;
																		(cAlB09Z1)->FRETE,;
																		(cAlB09Z1)->OBSERV,;
																		(cAlB09Z1)->CONTACONT,;
																		(cAlB09Z1)->TES,;
																		(cAlB09Z1)->TIPOMOV,;
																		(cAlB09Z1)->TIPO,;
																		(cAlB09Z1)->ESPECIE,;
																		(cAlB09Z1)->CALCICMS,;
																		(cAlB09Z1)->CREDICMS,;
																		(cAlB09Z1)->CALCPIS,;
																		(cAlB09Z1)->CREDPIS,;
																		(cAlB09Z1)->VALPIS,;
																		(cAlB09Z1)->VALCOF})
		ENDIF
		(cAlB09Z1)->(dbSkip())
	ENDDO																
	//Linha Em branco
	oExcel:AddRow(cFld09Z,cFld09tZ,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
Return
// FIM n.050629  - Relatorio Outras Saidas - Abel Babini - 02/09/2019

//INICIO n.050629  - Relatorio Devolução de Compras - Abel Babini - 27/08/2019
/*/{Protheus.doc} Static Function xABrw10  
	Carrega da dados Ref. Devolucao de Compras
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function xABrw10()
	Local nPos	:= 0
	
	//Inicializa Variáveis
	nA10T01	:= 0
	nA10T02	:= 0
	nA10T03	:= 0
	nA10T04	:= 0
	nA10T05	:= 0
	nA10T06	:= 0
	nA10T51	:= 0
	nA10T52	:= 0
	nA10T53	:= 0
	nA10T54	:= 0
	nA10T55	:= 0
	nA10T56	:= 0

	aBrw10Cf := {}
	aBrw10RI := {}
	aBrw10RM := {}
	
	If Select(cAlB10In) > 0
		(cAlB10In)->(dbCloseArea())
	Endif
	cAlB10In:=GetNextAlias()
	
	aBrw10In	:= {}
	aBrw10Mc	:= {}
	
	BeginSQL  Alias cAlB10In
		column DTENTRADA as Date
		column DTENTRADAORI as Date
		SELECT
			SFT.FT_FILIAL		AS FILIAL, 
			SFT.FT_ENTRADA		AS DTENTRADA, 
			SFT.FT_SERIE		AS SERIE,
			SFT.FT_NFISCAL		AS NFISCAL, 
			SFT.FT_ITEM			AS ITEM,
			SFT.FT_CLIEFOR		AS CLIEFOR, 
			SFT.FT_LOJA			AS LOJA,
			CASE WHEN (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) THEN SA2.A2_NOME ELSE SA1.A1_NOME END AS NOME,
			CASE WHEN (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) THEN SA2.A2_CGC ELSE SA1.A1_CGC END AS CGC,
			SFT.FT_PRODUTO		AS CODPROD, 
			SB1.B1_DESC			AS PRODUTO,
			SFT.FT_QUANT		AS QUANT,
			SFT.FT_PRCUNIT		AS PRCUNIT,
			SFT.FT_TOTAL		AS TOTAL,
			SFT.FT_VALCONT		AS VALCONT,
			SFT.FT_BASEICM		AS ICMSBASE,
			SFT.FT_ALIQICM		AS ICMSALIQ,
			SFT.FT_VALICM		AS ICMSVAL,
			SFT.FT_ICMSRET		AS ICMSRET,
			SFT.FT_OUTRICM		AS ICMSOUTR,
			SFT.FT_DESCONT		AS DESCONT,
			SFT.FT_SEGURO		AS SEGURO,
			SFT.FT_DESPESA		AS DESPESA,
			SFT.FT_FRETE		AS FRETE,
			SFT.FT_VALPIS		AS VALPIS,
			SFT.FT_VALCOF		AS VALCOF,
			SFT.FT_DTCANC		AS DTCANC,
			SFT.FT_OBSERV		AS OBSERV,
			SFT.FT_CONTA		AS CONTACONT,
			SFT.FT_TES			AS TES, 
			SFT.FT_CFOP			AS CFOP, 
			SFT.FT_TIPOMOV		AS TIPOMOV,
			SFT.FT_TIPO			AS TIPO,
			SFT.FT_NFORI		AS NFORI,
			SFT.FT_SERORI		AS SERORI,
			SFT.FT_ITEMORI		AS ITEMORI,
			SFT.FT_ESPECIE		AS ESPECIE,
			SF4.F4_ICM			AS CALCICMS,
			CASE WHEN SF4.F4_CREDICM = 'S' THEN 'SIM' ELSE 'NAO' END AS CREDICMS,
			SF4.F4_PISCOF		AS CALCPIS,
			CASE WHEN SF4.F4_PISCOF = '3' AND SF4.F4_PISCRED IN ('1','2') THEN 'SIM' ELSE 'NAO' END AS CREDPIS,
			SFT2.FT_ENTRADA		AS DTENTRADAORI,
			SFT2.FT_VALICM		AS VALICMORI,
			SFT2.FT_VALPIS		AS VALPISORI,
			SFT2.FT_VALCOF		AS VALCOFORI,
			SF42.F4_ICM			AS CALCICMSORI,
			CASE WHEN SF42.F4_CREDICM = 'S' THEN 'SIM' ELSE 'NAO' END AS CREDICMSORI,
			CASE WHEN SF42.F4_PISCOF = '3' AND SF42.F4_PISCRED IN ('1','2') THEN 'SIM' ELSE 'NAO' END AS CREDPISORI
		FROM %TABLE:SFT% SFT (NOLOCK)
		LEFT JOIN %TABLE:SB1% SB1 (NOLOCK) ON
			SB1.%notDel%
		AND SB1.B1_COD = SFT.FT_PRODUTO
		LEFT JOIN %TABLE:SA2% SA2 (NOLOCK) ON
			SA2.%notDel%
		AND SA2.A2_COD = SFT.FT_CLIEFOR
		AND SA2.A2_LOJA = SFT.FT_LOJA
		AND ( (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) )
		LEFT JOIN %TABLE:SA1% SA1 (NOLOCK) ON
			SA1.%notDel%
		AND SA1.A1_COD = SFT.FT_CLIEFOR
		AND SA1.A1_LOJA = SFT.FT_LOJA
		AND ( (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO IN ('D','B') ) )
		LEFT JOIN %TABLE:SF4% SF4 (NOLOCK) ON
			SF4.%notDel%
		AND SF4.F4_CODIGO = SFT.FT_TES
		LEFT JOIN %TABLE:SFT% SFT2 (NOLOCK) ON
			SFT2.%notDel%
		AND SFT2.FT_FILIAL = SFT.FT_FILIAL
		AND SFT2.FT_SERIE = SFT.FT_SERORI
		AND SFT2.FT_NFISCAL = SFT.FT_NFORI
		AND SFT2.FT_ITEM = SFT.FT_ITEMORI
		AND SFT2.FT_CLIEFOR = SFT.FT_CLIEFOR
		AND SFT2.FT_LOJA = SFT.FT_LOJA
		LEFT JOIN %TABLE:SF4% SF42 (NOLOCK) ON
			SF42.%notDel%
		AND SF42.F4_CODIGO = SFT2.FT_TES
		WHERE SFT.FT_FILIAL = %xFilial:SFT%
		AND SFT.FT_ENTRADA BETWEEN %Exp:DToS(_mvpr01)% AND %Exp:DToS(_mvpr02)%
		AND (SFT.FT_CFOP IN %Exp:_cCFInsu% or SFT.FT_CFOP IN %Exp:_cCFMcim%)
		AND SFT.FT_DTCANC = ''
		AND SFT.%notDel%
	EndSQL
	//AND SFT.FT_CFOP IN ('5201','6201', '5413','6413','5553','6553','5556','6556')	
	
	DbSelectArea(cAlB10In)
	(cAlB10In)->(DbGoTop())
	While !(cAlB10In)->(eof())
		If  Alltrim((cAlB10In)->CFOP) $ Alltrim(_cMVCFIn)
			aAdd(aBrw10In,{	(cAlB10In)->FILIAL,;
							(cAlB10In)->DTENTRADA,; 
							(cAlB10In)->SERIE,;
							(cAlB10In)->NFISCAL,; 
							(cAlB10In)->ITEM,;
							(cAlB10In)->CLIEFOR,; 
							(cAlB10In)->LOJA,;
							(cAlB10In)->NOME,;
							(cAlB10In)->CGC,;
							(cAlB10In)->CODPROD,; 
							(cAlB10In)->PRODUTO,;
							(cAlB10In)->QUANT,;
							(cAlB10In)->PRCUNIT,;
							(cAlB10In)->TOTAL,;
							(cAlB10In)->VALCONT,;
							(cAlB10In)->ICMSBASE,;
							(cAlB10In)->ICMSALIQ,;
							(cAlB10In)->ICMSVAL,;
							(cAlB10In)->ICMSRET,;
							(cAlB10In)->ICMSOUTR,;
							(cAlB10In)->DESCONT,;
							(cAlB10In)->SEGURO,;
							(cAlB10In)->DESPESA,;
							(cAlB10In)->FRETE,;
							(cAlB10In)->DTCANC,;
							(cAlB10In)->OBSERV,;
							(cAlB10In)->CONTACONT,;
							(cAlB10In)->TES,;
							(cAlB10In)->CFOP,;
							(cAlB10In)->TIPOMOV,;
							(cAlB10In)->TIPO,;
							(cAlB10In)->NFORI,;
							(cAlB10In)->SERORI,;
							(cAlB10In)->ITEMORI,;
							(cAlB10In)->ESPECIE,;
							(cAlB10In)->CALCICMS,;
							(cAlB10In)->CREDICMS,;
							(cAlB10In)->CALCPIS,;
							(cAlB10In)->CREDPIS,;
							(cAlB10In)->DTENTRADAORI,;
							(cAlB10In)->VALICMORI,;
							(cAlB10In)->VALPISORI,;
							(cAlB10In)->VALCOFORI,;
							(cAlB10In)->VALPIS,;
							(cAlB10In)->VALCOF,;
							(cAlB10In)->CALCICMSORI,;
							(cAlB10In)->CREDICMSORI,;//47
							(cAlB10In)->CREDPISORI})//48
			
			nPos := ASCAN(aBrw10RI, {|X| X[1] == (cAlB10In)->FILIAL+(cAlB10In)->CREDICMSORI+Alltrim((cAlB10In)->CFOP)})
			
			If nPos == 0
				AADD(aBrw10RI,{	(cAlB10In)->FILIAL+(cAlB10In)->CREDICMSORI+Alltrim((cAlB10In)->CFOP),;
								(cAlB10In)->FILIAL,;
								IIF((cAlB10In)->CREDICMSORI == 'SIM','Com Credito na Entrada','Sem Credito na Entrada'),;
								Alltrim((cAlB10In)->CFOP),;
								(cAlB10In)->VALCONT,;
								(cAlB10In)->ICMSVAL})
			Else
				aBrw10RI[nPos,5] += (cAlB10In)->VALCONT
				aBrw10RI[nPos,6] += (cAlB10In)->ICMSVAL
			Endif

			If (cAlB10In)->CREDICMSORI = 'SIM'
				nA10T01	+= (cAlB10In)->VALCONT 
				nA10T02	+= (cAlB10In)->ICMSVAL
			Else
				nA10T03	+= (cAlB10In)->VALCONT 
				nA10T04	+= (cAlB10In)->ICMSVAL
			Endif
			nA10T05	+= (cAlB10In)->VALCONT 
			nA10T06	+= (cAlB10In)->ICMSVAL
		Elseif Alltrim((cAlB10In)->CFOP) $ Alltrim(_cMVCFMc)
			aAdd(aBrw10Mc,{	(cAlB10In)->FILIAL,;
							(cAlB10In)->DTENTRADA,; 
							(cAlB10In)->SERIE,;
							(cAlB10In)->NFISCAL,; 
							(cAlB10In)->ITEM,;
							(cAlB10In)->CLIEFOR,; 
							(cAlB10In)->LOJA,;
							(cAlB10In)->NOME,;
							(cAlB10In)->CGC,;
							(cAlB10In)->CODPROD,;//10 
							(cAlB10In)->PRODUTO,;
							(cAlB10In)->QUANT,;
							(cAlB10In)->PRCUNIT,;
							(cAlB10In)->TOTAL,;
							(cAlB10In)->VALCONT,;
							(cAlB10In)->ICMSBASE,;
							(cAlB10In)->ICMSALIQ,;
							(cAlB10In)->ICMSVAL,;
							(cAlB10In)->ICMSRET,;
							(cAlB10In)->ICMSOUTR,;//20
							(cAlB10In)->DESCONT,;
							(cAlB10In)->SEGURO,;
							(cAlB10In)->DESPESA,;
							(cAlB10In)->FRETE,;
							(cAlB10In)->DTCANC,;
							(cAlB10In)->OBSERV,;
							(cAlB10In)->CONTACONT,;
							(cAlB10In)->TES,;
							(cAlB10In)->CFOP,;
							(cAlB10In)->TIPOMOV,;//30
							(cAlB10In)->TIPO,;
							(cAlB10In)->NFORI,;
							(cAlB10In)->SERORI,;
							(cAlB10In)->ITEMORI,;
							(cAlB10In)->ESPECIE,;
							(cAlB10In)->CALCICMS,;
							(cAlB10In)->CREDICMS,;
							(cAlB10In)->CALCPIS,;
							(cAlB10In)->CREDPIS,;
							(cAlB10In)->DTENTRADAORI,;//40
							(cAlB10In)->VALICMORI,;
							(cAlB10In)->VALPISORI,;
							(cAlB10In)->VALCOFORI,;
							(cAlB10In)->VALPIS,;
							(cAlB10In)->VALCOF,;
							(cAlB10In)->CALCICMSORI,;
							(cAlB10In)->CREDICMSORI,;
							(cAlB10In)->CREDPISORI})//48

			nPos := ASCAN(aBrw10RM,	{|X| X[1] == (cAlB10In)->FILIAL+(cAlB10In)->CREDICMSORI+Alltrim((cAlB10In)->CFOP)})

			If nPos == 0
				AADD(aBrw10RM,{	(cAlB10In)->FILIAL+(cAlB10In)->CREDICMSORI+Alltrim((cAlB10In)->CFOP),;
								(cAlB10In)->FILIAL,;
								IIF((cAlB10In)->CREDICMSORI == 'SIM','Com Credito na Entrada','Sem Credito na Entrada'),;
								Alltrim((cAlB10In)->CFOP),;
								(cAlB10In)->VALCONT,;
								(cAlB10In)->ICMSVAL})
			Else
				aBrw10RM[nPos,5] += (cAlB10In)->VALCONT
				aBrw10RM[nPos,6] += (cAlB10In)->ICMSVAL
			Endif

			If (cAlB10In)->CREDICMSORI = 'SIM'
				nA10T51	+= (cAlB10In)->VALCONT 
				nA10T52	+= (cAlB10In)->ICMSVAL
			Else
				nA10T53	+= (cAlB10In)->VALCONT 
				nA10T54	+= (cAlB10In)->ICMSVAL
			Endif
			nA10T55	+= (cAlB10In)->VALCONT 
			nA10T56	+= (cAlB10In)->ICMSVAL
		Endif

		(cAlB10In)->(DbSkip())
	EndDo
	
	(cAlB10In)->(dbCloseArea())
	
	ASORT(aBrw10RI, , ,  { | x,y | y[1] > x[1] } )
	ASORT(aBrw10RM, , ,  { | x,y | y[1] > x[1] } )
		
	SysRefresh()
Return

/*/{Protheus.doc} Static Function xRelBr10  
	Gera Relatório Ref. Devolução de Compras  
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function xRelBr10()
	Local aSays			:= {}
	Local aButtons		:= {}
	Local nOpca			:= 0
	//+-----------------------------------------------+
	//|Monta Form Batch - Interface com o Usuario     |
	//+-----------------------------------------------+
	AADD(aSays,"Este programa tem a finalidade de Gerar um arquivo Excel " )
	AADD(aSays,"Relatorio de Dev. de Compras" )
    
	AADD(aButtons, { 1,.T.,{|o| nOpca:=1, o:oWnd:End(), Processa({||xRelBr10b()},"Gerando arquivo","Aguarde...")    }})
	AADD(aButtons, { 2,.T.,{|o| nOpca:=2, o:oWnd:End() }})	
	FormBatch( cCadastr, aSays, aButtons )
	
	MsgInfo("Arquivo Excel gerado!")        
	
Return

/*/{Protheus.doc} Static Function xRelBr10b  
	Gera Relatório Ref. Devolução de Compras  
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function xRelBr10b()
	Private oExcel     := FWMSEXCELEX():New()
	//Private cArquivo	:= cGetFile("Arquivo XML", "Selecione o diretório para salvar o relatório",,'C:\',.T.,GETF_RETDIRECTORY + GETF_LOCALHARD + GETF_NETWORKDRIVE)	
	Private oMsExcel   := NIL
	
	cArquivo := cPathRel +  'RDEVCOMPRAS_' + DTOS(DATE()) + STRTRAN(TIME(),':','') + '.XML'
	BEGIN SEQUENCE
		
		//IF .NOT.( ApOleClient("MsExcel") )   // se nao existir o excel sai fora..
		//	Alert("Nao Existe Excel Instalado")
		//	BREAK
		//EndIF
        	
		//Planilha1 - Resumo
		Cab10P1()             
		GEx10P1()
			
		//Planilha1 - Resumo com CFOP
		Cab10P4()             
		GEx10P4()

		//Planilha2 - Insumos
		Cab10P2()
		GEx10P2()

		//Planilha2 - Mat Uso e Consumo, Imobilizado
		Cab10P3()
		GEx10P3()

		SalvaXml()
		CriaExcel()
	
	END SEQUENCE

Return

/*/{Protheus.doc} Static Function Cab10P1  
	Gera Relatório Ref. Devolução de Compras  
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function Cab10P1()
	oExcel:AddworkSheet(cFld101)
	oExcel:AddTable(cFld101,cFld10t1)

	oExcel:AddColumn(cFld101,cFld10t1,"Filial",1,1)
	oExcel:AddColumn(cFld101,cFld10t1,"Descrição",1,1)
	oExcel:AddColumn(cFld101,cFld10t1,"CFOP",1,1)
	oExcel:AddColumn(cFld101,cFld10t1,"Entrada",2,3)
	oExcel:AddColumn(cFld101,cFld10t1,"",2,3)
	
RETURN(NIL)  

/*/{Protheus.doc} Static Function GEx10P1  
	Gera Relatório Ref. Devolução de Compras  
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function GEx10P1()
	//
	oExcel:AddRow(cFld101,cFld10t1,{ ""		, "INSUMOS"					, "", "Vl. Contábil", "Vl. ICMS" })
	oExcel:AddRow(cFld101,cFld10t1,{ cFilAnt, "Com Crédito na Entrada" 	, "", nA10T01		, nA10T02	 })
	oExcel:AddRow(cFld101,cFld10t1,{ cFilAnt, "Sem Crédito na Entrada" 	, "", nA10T03		, nA10T04	 })
	oExcel:AddRow(cFld101,cFld10t1,{ cFilAnt, "Total" 					, "", nA10T05		, nA10T06	 })
	
	oExcel:AddRow(cFld101,cFld10t1,{ ""		, ""					, "", "", "" })
	oExcel:AddRow(cFld101,cFld10t1,{ ""		, "USO E CONSUMO / IMOBILIZADO"	, "","Vl. Contábil", "Vl. ICMS" })
	oExcel:AddRow(cFld101,cFld10t1,{ cFilAnt, "Com Crédito na Entrada" 	, "",nA10T51		, nA10T52	})
	oExcel:AddRow(cFld101,cFld10t1,{ cFilAnt, "Sem Crédito na Entrada" 	, "",nA10T53		, nA10T54	})
	oExcel:AddRow(cFld101,cFld10t1,{ cFilAnt, "Total" 					, "",nA10T55		, nA10T56	})
	//	
Return

/*/{Protheus.doc} Static Function Cab10P4  
	Gera Relatório Ref. Devolução de Compras  
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function Cab10P4()
    oExcel:AddworkSheet(cFld104)
	oExcel:AddTable(cFld104,cFld10t4)

	oExcel:AddColumn(cFld104,cFld10t4,"Filial",1,1)
	oExcel:AddColumn(cFld104,cFld10t4,"Descrição",1,1)
	oExcel:AddColumn(cFld104,cFld10t4,"CFOP",1,1)
	oExcel:AddColumn(cFld104,cFld10t4,"Vl. Contabil",2,3)
	oExcel:AddColumn(cFld104,cFld10t4,"Vl. ICMS",2,3)
	
RETURN(NIL)  

/*/{Protheus.doc} Static Function GEx10P4  
	Gera Relatório Ref. Devolução de Compras  
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function GEx10P4()
	Local _i
	//
	oExcel:AddRow(cFld104,cFld10t4,{ ""		, "INSUMOS"					, "", "", "" })
	For _i := 1 to Len(aBrw10RI)
		oExcel:AddRow(cFld104,cFld10t4,{ ;
										aBrw10RI[_i,2],;
										aBrw10RI[_i,3],;
										aBrw10RI[_i,4],;
										aBrw10RI[_i,5],;
										aBrw10RI[_i,6]})
	Next _i
	oExcel:AddRow(cFld104,cFld10t4,{ cFilAnt, "Total" 					, "", nA10T05		, nA10T06	 })
	
	oExcel:AddRow(cFld104,cFld10t4,{ ""		, ""					, "", "", "" })
	oExcel:AddRow(cFld104,cFld10t4,{ ""		, "USO E CONSUMO / IMOBILIZADO"	, "","Vl. Contábil", "Vl. ICMS" })
	For _i := 1 to Len(aBrw10RM)
		oExcel:AddRow(cFld104,cFld10t4,{ ;
										aBrw10RM[_i,2],;
										aBrw10RM[_i,3],;
										aBrw10RM[_i,4],;
										aBrw10RM[_i,5],;
										aBrw10RM[_i,6]})
	Next _i
	oExcel:AddRow(cFld104,cFld10t4,{ cFilAnt, "Total" 					, "",nA10T55		, nA10T56	})
	//
Return

/*/{Protheus.doc} Static Function Cab10P2  
	Gera Relatório Ref. Devolução de Compras  
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function Cab10P2()
	oExcel:AddworkSheet(cFld102)
	oExcel:AddTable(cFld102,cFld10t2)
	oExcel:AddColumn(cFld102,cFld10t2,"Filial"			,1,1)
	oExcel:AddColumn(cFld102,cFld10t2,"Forn."			,1,1)
	oExcel:AddColumn(cFld102,cFld10t2,"Loja"			,1,1)
	oExcel:AddColumn(cFld102,cFld10t2,"Nome Forn."		,1,1)
	oExcel:AddColumn(cFld102,cFld10t2,"Dt. Entrada"		,1,1)
	oExcel:AddColumn(cFld102,cFld10t2,"Nota Fiscal"		,1,1)
	oExcel:AddColumn(cFld102,cFld10t2,"Série"			,1,1)
	oExcel:AddColumn(cFld102,cFld10t2,"Item NF"			,1,1)
	oExcel:AddColumn(cFld102,cFld10t2,"Cod. Produto"	,1,1)
	oExcel:AddColumn(cFld102,cFld10t2,"Produto"			,1,1)
	oExcel:AddColumn(cFld102,cFld10t2,"CFOP"			,1,1)
	oExcel:AddColumn(cFld102,cFld10t2,"Quant"			,2,2,.T.)
	oExcel:AddColumn(cFld102,cFld10t2,"Vl.Contabil"		,2,3,.T.)
	oExcel:AddColumn(cFld102,cFld10t2,"Valor ICMS"		,2,3,.T.)
	oExcel:AddColumn(cFld102,cFld10t2,"Observações"		,1,1)
	oExcel:AddColumn(cFld102,cFld10t2,"Créd ICMS Dev"	,1,1)
	oExcel:AddColumn(cFld102,cFld10t2,"Créd ICMS Ent"	,1,1)
	oExcel:AddColumn(cFld102,cFld10t2,"Créd Pis/Cof Dev",1,1)
	oExcel:AddColumn(cFld102,cFld10t2,"Créd Pis/Cof Ent",1,1)
	oExcel:AddColumn(cFld102,cFld10t2,"Dt.Entr.NF Orig"	,1,1)
	oExcel:AddColumn(cFld102,cFld10t2,"Vl Pis"			,2,3,.T.)
	oExcel:AddColumn(cFld102,cFld10t2,"Vl Cofins"		,2,3,.T.)

RETURN(NIL)  

/*/{Protheus.doc} Static Function Cab10P3  
	Gera Relatório Ref. Devolução de Compras  
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function Cab10P3()
	oExcel:AddworkSheet(cFld103)
	oExcel:AddTable(cFld103,cFld10t3)
	oExcel:AddColumn(cFld103,cFld10t3,"Filial"			,1,1)
	oExcel:AddColumn(cFld103,cFld10t3,"Forn."			,1,1)
	oExcel:AddColumn(cFld103,cFld10t3,"Loja"			,1,1)
	oExcel:AddColumn(cFld103,cFld10t3,"Nome Forn."		,1,1)
	oExcel:AddColumn(cFld103,cFld10t3,"Dt. Entrada"		,1,1)
	oExcel:AddColumn(cFld103,cFld10t3,"Nota Fiscal"		,1,1)
	oExcel:AddColumn(cFld103,cFld10t3,"Série"			,1,1)
	oExcel:AddColumn(cFld103,cFld10t3,"Item NF"			,1,1)
	oExcel:AddColumn(cFld103,cFld10t3,"Cod. Produto"	,1,1)
	oExcel:AddColumn(cFld103,cFld10t3,"Produto"			,1,1)
	oExcel:AddColumn(cFld103,cFld10t3,"CFOP"			,1,1)
	oExcel:AddColumn(cFld103,cFld10t3,"Quant"			,2,2,.T.)
	oExcel:AddColumn(cFld103,cFld10t3,"Vl.Contabil"		,2,3,.T.)
	oExcel:AddColumn(cFld103,cFld10t3,"Valor ICMS"		,2,3,.T.)
	oExcel:AddColumn(cFld103,cFld10t3,"Observações"		,1,1)
	oExcel:AddColumn(cFld103,cFld10t3,"Créd ICMS Dev"	,1,1)
	oExcel:AddColumn(cFld103,cFld10t3,"Créd ICMS Ent"	,1,1)
	oExcel:AddColumn(cFld103,cFld10t3,"Créd Pis/Cof Dev",1,1)
	oExcel:AddColumn(cFld103,cFld10t3,"Créd Pis/Cof Ent",1,1)
	oExcel:AddColumn(cFld103,cFld10t3,"Dt.Entr.NF Orig"	,1,1)
	oExcel:AddColumn(cFld103,cFld10t3,"Vl Pis"			,2,3,.T.)
	oExcel:AddColumn(cFld103,cFld10t3,"Vl Cofins"		,2,3,.T.)
RETURN(NIL)  

/*/{Protheus.doc} Static Function GEx10P2  
	Gera Relatório Ref. Devolução de Compras  
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function GEx10P2()
	Local nExcel1
	FOR nExcel1 := 1 TO Len(aBrw10In)
		oExcel:AddRow(cFld102,cFld10t2,{aBrw10In[nExcel1,01],;
										aBrw10In[nExcel1,06],;
										aBrw10In[nExcel1,07],;
										aBrw10In[nExcel1,08],;
										aBrw10In[nExcel1,02],;
										aBrw10In[nExcel1,04],;
										aBrw10In[nExcel1,03],;
										aBrw10In[nExcel1,05],;
										aBrw10In[nExcel1,10],;
										aBrw10In[nExcel1,11],;
										aBrw10In[nExcel1,29],;
										aBrw10In[nExcel1,12],;
										aBrw10In[nExcel1,15],;
										aBrw10In[nExcel1,18],;
										aBrw10In[nExcel1,26],;
										aBrw10In[nExcel1,37],;
										aBrw10In[nExcel1,47],;
										aBrw10In[nExcel1,39],;
										aBrw10In[nExcel1,48],;
										IIF(Alltrim(DTOS(aBrw10In[nExcel1,40]))=="","",aBrw10In[nExcel1,40]),;
										aBrw10In[nExcel1,44],;
										aBrw10In[nExcel1,45]})

		
	Next nExcel1
	//Linha Em branco
	oExcel:AddRow(cFld102,cFld10t2,{"","","","","","","","","","","","","","","","","","","","","",""})
RETURN

/*/{Protheus.doc} Static Function GEx10P3  
	Gera Relatório Ref. Devolução de Compras  
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function GEx10P3()
	Local nExcel1
	FOR nExcel1 := 1 TO Len(aBrw10Mc)
		oExcel:AddRow(cFld103,cFld10t3,{aBrw10Mc[nExcel1,01],;
										aBrw10Mc[nExcel1,06],;
										aBrw10Mc[nExcel1,07],;
										aBrw10Mc[nExcel1,08],;
										aBrw10Mc[nExcel1,02],;
										aBrw10Mc[nExcel1,04],;
										aBrw10Mc[nExcel1,03],;
										aBrw10Mc[nExcel1,05],;
										aBrw10Mc[nExcel1,10],;
										aBrw10Mc[nExcel1,11],;
										aBrw10Mc[nExcel1,29],;
										aBrw10Mc[nExcel1,12],;
										aBrw10Mc[nExcel1,15],;
										aBrw10Mc[nExcel1,18],;
										aBrw10Mc[nExcel1,26],;
										aBrw10Mc[nExcel1,37],;
										aBrw10Mc[nExcel1,47],;
										aBrw10Mc[nExcel1,39],;
										aBrw10Mc[nExcel1,48],;
										IIF(Alltrim(DTOS(aBrw10Mc[nExcel1,40]))=="","",aBrw10Mc[nExcel1,40]),;
										aBrw10Mc[nExcel1,44],;
										aBrw10Mc[nExcel1,45]})
	Next nExcel1
	//Linha Em branco
	oExcel:AddRow(cFld103,cFld10t3,{"","","","","","","","","","","","","","","","","","","","","",""})
RETURN	
//FIM n.050629  - Relatorio Devolução de Compras - Abel Babini - 27/08/2019

//INICIO Chamado n.040926 - OS n.042025 - Relatorio Polenta - Abel Babini - 01/04/2019
/*/{Protheus.doc} Static Function xABrw11  
	Carrega da dados Ref. Crédito de ICMS ST - POLENTA 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function xABrw11()
	If Select(cAlB11Cr) > 0
		(cAlB11Cr)->(dbCloseArea())
	Endif
	cAlB11Cr:=GetNextAlias()
	
	If Select(cAlB11Db) > 0
		(cAlB11Db)->(dbCloseArea())
	Endif
	cAlB11Db:=GetNextAlias()
	
	aBrw11Cr	:= {}
	aBrw11Db	:= {}
	aBrw11Dt	:= {}
	nVlCrTot	:= 0
	nVlCrICM	:= 0
	nVCrICST	:= 0
	nVlDbTot	:= 0
	nVlDbICM	:= 0
	nVDbICST	:= 0
	nVCTCb11	:= 0
	nVDTCb11	:= 0
	/*
	BeginSQL  Alias cAlB11Cr
		SELECT
				SD1.D1_CF AS 'CFOP',
				SUM(SD1.D1_QUANT) AS 'QUANT',
				SUM(SD1.D1_TOTAL) AS 'TOTAL',
				SUM(SD1.D1_ICMSRET) AS 'ICMSST',
				SUM(SD1.D1_VALICM) AS 'ICMS',
				SUM(SFT.FT_VALCONT) AS 'VALCONT'
		FROM %TABLE:SD1%  SD1 (NOLOCK)
			LEFT JOIN %TABLE:SB1%  SB1 (NOLOCK) ON 
				SB1.%notDel%
				AND SB1.B1_COD = SD1.D1_COD
		WHERE SD1.%notDel%
				AND SB1.B1_POSIPI IN %Exp:_cInPol%
				AND (SD1.D1_DTDIGIT>= %Exp:DToS(_mvpr01)%
				AND SD1.D1_DTDIGIT<= %Exp:DToS(_mvpr02)%)
				AND SD1.D1_TES<>''"
				AND SD1.D1_FILIAL = %xFilial:SD1%
		GROUP BY SD1.D1_CF
		EndSQL*/
	BeginSQL  Alias cAlB11Cr
		SELECT
			SFT.FT_CFOP AS 'CFOP',
			SUM(SFT.FT_QUANT) AS 'QUANT',
			SUM(SFT.FT_TOTAL) AS 'TOTAL',
			SUM(SFT.FT_VALICM) AS 'ICMS',
			SUM(SFT.FT_ICMSRET) AS 'ICMSST',
			SUM(SFT.FT_VALCONT) AS 'VALCONT'
		FROM %TABLE:SFT%  SFT (NOLOCK)
		WHERE SFT.%notDel%
			AND SFT.FT_POSIPI IN %Exp:_cInPol%
			AND (SFT.FT_ENTRADA>= %Exp:DToS(_mvpr01)%
			AND SFT.FT_ENTRADA<= %Exp:DToS(_mvpr02)%)
			AND SFT.FT_TES<>''"
			AND SFT.FT_DTCANC = ''
			AND SFT.FT_CFOP < '5000'
			AND SFT.FT_FILIAL = %xFilial:SFT%
		GROUP BY SFT.FT_CFOP

	EndSQL

	DbSelectArea(cAlB11Cr)
	(cAlB11Cr)->(DbGoTop())
		While !(cAlB11Cr)->(eof())
		aAdd(aBrw11Cr,{(cAlB11Cr)->CFOP,;
						(cAlB11Cr)->QUANT,;
						(cAlB11Cr)->TOTAL,;
						(cAlB11Cr)->ICMS,;
						(cAlB11Cr)->ICMSST,;
						(cAlB11Cr)->VALCONT})
		nVlCrTot	-= (cAlB11Cr)->TOTAL
		nVlCrICM	-= (cAlB11Cr)->ICMS
		nVCrICST	-= (cAlB11Cr)->ICMSST
		nVCTCb11	-= (cAlB11Cr)->VALCONT
		(cAlB11Cr)->(DbSkip())
		EndDo
	(cAlB11Cr)->(dbCloseArea())
	/*
	BeginSQL  Alias cAlB11Db
		SELECT
			SD2.D2_CF AS 'CFOP',
			SUM(SD2.D2_QUANT) AS 'QUANT',
			SUM(SD2.D2_TOTAL) AS 'TOTAL',
			SUM(SD2.D2_ICMSRET) AS 'ICMSST',
			SUM(SD2.D2_VALICM) AS 'ICMS',
			SUM(SFT.FT_VALCONT) AS 'VALCONT'
		FROM %TABLE:SD2%  SD2 (NOLOCK)
		LEFT JOIN %TABLE:SB1%  SB1 (NOLOCK) ON 
			SB1.%notDel%
			AND SB1.B1_COD = SD2.D2_COD
		WHERE SD2.%notDel%
			AND SB1.B1_POSIPI IN %Exp:_cInPol%
			AND (SD2.D2_EMISSAO>= %Exp:DToS(_mvpr01)%
			AND SD2.D2_EMISSAO<= %Exp:DToS(_mvpr02)%)
			AND SD2.D2_TES<>''"
			AND SD2.D2_FILIAL = %xFilial:SD2%
		GROUP BY SD2.D2_CF
		EndSQL*/
	BeginSQL  Alias cAlB11Db
		SELECT
			SFT.FT_CFOP AS 'CFOP',
			SUM(SFT.FT_QUANT) AS 'QUANT',
			SUM(SFT.FT_TOTAL) AS 'TOTAL',
			SUM(SFT.FT_VALICM) AS 'ICMS',
			SUM(SFT.FT_ICMSRET) AS 'ICMSST',
			SUM(SFT.FT_VALCONT) AS 'VALCONT'
		FROM %TABLE:SFT%  SFT (NOLOCK)
		WHERE SFT.%notDel%
			AND SFT.FT_POSIPI IN %Exp:_cInPol%
			AND (SFT.FT_EMISSAO>= %Exp:DToS(_mvpr01)%
			AND SFT.FT_EMISSAO<= %Exp:DToS(_mvpr02)%)
			AND SFT.FT_CFOP > '5000'
			AND SFT.FT_DTCANC = ''
			AND SFT.FT_TES<>''"
			AND SFT.FT_FILIAL = %xFilial:SFT%
		GROUP BY SFT.FT_CFOP
	EndSQL
	
	DbSelectArea(cAlB11Db)
	(cAlB11Db)->(DbGoTop())
	While !(cAlB11Db)->(eof())
		aAdd(aBrw11Db,{(cAlB11Db)->CFOP,;
									(cAlB11Db)->QUANT,;
									(cAlB11Db)->TOTAL,;
									(cAlB11Db)->ICMS,;
									(cAlB11Db)->ICMSST,;
									(cAlB11Db)->VALCONT})
		nVlDbTot	+= (cAlB11Db)->TOTAL
		nVlDbICM	+= (cAlB11Db)->ICMS
		nVDbICST	+= (cAlB11Db)->ICMSST
		nVDTCb11	+= (cAlB11Db)->VALCONT
		(cAlB11Db)->(DbSkip())		
	EndDo
	(cAlB11Db)->(dbCloseArea())		

	//CARREGA O DETALHAMENTO DAS INFORMAÇÕES DE POLENTA
	If Select(cAlsB11Dt) > 0
		(cAlsB11Dt)->(dbCloseArea())
	Endif
	cAlsB11Dt:=GetNextAlias()
	aBrw11Dt := {}
	BeginSQL  Alias cAlsB11Dt
		SELECT
			SFT.FT_FILIAL AS 'FILIAL',
			'E' AS 'OPERACAO',
			SFT.FT_ENTRADA AS 'DATA',
			SFT.FT_NFISCAL AS 'NOTA',
			SFT.FT_SERIE AS 'SERIE',
			SFT.FT_CLIEFOR AS 'CLIFOR',
			SFT.FT_LOJA AS 'LOJA',
			SA2.A2_NOME AS 'NOME',
			SFT.FT_ESTADO AS 'ESTADO',
			SFT.FT_TIPO AS 'TIPO',
			SFT.FT_PRODUTO AS 'COD_PRODUTO',
			SB1.B1_DESC AS 'PRODUTO',
			SFT.FT_CFOP AS 'CFOP',
			SFT.FT_QUANT AS 'QUANT',
			-SFT.FT_TOTAL AS 'TOTAL',
			-SFT.FT_ICMSRET AS 'ICMSST',
			-SFT.FT_VALICM AS 'ICMS',
			-SFT.FT_VALCONT AS 'VLCONT'
		FROM %TABLE:SFT%  SFT (NOLOCK)
		LEFT JOIN %TABLE:SA2% SA2 (NOLOCK) ON
				SA2.%notDel%
		AND SA2.A2_COD = SFT.FT_CLIEFOR
		AND SA2.A2_LOJA = SFT.FT_LOJA
		LEFT JOIN %TABLE:SB1% SB1 (NOLOCK) ON
			SB1.%notDel%
		AND SB1.B1_COD = SFT.FT_PRODUTO
		WHERE SFT.%notDel%
		AND SFT.FT_POSIPI IN %Exp:_cInPol%
		AND (SFT.FT_ENTRADA>= %Exp:DToS(_mvpr01)%
		AND SFT.FT_ENTRADA<= %Exp:DToS(_mvpr02)%)
		AND SFT.FT_CFOP < '5000'
		AND SFT.FT_DTCANC = ''
		AND SFT.FT_TES<>''"
		AND SFT.FT_FILIAL = %xFilial:SFT%

		UNION
		
		SELECT
			SFT.FT_FILIAL AS 'FILIAL',
			'S' AS 'OPERACAO',
			SFT.FT_EMISSAO AS 'DATA',
			SFT.FT_NFISCAL AS 'NOTA',
			SFT.FT_SERIE AS 'SERIE',
			SFT.FT_CLIEFOR AS 'CLIFOR',
			SFT.FT_LOJA AS 'LOJA',
			SA2.A2_NOME AS 'NOME',
			SFT.FT_ESTADO AS 'ESTADO',
			SFT.FT_TIPO AS 'TIPO',
			SFT.FT_PRODUTO AS 'COD_PRODUTO',
			SB1.B1_DESC AS 'PRODUTO',
			SFT.FT_CFOP AS 'CFOP',
			SFT.FT_QUANT AS 'QUANT',
			SFT.FT_TOTAL AS 'TOTAL',
			SFT.FT_ICMSRET AS 'ICMSST',
			SFT.FT_VALICM AS 'ICMS',
			SFT.FT_VALCONT AS 'VLCONT'
		FROM %TABLE:SFT%  SFT (NOLOCK)
		LEFT JOIN %TABLE:SA2% SA2 (NOLOCK) ON
			SA2.%notDel%
		AND SA2.A2_COD = SFT.FT_CLIEFOR
		AND SA2.A2_LOJA = SFT.FT_LOJA
		LEFT JOIN %TABLE:SB1% SB1 (NOLOCK) ON
			SB1.%notDel%
		AND SB1.B1_COD = SFT.FT_PRODUTO
		WHERE SFT.%notDel%
		AND SFT.FT_POSIPI IN %Exp:_cInPol%
		AND (SFT.FT_EMISSAO>= %Exp:DToS(_mvpr01)%
		AND SFT.FT_EMISSAO<= %Exp:DToS(_mvpr02)%)
		AND SFT.FT_CFOP > '5000'
		AND SFT.FT_DTCANC = ''
		AND SFT.FT_TES<>''"
		AND SFT.FT_FILIAL = %xFilial:SFT%
		
		ORDER BY FILIAL, OPERACAO, NOME, SERIE, NOTA
		//GROUP BY SD1.D1_CF

	EndSQL
	
	DbSelectArea(cAlsB11Dt)
	(cAlsB11Dt)->(DbGoTop())

	aBrw11Dt	:= {}	
	While !(cAlsB11Dt)->(eof())
		aAdd(aBrw11Dt,{(cAlsB11Dt)->FILIAL,;
						(cAlsB11Dt)->OPERACAO,;
						(cAlsB11Dt)->DATA,;
						(cAlsB11Dt)->NOTA,;
						(cAlsB11Dt)->SERIE,;
						(cAlsB11Dt)->CLIFOR,;
						(cAlsB11Dt)->LOJA,;
						(cAlsB11Dt)->NOME,;
						(cAlsB11Dt)->TIPO,;
						(cAlsB11Dt)->COD_PRODUTO,;
						(cAlsB11Dt)->PRODUTO,;
						(cAlsB11Dt)->CFOP,;
						(cAlsB11Dt)->QUANT,;
						(cAlsB11Dt)->TOTAL,;
						(cAlsB11Dt)->ICMS,;
						(cAlsB11Dt)->ICMSST,;
						(cAlsB11Dt)->VLCONT})

		//PREENCHE ARRAY DA ABERTURA DA GIA ST
		IF ALLTRIM((cAlsB11Dt)->ESTADO) $ ALLTRIM(_cMVEIST)
			IF (cAlsB11Dt)->ICMSST < 0
				(cAlB04Rs)->(dbGoTo(13))
				RECLOCK(cAlB04Rs,.F.)
					(cAlB04Rs)->VALOR += (cAlsB11Dt)->ICMSST
				MSUNLOCK()

				(cAlB04Rs)->(dbGoTo(11))
				RECLOCK(cAlB04Rs,.F.)
					(cAlB04Rs)->VALOR += (cAlsB11Dt)->ICMSST
				MSUNLOCK()
				//aBrw04Rs[13,3] += (cAlsB11Dt)->ICMSST
				//aBrw04Rs[11,3] += (cAlsB11Dt)->ICMSST
			ELSE
				(cAlB04Rs)->(dbGoTo(07))
				RECLOCK(cAlB04Rs,.F.)
					(cAlB04Rs)->VALOR += (cAlsB11Dt)->ICMSST
				MSUNLOCK()

				(cAlB04Rs)->(dbGoTo(05))
				RECLOCK(cAlB04Rs,.F.)
					(cAlB04Rs)->VALOR += (cAlsB11Dt)->ICMSST
				MSUNLOCK()
				//aBrw04Rs[07,3] += (cAlsB11Dt)->ICMSST
				//aBrw04Rs[05,3] += (cAlsB11Dt)->ICMSST
			ENDIF
		ELSE
			IF (cAlsB11Dt)->ICMSST < 0
				(cAlB04Rs)->(dbGoTo(12))
				RECLOCK(cAlB04Rs,.F.)
					(cAlB04Rs)->VALOR += (cAlsB11Dt)->ICMSST
				MSUNLOCK()

				(cAlB04Rs)->(dbGoTo(11))
				RECLOCK(cAlB04Rs,.F.)
					(cAlB04Rs)->VALOR += (cAlsB11Dt)->ICMSST
				MSUNLOCK()

				(cAlB04Rs)->(dbGoTo(19))
				RECLOCK(cAlB04Rs,.F.)
					(cAlB04Rs)->VALOR += (cAlsB11Dt)->ICMSST
				MSUNLOCK()
				//aBrw04Rs[12,3] += (cAlsB11Dt)->ICMSST
				//aBrw04Rs[11,3] += (cAlsB11Dt)->ICMSST
			ELSE
				(cAlB04Rs)->(dbGoTo(06))
				RECLOCK(cAlB04Rs,.F.)
					(cAlB04Rs)->VALOR += (cAlsB11Dt)->ICMSST
				MSUNLOCK()

				(cAlB04Rs)->(dbGoTo(05))
				RECLOCK(cAlB04Rs,.F.)
					(cAlB04Rs)->VALOR += (cAlsB11Dt)->ICMSST
				MSUNLOCK()

				(cAlB04Rs)->(dbGoTo(19))
				RECLOCK(cAlB04Rs,.F.)
					(cAlB04Rs)->VALOR += (cAlsB11Dt)->ICMSST
				MSUNLOCK()
				//aBrw04Rs[06,3] += (cAlsB11Dt)->ICMSST
				//aBrw04Rs[05,3] += (cAlsB11Dt)->ICMSST
			ENDIF
		ENDIF
		//FIM ABERTURA GIA ST
		
		(cAlsB11Dt)->(DbSkip())
	EndDo
	(cAlsB11Dt)->(dbCloseArea())

	nVlPgST	:= nVDbICST + nVCrICST + nCMAntST
	SysRefresh()
Return

/*/{Protheus.doc} Static Function xRelBr11  
	Gera Relatório Ref. Crédito de ICMS ST - POLENTA 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function xRelBr11()
	Local aSays			:= {}
	Local aButtons		:= {}
	Local nOpca			:= 0
	//+-----------------------------------------------+
	//|Monta Form Batch - Interface com o Usuario     |
	//+-----------------------------------------------+
	AADD(aSays,"Este programa tem a finalidade de Gerar um arquivo Excel " )
	AADD(aSays,"Relatorio de ICMS ST (Polenta)" )
    
	AADD(aButtons, { 1,.T.,{|o| nOpca:=1, o:oWnd:End(), Processa({||xRelBr11b()},"Gerando arquivo","Aguarde...")    }})
	AADD(aButtons, { 2,.T.,{|o| nOpca:=2, o:oWnd:End() }})	
	FormBatch( cCadastr, aSays, aButtons )
	
	MsgInfo("Arquivo Excel gerado!")
	
Return

/*/{Protheus.doc} Static Function xRelBr11b  
	Gera Relatório Ref. Crédito de ICMS ST - POLENTA 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function xRelBr11b()
	Private oExcel     := FWMSEXCELEX():New()
	//Private cArquivo	:= cGetFile("Arquivo XML", "Selecione o diretório para salvar o relatório",,'C:\',.T.,GETF_RETDIRECTORY + GETF_LOCALHARD + GETF_NETWORKDRIVE)	
	Private oMsExcel   := NIL
	
	cArquivo := cPathRel +  'RPOLENTA_' + DTOS(DATE()) + STRTRAN(TIME(),':','') + '.XML'
	BEGIN SEQUENCE
		
		//IF .NOT.( ApOleClient("MsExcel") )   // se nao existir o excel sai fora..
		//    Alert("Nao Existe Excel Instalado")
    //        BREAK
		//EndIF
        	
		//Resumo
		Cab11P1()
		GEx11P1()

		//Resumo
		Cab11P2()
		GEx11P2()

		
		SalvaXml()
		CriaExcel()
	
	END SEQUENCE

Return

/*/{Protheus.doc} Static Function Cab11P1  
	Gera Relatório Ref. Crédito de ICMS ST - POLENTA 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function Cab11P1()
	oExcel:AddworkSheet(cFld11)
	oExcel:AddTable(cFld11,cFld11t)
	oExcel:AddColumn(cFld11,cFld11t,"CFOP"  		,1,1) // 01 A
	oExcel:AddColumn(cFld11,cFld11t,"Quant." 	,2,2) // 02 B
	oExcel:AddColumn(cFld11,cFld11t,"Vl. Total"	,2,3) // 03 C
	oExcel:AddColumn(cFld11,cFld11t,"Vl. ICMS" 	,2,3) // 04 D
	oExcel:AddColumn(cFld11,cFld11t,"Vl. ICMS ST",2,3) // 05 E
	oExcel:AddColumn(cFld11,cFld11t,"Vl. Contábil",2,3) // 06 E
RETURN(NIL)  

/*/{Protheus.doc} Static Function GEx11P1  
	Gera Relatório Ref. Crédito de ICMS ST - POLENTA 
	@author Abel Babini Filho
	@since 02/09/2019
	@version 01
	/*/
Static Function GEx11P1()
	Local nExcel1
	nLinBr11	:= 1
	oExcel:SetCelFont('Arial')
	oExcel:SetCelBold(.F.)
	oExcel:SetCelSizeFont(12)
	oExcel:SetCelFrColor("#000000") 
	
	//============================== INICIO IMPRIME LINHA NO EXCEL
	FOR nExcel1 := 1 TO Len(aBrw11Cr)
		//GRAVANDO NA LINHA MANDANDO PARA O EXCEL O ARRAY COM AS LINHAS
		nLinBr11 += 1
		oExcel:AddRow(cFld11,cFld11t,;
						{aBrw11Cr[nExcel1][01],; // 01 A - CFOP 
						aBrw11Cr[nExcel1][02],; // 02 B - QUANT  
						-aBrw11Cr[nExcel1][03],; // 03 C - VL. TOTAL
						-aBrw11Cr[nExcel1][04],; // 04 D - VL. ICMS
						-aBrw11Cr[nExcel1][05],; // 05 E - VL. ICMS ST
						-aBrw11Cr[nExcel1][06]}) // 06 E - VL. CONTABIL
	NEXT

	oExcel:AddRow(cFld11,cFld11t,;
	{'TOTAL CRÉDITO',; // 01 A - CFOP
'',; // 02 B - QUANT
nVlCrTot,; // 03 C - VL. TOTAL
nVlCrICM,; // 04 D - VL. ICMS
nVCrICST,; // 05 E - VL. ICMS ST
nVCTCb11}) // 06 E - VL. CONTABIL
oExcel:AddRow(cFld11,cFld11t,;
	{'',; // 01 A - CFOP
'',; // 02 B - QUANT
'',; // 03 C - VL. TOTAL
'',; // 04 D - VL. ICMS
'',; // 05 E - VL. ICMS ST
''}) // 06 E - VL. CONTABIL

	FOR nExcel1 := 1 TO Len(aBrw11Db)
		//GRAVANDO NA LINHA MANDANDO PARA O EXCEL O ARRAY COM AS LINHAS
		nLinBr11 += 1
		oExcel:AddRow(cFld11,cFld11t,;
						{aBrw11Db[nExcel1][01],; // 01 A - CFOP 
						aBrw11Db[nExcel1][02],; // 02 B - QUANT  
						aBrw11Db[nExcel1][03],; // 03 C - VL. TOTAL
						aBrw11Db[nExcel1][04],; // 04 D - VL. ICMS
						aBrw11Db[nExcel1][05],; // 05 E - VL. ICMS ST
						aBrw11Db[nExcel1][06]}) // 06 E - VL. CONTABIL
											
	NEXT

	oExcel:AddRow(cFld11,cFld11t,;
	{'TOTAL DÉBITO',; // 01 A - CFOP
'',; // 02 B - QUANT
nVlDbTot,; // 03 C - VL. TOTAL
nVlDbICM,; // 04 D - VL. ICMS
nVDbICST,; // 05 E - VL. ICMS ST
nVDTCb11}) // 06 E - VL. CONTABIL
	
    //Adiciona Linha em branco 
    oExcel:AddRow(cFld11,cFld11t,;
						{'',; // 01 A - CFOP 
						'',; // 02 B - QUANT  
						'',; // 03 C - VL. TOTAL
						'',; // 04 D - VL. ICMS
						'',; // 05 E - VL. ICMS ST
						''}) // 06 E - VL. CONTABIL
	//TOTAIS
	oExcel:SetCelFont('Arial')
	oExcel:SetCelBold(.T.)
	oExcel:SetCelSizeFont(12)
	oExcel:SetCelFrColor("#000000") 
	oExcel:SetCelBgColor("#D7BCFB")
	
    oExcel:AddRow(cFld11,cFld11t,;
						{'TOTAL NO PERÍODO',; // 01 A - CFOP 
						'',; // 02 B - QUANT  
						nVlDbTot+nVlCrTot,; // 03 C - VL. TOTAL
						nVlDbICM+nVlCrICM,; // 04 D - VL. ICMS
						nVlPgST,; 			// 05 E - VL. ICMS ST 	
						}) // 06 E - VL. CONTABIL
						
	oExcel:SetCelFont('Arial')
	oExcel:SetCelBold(.T.)
	oExcel:SetCelSizeFont(14)
	oExcel:SetCelFrColor("#000333") 

    oExcel:AddRow(cFld11,cFld11t,;
						{'ICMS ST À PAGAR',; // 01 A - CFOP 
						'',; // 02 B - QUANT  
						'',; // 03 C - VL. TOTAL
						'',; // 04 D - VL. ICMS
						nVlPgST,; // 05 E - VL. ICMS ST
						''}) // 06 E - VL. CONTABIL
 	//============================== FINAL IMPRIME LINHA NO EXCEL
Return

/*/{Protheus.doc} Static Function Cab12P2
Gera Relatório Ref. Embutidos
	@type  Static Function
	@author Abel Babini Filho
	@since 30/04/2019
	@version 01
	/*/
	Static Function Cab11P2()
	oExcel:AddworkSheet(cFld112)
	oExcel:AddTable(cFld112,cFld11t2)
	oExcel:AddColumn(cFld112,cFld11t2,"Filial"  			,1,1)
	oExcel:AddColumn(cFld112,cFld11t2,"Operação"  		,1,1)
	oExcel:AddColumn(cFld112,cFld11t2,"Data"  			,1,1)
	oExcel:AddColumn(cFld112,cFld11t2,"Nota"  			,1,1)
	oExcel:AddColumn(cFld112,cFld11t2,"Serie"  			,1,1)
	oExcel:AddColumn(cFld112,cFld11t2,"Cliente/Fornecedor",1,1)
	oExcel:AddColumn(cFld112,cFld11t2,"Loja"  			,1,1)
	oExcel:AddColumn(cFld112,cFld11t2,"Nome"  			,1,1)
	oExcel:AddColumn(cFld112,cFld11t2,"Tipo"  			,1,1)
	oExcel:AddColumn(cFld112,cFld11t2,"Cod.Produto"  	,1,1)
	oExcel:AddColumn(cFld112,cFld11t2,"Produto"  		,1,1)
	oExcel:AddColumn(cFld112,cFld11t2,"CFOP"  			,1,1)
	oExcel:AddColumn(cFld112,cFld11t2,"Quant." 			,2,2,.t.)
	oExcel:AddColumn(cFld112,cFld11t2,"Vl. Total"		,2,3,.t.)
	oExcel:AddColumn(cFld112,cFld11t2,"Vl. ICMS" 		,2,3,.t.)
	oExcel:AddColumn(cFld112,cFld11t2,"Vl. ICMS ST"		,2,3,.t.)
	oExcel:AddColumn(cFld112,cFld11t2,"Vl. Contabil"	,2,3,.t.)

RETURN(NIL)

/*/{Protheus.doc} Static Function GEx11P2
Gera Relatório Ref. Embutidos
	@type  Static Function
	@author Abel Babini Filho
	@since 30/04/2019
	@version 01
	/*/
	Static Function GEx11P2()
		Local nExcel1
		FOR nExcel1 := 1 TO Len(aBrw11Dt)
			oExcel:AddRow(cFld112,cFld11t2,;
				{aBrw11Dt[nExcel1][01],;
				aBrw11Dt[nExcel1][02],;
				aBrw11Dt[nExcel1][03],;
				aBrw11Dt[nExcel1][04],;
				aBrw11Dt[nExcel1][05],;
				aBrw11Dt[nExcel1][06],;
				aBrw11Dt[nExcel1][07],;
				aBrw11Dt[nExcel1][08],;
				aBrw11Dt[nExcel1][09],;
				aBrw11Dt[nExcel1][10],;
				aBrw11Dt[nExcel1][11],;
				aBrw11Dt[nExcel1][12],;
				aBrw11Dt[nExcel1][13],;
				aBrw11Dt[nExcel1][14],;
				aBrw11Dt[nExcel1][15],;
				aBrw11Dt[nExcel1][16],;
				aBrw11Dt[nExcel1][17];
				})
	NEXT nExcel1
Return
//FIM Chamado n.040926 - OS n.042025 - Relatorio Polenta - Abel Babini - 01/04/2019

// INICIO Chamado n.040925 - OS n.042026 - Relatorio Embutidos - Abel Babini - 30/04/2019
/*/{Protheus.doc} Static Function xABrw12
	Gera Relatório Ref. Embutidos
	@type  Static Function
	@author Abel Babini Filho
	@since 30/04/2019
	@version 01
	/*/
	Static Function xABrw12()
	Local _cCFOAnt	:= ""
	Local _nCFOQtd	:= 0
	Local _nCFOTot	:= 0
	Local _nCFOICM	:= 0
	Local _nCFOIST	:= 0

	If Select(cAlsB12Cr) > 0
		(cAlsB12Cr)->(dbCloseArea())
	Endif
	cAlsB12Cr:=GetNextAlias()

	If Select(cAlsB12Db) > 0
		(cAlsB12Db)->(dbCloseArea())
	Endif
	cAlsB12Db:=GetNextAlias()

	aBrw12Cr	:= {}
	aBrw12Db	:= {}
	nVCTot12	:= 0
	nVCICM12	:= 0
	nVCIST12	:= 0
	nVDTot12	:= 0
	nVDICM12	:= 0
	nVDIST12	:= 0
	nVCTCb12	:= 0
	nVDTCb12	:= 0

	BeginSQL  Alias cAlsB12Cr
		SELECT
			SFT.FT_CFOP AS 'CFOP',
			SUM(SFT.FT_QUANT) AS 'QUANT',
			SUM(SFT.FT_TOTAL) AS 'TOTAL',
			SUM(SFT.FT_ICMSRET) AS 'ICMSST',
			SUM(SFT.FT_VALICM) AS 'ICMS',
			SUM(SFT.FT_VALCONT) AS 'VALCONT'
		FROM %TABLE:SFT%  SFT (NOLOCK)
		WHERE SFT.%notDel%
			AND SFT.FT_POSIPI IN %Exp:_cInEmbu%
			AND (SFT.FT_ENTRADA>= %Exp:DToS(_mvpr01)%
			AND SFT.FT_ENTRADA<= %Exp:DToS(_mvpr02)%)
			AND SFT.FT_TES<>''"
			AND SFT.FT_DTCANC = ''
			AND SFT.FT_CFOP < '5000'
			AND SFT.FT_FILIAL = %xFilial:SD1%
		GROUP BY SFT.FT_CFOP

	EndSQL

	DbSelectArea(cAlsB12Cr)
	(cAlsB12Cr)->(DbGoTop())
	_cCFOAnt	:= (cAlsB12Cr)->CFOP
	_nCFOQtd	:= 0
	_nCFOTot	:= 0
	_nCFOICM	:= 0
	_nCFOIST	:= 0
	While !(cAlsB12Cr)->(eof())

		aAdd(aBrw12Cr,{(cAlsB12Cr)->CFOP,;
			(cAlsB12Cr)->QUANT,;
			(cAlsB12Cr)->TOTAL,;
			(cAlsB12Cr)->ICMS,;
			(cAlsB12Cr)->ICMSST,;
			(cAlsB12Cr)->VALCONT})
		nVCTot12	-= (cAlsB12Cr)->TOTAL
		nVCICM12	-= (cAlsB12Cr)->ICMS
		nVCIST12	-= (cAlsB12Cr)->ICMSST
		nVCTCb12	-= (cAlsB12Cr)->VALCONT

		(cAlsB12Cr)->(DbSkip())
	EndDo
	(cAlsB12Cr)->(dbCloseArea())

	BeginSQL  Alias cAlsB12Db
		SELECT
			SFT.FT_CFOP AS 'CFOP',
			SUM(SFT.FT_QUANT) AS 'QUANT',
			SUM(SFT.FT_ICMSRET) AS 'ICMSST',
			SUM(SFT.FT_TOTAL) AS 'TOTAL',
			SUM(SFT.FT_VALICM) AS 'ICMS',
			SUM(SFT.FT_VALCONT) AS 'VALCONT'
		FROM %TABLE:SFT%  SFT (NOLOCK)
		WHERE SFT.%notDel%
			AND SFT.FT_POSIPI IN %Exp:_cInEmbu%
			AND (SFT.FT_EMISSAO>= %Exp:DToS(_mvpr01)%
			AND SFT.FT_EMISSAO<= %Exp:DToS(_mvpr02)%)
			AND SFT.FT_CFOP > '5000'
			AND SFT.FT_DTCANC = ''
			AND SFT.FT_TES<>''"
			AND SFT.FT_FILIAL = %xFilial:SD2%
		GROUP BY SFT.FT_CFOP
	EndSQL

	DbSelectArea(cAlsB12Db)
	(cAlsB12Db)->(DbGoTop())
	_cCFOAnt	:= (cAlsB12Db)->CFOP
	_nCFOQtd	:= 0
	_nCFOTot	:= 0
	_nCFOICM	:= 0
	_nCFOIST	:= 0
	While !(cAlsB12Db)->(eof())

		aAdd(aBrw12Db,{(cAlsB12Db)->CFOP,;
					(cAlsB12Db)->QUANT,;
					(cAlsB12Db)->TOTAL,;
					(cAlsB12Db)->ICMS,;
					(cAlsB12Db)->ICMSST,;
					(cAlsB12Db)->VALCONT})
		nVDTot12	+= (cAlsB12Db)->TOTAL
		nVDICM12	+= (cAlsB12Db)->ICMS
		nVDIST12	+= (cAlsB12Db)->ICMSST
		nVDTCb12	+= (cAlsB12Db)->VALCONT

		(cAlsB12Db)->(DbSkip())
	EndDo
	(cAlsB12Db)->(dbCloseArea())

	//CARREGA O DETALHAMENTO DAS INFORMAÇÕES DE EMBUTIDOS
	If Select(cAlsB12Dt) > 0
		(cAlsB12Dt)->(dbCloseArea())
	Endif
	cAlsB12Dt:=GetNextAlias()
	aBrw12DT := {}
	BeginSQL  Alias cAlsB12Dt
		SELECT
			SFT.FT_FILIAL AS 'FILIAL',
			'E' AS 'OPERACAO',
			SFT.FT_ENTRADA AS 'DATA',
			SFT.FT_NFISCAL AS 'NOTA',
			SFT.FT_SERIE AS 'SERIE',
			SFT.FT_CLIEFOR AS 'CLIFOR',
			SFT.FT_LOJA AS 'LOJA',
			SA2.A2_NOME AS 'NOME',
			SFT.FT_ESTADO AS 'ESTADO',
			SFT.FT_TIPO AS 'TIPO',
			SFT.FT_PRODUTO AS 'COD_PRODUTO',
			SB1.B1_DESC AS 'PRODUTO',
			SFT.FT_CFOP AS 'CFOP',
			SFT.FT_QUANT AS 'QUANT',
			-SFT.FT_TOTAL AS 'TOTAL',
			-SFT.FT_ICMSRET AS 'ICMSST',
			-SFT.FT_VALICM AS 'ICMS',
			-SFT.FT_VALCONT AS 'VLCONT'
		FROM %TABLE:SFT%  SFT (NOLOCK)
		LEFT JOIN %TABLE:SA2% SA2 (NOLOCK) ON
			SA2.%notDel%
			AND SA2.A2_COD = SFT.FT_CLIEFOR
			AND SA2.A2_LOJA = SFT.FT_LOJA
		LEFT JOIN %TABLE:SB1% SB1 (NOLOCK) ON
			SB1.%notDel%
			AND SB1.B1_COD = SFT.FT_PRODUTO
		WHERE SFT.%notDel%
			AND SFT.FT_POSIPI IN %Exp:_cInEmbu%
			AND (SFT.FT_ENTRADA>= %Exp:DToS(_mvpr01)%
			AND SFT.FT_ENTRADA<= %Exp:DToS(_mvpr02)%)
			AND SFT.FT_CFOP < '5000'
			AND SFT.FT_DTCANC = ''
			AND SFT.FT_TES<>''"
			AND SFT.FT_FILIAL = %xFilial:SD1%

		UNION

		SELECT
			SFT.FT_FILIAL AS 'FILIAL',
			'S' AS 'OPERACAO',
			SFT.FT_EMISSAO AS 'DATA',
			SFT.FT_NFISCAL AS 'NOTA',
			SFT.FT_SERIE AS 'SERIE',
			SFT.FT_CLIEFOR AS 'CLIFOR',
			SFT.FT_LOJA AS 'LOJA',
			SA2.A2_NOME AS 'NOME',
			SFT.FT_ESTADO AS 'ESTADO',
			SFT.FT_TIPO AS 'TIPO',
			SFT.FT_PRODUTO AS 'COD_PRODUTO',
			SB1.B1_DESC AS 'PRODUTO',
			SFT.FT_CFOP AS 'CFOP',
			SFT.FT_QUANT AS 'QUANT',
			SFT.FT_TOTAL AS 'TOTAL',
			SFT.FT_ICMSRET AS 'ICMSST',
			SFT.FT_VALICM AS 'ICMS',
			SFT.FT_VALCONT AS 'VLCONT'
		FROM %TABLE:SFT%  SFT (NOLOCK)
		LEFT JOIN %TABLE:SA2% SA2 (NOLOCK) ON
			SA2.%notDel%
			AND SA2.A2_COD = SFT.FT_CLIEFOR
			AND SA2.A2_LOJA = SFT.FT_LOJA
		LEFT JOIN %TABLE:SB1% SB1 (NOLOCK) ON
			SB1.%notDel%
			AND SB1.B1_COD = SFT.FT_PRODUTO
		WHERE SFT.%notDel%
			AND SFT.FT_POSIPI IN %Exp:_cInEmbu%
			AND (SFT.FT_EMISSAO>= %Exp:DToS(_mvpr01)%
			AND SFT.FT_EMISSAO<= %Exp:DToS(_mvpr02)%)
			AND SFT.FT_CFOP > '5000'
			AND SFT.FT_DTCANC = ''
			AND SFT.FT_TES<>''"
			AND SFT.FT_FILIAL = %xFilial:SD2%

	ORDER BY FILIAL, OPERACAO, NOME, SERIE, NOTA
	//GROUP BY SD1.D1_CF

	EndSQL

	DbSelectArea(cAlsB12Dt)
	(cAlsB12Dt)->(DbGoTop())

	aBrw12DT	:= {}
	While !(cAlsB12Dt)->(eof())

		aAdd(aBrw12DT,{(cAlsB12Dt)->FILIAL,;
							(cAlsB12Dt)->OPERACAO,;
							(cAlsB12Dt)->DATA,;
							(cAlsB12Dt)->NOTA,;
							(cAlsB12Dt)->SERIE,;
							(cAlsB12Dt)->CLIFOR,;
							(cAlsB12Dt)->LOJA,;
							(cAlsB12Dt)->NOME,;
							(cAlsB12Dt)->TIPO,;
							(cAlsB12Dt)->COD_PRODUTO,;
							(cAlsB12Dt)->PRODUTO,;
							(cAlsB12Dt)->CFOP,;
							(cAlsB12Dt)->QUANT,;
							(cAlsB12Dt)->TOTAL,;
							(cAlsB12Dt)->ICMS,;
							(cAlsB12Dt)->ICMSST,;
							(cAlsB12Dt)->VLCONT})

		//PREENCHE ARRAY DA ABERTURA DA GIA ST
		IF ALLTRIM((cAlsB12Dt)->ESTADO) $ ALLTRIM(_cMVEIST)
			IF (cAlsB12Dt)->ICMSST < 0
				(cAlB04Rs)->(dbGoTo(13))
				RECLOCK(cAlB04Rs,.F.)
					(cAlB04Rs)->VALOR += (cAlsB12Dt)->ICMSST
				MSUNLOCK()

				(cAlB04Rs)->(dbGoTo(11))
				RECLOCK(cAlB04Rs,.F.)
					(cAlB04Rs)->VALOR += (cAlsB12Dt)->ICMSST
				MSUNLOCK()

				// aBrw04Rs[13,3] += (cAlsB12Dt)->ICMSST
				// aBrw04Rs[11,3] += (cAlsB12Dt)->ICMSST
			ELSE
				(cAlB04Rs)->(dbGoTo(07))
				RECLOCK(cAlB04Rs,.F.)
					(cAlB04Rs)->VALOR += (cAlsB12Dt)->ICMSST
				MSUNLOCK()

				(cAlB04Rs)->(dbGoTo(05))
				RECLOCK(cAlB04Rs,.F.)
					(cAlB04Rs)->VALOR += (cAlsB12Dt)->ICMSST
				MSUNLOCK()
				// aBrw04Rs[07,3] += (cAlsB12Dt)->ICMSST
				// aBrw04Rs[05,3] += (cAlsB12Dt)->ICMSST
			ENDIF
		ELSE
			IF (cAlsB12Dt)->ICMSST < 0
				(cAlB04Rs)->(dbGoTo(12))
				RECLOCK(cAlB04Rs,.F.)
					(cAlB04Rs)->VALOR += (cAlsB12Dt)->ICMSST
				MSUNLOCK()

				(cAlB04Rs)->(dbGoTo(11))
				RECLOCK(cAlB04Rs,.F.)
					(cAlB04Rs)->VALOR += (cAlsB12Dt)->ICMSST
				MSUNLOCK()

				(cAlB04Rs)->(dbGoTo(19))
				RECLOCK(cAlB04Rs,.F.)
					(cAlB04Rs)->VALOR += (cAlsB12Dt)->ICMSST
				MSUNLOCK()
				//aBrw04Rs[12,3] += (cAlsB12Dt)->ICMSST
				//aBrw04Rs[11,3] += (cAlsB12Dt)->ICMSST
			ELSE
				(cAlB04Rs)->(dbGoTo(06))
				RECLOCK(cAlB04Rs,.F.)
					(cAlB04Rs)->VALOR += (cAlsB12Dt)->ICMSST
				MSUNLOCK()

				(cAlB04Rs)->(dbGoTo(19))
				RECLOCK(cAlB04Rs,.F.)
					(cAlB04Rs)->VALOR += (cAlsB12Dt)->ICMSST
				MSUNLOCK()

				(cAlB04Rs)->(dbGoTo(05))
				RECLOCK(cAlB04Rs,.F.)
					(cAlB04Rs)->VALOR += (cAlsB12Dt)->ICMSST
				MSUNLOCK()
				//aBrw04Rs[06,3] += (cAlsB12Dt)->ICMSST
				//aBrw04Rs[05,3] += (cAlsB12Dt)->ICMSST
			ENDIF
		ENDIF

		//Preenche campo de devolução na GIA ST
		IF Substr(Alltrim((cAlsB12Dt)->CFOP),2,1) = '2'
			(cAlB04Rs)->(dbGoTo(14))
			RECLOCK(cAlB04Rs,.F.)
				(cAlB04Rs)->VALOR += (cAlsB12Dt)->ICMSST
			MSUNLOCK()

			(cAlB04Rs)->(dbGoTo(19))
			RECLOCK(cAlB04Rs,.F.)
				(cAlB04Rs)->VALOR += (cAlsB12Dt)->ICMSST
			MSUNLOCK()
		//aBrw04Rs[14,3] += (cAlsB12Dt)->ICMSST
		ENDIF
		//FIM ABERTURA GIA ST

		(cAlsB12Dt)->(DbSkip())
	EndDo
	(cAlsB12Dt)->(dbCloseArea())
	SysRefresh()
Return

/*/{Protheus.doc} Static Function xRelBr12
	Gera Relatório Ref. Embutidos
	@type  Static Function
	@author Abel Babini Filho
	@since 30/04/2019
	@version 01
	/*/
Static Function xRelBr12()
	Local aSays			:= {}
	Local aButtons		:= {}
	Local nOpca			:= 0
	//+-----------------------------------------------+
	//|Monta Form Batch - Interface com o Usuario     |
	//+-----------------------------------------------+
	AADD(aSays,"Este programa tem a finalidade de Gerar um arquivo Excel " )
	AADD(aSays,"Relatorio de ICMS ST (Embutidos)" )

	AADD(aButtons, { 1,.T.,{|o| nOpca:=1, o:oWnd:End(), Processa({||xRelBr12b()},"Gerando arquivo","Aguarde...")    }})
	AADD(aButtons, { 2,.T.,{|o| nOpca:=2, o:oWnd:End() }})
	FormBatch( cCadastr, aSays, aButtons )
	MsgInfo("Arquivo Excel gerado!")
Return

/*/{Protheus.doc} Static Function xRelBr12b
	Gera Relatório Ref. Embutidos
	@type  Static Function
	@author Abel Babini Filho
	@since 30/04/2019
	@version 01
	/*/
Static Function xRelBr12b()
	Private oExcel     := FWMSEXCELEX():New()
	//Private cArquivo	:= cGetFile("Arquivo XML", "Selecione o diretório para salvar o relatório",,'C:\',.T.,GETF_RETDIRECTORY + GETF_LOCALHARD + GETF_NETWORKDRIVE)
	Private oMsExcel   := NIL

	cArquivo := cPathRel +  'REMBUTIDOS_' + DTOS(DATE()) + STRTRAN(TIME(),':','') + '.XML'
	BEGIN SEQUENCE

		//IF .NOT.( ApOleClient("MsExcel") )   // se nao existir o excel sai fora..
		//	Alert("Nao Existe Excel Instalado")
		//	BREAK
		//EndIF

		//Resumo
		Cab12P1()
		GEx12P1()

		//Resumo
		Cab12P2()
		GEx12P2()

		SalvaXml()
		CriaExcel()

	END SEQUENCE

Return

/*/{Protheus.doc} Static Function Cab12P1
	Gera Relatório Ref. Embutidos
	@type  Static Function
	@author Abel Babini Filho
	@since 30/04/2019
	@version 01
	/*/
Static Function Cab12P1()
	oExcel:AddworkSheet(cFld12)
	oExcel:AddTable(cFld12,cFld12t)
	oExcel:AddColumn(cFld12,cFld12t,"CFOP"  		,1,1) // 01 A
	oExcel:AddColumn(cFld12,cFld12t,"Quant." 	,2,2) // 02 B
	oExcel:AddColumn(cFld12,cFld12t,"Vl. Total"	,2,3) // 03 C
	oExcel:AddColumn(cFld12,cFld12t,"Vl. ICMS" 	,2,3) // 04 D
	oExcel:AddColumn(cFld12,cFld12t,"Vl. ICMS ST",2,3) // 05 E
	oExcel:AddColumn(cFld12,cFld12t,"Vl. Contábil",2,3) // 06 E
RETURN(NIL)

/*/{Protheus.doc} Static Function Cab12P2
Gera Relatório Ref. Embutidos
	@type  Static Function
	@author Abel Babini Filho
	@since 30/04/2019
	@version 01
	/*/
Static Function Cab12P2()
	oExcel:AddworkSheet(cFld122)
	oExcel:AddTable(cFld122,cFld12t2)
	oExcel:AddColumn(cFld122,cFld12t2,"Filial"  			,1,1)
	oExcel:AddColumn(cFld122,cFld12t2,"Operação"  		,1,1)
	oExcel:AddColumn(cFld122,cFld12t2,"Data"  			,1,1)
	oExcel:AddColumn(cFld122,cFld12t2,"Nota"  			,1,1)
	oExcel:AddColumn(cFld122,cFld12t2,"Serie"  			,1,1)
	oExcel:AddColumn(cFld122,cFld12t2,"Cliente/Fornecedor",1,1)
	oExcel:AddColumn(cFld122,cFld12t2,"Loja"  			,1,1)
	oExcel:AddColumn(cFld122,cFld12t2,"Nome"  			,1,1)
	oExcel:AddColumn(cFld122,cFld12t2,"Tipo"  			,1,1)
	oExcel:AddColumn(cFld122,cFld12t2,"Cod.Produto"  	,1,1)
	oExcel:AddColumn(cFld122,cFld12t2,"Produto"  		,1,1)
	oExcel:AddColumn(cFld122,cFld12t2,"CFOP"  			,1,1)
	oExcel:AddColumn(cFld122,cFld12t2,"Quant." 			,2,2)
	oExcel:AddColumn(cFld122,cFld12t2,"Vl. Total"		,2,3)
	oExcel:AddColumn(cFld122,cFld12t2,"Vl. ICMS" 		,2,3)
	oExcel:AddColumn(cFld122,cFld12t2,"Vl. ICMS ST"		,2,3)
	oExcel:AddColumn(cFld122,cFld12t2,"Vl. Contabil"	,2,3)

RETURN(NIL)

/*/{Protheus.doc} Static Function GEx12P1
Gera Relatório Ref. Embutidos
	@type  Static Function
	@author Abel Babini Filho
	@since 30/04/2019
	@version 01
	/*/
Static Function GEx12P1()
	Local nExcel1
	oExcel:SetCelFont('Arial')
	oExcel:SetCelBold(.F.)
	oExcel:SetCelSizeFont(12)
	oExcel:SetCelFrColor("#000000")

	//============================== INICIO IMPRIME LINHA NO EXCEL
	FOR nExcel1 := 1 TO Len(aBrw12Cr)
		//GRAVANDO NA LINHA MANDANDO PARA O EXCEL O ARRAY COM AS LINHAS
		oExcel:AddRow(cFld12,cFld12t,;
			{aBrw12Cr[nExcel1][01],; // 01 A - CFOP
		aBrw12Cr[nExcel1][02],; // 02 B - QUANT
		-aBrw12Cr[nExcel1][03],; // 03 C - VL. TOTAL
		-aBrw12Cr[nExcel1][04],; // 04 D - VL. ICMS
		-aBrw12Cr[nExcel1][05],; // 05 E - VL. ICMS ST
		-aBrw12Cr[nExcel1][06]}) // 06 E - VL. CONTABIL

	NEXT

	oExcel:AddRow(cFld12,cFld12t,;
		{'TOTAL CRÉDITO',; // 01 A - CFOP
	'',; // 02 B - QUANT
	nVCTot12,; // 03 C - VL. TOTAL
	nVCICM12,; // 04 D - VL. ICMS
	nVCIST12,; // 05 E - VL. ICMS ST
	nVCTCb12}) // 05 E - VL. CONTABIL
	//Adiciona Linha em branco
	oExcel:AddRow(cFld12,cFld12t,;
		{'',; // 01 A - CFOP
	'',; // 02 B - QUANT
	'',; // 03 C - VL. TOTAL
	'',; // 04 D - VL. ICMS
	'',; // 05 E - VL. ICMS ST
	''}) // 06 E - VL. CONTABIL


	FOR nExcel1 := 1 TO Len(aBrw12Db)
		//GRAVANDO NA LINHA MANDANDO PARA O EXCEL O ARRAY COM AS LINHAS
		oExcel:AddRow(cFld12,cFld12t,;
			{aBrw12Db[nExcel1][01],; // 01 A - CFOP
			aBrw12Db[nExcel1][02],; // 02 B - QUANT
			aBrw12Db[nExcel1][03],; // 03 C - VL. TOTAL
			aBrw12Db[nExcel1][04],; // 04 D - VL. ICMS
			aBrw12Db[nExcel1][05],; // 05 E - VL. ICMS ST
			aBrw12Db[nExcel1][06]}) // 06 E - VL. CONTABIL

	NEXT

	oExcel:AddRow(cFld12,cFld12t,;
		{'TOTAL DÉBITO',; // 01 A - CFOP
	'',; // 02 B - QUANT
	nVDTot12,; // 03 C - VL. TOTAL
	nVDICM12,; // 04 D - VL. ICMS
	nVDIST12,; // 05 E - VL. ICMS ST
	nVDTCb12}) // 06 E - VL. CONTABIL
	//Adiciona Linha em branco
	oExcel:AddRow(cFld12,cFld12t,;
		{'',; // 01 A - CFOP
	'',; // 02 B - QUANT
	'',; // 03 C - VL. TOTAL
	'',; // 04 D - VL. ICMS
	'',; // 05 E - VL. ICMS ST
	''}) // 06 E - VL. CONTABIL
	//Adiciona Linha em branco
	oExcel:AddRow(cFld12,cFld12t,;
		{'',; // 01 A - CFOP
	'',; // 02 B - QUANT
	'',; // 03 C - VL. TOTAL
	'',; // 04 D - VL. ICMS
	'',; // 05 E - VL. ICMS ST
	''}) // 06 E - VL. CONTABIL
	//TOTAIS
	oExcel:SetCelFont('Arial')
	oExcel:SetCelBold(.T.)
	oExcel:SetCelSizeFont(12)
	oExcel:SetCelFrColor("#000000")
	oExcel:SetCelBgColor("#D7BCFB")

	oExcel:AddRow(cFld12,cFld12t,;
		{'TOTAL NO PERÍODO',; // 01 A - CFOP
	'',; // 02 B - QUANT
	nVDTot12+nVCTot12,; // 03 C - VL. TOTAL
	nVDICM12+nVCICM12,; // 04 D - VL. ICMS
	nVDIST12+nVCIST12,; // 05 E - VL. ICMS ST
	nVDTCb12+nVCTCb12}) // 06 E - VL. CONTABIL

	oExcel:SetCelFont('Arial')
	oExcel:SetCelBold(.T.)
	oExcel:SetCelSizeFont(14)
	oExcel:SetCelFrColor("#000333")

	cMsgEx	:=	IIF(nSICST12>0,'ICMS ST À PAGAR','ICMS ST CREDOR')
	oExcel:AddRow(cFld12,cFld12t,;
		{cMsgEx,; // 01 A - CFOP
	'',; // 02 B - QUANT
	'',; // 03 C - VL. TOTAL
	'',; // 04 D - VL. ICMS
	nSICST12,; // 05 E - VL. ICMS ST
	''}) // 05 E - VL. CONTABIL
	//============================== FINAL IMPRIME LINHA NO EXCEL

Return

/*/{Protheus.doc} Static Function GEx12P2
Gera Relatório Ref. Embutidos
	@type  Static Function
	@author Abel Babini Filho
	@since 30/04/2019
	@version 01
	/*/
Static Function GEx12P2()
	Local nExcel1
	FOR nExcel1 := 1 TO Len(aBrw12DT)
		oExcel:AddRow(cFld122,cFld12t2,;
			{aBrw12DT[nExcel1][01],;
			aBrw12DT[nExcel1][02],;
			aBrw12DT[nExcel1][03],;
			aBrw12DT[nExcel1][04],;
			aBrw12DT[nExcel1][05],;
			aBrw12DT[nExcel1][06],;
			aBrw12DT[nExcel1][07],;
			aBrw12DT[nExcel1][08],;
			aBrw12DT[nExcel1][09],;
			aBrw12DT[nExcel1][10],;
			aBrw12DT[nExcel1][11],;
			aBrw12DT[nExcel1][12],;
			aBrw12DT[nExcel1][13],;
			aBrw12DT[nExcel1][14],;
			aBrw12DT[nExcel1][15],;
			aBrw12DT[nExcel1][16],;
			aBrw12DT[nExcel1][17];
			})
	NEXT nExcel1
Return
// FIM Chamado n.040925 - OS n.042026 - Relatorio Embutidos - Abel Babini - 30/04/2019

// INICIO Chamado n.050629 - OS n.054316 - Relatorio Almondegas - Abel Babini - 28/10/2019
/*/{Protheus.doc} Static Function xABrw13
	Gera o arquivo Excel do Relatório de Almondegas
	@type  Static Function
	@author Abel Babini Filho
	@since 22/10/2019
	@version 01
	/*/
Static Function xABrw13()
	Local _cCFOAnt	:= ""
	Local _nCFOQtd	:= 0
	Local _nCFOTot	:= 0
	Local _nCFOICM	:= 0
	Local _nCFOIST	:= 0
	
	If Select(cAlsB13Cr) > 0
		(cAlsB13Cr)->(dbCloseArea())
	Endif
	cAlsB13Cr:=GetNextAlias()
	
	If Select(cAlsB13Db) > 0
		(cAlsB13Db)->(dbCloseArea())
	Endif
	cAlsB13Db:=GetNextAlias()
	
	aBrw13Cr	:= {}
	aBrw13Db	:= {}
	nVCTot13	:= 0
	nVCICM13	:= 0
	nVCIST13	:= 0
	nVDTot13	:= 0
	nVDICM13	:= 0
	nVDIST13	:= 0
	nVCTCb13	:= 0
	nVDTCb13	:= 0
	NSICST13	:= 0
	
	BeginSQL  Alias cAlsB13Cr
		SELECT
				SFT.FT_CFOP AS 'CFOP',
				SUM(SFT.FT_QUANT) AS 'QUANT',
				SUM(SFT.FT_TOTAL) AS 'TOTAL',
				SUM(SFT.FT_ICMSRET) AS 'ICMSST',
				SUM(SFT.FT_VALICM) AS 'ICMS',
				SUM(SFT.FT_VALCONT) AS 'VALCONT'
		FROM %TABLE:SFT%  SFT (NOLOCK)
		WHERE SFT.%notDel%
				AND SFT.FT_POSIPI IN %Exp:_cInAlmo%
				AND (SFT.FT_ENTRADA>= %Exp:DToS(_mvpr01)%
				AND SFT.FT_ENTRADA<= %Exp:DToS(_mvpr02)%)
				AND SFT.FT_TES<>''
				AND SFT.FT_DTCANC = ''
				AND SFT.FT_CFOP < '5000'
				AND SFT.FT_FILIAL = %xFilial:SD1%
		GROUP BY SFT.FT_CFOP

		EndSQL

	DbSelectArea(cAlsB13Cr)
	(cAlsB13Cr)->(DbGoTop())
	_cCFOAnt	:= (cAlsB13Cr)->CFOP	
	_nCFOQtd	:= 0
	_nCFOTot	:= 0
	_nCFOICM	:= 0
	_nCFOIST	:= 0
		While !(cAlsB13Cr)->(eof())

		aAdd(aBrw13Cr,{(cAlsB13Cr)->CFOP,;
						(cAlsB13Cr)->QUANT,;
						(cAlsB13Cr)->TOTAL,;
						(cAlsB13Cr)->ICMS,;
						(cAlsB13Cr)->ICMSST,;
						(cAlsB13Cr)->VALCONT})
		nVCTot13	-= (cAlsB13Cr)->TOTAL
		nVCICM13	-= (cAlsB13Cr)->ICMS
		nVCIST13	-= (cAlsB13Cr)->ICMSST
		nVCTCb13	-= (cAlsB13Cr)->VALCONT
		
		(cAlsB13Cr)->(DbSkip())
		EndDo
	(cAlsB13Cr)->(dbCloseArea())

		BeginSQL  Alias cAlsB13Db
			SELECT
				SFT.FT_CFOP AS 'CFOP',
				SUM(SFT.FT_QUANT) AS 'QUANT',
				SUM(SFT.FT_ICMSRET) AS 'ICMSST',
				SUM(SFT.FT_TOTAL) AS 'TOTAL',
				SUM(SFT.FT_VALICM) AS 'ICMS',
				SUM(SFT.FT_VALCONT) AS 'VALCONT'
			FROM %TABLE:SFT%  SFT (NOLOCK)
			WHERE SFT.%notDel%
				AND SFT.FT_POSIPI IN %Exp:_cInAlmo%
				AND (SFT.FT_EMISSAO>= %Exp:DToS(_mvpr01)%
				AND SFT.FT_EMISSAO<= %Exp:DToS(_mvpr02)%)
				AND SFT.FT_CFOP > '5000'
				AND SFT.FT_DTCANC = ''
				AND SFT.FT_TES<>''
				AND SFT.FT_FILIAL = %xFilial:SD2%
			GROUP BY SFT.FT_CFOP
			EndSQL
	
	DbSelectArea(cAlsB13Db)
	(cAlsB13Db)->(DbGoTop())
	_cCFOAnt	:= (cAlsB13Db)->CFOP
	_nCFOQtd	:= 0
	_nCFOTot	:= 0
	_nCFOICM	:= 0
	_nCFOIST	:= 0
			While !(cAlsB13Db)->(eof())

			aAdd(aBrw13Db,{(cAlsB13Db)->CFOP,;
						(cAlsB13Db)->QUANT,;
						(cAlsB13Db)->TOTAL,;
						(cAlsB13Db)->ICMS,;
						(cAlsB13Db)->ICMSST,;
						(cAlsB13Db)->VALCONT})
			nVDTot13	+= (cAlsB13Db)->TOTAL
			nVDICM13	+= (cAlsB13Db)->ICMS
			nVDIST13	+= (cAlsB13Db)->ICMSST
			nVDTCb13	+= (cAlsB13Db)->VALCONT

		(cAlsB13Db)->(DbSkip())
			EndDo
	(cAlsB13Db)->(dbCloseArea())

	//CARREGA O DETALHAMENTO DAS INFORMAÇÕES DE EMBUTIDOS
			If Select(cAlsB13Dt) > 0
		(cAlsB13Dt)->(dbCloseArea())
			Endif

	cAlsB13Dt:=GetNextAlias()
			BeginSQL  Alias cAlsB13Dt
				SELECT
			SFT.FT_FILIAL AS 'FILIAL',
			'E' AS 'OPERACAO',
			SFT.FT_ENTRADA AS 'DATA',
			SFT.FT_NFISCAL AS 'NOTA',
			SFT.FT_SERIE AS 'SERIE',
			SFT.FT_CLIEFOR AS 'CLIFOR',
			SFT.FT_LOJA AS 'LOJA',
			SA2.A2_NOME AS 'NOME',
			SFT.FT_ESTADO AS 'ESTADO',
			SFT.FT_TIPO AS 'TIPO',
			SFT.FT_PRODUTO AS 'COD_PRODUTO',
			SB1.B1_DESC AS 'PRODUTO',
			SFT.FT_CFOP AS 'CFOP',
			SFT.FT_QUANT AS 'QUANT',
			-SFT.FT_TOTAL AS 'TOTAL',
			-SFT.FT_ICMSRET AS 'ICMSST',
			-SFT.FT_VALICM AS 'ICMS',
			-SFT.FT_VALCONT AS 'VLCONT'
			FROM %TABLE:SFT% SFT (NOLOCK)
			LEFT JOIN %TABLE:SA2% SA2 (NOLOCK) ON
				SA2.%notDel%
			AND SA2.A2_COD = SFT.FT_CLIEFOR
			AND SA2.A2_LOJA = SFT.FT_LOJA
			LEFT JOIN %TABLE:SB1% SB1 (NOLOCK) ON
				SB1.%notDel%
			AND SB1.B1_COD = SFT.FT_PRODUTO
			WHERE SFT.%notDel%
			AND SFT.FT_POSIPI IN %Exp:_cInAlmo%
			AND (SFT.FT_ENTRADA>= %Exp:DToS(_mvpr01)%
			AND SFT.FT_ENTRADA<= %Exp:DToS(_mvpr02)%)
			AND SFT.FT_CFOP < '5000'
			AND SFT.FT_DTCANC = ''
			AND SFT.FT_TES<>''
			AND SFT.FT_FILIAL = %xFilial:SD1%

		UNION
		
					SELECT
			SFT.FT_FILIAL AS 'FILIAL',
			'S' AS 'OPERACAO',
			SFT.FT_EMISSAO AS 'DATA',
			SFT.FT_NFISCAL AS 'NOTA',
			SFT.FT_SERIE AS 'SERIE',
			SFT.FT_CLIEFOR AS 'CLIFOR',
			SFT.FT_LOJA AS 'LOJA',
			SA2.A2_NOME AS 'NOME',
			SFT.FT_ESTADO AS 'ESTADO',
			SFT.FT_TIPO AS 'TIPO',
			SFT.FT_PRODUTO AS 'COD_PRODUTO',
			SB1.B1_DESC AS 'PRODUTO',
			SFT.FT_CFOP AS 'CFOP',
			SFT.FT_QUANT AS 'QUANT',
			SFT.FT_TOTAL AS 'TOTAL',
			SFT.FT_ICMSRET AS 'ICMSST',
			SFT.FT_VALICM AS 'ICMS',
			SFT.FT_VALCONT AS 'VLCONT'
		FROM %TABLE:SFT%  SFT (NOLOCK)
		LEFT JOIN %TABLE:SA2% SA2 (NOLOCK) ON
			SA2.%notDel%
		AND SA2.A2_COD = SFT.FT_CLIEFOR
		AND SA2.A2_LOJA = SFT.FT_LOJA
		LEFT JOIN %TABLE:SB1% SB1 (NOLOCK) ON
			SB1.%notDel%
		AND SB1.B1_COD = SFT.FT_PRODUTO
		WHERE SFT.%notDel%
		AND SFT.FT_POSIPI IN %Exp:_cInAlmo%
		AND (SFT.FT_EMISSAO>= %Exp:DToS(_mvpr01)%
		AND SFT.FT_EMISSAO<= %Exp:DToS(_mvpr02)%)
		AND SFT.FT_CFOP > '5000'
		AND SFT.FT_DTCANC = ''
		AND SFT.FT_TES <> ''
		AND SFT.FT_FILIAL = %xFilial:SD2%
		
		ORDER BY FILIAL, OPERACAO, NOME, SERIE, NOTA
		//GROUP BY SD1.D1_CF

	EndSQL
	
	DbSelectArea(cAlsB13Dt)
	(cAlsB13Dt)->(DbGoTop())

	aBrw13Dt	:= {}	
	While !(cAlsB13Dt)->(eof())

		aAdd(aBrw13Dt,{(cAlsB13Dt)->FILIAL,;
						(cAlsB13Dt)->OPERACAO,;
						(cAlsB13Dt)->DATA,;
						(cAlsB13Dt)->NOTA,;
						(cAlsB13Dt)->SERIE,;
						(cAlsB13Dt)->CLIFOR,;
						(cAlsB13Dt)->LOJA,;
						(cAlsB13Dt)->NOME,;
						(cAlsB13Dt)->TIPO,;
						(cAlsB13Dt)->COD_PRODUTO,;
						(cAlsB13Dt)->PRODUTO,;
						(cAlsB13Dt)->CFOP,;
						(cAlsB13Dt)->QUANT,;
						(cAlsB13Dt)->TOTAL,;
						(cAlsB13Dt)->ICMS,;
						(cAlsB13Dt)->ICMSST,;
						(cAlsB13Dt)->VLCONT})

		//PREENCHE ARRAY DA ABERTURA DA GIA ST
		IF ALLTRIM((cAlsB13Dt)->ESTADO) $ ALLTRIM(_cMVEIST)
			IF (cAlsB13Dt)->ICMSST < 0
				(cAlB04Rs)->(dbGoTo(13))
				RECLOCK(cAlB04Rs,.F.)
					(cAlB04Rs)->VALOR += (cAlsB13Dt)->ICMSST
				MSUNLOCK()

				(cAlB04Rs)->(dbGoTo(11))
				RECLOCK(cAlB04Rs,.F.)
					(cAlB04Rs)->VALOR += (cAlsB13Dt)->ICMSST
				MSUNLOCK()
				//aBrw04Rs[13,3] += (cAlsB13Dt)->ICMSST
				//aBrw04Rs[11,3] += (cAlsB13Dt)->ICMSST
			ELSE
				(cAlB04Rs)->(dbGoTo(07))
				RECLOCK(cAlB04Rs,.F.)
					(cAlB04Rs)->VALOR += (cAlsB13Dt)->ICMSST
				MSUNLOCK()

				(cAlB04Rs)->(dbGoTo(05))
				RECLOCK(cAlB04Rs,.F.)
					(cAlB04Rs)->VALOR += (cAlsB13Dt)->ICMSST
				MSUNLOCK()
				//aBrw04Rs[07,3] += (cAlsB13Dt)->ICMSST
				//aBrw04Rs[05,3] += (cAlsB13Dt)->ICMSST
			ENDIF
		ELSE
			IF (cAlsB13Dt)->ICMSST < 0
				(cAlB04Rs)->(dbGoTo(12))
				RECLOCK(cAlB04Rs,.F.)
					(cAlB04Rs)->VALOR += (cAlsB13Dt)->ICMSST
				MSUNLOCK()

				(cAlB04Rs)->(dbGoTo(11))
				RECLOCK(cAlB04Rs,.F.)
					(cAlB04Rs)->VALOR += (cAlsB13Dt)->ICMSST
				MSUNLOCK()

				(cAlB04Rs)->(dbGoTo(19))
				RECLOCK(cAlB04Rs,.F.)
					(cAlB04Rs)->VALOR += (cAlsB13Dt)->ICMSST
				MSUNLOCK()

				//aBrw04Rs[12,3] += (cAlsB13Dt)->ICMSST
				//aBrw04Rs[11,3] += (cAlsB13Dt)->ICMSST
			ELSE
				(cAlB04Rs)->(dbGoTo(06))
				RECLOCK(cAlB04Rs,.F.)
					(cAlB04Rs)->VALOR += (cAlsB13Dt)->ICMSST
				MSUNLOCK()

				(cAlB04Rs)->(dbGoTo(05))
				RECLOCK(cAlB04Rs,.F.)
					(cAlB04Rs)->VALOR += (cAlsB13Dt)->ICMSST
				MSUNLOCK()

				(cAlB04Rs)->(dbGoTo(19))
				RECLOCK(cAlB04Rs,.F.)
					(cAlB04Rs)->VALOR += (cAlsB13Dt)->ICMSST
				MSUNLOCK()
				//aBrw04Rs[06,3] += (cAlsB13Dt)->ICMSST
				//aBrw04Rs[05,3] += (cAlsB13Dt)->ICMSST
			ENDIF
		ENDIF

		//FIM ABERTURA GIA ST
		(cAlsB13Dt)->(DbSkip())
	EndDo
	(cAlsB13Dt)->(dbCloseArea())

	//aBrw04Rs[19,3] := aBrw04Rs[06,3] + aBrw04Rs[12,3] - aBrw04Rs[14,3] - aBrw04Rs[17,3]
	
	nSICST13	:= nVCIST13 + nVDIST13
	
	SysRefresh()
Return

/*/{Protheus.doc} Static Function xRelBr13
	Gera o arquivo Excel do Relatório de Almondegas
	@type  Static Function
	@author Abel Babini Filho
	@since 22/10/2019
	@version 01
	/*/
Static Function xRelBr13()
	Local aSays			:= {}
	Local aButtons		:= {}
	Local nOpca			:= 0
	//+-----------------------------------------------+
	//|Monta Form Batch - Interface com o Usuario     |
	//+-----------------------------------------------+
	AADD(aSays,"Este programa tem a finalidade de Gerar um arquivo Excel " )
	AADD(aSays,"Relatorio de ICMS ST (Almondegas)" )

	AADD(aButtons, { 1,.T.,{|o| nOpca:=1, o:oWnd:End(), Processa({||xRelBr13b()},"Gerando arquivo","Aguarde...")    }})
	AADD(aButtons, { 2,.T.,{|o| nOpca:=2, o:oWnd:End() }})
	FormBatch( cCadastr, aSays, aButtons )
	MsgInfo("Arquivo Excel gerado!")
Return

/*/{Protheus.doc} Static Function xRelBr13b
	Gera o arquivo Excel do Relatório de Almondegas
	@type  Static Function
	@author Abel Babini Filho
	@since 22/10/2019
	@version 01
	/*/
Static Function xRelBr13b()
	Private oExcel     := FWMSEXCELEX():New()
	//Private cArquivo	:= cGetFile("Arquivo XML", "Selecione o diretório para salvar o relatório",,'C:\',.T.,GETF_RETDIRECTORY + GETF_LOCALHARD + GETF_NETWORKDRIVE)
	Private oMsExcel   := NIL

	cArquivo := cPathRel +  'RALMONDEGAS_' + DTOS(DATE()) + STRTRAN(TIME(),':','') + '.XML'
	BEGIN SEQUENCE

		//IF .NOT.( ApOleClient("MsExcel") )   // se nao existir o excel sai fora..
		//	Alert("Nao Existe Excel Instalado")
		//	BREAK
		//EndIF

		//Resumo
		Cab13P1()
		GEx13P1()

		//Resumo
		Cab13P2()
		GEx13P2()

		SalvaXml()
		CriaExcel()

	END SEQUENCE

Return

/*/{Protheus.doc} Static Function Cab13P1
	Gera o arquivo Excel do Relatório de Almondegas
	@type  Static Function
	@author Abel Babini Filho
	@since 22/10/2019
	@version 01
	/*/
Static Function Cab13P1()
    oExcel:AddworkSheet(cFld13)
	oExcel:AddTable(cFld13,cFld13t)
	oExcel:AddColumn(cFld13,cFld13t,"CFOP"  		,1,1) // 01 A
    oExcel:AddColumn(cFld13,cFld13t,"Quant." 	,2,2) // 02 B
	oExcel:AddColumn(cFld13,cFld13t,"Vl. Total"	,2,3) // 03 C
	oExcel:AddColumn(cFld13,cFld13t,"Vl. ICMS" 	,2,3) // 04 D
	oExcel:AddColumn(cFld13,cFld13t,"Vl. ICMS ST",2,3) // 05 E
	oExcel:AddColumn(cFld13,cFld13t,"Vl. Contábil",2,3) // 06 E
RETURN(NIL)  

/*/{Protheus.doc} Static Function Cab13P2
	Gera o arquivo Excel do Relatório de Almondegas
	@type  Static Function
	@author Abel Babini Filho
	@since 22/10/2019
	@version 01
	/*/
Static Function Cab13P2()
    oExcel:AddworkSheet(cFld132)
	oExcel:AddTable(cFld132,cFld13t2)
	oExcel:AddColumn(cFld132,cFld13t2,"Filial"  			,1,1) 
	oExcel:AddColumn(cFld132,cFld13t2,"Operação"  		,1,1) 
	oExcel:AddColumn(cFld132,cFld13t2,"Data"  			,1,1) 
	oExcel:AddColumn(cFld132,cFld13t2,"Nota"  			,1,1)
	oExcel:AddColumn(cFld132,cFld13t2,"Serie"  			,1,1) 
	oExcel:AddColumn(cFld132,cFld13t2,"Cliente/Fornecedor",1,1) 
	oExcel:AddColumn(cFld132,cFld13t2,"Loja"  			,1,1)
	oExcel:AddColumn(cFld132,cFld13t2,"Nome"  			,1,1)
	oExcel:AddColumn(cFld132,cFld13t2,"Tipo"  			,1,1)
	oExcel:AddColumn(cFld132,cFld13t2,"Cod.Produto"  	,1,1)
	oExcel:AddColumn(cFld132,cFld13t2,"Produto"  		,1,1)
	oExcel:AddColumn(cFld132,cFld13t2,"CFOP"  			,1,1)
    oExcel:AddColumn(cFld132,cFld13t2,"Quant." 			,2,2)
	oExcel:AddColumn(cFld132,cFld13t2,"Vl. Total"		,2,3) 
	oExcel:AddColumn(cFld132,cFld13t2,"Vl. ICMS" 		,2,3) 
	oExcel:AddColumn(cFld132,cFld13t2,"Vl. ICMS ST"		,2,3) 
	oExcel:AddColumn(cFld132,cFld13t2,"Vl. Contabil"	,2,3)

RETURN(NIL)  

/*/{Protheus.doc} Static Function GEx13P1
	Gera o arquivo Excel do Relatório de Almondegas
	@type  Static Function
	@author Abel Babini Filho
	@since 22/10/2019
	@version 01
	/*/
Static Function GEx13P1()
	Local nExcel1
	oExcel:SetCelFont('Arial')
	oExcel:SetCelBold(.F.)
	oExcel:SetCelSizeFont(12)
	oExcel:SetCelFrColor("#000000") 
	
	//============================== INICIO IMPRIME LINHA NO EXCEL
	FOR nExcel1 := 1 TO Len(aBrw13Cr)
		//GRAVANDO NA LINHA MANDANDO PARA O EXCEL O ARRAY COM AS LINHAS
		oExcel:AddRow(cFld13,cFld13t,;
						{aBrw13Cr[nExcel1][01],; // 01 A - CFOP 
						aBrw13Cr[nExcel1][02],; // 02 B - QUANT  
						-aBrw13Cr[nExcel1][03],; // 03 C - VL. TOTAL
						-aBrw13Cr[nExcel1][04],; // 04 D - VL. ICMS
						-aBrw13Cr[nExcel1][05],; // 05 E - VL. ICMS ST
						-aBrw13Cr[nExcel1][06]}) // 06 E - VL. CONTABIL
	            
	NEXT
    
    oExcel:AddRow(cFld13,cFld13t,;
						{'TOTAL CRÉDITO',; // 01 A - CFOP 
						'',; // 02 B - QUANT  
						nVCTot13,; // 03 C - VL. TOTAL
						nVCICM13,; // 04 D - VL. ICMS
						nVCIST13,; // 05 E - VL. ICMS ST
						nVCTCb13}) // 05 E - VL. CONTABIL 	
    //Adiciona Linha em branco 
    oExcel:AddRow(cFld13,cFld13t,;
						{'',; // 01 A - CFOP 
						'',; // 02 B - QUANT  
						'',; // 03 C - VL. TOTAL
						'',; // 04 D - VL. ICMS
						'',; // 05 E - VL. ICMS ST
						''}) // 06 E - VL. CONTABIL
						    

	FOR nExcel1 := 1 TO Len(aBrw13Db)
		//GRAVANDO NA LINHA MANDANDO PARA O EXCEL O ARRAY COM AS LINHAS
		oExcel:AddRow(cFld13,cFld13t,;
						{aBrw13Db[nExcel1][01],; // 01 A - CFOP 
						aBrw13Db[nExcel1][02],; // 02 B - QUANT  
						aBrw13Db[nExcel1][03],; // 03 C - VL. TOTAL
						aBrw13Db[nExcel1][04],; // 04 D - VL. ICMS
						aBrw13Db[nExcel1][05],; // 05 E - VL. ICMS ST
						aBrw13Db[nExcel1][06]}) // 06 E - VL. CONTABIL
	            
	NEXT

    oExcel:AddRow(cFld13,cFld13t,;
						{'TOTAL DÉBITO',; // 01 A - CFOP 
						'',; // 02 B - QUANT  
						nVDTot13,; // 03 C - VL. TOTAL
						nVDICM13,; // 04 D - VL. ICMS
						nVDIST13,; // 05 E - VL. ICMS ST
						nVDTCb13}) // 06 E - VL. CONTABIL 	    
    //Adiciona Linha em branco 
    oExcel:AddRow(cFld13,cFld13t,;
						{'',; // 01 A - CFOP 
						'',; // 02 B - QUANT  
						'',; // 03 C - VL. TOTAL
						'',; // 04 D - VL. ICMS
						'',; // 05 E - VL. ICMS ST
						''}) // 06 E - VL. CONTABIL
    //Adiciona Linha em branco 
    oExcel:AddRow(cFld13,cFld13t,;
						{'',; // 01 A - CFOP 
						'',; // 02 B - QUANT  
						'',; // 03 C - VL. TOTAL
						'',; // 04 D - VL. ICMS
						'',; // 05 E - VL. ICMS ST
						''}) // 06 E - VL. CONTABIL
	//TOTAIS
	oExcel:SetCelFont('Arial')
	oExcel:SetCelBold(.T.)
	oExcel:SetCelSizeFont(12)
	oExcel:SetCelFrColor("#000000") 
	oExcel:SetCelBgColor("#D7BCFB")
	
    oExcel:AddRow(cFld13,cFld13t,;
						{'TOTAL NO PERÍODO',; // 01 A - CFOP 
						'',; // 02 B - QUANT  
						nVDTot13+nVCTot13,; // 03 C - VL. TOTAL
						nVDICM13+nVCICM13,; // 04 D - VL. ICMS
						nVDIST13+nVCIST13,; // 05 E - VL. ICMS ST
						nVDTCb13+nVCTCb13}) // 06 E - VL. CONTABIL 	
						
	oExcel:SetCelFont('Arial')
	oExcel:SetCelBold(.T.)
	oExcel:SetCelSizeFont(14)
	oExcel:SetCelFrColor("#000333") 

	cMsgEx	:=	IIF(nSICST13>0,'ICMS ST À PAGAR','ICMS ST CREDOR')
    oExcel:AddRow(cFld13,cFld13t,;
						{cMsgEx,; // 01 A - CFOP 
						'',; // 02 B - QUANT  
						'',; // 03 C - VL. TOTAL
						'',; // 04 D - VL. ICMS
						nSICST13,; // 05 E - VL. ICMS ST
						''}) // 05 E - VL. CONTABIL
 	//============================== FINAL IMPRIME LINHA NO EXCEL

Return

/*/{Protheus.doc} Static Function GEx13P2
	Gera o arquivo Excel do Relatório de Almondegas
	@type  Static Function
	@author Abel Babini Filho
	@since 22/10/2019
	@version 01
	/*/
Static Function GEx13P2()
	Local nExcel1
	FOR nExcel1 := 1 TO Len(aBrw13Dt)
		oExcel:AddRow(cFld132,cFld13t2,;
						{aBrw13Dt[nExcel1][01],; 
						aBrw13Dt[nExcel1][02],; 
						aBrw13Dt[nExcel1][03],; 
						aBrw13Dt[nExcel1][04],; 
						aBrw13Dt[nExcel1][05],;
						aBrw13Dt[nExcel1][06],;
						aBrw13Dt[nExcel1][07],;
						aBrw13Dt[nExcel1][08],;
						aBrw13Dt[nExcel1][09],;
						aBrw13Dt[nExcel1][10],;
						aBrw13Dt[nExcel1][11],;
						aBrw13Dt[nExcel1][12],;
						aBrw13Dt[nExcel1][13],;
						aBrw13Dt[nExcel1][14],;
						aBrw13Dt[nExcel1][15],;
						aBrw13Dt[nExcel1][16],;
						aBrw13Dt[nExcel1][17];
						})	
	NEXT nExcel1
Return
// FIM Chamado n.050629 - OS n.054316 - Relatorio Almondegas - Abel Babini - 28/10/2019

/*/{Protheus.doc} Static Function xABrw18
	Carrega da dados Ref. Crédito de ICMS UNIFORMES
	@type  Static Function
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
	Static Function xABrw18()
	Local aDocEntr 	:= {}
	Local aDocSaid	:= {}
	If Select(cAlsB18Cr) > 0
		(cAlsB18Cr)->(dbCloseArea())
	Endif
	cAlsB18Cr:=GetNextAlias()

	BeginSQL  Alias cAlsB18Cr
		//SELECIONA AS NFS DE COMPRAS DE UNIFORME QUE CALCULARAM ICMS DENTRO DO MÊS, PERMITINDO CRÉDITO
		column DTDIGIT as Date
		column EMISSAO as Date
		SELECT
			'E' 			AS TPOPE,
			SD1.D1_FILIAL	AS FILIAL, 
			SD1.D1_DTDIGIT	AS DTDIGIT,
			SD1.D1_EMISSAO	AS EMISSAO, 
			SD1.D1_DOC		AS DOC, 
			SD1.D1_SERIE 	AS SERIE, 
			SD1.D1_FORNECE	AS FORNECE, 
			SD1.D1_LOJA		AS LOJA, 
			SD1.D1_COD		AS COD, 
			SB1.B1_DESC		AS DESCR,
			SD1.D1_QUANT	AS QUANT, 
			SD1.D1_VUNIT	AS VUNIT, 
			SD1.D1_TOTAL	AS TOTAL, 
			SD1.D1_VALIPI	AS VALIPI, 
			SD1.D1_VALICM	AS VALICMS, 
			SD1.D1_TES		AS TES, 
			SD1.D1_CF		AS CFOP
		FROM %TABLE:SD1% SD1 (NOLOCK)
		LEFT JOIN %TABLE:SB1%  SB1 (NOLOCK) ON 
				SB1.%notDel% 
		AND SB1.B1_COD = SD1.D1_COD 
		AND SB1.B1_FILIAL = %xFilial:SB1%
		WHERE
			SD1.%notDel% AND
			SD1.D1_FILIAL=%xFilial:SFT% AND 
			(SD1.D1_DTDIGIT>=%Exp:DToS(_dUnifor)% AND SD1.D1_DTDIGIT<=%Exp:DToS(_mvpr02)% ) AND 
			SD1.D1_VALICM > 0 AND
			SUBSTRING(SD1.D1_CF,2,3) = '556' AND
			SB1.B1_POSIPI IN  %Exp:_cUnifor% 
			
	UNION

		SELECT
			'S' 			AS TPOPE,
			SFT.FT_FILIAL	AS FILIAL, 
			SFT.FT_ENTRADA	AS DTDIGIT,
			SFT.FT_EMISSAO	AS EMISSAO, 
			SFT.FT_NFISCAL	AS DOC, 
			SFT.FT_SERIE 	AS SERIE, 
			SFT.FT_CLIEFOR	AS FORNECE, 
			SFT.FT_LOJA		AS LOJA, 
			SFT.FT_PRODUTO	AS COD, 
			SB1.B1_DESC		AS DESCR,
			-SFT.FT_QUANT	AS QUANT, 
			SFT.FT_PRCUNIT	AS VUNIT, 
			-SFT.FT_TOTAL	AS TOTAL, 
			-SFT.FT_VALIPI	AS VALIPI, 
			-SFT.FT_VALICM	AS VALICMS, 
			SFT.FT_TES		AS TES, 
			SFT.FT_CFOP		AS CFOP
		FROM %TABLE:SFT% SFT (NOLOCK)
		LEFT JOIN %TABLE:SB1%  SB1 (NOLOCK) ON 
				SB1.%notDel% 
		AND SB1.B1_COD = SFT.FT_PRODUTO 
		AND SB1.B1_FILIAL = %xFilial:SB1%
		WHERE
			SFT.%notDel% AND
			SFT.FT_FILIAL=%xFilial:SFT% AND 
			(SFT.FT_ENTRADA>=%Exp:DToS(_dUnifor)% AND SFT.FT_ENTRADA<=%Exp:DToS(_mvpr02)% ) AND 
			SUBSTRING(SFT.FT_CFOP,2,3) = '102' AND
			SFT.FT_CFOP > '5000' AND
			SFT.FT_DTCANC='' AND
			SFT.FT_POSIPI IN  %Exp:_cUnifor% 	
		
			ORDER BY FILIAL, COD, DTDIGIT, TPOPE, DOC, FORNECE
	EndSQL
	
	aBrw18Rs	:= {}
	aBrw18Cr	:= {}
	aBrw18Db	:= {}
	aSdPr18		:= {}
	DbSelectArea(cAlsB18Cr)
	(cAlsB18Cr)->(DbGoTop())
	_cFlAnt		:= ""
	_cCodAnt	:= ""
	_cDesAnt	:= ""
	_nSldQtd	:= 0
	_nSldICM	:= 0
	_nTtVlCr	:= 0
	_nTtQtCr	:= 0	
	nTtUnf		:= 0
	
	While !(cAlsB18Cr)->(Eof())
		AADD(aBrw18Rs,{})
		nPos := Len(aBrw18Rs)		
		AADD(aBrw18Rs[nPos], (cAlsB18Cr)->FILIAL)//FILIAL
		AADD(aBrw18Rs[nPos], (cAlsB18Cr)->COD)//Produto
		AADD(aBrw18Rs[nPos], (cAlsB18Cr)->DESCR)//Descrição
		AADD(aBrw18Rs[nPos], (cAlsB18Cr)->TPOPE)//Tipo Operação
		AADD(aBrw18Rs[nPos], (cAlsB18Cr)->DTDIGIT)//Dt.Entrada
		AADD(aBrw18Rs[nPos], (cAlsB18Cr)->EMISSAO)//Dt.Emissão
		AADD(aBrw18Rs[nPos], (cAlsB18Cr)->DOC)//Documento
		AADD(aBrw18Rs[nPos], (cAlsB18Cr)->SERIE)//Serie
		AADD(aBrw18Rs[nPos], (cAlsB18Cr)->FORNECE)//Fornecedor
		AADD(aBrw18Rs[nPos], (cAlsB18Cr)->LOJA)//Loja
		AADD(aBrw18Rs[nPos], (cAlsB18Cr)->QUANT)//11-Quant
		AADD(aBrw18Rs[nPos], (cAlsB18Cr)->VUNIT)//Vl.Unit
		AADD(aBrw18Rs[nPos], (cAlsB18Cr)->TOTAL)//Total
		AADD(aBrw18Rs[nPos], (cAlsB18Cr)->VALICMS)//ICMS
		AADD(aBrw18Rs[nPos], '')//Documento
		AADD(aBrw18Rs[nPos], '')//Serie
		AADD(aBrw18Rs[nPos], '')//Fornecedor
		AADD(aBrw18Rs[nPos], '')//Loja
		
		//nPBx	:= 0
		nPBx	:= ASCAN(aSdPr18,{|X| Alltrim(X[7]) == AllTrim((cAlsB18Cr)->COD) })
		cTxBx := ""
		IF (cAlsB18Cr)->TPOPE == 'S'
			/*IF len(aSdPr18) > 0 
				nPBx	:= ASCAN(aSdPr18,{|X| Alltrim(X[7]) == AllTrim((cAlsB18Cr)->COD) })
			Endif*/
			If nPBx > 0 .and. _nSldQtd > 0
				cTxBx	:= " Filial: "+aSdPr18[nPBx,1]+;
								" NF: "+aSdPr18[nPBx,2]+;
								" Serie: "+aSdPr18[nPBx,3]+;
								" Fornecedor: "+aSdPr18[nPBx,4]+;
								" Loja: "+aSdPr18[nPBx,5]+;
								" Dt.Entrada: "+DTOC(aSdPr18[nPBx,6])
			Else
						cTxBx	:= ""
			Endif
		ENDIF

		_nVlCred	:= 0
		IF (cAlsB18Cr)->COD = _cCodAnt
			IF (cAlsB18Cr)->TPOPE == 'S' .AND. (_nSldQtd + (cAlsB18Cr)->QUANT) >= 0 //Operacao de Saida e Saldo do Credito menos Qtd maior que zero
				//IF (cAlsB18Cr)->TPOPE == 'S' .AND. nPBx > 0 //Operacao de Saida e Saldo do Credito menos Qtd maior que zero 
				nSldQtUn	:= (cAlsB18Cr)->QUANT
				WHILE nSldQtUn < 0
					//IF -(cAlsB18Cr)->VALICMS/-(cAlsB18Cr)->QUANT < _nSldICM/_nSldQtd 
					IF Round((-(cAlsB18Cr)->VALICMS/-(cAlsB18Cr)->QUANT),2) < Round((aSdPr18[nPBx,9]/aSdPr18[nPBx,10]),2)
						_nVlCred	+= Round(-(cAlsB18Cr)->VALICMS,2)
					ELSE
						_nVlCred	+= Round((aSdPr18[nPBx,9]/aSdPr18[nPBx,10]),2)
					ENDIF
						nSldQtUn -= (cAlsB18Cr)->QUANT
				ENDdO
        		
				//Cria Array Totalizado por Produto
				IF aBrw18Rs[nPos,05] >= _mvpr01 .AND. aBrw18Rs[nPos,05] <= _mvpr02 //Data dentro do intervalo
					//_nTtVlCr	+= -(cAlsB18Cr)->VALICMS
					IF Round((-(cAlsB18Cr)->VALICMS/-(cAlsB18Cr)->QUANT),2) < Round((aSdPr18[nPBx,9]/aSdPr18[nPBx,10]),2)
						_nTtVlCr	+= Round(-(cAlsB18Cr)->VALICMS,2)
					ELSE
						_nTtVlCr	+= Round((aSdPr18[nPBx,9]/aSdPr18[nPBx,10]),2)
					ENDIF

					_nTtQtCr	+= -(cAlsB18Cr)->QUANT
				ENDIF

				_nSldQtd	+= (cAlsB18Cr)->QUANT
				IF _nSldQtd = 0
					_nSldICM 	:= 0
				ELSE
					_nSldICM	+= (cAlsB18Cr)->VALICMS
				ENDIF

			//*****
			//INICIO Chamado n.057231 - OS n.058702 - ABel Babini - 07/04/2020 - Correções no Rel. de Uniformes que apresentaram o valor de crédito errado
			//Acrescentada condição para avaliar se o saldo de crédito já estiver zerado, não calcular o valor do ICMS
			ELSEIF (cAlsB18Cr)->TPOPE == 'S' .AND. _nSldQtd == 0 //Operacao de Saida e Saldo do Credito menos Qtd menor que zero
				_nSldQtd	:= 0
				_nSldICM	:= 0
				_nVlCred := 0
				cTxBx := ""

			//
			//FIM Chamado n.057231 - OS n.058702 - ABel Babini - 07/04/2020 - Correções no Rel. de Uniformes que apresentaram o valor de crédito errado
			//*****

			ELSEIF (cAlsB18Cr)->TPOPE == 'S' .AND. (_nSldQtd + (cAlsB18Cr)->QUANT) < 0 //Operacao de Saida e Saldo do Credito menos Qtd menor que zero
				IF nPBx > 0
					//IF -(cAlsB18Cr)->VALICMS/-(cAlsB18Cr)->QUANT < _nSldICM/_nSldQtd 
					IF Round(-(cAlsB18Cr)->VALICMS/-(cAlsB18Cr)->QUANT,2) < Round(aSdPr18[nPBx,9]/aSdPr18[nPBx,10],2)
						//Chamado n.057231 - OS n.058702 - ABel Babini - 07/04/2020 - Correções no Rel. de Uniformes que apresentaram o valor de crédito errado
						//Alterado a fórmula do valor do crédito. Formula antiga comentado na frente.
						_nVlCred	:= Round(-(cAlsB18Cr)->VALICMS/-(cAlsB18Cr)->QUANT,2) //Round( Round(-(cAlsB18Cr)->VALICMS/-(cAlsB18Cr)->QUANT,2) * Round(aSdPr18[nPBx,9]/aSdPr18[nPBx,10],2),2)
					ELSE
						_nVlCred	:= Round(aSdPr18[nPBx,9]/aSdPr18[nPBx,10],2)//Round(_nSldICM/_nSldQtd,2)
					ENDIF
	
					//Cria Array Totalizado por Produto
					IF aBrw18Rs[nPos,05] >= _mvpr01 .AND. aBrw18Rs[nPos,05] <= _mvpr02 //Data dentro do intervalo
						_nTtVlCr	+= _nVlCred
						_nTtQtCr	+= _nSldQtd
					ENDIF
				ENDIF
				_nSldQtd	:= 0
				_nSldICM	:= 0
			ELSEIF (cAlsB18Cr)->TPOPE == 'E'
				//Cria Array com as entradas por produto
				nPEn	:= ASCAN(aSdPr18,{|X| Alltrim(X[7]) == AllTrim((cAlsB18Cr)->COD) })
				If nPEn > 0
					IF Month(aSdPr18[nPEn,6]) <> Month((cAlsB18Cr)->DTDIGIT)
						ADEL(aSdPr18,nPEn)
						ASIZE(aSdPr18,Len(aSdPr18)-1)
						//A cada entrada deve zerar o Saldo anterior.
						_nSldQtd	:= 0
						_nSldICM	:= 0
					//Else
					ENDIF
					AADD(aSdPr18,{	(cAlsB18Cr)->FILIAL,;
													(cAlsB18Cr)->DOC,;
		        							(cAlsB18Cr)->SERIE,;
		        							(cAlsB18Cr)->FORNECE,;
		        							(cAlsB18Cr)->LOJA,;
			        						(cAlsB18Cr)->DTDIGIT,;
			        						(cAlsB18Cr)->COD,;
			        						(cAlsB18Cr)->QUANT,;
		  	      						(cAlsB18Cr)->VALICMS,;
													(cAlsB18Cr)->QUANT;
												})
				Else
					AADD(aSdPr18,{	(cAlsB18Cr)->FILIAL,;
	        								(cAlsB18Cr)->DOC,;
	        								(cAlsB18Cr)->SERIE,;
	        								(cAlsB18Cr)->FORNECE,;
	        								(cAlsB18Cr)->LOJA,;
			        						(cAlsB18Cr)->DTDIGIT,;
	  		      						(cAlsB18Cr)->COD,;
	      		  						(cAlsB18Cr)->QUANT,;
	        								(cAlsB18Cr)->VALICMS,;
													(cAlsB18Cr)->QUANT;
	        							})
				ENDIF
				//        	
				_nSldQtd	+= (cAlsB18Cr)->QUANT
				_nSldICM	+= (cAlsB18Cr)->VALICMS
			ENDIF
        	
			AADD(aBrw18Rs[nPos],_nVlCred)//ICMS Cr.
			AADD(aBrw18Rs[nPos],_nSldQtd)//Saldo Qtd do Produto 
			AADD(aBrw18Rs[nPos],_nSldICM)//Saldo ICMS do Produto                
			AADD(aBrw18Rs[nPos],cTxBx)//NF BAIXADA
		ELSE
			//Cria Array Totalizado por Produto
			IF _cCodAnt != "" .And. _nTtQtCr > 0
				AADD(aBrw18Cr,{})
				nPos2 := Len(aBrw18Cr)		
				AADD(aBrw18Cr[nPos2], _cFlAnt)//FILIAL
				AADD(aBrw18Cr[nPos2], _cCodAnt)//Produto
				AADD(aBrw18Cr[nPos2], _cDesAnt)//Descrição
				AADD(aBrw18Cr[nPos2], _nTtQtCr)//11-Quant
				AADD(aBrw18Cr[nPos2], _nTtVlCr)//ICMS
				nTtUnf += _nTtVlCr
			ENDIF
			_nTtQtCr	:= 0
			_nTtVlCr	:= 0
			//Reinicializa as Variáveis de Saldo por Produto
			_nSldQtd	:= 0
			_nSldICM	:= 0
			
			IF (cAlsB18Cr)->TPOPE == 'E'
				_nSldQtd	:= (cAlsB18Cr)->QUANT
				_nSldICM	:= (cAlsB18Cr)->VALICMS
				//Cria Array com as entradas por produto
				nPEn	:= ASCAN(aSdPr18,{|X| Alltrim(X[7]) == AllTrim((cAlsB18Cr)->COD) })
				If nPEn > 0
					IF Month(aSdPr18[nPEn,6]) <> Month((cAlsB18Cr)->DTDIGIT)
						ADEL(aSdPr18,nPEn)
						ASIZE(aSdPr18,Len(aSdPr18)-1)
					Else
						AADD(aSdPr18,{	(cAlsB18Cr)->FILIAL,;
														(cAlsB18Cr)->DOC,;
				        						(cAlsB18Cr)->SERIE,;
				        						(cAlsB18Cr)->FORNECE,;
		    		    						(cAlsB18Cr)->LOJA,;
		        								(cAlsB18Cr)->DTDIGIT,;
		        								(cAlsB18Cr)->COD,;
		        								(cAlsB18Cr)->QUANT,;
		        								(cAlsB18Cr)->VALICMS,;
														(cAlsB18Cr)->QUANT;
		        							})
					ENDIF
				Else
					AADD(aSdPr18,{	(cAlsB18Cr)->FILIAL,;
	        								(cAlsB18Cr)->DOC,;
	        								(cAlsB18Cr)->SERIE,;
	        								(cAlsB18Cr)->FORNECE,;
	        								(cAlsB18Cr)->LOJA,;
			        						(cAlsB18Cr)->DTDIGIT,;
	  		      						(cAlsB18Cr)->COD,;
	      		  						(cAlsB18Cr)->QUANT,;
	        								(cAlsB18Cr)->VALICMS,;
													(cAlsB18Cr)->QUANT;
	        							})
				ENDIF
			ENDIF
			AADD(aBrw18Rs[nPos],0)//ICMS Cr.
			AADD(aBrw18Rs[nPos],_nSldQtd)//Saldo Qtd do Produto 
			AADD(aBrw18Rs[nPos],_nSldICM)//Saldo ICMS do Produto
			AADD(aBrw18Rs[nPos],cTxBx)//NF BAIXADA
		ENDIF
		_cFlAnt		:= (cAlsB18Cr)->FILIAL
		_cCodAnt 	:= (cAlsB18Cr)->COD
		_cDesAnt	:= (cAlsB18Cr)->DESCR    
		nQtPBx		:= -(cAlsB18Cr)->QUANT 
		IF nPBx > 0
			WHILE nQtPBx > 0
				IF aSdPr18[nPBx,8] > -(cAlsB18Cr)->QUANT
					aSdPr18[nPBx,8] += (cAlsB18Cr)->QUANT 
				ELSE //ELSEIF aSdPr18[nPBx,8] = -(cAlsB18Cr)->QUANT
					ADEL(aSdPr18,nPBx)
					ASIZE(aSdPr18,Len(aSdPr18)-1)
				ENDIF
	        
				nQtPBx	+= (cAlsB18Cr)->QUANT 
			ENDDO
		ENDIF
		(cAlsB18Cr)->(DbSkip())
	EndDo

	IF _nTtQtCr > 0
		AADD(aBrw18Cr,{})
		nPos2 := Len(aBrw18Cr)		
		AADD(aBrw18Cr[nPos2], _cFlAnt)//FILIAL
		AADD(aBrw18Cr[nPos2], _cCodAnt)//Produto
		AADD(aBrw18Cr[nPos2], _cDesAnt)//Descrição
		AADD(aBrw18Cr[nPos2], _nTtQtCr)//11-Quant
		AADD(aBrw18Cr[nPos2], _nTtVlCr)//ICMS
		nTtUnf += _nTtVlCr
	ENDIF
	
	aBrw18Tr	:= aBrw18Rs 

	(cAlsB18Cr)->(dbCloseArea())
	
	SysRefresh()
Return

/*/{Protheus.doc} Static Function xRelBr18
	Gera o arquivo Excel Ref. Crédito ICMS sobre Uniformes
	@type  Static Function
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function xRelBr18()
	Local aSays			:= {}
	Local aButtons		:= {}
	Local nOpca			:= 0
	//+-----------------------------------------------+
	//|Monta Form Batch - Interface com o Usuario     |
	//+-----------------------------------------------+
	AADD(aSays,"Este programa tem a finalidade de Gerar um arquivo Excel " )
	AADD(aSays,"Relatorio de Crédito de ICMS sobre Uniformes" )
    
	AADD(aButtons, { 1,.T.,{|o| nOpca:=1, o:oWnd:End(), Processa({||xRelBr18b()},"Gerando arquivo","Aguarde...")    }})
	AADD(aButtons, { 2,.T.,{|o| nOpca:=2, o:oWnd:End() }})	
	FormBatch( cCadastr, aSays, aButtons )
	MsgInfo("Arquivo Excel gerado!")
Return

/*/{Protheus.doc} Static Function xRelBr18b
	Gera o arquivo Excel Ref. Crédito ICMS sobre Uniformes
	@type  Static Function
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function xRelBr18b()
	Private oExcel     := FWMSEXCELEX():New()
	//Private cArquivo	:= cGetFile("Arquivo XML", "Selecione o diretório para salvar o relatório",,'C:\',.T.,GETF_RETDIRECTORY + GETF_LOCALHARD + GETF_NETWORKDRIVE)	
	Private oMsExcel   := NIL
	
	cArquivo := cPathRel +  'RUNIFORME_' + DTOS(DATE()) + STRTRAN(TIME(),':','') + '.XML'
	BEGIN SEQUENCE
		
		//IF .NOT.( ApOleClient("MsExcel") )   // se nao existir o excel sai fora..
		//    Alert("Nao Existe Excel Instalado")
    //        BREAK
		//EndIF
        	
    	//Planilha1 - Resumo
    	Cab18P1()             
        GEx18P1()
        
        //Planilha2 - Detalhe
    	Cab18P2()
        GEx18P2()

        //Planilha3 - Detalhe Mes
    	Cab18P3()
        GEx18P3()

        SalvaXml()
		CriaExcel()
	
	END SEQUENCE

Return

/*/{Protheus.doc} Static Function Cab18P1
	Gera o arquivo Excel Ref. Crédito ICMS sobre Uniformes
	@type  Static Function
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function Cab18P1()
	//PLANILHA 1 - RESUMO
    oExcel:AddworkSheet(cFld18)
	oExcel:AddTable(cFld18,cFld18t1)
	oExcel:AddColumn(cFld18,cFld18t1,"Filial"	,1,1)
	oExcel:AddColumn(cFld18,cFld18t1,"Cod.Prod"	,1,1)
	oExcel:AddColumn(cFld18,cFld18t1,"Descricao",1,1)
	oExcel:AddColumn(cFld18,cFld18t1,"Quant."	,2,2)
	oExcel:AddColumn(cFld18,cFld18t1,"Vl.Cred"	,2,2)

RETURN(NIL)  

/*/{Protheus.doc} Static Function Cab18P2
	Gera o arquivo Excel Ref. Crédito ICMS sobre Uniformes
	@type  Static Function
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function Cab18P2()
	//PLANILHA 2 - DETALHE UNIFORME
    oExcel:AddworkSheet(cFld182)
	oExcel:AddTable(cFld182,cFld18t2)
	oExcel:AddColumn(cFld182,cFld18t2,"Filial"  	,1,1)
	oExcel:AddColumn(cFld182,cFld18t2,"Cod.Produto"	,1,1)
	oExcel:AddColumn(cFld182,cFld18t2,"Descrição"	,1,1)
	oExcel:AddColumn(cFld182,cFld18t2,"Tipo Oper."	,1,1)
	oExcel:AddColumn(cFld182,cFld18t2,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld182,cFld18t2,"Dt.Emissao"	,1,1)
	oExcel:AddColumn(cFld182,cFld18t2,"Nota Fiscal"	,1,1)
	oExcel:AddColumn(cFld182,cFld18t2,"Serie NF"	,1,1)
	oExcel:AddColumn(cFld182,cFld18t2,"Fornecedor"	,1,1)
	oExcel:AddColumn(cFld182,cFld18t2,"Loja"		,1,1)
	oExcel:AddColumn(cFld182,cFld18t2,"Quant."		,2,2)
	oExcel:AddColumn(cFld182,cFld18t2,"Vl.Unit"		,2,3)
	oExcel:AddColumn(cFld182,cFld18t2,"Vl.Total"	,2,3)
	oExcel:AddColumn(cFld182,cFld18t2,"Vl. ICMS"	,2,3)
	oExcel:AddColumn(cFld182,cFld18t2,"Vl.ICMS Cred",2,3)	
	oExcel:AddColumn(cFld182,cFld18t2,"Sld. Quant"	,2,2)
	oExcel:AddColumn(cFld182,cFld18t2,"Sld. ICMS"	,2,3)
	oExcel:AddColumn(cFld182,cFld18t2,"Doc. Baixa"	,1,1)
	
Return(NIL)

/*/{Protheus.doc} Static Function Cab18P3
	Gera o arquivo Excel Ref. Crédito ICMS sobre Uniformes
	@type  Static Function
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function Cab18P3()
	//PLANILHA 2 - DETALHE UNIFORME
    oExcel:AddworkSheet(cFld183)
	oExcel:AddTable(cFld183,cFld18t3)
	oExcel:AddColumn(cFld183,cFld18t3,"Filial"  	,1,1)
	oExcel:AddColumn(cFld183,cFld18t3,"Cod.Produto"	,1,1)
	oExcel:AddColumn(cFld183,cFld18t3,"Descrição"	,1,1)
	oExcel:AddColumn(cFld183,cFld18t3,"Tipo Oper."	,1,1)
	oExcel:AddColumn(cFld183,cFld18t3,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld183,cFld18t3,"Dt.Emissao"	,1,1)
	oExcel:AddColumn(cFld183,cFld18t3,"Nota Fiscal"	,1,1)
	oExcel:AddColumn(cFld183,cFld18t3,"Serie NF"	,1,1)
	oExcel:AddColumn(cFld183,cFld18t3,"Fornecedor"	,1,1)
	oExcel:AddColumn(cFld183,cFld18t3,"Loja"		,1,1)
	oExcel:AddColumn(cFld183,cFld18t3,"Quant."		,2,2)
	oExcel:AddColumn(cFld183,cFld18t3,"Vl.Unit"		,2,3)
	oExcel:AddColumn(cFld183,cFld18t3,"Vl.Total"	,2,3)
	oExcel:AddColumn(cFld183,cFld18t3,"Vl. ICMS"	,2,3)
	oExcel:AddColumn(cFld183,cFld18t3,"Vl.ICMS Cred",2,3)	
	oExcel:AddColumn(cFld183,cFld18t3,"Sld. Quant"	,2,2)
	oExcel:AddColumn(cFld183,cFld18t3,"Sld. ICMS"	,2,3)
	oExcel:AddColumn(cFld183,cFld18t3,"Doc. Baixa"	,1,1)
	
Return(NIL)

/*/{Protheus.doc} Static Function GEx18P1
	Gera o arquivo Excel Ref. Crédito ICMS sobre Uniformes
	@type  Static Function
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function GEx18P1()
	Local _nTtQtd	:= 0
	Local _nTtVlCr	:= 0
	Local nExcel1
	
	FOR nExcel1 := 1 TO Len(aBrw18Cr)
		oExcel:AddRow(cFld18,cFld18t1,;
				   {aBrw18Cr[nExcel1][01],; //Filial
					aBrw18Cr[nExcel1][02],; //Produto
					aBrw18Cr[nExcel1][03],; //Descricao
					aBrw18Cr[nExcel1][04],; //Qtd
					aBrw18Cr[nExcel1][05]; //VlCred.ICMS
					})
					
		_nTtQtd		+= aBrw18Cr[nExcel1][04]
		_nTtVlCr	+= aBrw18Cr[nExcel1][05]
	NEXT nExcel1
	
	//Linha em Branco
	oExcel:AddRow(cFld18,cFld18t1,;
			   {"",; //Filial
				"",; //Produto
				"",; //Descricao
				"",; //Qtd
				""; //VlCred.ICMS
				})
	//TOTAL
	oExcel:AddRow(cFld18,cFld18t1,;
			   {"",; //Filial
				"TOTAL",; //Produto
				"",; //Descricao
				_nTtQtd,; //Qtd
				_nTtVlCr; //VlCred.ICMS
				})
Return

/*/{Protheus.doc} Static Function GEx18P2
	Gera o arquivo Excel Ref. Crédito ICMS sobre Uniformes
	@type  Static Function
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function GEx18P2()
	Local _cProd	:= ""
	Local nExcel1
	//PLANILHA 2 - MERCADO INTERNO			
	FOR nExcel1 := 1 TO Len(aBrw18Rs)
		IF _cProd != aBrw18Rs[nExcel1][02] .AND. nExcel1 > 1
			//LINHA DE TOTAL
			oExcel:AddRow(cFld182,cFld18t2,;
						   {aBrw18Rs[nExcel1-1][01],; //Filial
							aBrw18Rs[nExcel1-1][02],; //Produto
							aBrw18Rs[nExcel1-1][03],; //Descricao
							'',; //Tipo Ope
							'',; //Dt.Entrada
							'',; //Dt.Emissao
							'',; //Documento
							'',; //Serie
							'',; //Fornecedor
							'',; //Loja
							'',; //Quant
							'',; //Vl.Unit
							'',; //Vl. Total
							'',; //Vl.ICMS
							'',; //Saldo Qtd
							aBrw18Rs[nExcel1-1][20],; //Saldo Qtd
							aBrw18Rs[nExcel1-1][21],;  //Vl.ICMS Cr 
							'';  //Doc. Baixa 
							})
			//LINHA EM BRANCO
			oExcel:AddRow(cFld182,cFld18t2,;
						   {'',; //Filial
							'',; //Produto
							'',; //Descricao
							'',; //Tipo Ope
							'',; //Dt.Entrada
							'',; //Dt.Emissao
							'',; //Documento
							'',; //Serie
							'',; //Fornecedor
							'',; //Loja
							'',; //Quant
							'',; //Vl.Unit
							'',; //Vl. Total
							'',; //Vl.ICMS
							'',; //Saldo Qtd
							'',; //Saldo Qtd
							'',; //Vl.ICMS Cr 
							'';  //Doc.Baixa 
							})
			
		ENDIF
		oExcel:AddRow(cFld182,cFld18t2,;
					   {aBrw18Rs[nExcel1][01],; //Filial
						aBrw18Rs[nExcel1][02],; //Produto
						aBrw18Rs[nExcel1][03],; //Descricao
						aBrw18Rs[nExcel1][04],; //Tipo Ope
						aBrw18Rs[nExcel1][05],; //Dt.Entrada
						aBrw18Rs[nExcel1][06],; //Dt.Emissao
						aBrw18Rs[nExcel1][07],; //Documento
						aBrw18Rs[nExcel1][08],; //Serie
						aBrw18Rs[nExcel1][09],; //Fornecedor
						aBrw18Rs[nExcel1][10],; //Loja
						aBrw18Rs[nExcel1][11],; //Quant
						aBrw18Rs[nExcel1][12],; //Vl.Unit
						aBrw18Rs[nExcel1][13],; //Vl. Total
						aBrw18Rs[nExcel1][14],; //Vl.ICMS
						aBrw18Rs[nExcel1][19],; //Vl.ICMS Cr 
						aBrw18Rs[nExcel1][20],; //Saldo Qtd
						aBrw18Rs[nExcel1][21],; //Saldo ICMS
						aBrw18Rs[nExcel1][22];  //Doc.Baixa
						})
		_cProd := aBrw18Rs[nExcel1][02]
	NEXT nExcel1

	IF Len(aBrw18Rs) > 0
		//LINHA DE TOTAL
		oExcel:AddRow(cFld182,cFld18t2,;
			{aBrw18Rs[nExcel1-1][01],; //Filial
		aBrw18Rs[nExcel1-1][02],; //Produto
		aBrw18Rs[nExcel1-1][03],; //Descricao
		'',; //Tipo Ope
		'',; //Dt.Entrada
		'',; //Dt.Emissao
		'',; //Documento
		'',; //Serie
		'',; //Fornecedor
		'',; //Loja
		'',; //Quant
		'',; //Vl.Unit
		'',; //Vl. Total
		'',; //Vl.ICMS
		'',; //Saldo Qtd
		aBrw18Rs[nExcel1-1][20],; //Saldo Qtd
		aBrw18Rs[nExcel1-1][21],;  //Vl.ICMS Cr
		'';  //Doc. Baixa
		})
	ENDIF
Return

/*/{Protheus.doc} Static Function GEx18P3
	Gera o arquivo Excel Ref. Crédito ICMS sobre Uniformes
	@type  Static Function
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function GEx18P3()
	Local nExcel1
	//PLANILHA 2 - UNIFORMES NO MÊS			
	FOR nExcel1 := 1 TO Len(aBrw18Rs)
		IF aBrw18Rs[nExcel1][05] >= _mvpr01 .AND. aBrw18Rs[nExcel1][05] <= _mvpr02  .AND. aBrw18Rs[nExcel1][19] > 0
			oExcel:AddRow(cFld183,cFld18t3,;
					   {aBrw18Rs[nExcel1][01],; //Filial
						aBrw18Rs[nExcel1][02],; //Produto
						aBrw18Rs[nExcel1][03],; //Descricao
						aBrw18Rs[nExcel1][04],; //Tipo Ope
						aBrw18Rs[nExcel1][05],; //Dt.Entrada
						aBrw18Rs[nExcel1][06],; //Dt.Emissao
						aBrw18Rs[nExcel1][07],; //Documento
						aBrw18Rs[nExcel1][08],; //Serie
						aBrw18Rs[nExcel1][09],; //Fornecedor
						aBrw18Rs[nExcel1][10],; //Loja
						aBrw18Rs[nExcel1][11],; //Quant
						aBrw18Rs[nExcel1][12],; //Vl.Unit
						aBrw18Rs[nExcel1][13],; //Vl. Total
						aBrw18Rs[nExcel1][14],; //Vl.ICMS
						aBrw18Rs[nExcel1][19],;  //Vl.ICMS Cr 
						aBrw18Rs[nExcel1][20],; //Saldo Qtd
						aBrw18Rs[nExcel1][21],; //Saldo ICMS
						aBrw18Rs[nExcel1][22]; //Doc. Baixa
						})
		ENDIF
	NEXT nExcel1
			//LINHA EM BRANCO
			oExcel:AddRow(cFld183,cFld18t3,;
						   {'',; //Filial
							'',; //Produto
							'',; //Descricao
							'',; //Tipo Ope
							'',; //Dt.Entrada
							'',; //Dt.Emissao
							'',; //Documento
							'',; //Serie
							'',; //Fornecedor
							'',; //Loja
							'',; //Quant
							'',; //Vl.Unit
							'',; //Vl. Total
							'',; //Vl.ICMS
							'',; //Saldo Qtd
							'',; //Saldo Qtd
							'',; //Vl.ICMS Cr 
							'';  //Doc.Baixa 
							})
Return

/*/{Protheus.doc} Static Function xRelBr21
	Gera Relatório Ref. Crédito de ICMS - INDUSTR. USO E CONSUMO
	@type  Static Function
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function xRelBr21()
	Local aSays			:= {}
	Local aButtons		:= {}
	Local nOpca			:= 0
	//+-----------------------------------------------+
	//|Monta Form Batch - Interface com o Usuario     |
	//+-----------------------------------------------+
	AADD(aSays,"Este programa tem a finalidade de Gerar um arquivo Excel" )
	AADD(aSays,"Relatorio de Retorno de Industrializados para Credito de ICMS" )
    
	AADD(aButtons, { 1,.T.,{|o| nOpca:=1, o:oWnd:End(), Processa({||xRelBr21b()},"Gerando arquivo","Aguarde...")    }})
	AADD(aButtons, { 2,.T.,{|o| nOpca:=2, o:oWnd:End() }})	
	FormBatch( cCadastr, aSays, aButtons )
	MsgInfo("Arquivo Excel gerado!")
Return

/*/{Protheus.doc} Static Function xRelBr21b
	Gera Relatório Ref. Crédito de ICMS - INDUSTR. USO E CONSUMO
	@type  Static Function
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function xRelBr21b()
	Private oExcel     := FWMSEXCELEX():New()
	//Private cArquivo	:= cGetFile("Arquivo XML", "Selecione o diretório para salvar o relatório",,'C:\',.T.,GETF_RETDIRECTORY + GETF_LOCALHARD + GETF_NETWORKDRIVE)	
	Private oMsExcel   := NIL
	
	cArquivo := cPathRel +  'RINDUSTR_' + DTOS(DATE()) + STRTRAN(TIME(),':','') + '.XML'
	BEGIN SEQUENCE
		
		//IF .NOT.( ApOleClient("MsExcel") )   // se nao existir o excel sai fora..
		//    Alert("Nao Existe Excel Instalado")
    //        BREAK
		//EndIF
        	
    	CabBrw21()             
        GExBrw21()
        SalvaXml()
		CriaExcel()
	
	END SEQUENCE

Return

/*/{Protheus.doc} Static Function CabBrw21
	Gera Relatório Ref. Crédito de ICMS - INDUSTR. USO E CONSUMO
	@type  Static Function
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function CabBrw21()
    oExcel:AddworkSheet(cFld21)
	oExcel:AddTable(cFld21,cFld21t)
	oExcel:AddColumn(cFld21,cFld21t,"Retornado"  		,1,1) // 01
	oExcel:AddColumn(cFld21,cFld21t,"Filial"  			,1,1) // 02
	oExcel:AddColumn(cFld21,cFld21t,"REM Dt. Entrada"  	,1,1) // 03
	oExcel:AddColumn(cFld21,cFld21t,"REM Dt. Emissão"  	,1,1) // 04
	oExcel:AddColumn(cFld21,cFld21t,"REM Série"  		,1,1) // 05
	oExcel:AddColumn(cFld21,cFld21t,"REM Nota Fiscal"  	,1,1) // 06
	oExcel:AddColumn(cFld21,cFld21t,"REM Item"  		,1,1) // 07
	oExcel:AddColumn(cFld21,cFld21t,"REM Forn."  		,1,1) // 08
	oExcel:AddColumn(cFld21,cFld21t,"REM Loja"  		,1,1) // 09
	oExcel:AddColumn(cFld21,cFld21t,"REM Nome Forn."  	,1,1) // 10
	oExcel:AddColumn(cFld21,cFld21t,"REM CFOP"  		,1,1) // 11
	oExcel:AddColumn(cFld21,cFld21t,"REM TES"  			,1,1) // 12
	oExcel:AddColumn(cFld21,cFld21t,"REM Produto"  		,1,1) // 13
	oExcel:AddColumn(cFld21,cFld21t,"REM Desc.Prod"  	,1,1) // 14
  oExcel:AddColumn(cFld21,cFld21t,"REM Quant." 		,2,2) // 15
	oExcel:AddColumn(cFld21,cFld21t,"REM Prc.Unit."		,2,3) // 16
	oExcel:AddColumn(cFld21,cFld21t,"REM Vl. Cont" 		,2,3) // 17
	oExcel:AddColumn(cFld21,cFld21t,"REM Vl. ICMS"		,2,3) // 18
	oExcel:AddColumn(cFld21,cFld21t,"REM Vl. IPI"		,2,3) // 19
	oExcel:AddColumn(cFld21,cFld21t,"DEV Dt. Entrada"  	,1,1) // 20
	oExcel:AddColumn(cFld21,cFld21t,"DEV Dt. Emissão"  	,1,1) // 21
	oExcel:AddColumn(cFld21,cFld21t,"DEV Série"  		,1,1) // 22
	oExcel:AddColumn(cFld21,cFld21t,"DEV Nota Fiscal"  	,1,1) // 23
	oExcel:AddColumn(cFld21,cFld21t,"DEV CFOP"  		,1,1) // 24
	oExcel:AddColumn(cFld21,cFld21t,"DEV TES"  			,1,1) // 25
	oExcel:AddColumn(cFld21,cFld21t,"DEV Quant"			,2,3) // 26
	oExcel:AddColumn(cFld21,cFld21t,"DEV Vl. Cont"		,2,3) // 27
	oExcel:AddColumn(cFld21,cFld21t,"DEV Vl. ICMS"		,2,3) // 28
	oExcel:AddColumn(cFld21,cFld21t,"DEV Vl. IPI"		,2,3) // 29

RETURN(NIL)  

/*/{Protheus.doc} Static Function GExBrw21
	Gera Relatório Ref. Crédito de ICMS - INDUSTR. USO E CONSUMO
	@type  Static Function
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function GExBrw21()
	Local nExcel1
	//============================== INICIO IMPRIME LINHA NO EXCEL
	FOR nExcel1 := 1 TO Len(aBrw21Rs)
		//GRAVANDO NA LINHA MANDANDO PARA O EXCEL O ARRAY COM AS LINHAS
		oExcel:AddRow(cFld21,cFld21t,;
			{aBrw21Rs[nExcel1][01],;
			aBrw21Rs[nExcel1][02],;
			IIF(Alltrim(DTOS(aBrw21Rs[nExcel1][03]))=='',DTOC(aBrw21Rs[nExcel1][03]),aBrw21Rs[nExcel1][03]),;
			IIF(Alltrim(DTOS(aBrw21Rs[nExcel1][04]))=='',DTOC(aBrw21Rs[nExcel1][04]),aBrw21Rs[nExcel1][04]),;
			aBrw21Rs[nExcel1][05],;
			aBrw21Rs[nExcel1][06],;
			aBrw21Rs[nExcel1][07],;
			aBrw21Rs[nExcel1][08],;
			aBrw21Rs[nExcel1][09],;
			aBrw21Rs[nExcel1][10],;
			aBrw21Rs[nExcel1][11],;
			aBrw21Rs[nExcel1][12],;
			aBrw21Rs[nExcel1][13],;
			aBrw21Rs[nExcel1][14],;
			aBrw21Rs[nExcel1][15],;
			aBrw21Rs[nExcel1][16],;
			aBrw21Rs[nExcel1][17],;
			aBrw21Rs[nExcel1][18],;
			aBrw21Rs[nExcel1][19],;
			IIF(Alltrim(DTOS(aBrw21Rs[nExcel1][20]))=='',DTOC(aBrw21Rs[nExcel1][20]),aBrw21Rs[nExcel1][20]),;
			IIF(Alltrim(DTOS(aBrw21Rs[nExcel1][21]))=='',DTOC(aBrw21Rs[nExcel1][21]),aBrw21Rs[nExcel1][21]),;
			aBrw21Rs[nExcel1][22],;
			aBrw21Rs[nExcel1][23],;
			aBrw21Rs[nExcel1][24],;
			aBrw21Rs[nExcel1][25],;
			aBrw21Rs[nExcel1][26],;
			aBrw21Rs[nExcel1][27],;
			aBrw21Rs[nExcel1][28],;
			aBrw21Rs[nExcel1][29];
			})

	NEXT

	//Adiciona Linha em branco
	oExcel:AddRow(cFld21,cFld21t,{'','','','','','','','','','','','','','','','','','','','','','','','','','','','',''})
	oExcel:AddRow(cFld21,cFld21t,{'TOTAL NO PERÍODO','','','','','','','','','','','','','','','','',nE21ICMS,'','','','','','','','','',nR21ICMS,''})
Return

/*/{Protheus.doc} Static Function xABrTr18
	Carrega da dados Ref. Crédito de ICMS UNIFORMES
	@type  Static Function
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function xABrTr18()
	Local cItem := Alltrim(oTrF18p1:GetCargo())
	Local i
	If !oTrF18p1:IsEmpty()
		If oTrF18p1:Nivel() = 1
			aBrw18Tr := aBrw18Rs
		Else
			aBrw18Tr := {}
			For i := 1 to Len(aBrw18Rs)
				If Alltrim(aBrw18Rs[i,2])== cItem
					aAdd(aBrw18Tr,aBrw18Rs[i])
				Endif
			Next i
		Endif
	Endif
	oBrw18Rs:SetArray(aBrw18Tr)
	SysRefresh()
Return

//INICIO Chamado n.055548 - OS n.057705 - Abel Babini - 17/03/2020 - Painel Fiscal ICMS SC - Relatório Ind Uso e Consumo - Ajustes Filial SC
/*/{Protheus.doc} Static Function xABrw21
	Carrega da dados Ref. Industrializacao Imob. e Uso e Consumo
	@type  Static Function
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function xABrw21()
	Local nV21ICMS	:= 0
	Local dDtIniDG	:= _mvpr01

	If nOpMdl == 1
		dDtIniDG	:= _mvpr01
	Elseif nOpMdl == 2 .or. nOpMdl == 4
		dDtIniDG	:= _dRemInd
	Endif	

	If Select(cAlsB21) > 0
		(cAlsB21)->(dbCloseArea())
	Endif
	cAlsB21:=GetNextAlias()
	
	aBrw21Rs	:= {}
	
			//IIF(SFTD.FT_NFISCAL IS NULL,'','SIM') AS RETORNO,
	BeginSQL  Alias cAlsB21

		column REM_DTENTRADA as Date
		column REM_DTEMISSAO as Date
		column DEV_ENTRADA as Date
		column DEV_EMISSAO as Date

		SELECT
			SFT.FT_FILIAL AS FILIAL, 
			SFT.FT_ENTRADA AS REM_DTENTRADA,
			SFT.FT_EMISSAO AS REM_DTEMISSAO,
			SFT.FT_SERIE AS REM_SERIE,
			SFT.FT_NFISCAL AS REM_NFISCAL,
			SFT.FT_ITEM AS REM_ITEM,
			SFT.FT_CLIEFOR AS REM_CLIEFOR, 
			SFT.FT_LOJA AS REM_LOJA,
			SA2.A2_NOME AS REM_NOME,
			SFT.FT_CFOP AS REM_CFOP,
			SFT.FT_TES AS REM_TES,
			SFT.FT_PRODUTO AS REM_PRODUTO,
			SB1.B1_DESC AS REM_DESCPRODUTO,
			SFT.FT_QUANT AS REM_QUANT,
			SFT.FT_PRCUNIT AS REM_PRCUNIT,
			SFT.FT_VALCONT AS REM_VALCONT,
			SFT.FT_VALICM AS REM_VALICMS,
			SFT.FT_VALIPI AS REM_VALIPI,
			ISNULL(SD1.D1_DTDIGIT,'') AS DEV_ENTRADA,
			ISNULL(SD1.D1_EMISSAO,'') AS DEV_EMISSAO,
			ISNULL(SD1.D1_SERIE,'') AS DEV_SERIE,
			ISNULL(SD1.D1_DOC,'') AS DEV_NFISCAL,
			ISNULL(SD1.D1_CF,'') AS DEV_CFOP,
			ISNULL(SD1.D1_TES,'') AS DEV_TES,
			ISNULL(SD1.D1_QUANT,0) AS DEV_QUANT,
			ISNULL(SD1.D1_TOTAL,0) AS DEV_VALCONT,
			ISNULL(SD1.D1_VALICM,0) AS DEV_VALICMS,
			ISNULL(SD1.D1_VALIPI,0) AS DEV_VALIPI
		FROM %TABLE:SFT% SFT (NOLOCK)
			LEFT JOIN %TABLE:SB1% SB1 (NOLOCK) ON
				SB1.%notDel%
			AND SB1.B1_COD = SFT.FT_PRODUTO
			LEFT JOIN %TABLE:SA2% SA2 (NOLOCK) ON
				SA2.%notDel%
			AND SA2.A2_COD = SFT.FT_CLIEFOR
			AND SA2.A2_LOJA = SFT.FT_LOJA
			LEFT JOIN %TABLE:SD1% SD1 (NOLOCK) ON
				SD1.%notDel%
			AND SD1.D1_FILIAL = SFT.FT_FILIAL
			AND SD1.D1_NFORI = SFT.FT_NFISCAL
			AND SD1.D1_SERIORI = SFT.FT_SERIE
			AND SD1.D1_ITEMORI = SFT.FT_ITEM
			AND SD1.D1_DTDIGIT BETWEEN %Exp:DToS(dDtIniDG)% AND %Exp:DToS(_mvpr02)%

		WHERE
			SFT.%notDel%
			AND (SFT.FT_ENTRADA BETWEEN %Exp:DToS(_dRemInd)% AND %Exp:DToS(_mvpr02)%)
			AND (SD1.D1_DTDIGIT BETWEEN %Exp:DToS(dDtIniDG)% AND %Exp:DToS(_mvpr02)% OR SD1.D1_DTDIGIT IS NULL)
			AND SFT.FT_CFOP IN ('5901','6901') 
			AND SFT.FT_TIPOMOV = 'S'
			AND SFT.FT_DTCANC = '' 
			AND SFT.FT_CLIEFOR NOT IN %Exp:_cRIForn%
			AND SFT.FT_FILIAL = %xFilial:SFT%
		ORDER BY SFT.FT_FILIAL, SFT.FT_ENTRADA, SFT.FT_CLIEFOR, SFT.FT_NFISCAL
		ENDSQL
	
	nR21ICMS	:= 0
	nE21ICMS	:= 0
	DbSelectArea(cAlsB21)
	(cAlsB21)->(DbGoTop())
		While !(cAlsB21)->(eof())
		cNFRet		:= ""
		nV21ICMS	:= 0
		nE21ICMS	+= (cAlsB21)->REM_VALICMS
			IF ALLTRIM((cAlsB21)->DEV_NFISCAL) != ''
			
				If REM_QUANT != DEV_QUANT
					cNFRet		:= "Parcial"
					nV21ICMS	:= Round ((REM_VALICMS / REM_QUANT) * DEV_QUANT,2)
					nR21ICMS 	+= nV21ICMS
				Else
					cNFRet		:= "Sim"
					nV21ICMS	:= REM_VALICMS
					nR21ICMS 	+= REM_VALICMS
				Endif
			Else
			cNFRet		:= "Não"
			ENDIF
		aAdd(aBrw21Rs,{ cNFRet,;
						(cAlsB21)->FILIAL, ;
						(cAlsB21)->REM_DTENTRADA,;
						(cAlsB21)->REM_DTEMISSAO,;
						(cAlsB21)->REM_SERIE,;
						(cAlsB21)->REM_NFISCAL,;
						(cAlsB21)->REM_ITEM,;
						(cAlsB21)->REM_CLIEFOR,; 
						(cAlsB21)->REM_LOJA,;
						(cAlsB21)->REM_NOME,;
						(cAlsB21)->REM_CFOP,;
						(cAlsB21)->REM_TES,;
						(cAlsB21)->REM_PRODUTO,;
						(cAlsB21)->REM_DESCPRODUTO,;
						(cAlsB21)->REM_QUANT,;
						(cAlsB21)->REM_PRCUNIT,;
						(cAlsB21)->REM_VALCONT,;
						(cAlsB21)->REM_VALICMS,;
						(cAlsB21)->REM_VALIPI,;
						(cAlsB21)->DEV_ENTRADA,;
						(cAlsB21)->DEV_EMISSAO,;
						(cAlsB21)->DEV_SERIE,;
						(cAlsB21)->DEV_NFISCAL,;
						(cAlsB21)->DEV_CFOP,;
						(cAlsB21)->DEV_TES,;
						(cAlsB21)->DEV_QUANT,;
						(cAlsB21)->DEV_VALCONT,;
						nV21ICMS,;
						(cAlsB21)->DEV_VALIPI;						
						})
		
		(cAlsB21)->(DbSkip())
		EndDo
	(cAlsB21)->(dbCloseArea())


	SysRefresh()
Return

/*/{Protheus.doc} Static Function xExpICMR
	Gera planilha Excel com todos os relatórios de todas as Abas
	@type  Static Function
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function xExpICMR()
	_lAbreEx := .F.
	IF nOpMdl == 1
		//Processa({||Static Call(ADFIS038R,xRelBr03b)},"Gerando arquivo Abertura GIA","Aguarde...")
		//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
		Processa({||u_FIS038C7()},"Gerando arquivo Abertura GIA","Aguarde...")
		Processa({||xRelBr04b()},"Gerando arquivo Abertura GIA ST","Aguarde...")
		Processa({||xRelBr05b()},"Gerando arquivo Demonstrativo","Aguarde...")
		Processa({||xRelBr06b()},"Gerando arquivo Difal Não Contribuinte","Aguarde...")
		Processa({||xRelBr07b()},"Gerando arquivo Diferencial de Alíquota","Aguarde...")
		Processa({||xRelBr09b()},"Gerando arquivo Outras Saídas","Aguarde...")
		Processa({||xRelBr10b()},"Gerando arquivo Devolução de Compras","Aguarde...")
		Processa({||xRelBr11b()},"Gerando arquivo Polenta - ICMS ST","Aguarde...")
		Processa({||xRelBr12b()},"Gerando arquivo Embutidos - ICMS ST","Aguarde...")
		Processa({||xRelBr13b()},"Gerando arquivo Almondegas - ICMS ST","Aguarde...")
		Processa({||xRelBr14b()},"Gerando arquivo Graxaria","Aguarde...")
		Processa({||xRelBr15b()},"Gerando arquivo Compra de Lenha","Aguarde...")
		Processa({||xRelBr16b()},"Gerando arquivo Compra de Aves","Aguarde...")
		Processa({||xRelBr17b()},"Gerando arquivo Legumes","Aguarde...")
		Processa({||xRelBr18b()},"Gerando arquivo Uniformes","Aguarde...")
		Processa({||xRelBr19b()},"Gerando arquivo Produtos não comestíveis","Aguarde...")
		//Processa({||Static Call(ADFIS038R,xRelBr20b)},"Gerando arquivo NF Canceladas","Aguarde...")
		//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
		Processa({||u_FIS038C8()},"Gerando arquivo NF Canceladas","Aguarde...")
		Processa({||xRelBr21b()},"Gerando arquivo Retorno de Industrializados","Aguarde...")
		Processa({||xRelBr22b()},"Gerando arquivo Revenda Tributada","Aguarde...")
		Processa({||xRelBr23b(1)},"Gerando arquivo Industrialização de PA","Aguarde...")
		Processa({||xRelBr24b()},"Gerando arquivo Fretes","Aguarde...")
		Processa({||xRelBr25b()},"Gerando arquivo Celulares","Aguarde...")
		//Processa({||Static Call(ADFIS038R,xRelBr26b)},"Gerando arquivo Outras Entradas","Aguarde...")
		//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
		Processa({||u_FIS038C9()},"Gerando arquivo Outras Entradas","Aguarde...")

		Processa({||xRelBr8b()},"Gerando arquivo Crédito Outorgado","Aguarde...")
		Processa({||xRelB8d()},"Gerando arquivo DGCA","Aguarde...")
		IF _mvpr01 >= STOD('20210101') .AND. _mvpr01 < STOD('20210201')
			Processa({||xRelBr8b()},"Gerando arquivo Crédito Outorgado","Aguarde...")
			Processa({||xRelB8d()},"Gerando arquivo DGCA","Aguarde...")
			Processa({||xRelB35b()},"Gerando arquivo Crédito Outorgado 2021","Aguarde...")
			Processa({||xRelB35d()},"Gerando arquivo DGCA 2021","Aguarde...")
		ELSEIF _mvpr01 < STOD('20210101')
			Processa({||xRelBr8b()},"Gerando arquivo Crédito Outorgado","Aguarde...")
			Processa({||xRelB8d()},"Gerando arquivo DGCA","Aguarde...")
		ELSE
			Processa({||xRelB35b()},"Gerando arquivo Crédito Outorgado 2021","Aguarde...")
			Processa({||xRelB35d()},"Gerando arquivo DGCA 2021","Aguarde...")
		ENDIF

	ELSEIF nOpMdl == 2
		//Processa({||Static Call(ADFIS038R,xRelBr03b)},"Gerando arquivo Abertura GIA","Aguarde...")
		//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
		Processa({||u_FIS038C7()},"Gerando arquivo Abertura GIA","Aguarde...")
		Processa({||xRelBr07b()},"Gerando arquivo Diferencial de Alíquota","Aguarde...")
		Processa({||xRelBr09b()},"Gerando arquivo Outras Saídas","Aguarde...")
		Processa({||xRelBr10b()},"Gerando arquivo Devolução de Compras","Aguarde...")
		Processa({||xRelBr14b()},"Gerando arquivo Graxaria","Aguarde...")
		Processa({||xRelBr15b()},"Gerando arquivo Compra de Lenha","Aguarde...")
		//Processa({||Static Call(ADFIS038R,xRelBr20b)},"Gerando arquivo NF Canceladas","Aguarde...")
		//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
		Processa({||u_FIS038C8()},"Gerando arquivo NF Canceladas","Aguarde...")
		Processa({||xRelBr21b()},"Gerando arquivo Retorno de Industrializados","Aguarde...")
		Processa({||xRelBr22b()},"Gerando arquivo Revenda Tributada","Aguarde...")
		Processa({||xRelBr23b(1)},"Gerando arquivo Industrialização de PA","Aguarde...")
		Processa({||xRelBr24b()},"Gerando arquivo Fretes","Aguarde...")
		//Processa({||Static Call(ADFIS038R,xRelBr26b)},"Gerando arquivo Outras Entradas","Aguarde...")
		//Processa({||Static Call(ADFIS038R,xRelBr27b)},"Gerando arquivo IVA","Aguarde...")
		//Processa({||Static Call(ADFIS038R,xRelBr28b)},"Gerando arquivo CIAP","Aguarde...")
		//Processa({||Static Call(ADFIS038R,xRelBr29b)},"Gerando arquivo Compra MP","Aguarde...")
		//Processa({||Static Call(ADFIS038R,xRelBr30b)},"Gerando arquivo Vendas","Aguarde...")		
		//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
		Processa({||u_FIS038C9()},"Gerando arquivo Outras Entradas","Aguarde...")
		Processa({||u_FIS038D0()},"Gerando arquivo IVA","Aguarde...")
		Processa({||u_FIS038D1()},"Gerando arquivo CIAP","Aguarde...")
		Processa({||u_FIS038D2()},"Gerando arquivo Compra MP","Aguarde...")
		Processa({||u_FIS038D3()},"Gerando arquivo Vendas","Aguarde...")
	ELSEIF nOpMdl == 3
		//Processa({||Static Call(ADFIS038R,xRelBr03b)},"Gerando arquivo Abertura GIA","Aguarde...")
		//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
		Processa({||u_FIS038C7()},"Gerando arquivo Abertura GIA","Aguarde...")
		//Ticket 7689 - Leonardo P. Monteiro - 07/01/2020 - Tratamento do error.log ao selecionar a opção 'Exp. Todas' na filial 08-Goiás.
		//Processa({||xRelBr09b()},"Gerando arquivo Outras Saídas","Aguarde...")
		//Processa({||Static Call(ADFIS038R,xRelBr20b)},"Gerando arquivo NF Canceladas","Aguarde...")
		//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
		Processa({||u_FIS038C8()},"Gerando arquivo NF Canceladas","Aguarde...")
		Processa({||xRelBr23b(1)},"Gerando arquivo Industrialização de PA","Aguarde...")
	ELSEIF nOpMdl == 4
		//Processa({||Static Call(ADFIS038R,xRelBr03b)},"Gerando arquivo Abertura GIA","Aguarde...")
		//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
		Processa({||u_FIS038C7()},"Gerando arquivo Abertura GIA","Aguarde...")
		Processa({||xRelBr07b()},"Gerando arquivo Diferencial de Alíquota","Aguarde...")
		Processa({||xRelBr09b()},"Gerando arquivo Outras Saídas","Aguarde...")
		Processa({||xRelBr10b()},"Gerando arquivo Devolução de Compras","Aguarde...")
		//Processa({||Static Call(ADFIS038R,xRelBr34b)},"Gerando arquivo Devolção de Vendas","Aguarde...")
		//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
		Processa({||u_FIS038D4()},"Gerando arquivo Devolção de Vendas","Aguarde...")
		Processa({||xRelBr14b()},"Gerando arquivo Graxaria","Aguarde...")
		Processa({||xRelBr15b()},"Gerando arquivo Compra de Lenha","Aguarde...")
		
		//Processa({||Static Call(ADFIS038R,xRelBr20b)},"Gerando arquivo NF Canceladas","Aguarde...")
		//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
		Processa({||u_FIS038C8()},"Gerando arquivo NF Canceladas","Aguarde...")
		Processa({||xRelBr21b()},"Gerando arquivo Retorno de Industrializados","Aguarde...")
		Processa({||xRelBr22b()},"Gerando arquivo Revenda Tributada","Aguarde...")
		Processa({||xRelBr24b()},"Gerando arquivo Fretes","Aguarde...")
		//Processa({||Static Call(ADFIS038R,xRelBr26b)},"Gerando arquivo Outras Entradas","Aguarde...")
		//Processa({||Static Call(ADFIS038R,xRelBr28b)},"Gerando arquivo CIAP","Aguarde...")
		//Processa({||Static Call(ADFIS038R,xRelBr29b)},"Gerando arquivo Compra MP","Aguarde...")
		//Processa({||Static Call(ADFIS038R,xRelBr30b)},"Gerando arquivo Vendas","Aguarde...")
		//Processa({||Static Call(ADFIS038R,xRelBr33b)},"Gerando arquivo Entradas e Saídas","Aguarde...")
		//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
		Processa({||u_FIS038C9()},"Gerando arquivo Outras Entradas","Aguarde...")
		Processa({||u_FIS038D1()},"Gerando arquivo CIAP","Aguarde...")
		Processa({||u_FIS038D2()},"Gerando arquivo Compra MP","Aguarde...")
		Processa({||u_FIS038D3()},"Gerando arquivo Vendas","Aguarde...")
		Processa({||u_FIS038D5()},"Gerando arquivo Entradas e Saídas","Aguarde...")
	ENDIF
	_lAbreEx := .T.
Return

/*/{Protheus.doc} User Function ³FNNAOIMP
	Emite alerta para o usuario de função não implementada
	@type  Static Function
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
User Function FNNAOIMP()
	Alert("Função não implementada. Contate a TI.")
Return

// INICIO n.040930  ³ Relatorio Industrialização Embutidos - Abel Babini - 24/06/2019
/*/{Protheus.doc} Static Function FltTr23
	Gera Relatório Ref. Industrialização de PA (Coopeval, Laranjal, etc)
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
User Function FltTr23(nTr)
	Local i
	//xABrTr23(nTr)
//Return
//Static Function xABrTr23(nTr)
	Local cItem := Substr(Alltrim(oTrF23p1:GetPrompt()),1,At('-',Alltrim(oTrF23p1:GetPrompt()))-1)//Alltrim(oTrF23p1:GetCargo())
	If nTr = 1
		cItem := Substr(Alltrim(oTrF23p1:GetPrompt()),1,At('-',Alltrim(oTrF23p1:GetPrompt()))-1)//Alltrim(oTrF23p1:GetCargo())
	ElseIf nTr = 2
		cItem := Substr(Alltrim(oTrF23p2:GetPrompt()),1,At('-',Alltrim(oTrF23p2:GetPrompt()))-1)//Alltrim(oTrF23p2:GetCargo())
	ElseIf nTr = 3
		cItem := Substr(Alltrim(oTrF23p3:GetPrompt()),1,At('-',Alltrim(oTrF23p3:GetPrompt()))-1)//Alltrim(oTrF23p3:GetCargo())
	ElseIf nTr = 4
		cItem := Substr(Alltrim(oTrF23p4:GetPrompt()),1,At('-',Alltrim(oTrF23p4:GetPrompt()))-1)//Alltrim(oTrF23p4:GetCargo())
	ElseIf nTr = 5
		cItem := Substr(Alltrim(oTrF23p5:GetPrompt()),1,At('-',Alltrim(oTrF23p5:GetPrompt()))-1)//Alltrim(oTrF23p5:GetCargo())
	ElseIf nTr = 6
		cItem := Substr(Alltrim(oTrF23p6:GetPrompt()),1,At('-',Alltrim(oTrF23p6:GetPrompt()))-1)//Alltrim(oTrF23p6:GetCargo())
	ElseIf nTr = 7
		cItem := Substr(Alltrim(oTrF23p7:GetPrompt()),1,At('-',Alltrim(oTrF23p7:GetPrompt()))-1)//Alltrim(oTrF23p7:GetCargo())
	Endif

	If !oTrF23p1:IsEmpty()
		If oTrF23p1:Nivel() == 1
			aBrw23Tr := aBrw23Rs
		Else
			aBrw23Tr := {}
			For i := 1 to Len(aBrw23Rs)
				If Alltrim(aBrw23Rs[i,7])== cItem
					aAdd(aBrw23Tr,aBrw23Rs[i])
				Endif
			Next i
		Endif

		If oTrF23p2:Nivel() == 1
			aBrw23RZ := aBrw23Rm
		Else
			aBrw23RZ := {}
			For i := 1 to Len(aBrw23Rm)
				If Alltrim(aBrw23Rm[i,28])== cItem
					aAdd(aBrw23RZ,aBrw23Rm[i])
				Endif
			Next i
		Endif

		If oTrF23p3:Nivel() == 1
			aBrw23DZ := aBrw23Dv
		Else
			aBrw23DZ := {}
			For i := 1 to Len(aBrw23Dv)
				If Alltrim(aBrw23Dv[i,28])== cItem
					aAdd(aBrw23DZ,aBrw23Dv[i])
				Endif
			Next i
		Endif

		If oTrF23p4:Nivel() == 1
			aBrw23OZ := aBrw23Op
		Else
			aBrw23OZ := {}
			For i := 1 to Len(aBrw23Op)
				If Alltrim(aBrw23Op[i,22])== cItem
					aAdd(aBrw23OZ,aBrw23Op[i])
				Endif
			Next i
		Endif

		If oTrF23p5:Nivel() == 1
			aBrw23SZ := aBrw23S3
		Else
			aBrw23SZ := {}
			For i := 1 to Len(aBrw23S3)
				If Alltrim(aBrw23S3[i,25])== cItem
					aAdd(aBrw23SZ,aBrw23S3[i])
				Endif
			Next i
		Endif

		If oTrF23p6:Nivel() == 1
			aBrw23IZ := aBrw23IN
		Else
			aBrw23IZ := {}
			For i := 1 to Len(aBrw23IN)
				If Alltrim(aBrw23IN[i,23])== cItem
					aAdd(aBrw23IZ,aBrw23IN[i])
				Endif
			Next i
		Endif

		If oTrF23p7:Nivel() == 1
			aBrw23TZ := aBrw23Tt
		Else
			aBrw23TZ := {}
			For i := 1 to Len(aBrw23Tt)
				If Substr(Alltrim(aBrw23Tt[i,15]),1,14)== cItem
					aAdd(aBrw23TZ,aBrw23Tt[i])
				Endif
			Next i
		Endif
	Endif


	IF nTr = 1
		oTrF23p2:TreeSeek(cItem)
		oTrF23p3:TreeSeek(cItem)
		oTrF23p4:TreeSeek(cItem)
		oTrF23p5:TreeSeek(cItem)
		oTrF23p6:TreeSeek(cItem)
		oTrF23p7:TreeSeek(cItem)
	ELSEIF nTr = 2
		oTrF23p1:TreeSeek(cItem)
		oTrF23p3:TreeSeek(cItem)
		oTrF23p4:TreeSeek(cItem)
		oTrF23p5:TreeSeek(cItem)
		oTrF23p6:TreeSeek(cItem)
		oTrF23p7:TreeSeek(cItem)
	ELSEIF nTr = 3
		oTrF23p1:TreeSeek(cItem)
		oTrF23p2:TreeSeek(cItem)
		oTrF23p4:TreeSeek(cItem)
		oTrF23p5:TreeSeek(cItem)
		oTrF23p6:TreeSeek(cItem)
		oTrF23p7:TreeSeek(cItem)
	ELSEIF nTr = 4
		oTrF23p1:TreeSeek(cItem)
		oTrF23p2:TreeSeek(cItem)
		oTrF23p3:TreeSeek(cItem)
		oTrF23p5:TreeSeek(cItem)
		oTrF23p6:TreeSeek(cItem)
		oTrF23p7:TreeSeek(cItem)
	ELSEIF nTr = 5
		oTrF23p1:TreeSeek(cItem)
		oTrF23p2:TreeSeek(cItem)
		oTrF23p3:TreeSeek(cItem)
		oTrF23p4:TreeSeek(cItem)
		oTrF23p6:TreeSeek(cItem)
		oTrF23p7:TreeSeek(cItem)
	ELSEIF nTr = 6
		oTrF23p1:TreeSeek(cItem)
		oTrF23p2:TreeSeek(cItem)
		oTrF23p3:TreeSeek(cItem)
		oTrF23p4:TreeSeek(cItem)
		oTrF23p5:TreeSeek(cItem)
		oTrF23p7:TreeSeek(cItem)
	ELSEIF nTr = 7
		oTrF23p1:TreeSeek(cItem)
		oTrF23p2:TreeSeek(cItem)
		oTrF23p3:TreeSeek(cItem)
		oTrF23p4:TreeSeek(cItem)
		oTrF23p5:TreeSeek(cItem)
		oTrF23p6:TreeSeek(cItem)
	ENDIF

	oBrw23Rs:SetArray(aBrw23Tr)
	oBrw23Rm:SetArray(aBrw23RZ)
	oBrw23Dv:SetArray(aBrw23DZ)
	oBrw23Op:SetArray(aBrw23OZ)
	oBrw23S3:SetArray(aBrw23SZ)
	oBrw23IN:SetArray(aBrw23IZ)
	oBrw23Tt:SetArray(aBrw23TZ)

	oBrw23Rs:Refresh()
	oBrw23Rm:Refresh()
	oBrw23Dv:Refresh()
	oBrw23Op:Refresh()
	oBrw23S3:Refresh()
	oBrw23IN:Refresh()
	oBrw23Tt:Refresh()

	SysRefresh()
Return

/*/{Protheus.doc} Static Function PNRetMes
	Retorna Mês - Ano de Entrada - Utilizado no Relatório Retorno de Industriação de PA
	@type  Static Function
	@author Abel Babini Filho
	@since 30/12/2019
	@version 1
	/*/
Static Function PNRetMes(_dtEntra)
	Local cRet := ''

	If ValType(_dtEntra) == 'D'
		If Month((cAlB23Rm)->DTENTRADA) == 1
			cRet	:= 'Jan - '+Alltrim(str(Year((cAlB23Rm)->DTENTRADA)))
		ElseIf Month((cAlB23Rm)->DTENTRADA) == 2
			cRet	:= 'Fev - '+Alltrim(str(Year((cAlB23Rm)->DTENTRADA)))
		ElseIf Month((cAlB23Rm)->DTENTRADA) == 3
			cRet	:= 'Mar - '+Alltrim(str(Year((cAlB23Rm)->DTENTRADA)))
		ElseIf Month((cAlB23Rm)->DTENTRADA) == 4
			cRet	:= 'Abr - '+Alltrim(str(Year((cAlB23Rm)->DTENTRADA)))
		ElseIf Month((cAlB23Rm)->DTENTRADA) == 5
			cRet	:= 'Mai - '+Alltrim(str(Year((cAlB23Rm)->DTENTRADA)))
		ElseIf Month((cAlB23Rm)->DTENTRADA) == 6
			cRet	:= 'Jun - '+Alltrim(str(Year((cAlB23Rm)->DTENTRADA)))
		ElseIf Month((cAlB23Rm)->DTENTRADA) == 7
			cRet	:= 'Jul - '+Alltrim(str(Year((cAlB23Rm)->DTENTRADA)))
		ElseIf Month((cAlB23Rm)->DTENTRADA) == 8
			cRet	:= 'Ago - '+Alltrim(str(Year((cAlB23Rm)->DTENTRADA)))
		ElseIf Month((cAlB23Rm)->DTENTRADA) == 9
			cRet	:= 'Set - '+Alltrim(str(Year((cAlB23Rm)->DTENTRADA)))
		ElseIf Month((cAlB23Rm)->DTENTRADA) == 10
			cRet	:= 'Out - '+Alltrim(str(Year((cAlB23Rm)->DTENTRADA)))
		ElseIf Month((cAlB23Rm)->DTENTRADA) == 11
			cRet	:= 'Nov - '+Alltrim(str(Year((cAlB23Rm)->DTENTRADA)))
		ElseIf Month((cAlB23Rm)->DTENTRADA) == 12
			cRet	:= 'Dez - '+Alltrim(str(Year((cAlB23Rm)->DTENTRADA)))
		else
			cRet	:= ''
		Endif
	Endif

Return	cRet

/*/{Protheus.doc} Static Function xABrw23
	Gera Relatório Ref. Industrialização de PA (Coopeval, Laranjal, etc)
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function xABrw23()

	Local _i
	Local _j
	Local nPFor
	Local cMesAno := ''
	// Local nRegS3	:= 0
	// Local nRegAtu	:= 1
	nA23T01	:= 0 //Compra para industrializacao
	nA23T02	:= 0 //Industrializacao
	nA23T03	:= 0 //Remessa para industrializacao
	nA23T04	:= 0 //Retorno Industrializacao
	nA23T05	:= 0 //Retorno Ind nao aplicada ao processo
	nA23T06	:= 0 //Devolucao de insumos
	nA23T07	:= 0 //Entrada de bonificacao
	nA23T08	:= 0 //Outras Entradas
	nA23T09	:= 0 //Outras Saidas

	If Select(cAlB23Rm) > 0
		(cAlB23Rm)->(dbCloseArea())
	Endif
	cAlB23Rm:=GetNextAlias()
	
	//FORMAT(CONVERT(DATETIME, SFT.FT_ENTRADA), 'MMM-yyyy') AS MESANO,
	//Ticket 10417										- Abel Babini - 05/03/2021 - Retirar filtro B1_TIPO NOT IN ('MO') para Relatório de Industrialização de PA
	// AND SB1.B1_TIPO NOT IN ('MO')
	// AND SB1.B1_TIPO NOT IN ('MO')
	BeginSQL  Alias cAlB23Rm

		column DTENTRADA as Date
		column DTCANC as Date
		column DEV_ENTRADA as Date
		column DEV_EMISSAO as Date

		SELECT
			SFT.FT_FILIAL		AS FILIAL,
			SFT.FT_ENTRADA		AS DTENTRADA,
			SFT.FT_SERIE		AS SERIE,
			SFT.FT_NFISCAL		AS NFISCAL,
			SFT.FT_ITEM			AS ITEM,
			SFT.FT_CLIEFOR		AS CLIEFOR,
			SFT.FT_LOJA			AS LOJA,
			CASE WHEN ( (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) ) THEN SA2.A2_NOME ELSE SA1.A1_NOME END AS NOME,
			CASE WHEN ( (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) ) THEN SA2.A2_CGC ELSE SA1.A1_CGC END AS CGC,
			SFT.FT_PRODUTO		AS CODPROD,
			SB1.B1_DESC			AS PRODUTO,
			SB1.B1_TIPO			AS TIPOPROD,
			SFT.FT_POSIPI		AS POSIPI,
			SFT.FT_QUANT		AS QUANT,
			SFT.FT_PRCUNIT		AS PRCUNIT,
			SFT.FT_TOTAL		AS TOTAL,
			SFT.FT_VALCONT		AS VALCONT,
			SFT.FT_BASEICM		AS ICMSBASE,
			SFT.FT_ALIQICM		AS ICMSALIQ,
			SFT.FT_VALICM		AS ICMSVAL,
			SFT.FT_ICMSRET		AS ICMSRET,
			SFT.FT_OUTRICM		AS ICMSOUTR,
			SFT.FT_DESCONT		AS DESCONT,
			SFT.FT_SEGURO		AS SEGURO,
			SFT.FT_DESPESA		AS DESPESA,
			SFT.FT_FRETE		AS FRETE,
			SFT.FT_DTCANC		AS DTCANC,
			SFT.FT_OBSERV		AS OBSERV,
			SFT.FT_CONTA		AS CONTACONT,
			SFT.FT_TES			AS TES,
			SFT.FT_CFOP			AS CFOP,
			SFT.FT_TIPOMOV		AS TIPOMOV,
			SFT.FT_TIPO			AS TIPO,
			SFT.FT_NFORI		AS NFORI,
			SFT.FT_SERORI		AS SERORI,
			SFT.FT_ITEMORI		AS ITEMORI,
			SFT.FT_ESPECIE		AS ESPECIE,
			CASE WHEN SFT.FT_TIPOMOV = 'S' THEN SD2.D2_LOCAL ELSE SD1.D1_LOCAL END AS LOCPAD,
			CASE WHEN SFT.FT_TIPOMOV = 'S' THEN '' ELSE SD1.D1_OP END AS OP,
			SC2.C2_PRODUTO		AS CODPROD_OP,
			SB1B.B1_DESC		AS PRODUTO_OP,
			CASE WHEN SFT.FT_TIPOMOV = 'S' THEN SD2.D2_PEDIDO ELSE SD1.D1_PEDIDO END AS PEDIDO,
			SD1.D1_QUANT		AS D1QUANT,
			SD1.D1_TOTAL		AS D1TOTAL
		FROM %TABLE:SFT% SFT (NOLOCK)
		LEFT JOIN %TABLE:SB1% SB1 (NOLOCK) ON
			SB1.%notDel%
		AND SB1.B1_FILIAL = %xFilial:SB1%
		AND SB1.B1_COD = SFT.FT_PRODUTO
		LEFT JOIN %TABLE:SD1% SD1 (NOLOCK) ON
			SD1.%notDel%
		AND SD1.D1_FILIAL = SFT.FT_FILIAL
		AND SD1.D1_DOC = SFT.FT_NFISCAL
		AND SD1.D1_SERIE = SFT.FT_SERIE
		AND SD1.D1_FORNECE = SFT.FT_CLIEFOR
		AND SD1.D1_LOJA = SFT.FT_LOJA
		AND SD1.D1_ITEM = SFT.FT_ITEM
		AND SFT.FT_TIPOMOV = 'E'
		LEFT JOIN %TABLE:SD2% SD2 (NOLOCK) ON
			SD2.%notDel%
		AND SD2.D2_FILIAL = SFT.FT_FILIAL
		AND SD2.D2_DOC = SFT.FT_NFISCAL
		AND SD2.D2_SERIE = SFT.FT_SERIE
		AND SD2.D2_CLIENTE = SFT.FT_CLIEFOR
		AND SD2.D2_LOJA = SFT.FT_LOJA
		AND SD2.D2_ITEM = SFT.FT_ITEM
		AND SFT.FT_TIPOMOV = 'S'
		LEFT JOIN %TABLE:SA2% SA2 (NOLOCK) ON
			SA2.%notDel%
		AND SA2.A2_FILIAL = %xFilial:SA2%
		AND SA2.A2_COD = SFT.FT_CLIEFOR
		AND SA2.A2_LOJA = SFT.FT_LOJA
		AND ( (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) )
		LEFT JOIN %TABLE:SA1% SA1 (NOLOCK) ON
			SA1.%notDel%
		AND SA1.A1_FILIAL = %xFilial:SA1%
		AND SA1.A1_COD = SFT.FT_CLIEFOR
		AND SA1.A1_LOJA = SFT.FT_LOJA
		AND ( (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO IN ('D','B') ) )
		LEFT JOIN %TABLE:SC2% SC2 (NOLOCK) ON
			SC2.%notDel%
		AND SC2.C2_FILIAL = SFT.FT_FILIAL
		AND SC2.C2_NUM = SUBSTRING(SD1.D1_OP,1,6)
		AND SC2.C2_ITEM = SUBSTRING(SD1.D1_OP,7,2)
		AND SC2.C2_SEQUEN = SUBSTRING(SD1.D1_OP,9,3)
		AND (SD1.D1_OP <> '')
		LEFT JOIN %TABLE:SB1% SB1B (NOLOCK) ON
			SB1B.%notDel%
		AND SB1B.B1_FILIAL = %xFilial:SB1%
		AND SB1B.B1_COD = SC2.C2_PRODUTO
		WHERE SFT.%notDel%
		AND SFT.FT_DTCANC = ''
		AND SFT.FT_FILIAL = %xFilial:SFT%
		AND SFT.FT_ENTRADA BETWEEN %Exp:DToS(_dIndTer)% AND %Exp:DToS(_mvpr02)%
		AND SFT.FT_CFOP IN %Exp:_cCFInEm%
		AND SFT.FT_NFISCAL NOT IN %Exp:_cIENFNC%
		AND (SA1.A1_CGC IN %Exp:_cP3Forn% OR SA2.A2_CGC IN %Exp:_cP3Forn% )
	
	UNION

		SELECT
			SD1.D1_FILIAL			AS FILIAL,
			SD1.D1_DTDIGIT		AS DTENTRADA,
			SD1.D1_SERIE			AS SERIE,
			SD1.D1_DOC				AS NFISCAL,
			SD1.D1_ITEM				AS ITEM,
			SD1.D1_FORNECE		AS CLIEFOR,
			SD1.D1_LOJA				AS LOJA,
			CASE WHEN SD1.D1_TIPO NOT IN ('D','B') THEN SA2.A2_NOME ELSE SA1.A1_NOME END AS NOME,
			CASE WHEN SD1.D1_TIPO NOT IN ('D','B') THEN SA2.A2_CGC ELSE SA1.A1_CGC END AS CGC,
			SD1.D1_COD				AS CODPROD,
			SB1.B1_DESC				AS PRODUTO,
			SB1.B1_TIPO				AS TIPOPROD,
			SB1.B1_POSIPI			AS POSIPI,
			SD1.D1_QUANT			AS QUANT,
			SD1.D1_VUNIT			AS PRCUNIT,
			SD1.D1_TOTAL			AS TOTAL,
			SD1.D1_TOTAL			AS VALCONT,
			SD1.D1_BASEICM		AS ICMSBASE,
			SD1.D1_PICM				AS ICMSALIQ,
			SD1.D1_VALICM			AS ICMSVAL,
			SD1.D1_ICMSRET		AS ICMSRET,
			0									AS ICMSOUTR,
			SD1.D1_DESC				AS DESCONT,
			SD1.D1_SEGURO			AS SEGURO,
			SD1.D1_DESPESA		AS DESPESA,
			SD1.D1_VALFRE			AS FRETE,
			''								AS DTCANC,
			''								AS OBSERV,
			SD1.D1_CONTA			AS CONTACONT,
			SD1.D1_TES				AS TES,
			SD1.D1_CF					AS CFOP,
			'E'								AS TIPOMOV,
			SD1.D1_TIPO				AS TIPO,
			SD1.D1_NFORI			AS NFORI,
			SD1.D1_SERIORI		AS SERORI,
			SD1.D1_ITEMORI		AS ITEMORI,
			''								AS ESPECIE,
			SD1.D1_LOCAL			AS LOCPAD,
			SD1.D1_OP					AS OP,
			SC2.C2_PRODUTO		AS CODPROD_OP,
			SB1B.B1_DESC			AS PRODUTO_OP,
			SD1.D1_PEDIDO			AS PEDIDO,
			SD1.D1_QUANT			AS D1QUANT,
			SD1.D1_TOTAL			AS D1TOTAL
		FROM %TABLE:SD1% SD1 (NOLOCK)
		LEFT JOIN %TABLE:SB1% SB1 (NOLOCK) ON
			SB1.%notDel%
		AND SB1.B1_FILIAL = %xFilial:SB1%
		AND SB1.B1_COD = SD1.D1_COD
		LEFT JOIN %TABLE:SA2% SA2 (NOLOCK) ON
			SA2.%notDel%
		AND SA2.A2_FILIAL = %xFilial:SA2%
		AND SA2.A2_COD = SD1.D1_FORNECE
		AND SA2.A2_LOJA = SD1.D1_LOJA
		AND SD1.D1_TIPO NOT IN ('D','B')
		LEFT JOIN %TABLE:SA1% SA1 (NOLOCK) ON
			SA1.%notDel%
		AND SA1.A1_FILIAL = %xFilial:SA1%
		AND SA1.A1_COD = SD1.D1_FORNECE
		AND SA1.A1_LOJA = SD1.D1_LOJA
		AND SD1.D1_TIPO IN ('D','B')
		LEFT JOIN %TABLE:SC2% SC2 (NOLOCK) ON
			SC2.%notDel%
		AND SC2.C2_FILIAL = SD1.D1_FILIAL
		AND SC2.C2_NUM = SUBSTRING(SD1.D1_OP,1,6)
		AND SC2.C2_ITEM = SUBSTRING(SD1.D1_OP,7,2)
		AND SC2.C2_SEQUEN = SUBSTRING(SD1.D1_OP,9,3)
		AND (SD1.D1_OP <> '')
		LEFT JOIN %TABLE:SB1% SB1B (NOLOCK) ON
			SB1B.%notDel%
		AND SB1B.B1_FILIAL = %xFilial:SB1%
		AND SB1B.B1_COD = SC2.C2_PRODUTO
		WHERE SD1.%notDel%
		AND SD1.D1_FILIAL = %xFilial:SFT%
		AND SD1.D1_DTDIGIT BETWEEN %Exp:DToS(_dIndTer)% AND %Exp:DToS(_mvpr02)%
		AND SD1.D1_CF IN %Exp:_cCFInEm%
		AND SD1.D1_DOC IN %Exp:_cIENFIN%
		AND SD1.D1_SERIE IN ('ZZ','ZZZ')
		AND (SA1.A1_CGC IN %Exp:_cP3Forn% OR SA2.A2_CGC IN %Exp:_cP3Forn% )
		ORDER BY FILIAL, DTENTRADA, CLIEFOR, NFISCAL
	
	ENDSQL

	aBrw23Dt	:= {}
	aBrw23Rs	:= {}
	aBrw23Rm	:= {}
	aBrw23Dv	:= {}
	aBrw23Op	:= {}
	aBrw23S3	:= {}
	aBrw23R3	:= {}
	aBrw23IN	:= {}
	aBrw23Em	:= {}

	aBrw23Tr	:= {}
	aBrw23RZ	:= {}
	aBrw23DZ	:= {}
	aBrw23OZ	:= {}
	aBrw23SZ	:= {}
	aBrw23IZ	:= {}

	aBrw23Tt	:= {}
	aBrw23TZ	:= {}

	DbSelectArea(cAlB23Rm)
	(cAlB23Rm)->(DbGoTop())
	While !(cAlB23Rm)->(eof())
		cMesAno	:= PNRetMes((cAlB23Rm)->DTENTRADA)//Alltrim(substr(CMonth((cAlB23Rm)->DTENTRADA),1,3))+' - '+Alltrim(str(Year((cAlB23Rm)->DTENTRADA)))
		//Array de Detalhes da Operação
		AADD(aBrw23Dt,{;
			(cAlB23Rm)->FILIAL,;
			(cAlB23Rm)->DTENTRADA,;
			(cAlB23Rm)->ESPECIE,;
			(cAlB23Rm)->SERIE,;
			(cAlB23Rm)->NFISCAL,;
			(cAlB23Rm)->ITEM,;
			(cAlB23Rm)->CLIEFOR,;
			(cAlB23Rm)->LOJA,;
			(cAlB23Rm)->NOME,;
			(cAlB23Rm)->CODPROD,; //10
			(cAlB23Rm)->PRODUTO,;
			(cAlB23Rm)->CFOP,;
			(cAlB23Rm)->ITEM,;
			(cAlB23Rm)->QUANT,;
			(cAlB23Rm)->TOTAL,;
			(cAlB23Rm)->VALCONT,;
			(cAlB23Rm)->ICMSVAL,;
			(cAlB23Rm)->ICMSRET,;
			(cAlB23Rm)->DTCANC,;
			(cAlB23Rm)->OBSERV,;
			(cAlB23Rm)->CONTACONT,;
			(cAlB23Rm)->TES,;
			(cAlB23Rm)->TIPO,;
			(cAlB23Rm)->SERORI,;
			(cAlB23Rm)->NFORI,;
			(cAlB23Rm)->ITEMORI,;
			(cAlB23Rm)->LOCPAD,;
			(cAlB23Rm)->OP,;
			(cAlB23Rm)->CGC;
			})
		IF Alltrim((cAlB23Rm)->CFOP) $ _cMVIERM .AND. !Alltrim((cAlB23Rm)->CODPROD) $ Alltrim(_cMVPRDF) //(cAlB23Rm)->TIPOMOV = 'S'
			//Array de Remessa
			AADD(aBrw23Rm,{;
				(cAlB23Rm)->FILIAL,;
				(cAlB23Rm)->DTENTRADA,;
				(cAlB23Rm)->ESPECIE,;
				(cAlB23Rm)->SERIE,;
				(cAlB23Rm)->NFISCAL,;
				(cAlB23Rm)->ITEM,;
				(cAlB23Rm)->CLIEFOR,;
				(cAlB23Rm)->LOJA,;
				(cAlB23Rm)->NOME,;
				(cAlB23Rm)->CODPROD,;
				(cAlB23Rm)->PRODUTO,;
				(cAlB23Rm)->CFOP,;
				(cAlB23Rm)->QUANT,;
				(cAlB23Rm)->TOTAL,;
				(cAlB23Rm)->VALCONT,;
				(cAlB23Rm)->ICMSVAL,;
				(cAlB23Rm)->ICMSRET,;
				(cAlB23Rm)->DTCANC,;
				(cAlB23Rm)->OBSERV,;
				(cAlB23Rm)->CONTACONT,;
				(cAlB23Rm)->TES,;
				(cAlB23Rm)->TIPO,;
				(cAlB23Rm)->SERORI,;
				(cAlB23Rm)->NFORI,;
				(cAlB23Rm)->ITEMORI,;
				(cAlB23Rm)->LOCPAD,;
				(cAlB23Rm)->OP,;
				(cAlB23Rm)->CGC,;
				(cAlB23Rm)->PEDIDO,;
				(cAlB23Rm)->PRCUNIT,;
				(cAlB23Rm)->TIPOPROD;
				})
			//(cAlB23Rm)->CLIEFOR+(cAlB23Rm)->LOJA;
				//nA23T03	+= (cAlB23Rm)->VALCONT //Remessa para industrializacao
		END
		IF Alltrim((cAlB23Rm)->CFOP) $ _cMVIERI .AND. !Alltrim((cAlB23Rm)->CODPROD) $ Alltrim(_cMVPRDF)  // .AND. Alltrim((cAlB23Rm)->TIPOPROD) != 'MO' //(cAlB23Rm)->TIPOMOV = 'E' .AND. !Alltrim((cAlB23Rm)->NFORI) == '' 
			AADD(aBrw23Dv,{;
				(cAlB23Rm)->FILIAL,;
				(cAlB23Rm)->DTENTRADA,;
				(cAlB23Rm)->ESPECIE,;
				(cAlB23Rm)->SERIE,;
				(cAlB23Rm)->NFISCAL,;
				(cAlB23Rm)->ITEM,;
				(cAlB23Rm)->CLIEFOR,;
				(cAlB23Rm)->LOJA,;
				(cAlB23Rm)->NOME,;
				(cAlB23Rm)->CODPROD,;
				(cAlB23Rm)->PRODUTO,;
				(cAlB23Rm)->CFOP,;
				(cAlB23Rm)->QUANT,;
				(cAlB23Rm)->TOTAL,;
				(cAlB23Rm)->VALCONT,;
				(cAlB23Rm)->ICMSVAL,;
				(cAlB23Rm)->ICMSRET,;
				(cAlB23Rm)->DTCANC,;
				(cAlB23Rm)->OBSERV,;
				(cAlB23Rm)->CONTACONT,;
				(cAlB23Rm)->TES,;
				(cAlB23Rm)->TIPO,;
				(cAlB23Rm)->SERORI,;
				(cAlB23Rm)->NFORI,;
				(cAlB23Rm)->ITEMORI,;
				(cAlB23Rm)->LOCPAD,;
				(cAlB23Rm)->OP,;
				(cAlB23Rm)->CGC,;
				cMesAno,;//(cAlB23Rm)->MESANO;
				(cAlB23Rm)->TIPOPROD,;
				(cAlB23Rm)->PRCUNIT;
				})
			//nA23T04	+= (cAlB23Rm)->VALCONT //Retorno Industrializacao
		
			IF !(ASCAN(aBrw23Op,{|X| X[3] == (cAlB23Rm)->OP}) > 0) .and. !(Alltrim((cAlB23Rm)->OP)=='') .and. (cAlB23Rm)->DTENTRADA >= _mvpr01
				AADD(aBrw23Op,{;
					(cAlB23Rm)->FILIAL,;
					(cAlB23Rm)->DTENTRADA,;
					(cAlB23Rm)->OP,;
					(cAlB23Rm)->SERORI,;
					(cAlB23Rm)->NFORI,;
					(cAlB23Rm)->ITEMORI,;
					(cAlB23Rm)->CLIEFOR,;
					(cAlB23Rm)->LOJA,;
					(cAlB23Rm)->NOME,;
					(cAlB23Rm)->CODPROD_OP,;
					(cAlB23Rm)->PRODUTO_OP,;
					(cAlB23Rm)->SERIE,;
					(cAlB23Rm)->NFISCAL,;
					(cAlB23Rm)->ITEM,;
					(cAlB23Rm)->QUANT,;
					(cAlB23Rm)->TOTAL,;
					(cAlB23Rm)->VALCONT,;
					(cAlB23Rm)->ICMSVAL,;
					(cAlB23Rm)->ICMSRET,;
					(cAlB23Rm)->TES,;
					(cAlB23Rm)->CFOP,;
					(cAlB23Rm)->CGC,;
					(cAlB23Rm)->PRCUNIT;
					})
				//(cAlB23Rm)->CLIEFOR+(cAlB23Rm)->LOJA;
				ENDIF
		ENDIF

		IF Alltrim((cAlB23Rm)->CFOP) $ _cMVIERN .and.;
							(cAlB23Rm)->DTENTRADA >= _mvpr01 .and.; //Considera apenas movimentação do mês atual para Insumos não utilizados no processo.
							(cAlB23Rm)->DTENTRADA <= _mvpr02
			AADD(aBrw23IN,{;
				(cAlB23Rm)->FILIAL,;
				(cAlB23Rm)->DTENTRADA,;
				(cAlB23Rm)->SERIE,;
				(cAlB23Rm)->NFISCAL,;
				(cAlB23Rm)->ITEM,;
				(cAlB23Rm)->CLIEFOR,;
				(cAlB23Rm)->LOJA,;
				(cAlB23Rm)->NOME,;
				(cAlB23Rm)->CODPROD,;
				(cAlB23Rm)->PRODUTO,;
				(cAlB23Rm)->CFOP,;
				(cAlB23Rm)->TES,;
				(cAlB23Rm)->SERORI,;
				(cAlB23Rm)->NFORI,;
				(cAlB23Rm)->ITEMORI,;
				(cAlB23Rm)->LOCPAD,;
				(cAlB23Rm)->OP,;
				(cAlB23Rm)->D1QUANT,;
				(cAlB23Rm)->D1TOTAL,;
				(cAlB23Rm)->VALCONT,;
				(cAlB23Rm)->ICMSVAL,;
				(cAlB23Rm)->ICMSRET,;
				(cAlB23Rm)->CGC,;
				cMesAno,;
				(cAlB23Rm)->PRCUNIT;
				})
			//(cAlB23Rm)->CLIEFOR+(cAlB23Rm)->LOJA;
				//nA23T05	+= (cAlB23Rm)->VALCONT //Retorno Ind nao aplicada ao processo
		ENDIF

		//Array de Resumo da Operação
		lBrw23Rs := .F.
		IF !Alltrim((cAlB23Rm)->CFOP) $ _cMVIERS
			FOR _i := 1 to Len(aBrw23Rs)
				If Alltrim(aBrw23Rs[_i][1])==Alltrim((cAlB23Rm)->FILIAL) .AND. ;
						Alltrim(aBrw23Rs[_i][2])==Alltrim((cAlB23Rm)->CFOP) .AND. ;
						Alltrim(aBrw23Rs[_i][7])==Alltrim((cAlB23Rm)->CGC) .AND. ;
						!Alltrim((cAlB23Rm)->CODPROD) $ Alltrim(_cMVPRDF) 
					//Alltrim(aBrw23Rs[_i][7])==Alltrim((cAlB23Rm)->CLIEFOR)+Alltrim((cAlB23Rm)->LOJA)

					IF nOpMdl == 1 .or. (nOpMdl == 2 .AND. (cAlB23Rm)->DTENTRADA >= _mvpr01 .and. (cAlB23Rm)->DTENTRADA <= _mvpr02)
						aBrw23Rs[_i][3]	+= (cAlB23Rm)->VALCONT
						aBrw23Rs[_i][4]	+= (cAlB23Rm)->ICMSVAL
						aBrw23Rs[_i][5]	+= (cAlB23Rm)->ICMSRET
						aBrw23Rs[_i][6]	+= (cAlB23Rm)->QUANT
						lBrw23Rs := .T.
					ENDIF
				ENDIF
			NEXT _i
			
			IF !lBrw23Rs .AND. !Alltrim((cAlB23Rm)->CODPROD) $ Alltrim(_cMVPRDF) 
				IF nOpMdl == 1 .or. (nOpMdl == 2 .AND. (cAlB23Rm)->DTENTRADA >= _mvpr01 .and. (cAlB23Rm)->DTENTRADA <= _mvpr02) 
					AADD(aBrw23Rs,{;
						Alltrim((cAlB23Rm)->FILIAL),;
						Alltrim((cAlB23Rm)->CFOP),;
						(cAlB23Rm)->VALCONT,;
						(cAlB23Rm)->ICMSVAL,;
						(cAlB23Rm)->ICMSRET,;
						(cAlB23Rm)->QUANT,;
						(cAlB23Rm)->CGC,;
						(cAlB23Rm)->NOME;
						})
				ENDIF
				//(cAlB23Rm)->CLIEFOR+(cAlB23Rm)->LOJA,;
			ENDIF
		ENDIF
		//TOTAIS de Resumo da Operação
		//IF Alltrim((cAlB23Rm)->CFOP) $ _cMVIECP
		//	nA23T01	+= (cAlB23Rm)->VALCONT //Compra para industrializacao
		//ELSEIF Alltrim((cAlB23Rm)->CFOP) $ _cMVIEIN
		//	nA23T02	+= (cAlB23Rm)->VALCONT //Industrializacao
		//ELSEIF Alltrim((cAlB23Rm)->CFOP) $ _cMVIERM
		//	nA23T03	+= (cAlB23Rm)->VALCONT //Remessa para industrializacao
		//ELSEIF Alltrim((cAlB23Rm)->CFOP) $ _cMVIERI
		//	nA23T04	+= (cAlB23Rm)->VALCONT //Retorno Industrializacao
		//ELSEIF Alltrim((cAlB23Rm)->CFOP) $ _cMVIERN
		//	nA23T05	+= (cAlB23Rm)->VALCONT //Retorno Ind nao aplicada ao processo
		//ELSEIF Alltrim((cAlB23Rm)->CFOP) $ _cMVIEDI .AND. Alltrim((cAlB23Rm)->LOCPAD) $ _cMVIEAD
		//	nA23T06	+= (cAlB23Rm)->VALCONT //Devolucao de insumos
		//ELSEIF Alltrim((cAlB23Rm)->CFOP) $ _cMVIEEB .AND. Alltrim((cAlB23Rm)->LOCPAD) $ _cMVIEAE
		//	nA23T07	+= (cAlB23Rm)->VALCONT //Entrada de bonificacao
		//ELSEIF Alltrim((cAlB23Rm)->CFOP) $ _cMVIEOE
		//	nA23T08	+= (cAlB23Rm)->VALCONT //Outras Entradas
		//ELSEIF Alltrim((cAlB23Rm)->CFOP) $ _cMVIEOS
		//	nA23T09	+= (cAlB23Rm)->VALCONT //Outras Saidas
		//ENDIF

		//IF ASCAN(aBrw23Em,(cAlB23Rm)->CLIEFOR+(cAlB23Rm)->LOJA) == 0
		//	AADD(aBrw23Em,(cAlB23Rm)->CLIEFOR+(cAlB23Rm)->LOJA )
		//IF ASCAN(aBrw23Em,Alltrim((cAlB23Rm)->NOME)) == 0
		IF ASCAN(aBrw23Em,{ |X| X[2] = Alltrim((cAlB23Rm)->CGC)}) == 0
			AADD(aBrw23Em,{Alltrim((cAlB23Rm)->NOME), Alltrim((cAlB23Rm)->CGC)})
			nQIEForn += 1
		ENDIF
		
		/*FOR i:=1 to Len(aBrw23Em)
				IF !aBrw23Em[i,1] == Alltrim((cAlB23Rm)->CLIEFOR)+Alltrim((cAlB23Rm)->LOJA)
		AADD(aBrw23Em,(cAlB23Rm)->CLIEFOR+(cAlB23Rm)->LOJA)
		nQIEForn += 1
				ENDIF
			NEXT i*/
	
		(cAlB23Rm)->(DbSkip())
	EndDo
	(cAlB23Rm)->(dbCloseArea())
	
	//TOTAIS de Resumo da Operação
	aBrw23R2 := Array(09,nQIEForn+3)
	For _i := 1 to Len(aBrw23R2)
		aBrw23R2[_i,1]:=xFilial('SFT')
		aBrw23R2[_i,2]:=''
		For _j := 3 to Len(aBrw23R2[_i])
			aBrw23R2[_i,_j]:=0
		Next _j
	Next _i
	
	aBrw23R2[01,02]	:= 'Compra para industrializacao'
	aBrw23R2[02,02]	:= 'Industrializacao'
	aBrw23R2[03,02]	:= 'Remessa para industrializacao'
	aBrw23R2[04,02]	:= 'Retorno Industrializacao'
	aBrw23R2[05,02]	:= 'Retorno Ind nao aplicada ao processo'
	aBrw23R2[06,02]	:= 'Devolucao de insumos'
	aBrw23R2[07,02]	:= 'Entrada de bonificacao'
	aBrw23R2[08,02]	:= 'Outras Entradas'
	aBrw23R2[09,02]	:= 'Outras Saidas'
	//aBrw23R2[10,02]	:= 'Serviço de Industrialização'
	//aBrw23R2[10,02]	:= 'Totais'
	For _i := 1 to Len(aBrw23Dt)
		//nPFor := ASCAN(aBrw23Em,aBrw23Dt[i,7]+aBrw23Dt[i,8]) 
		//nPFor := ASCAN(aBrw23Em,Alltrim(aBrw23Dt[i,9]))
		IF !Alltrim(aBrw23Dt[_i,10]) $ Alltrim(_cMVPRDF) 
			nPFor := ASCAN(aBrw23Em,{ |X| X[2] = Alltrim(aBrw23Dt[_i,29])})

			IF Alltrim(aBrw23Dt[_i,12]) $ _cMVIECP
				aBrw23R2[01,nPFor+2] += aBrw23Dt[_i,16] //Compra para industrializacao
			END
			IF Alltrim(aBrw23Dt[_i,12]) $ _cMVIEIN
				aBrw23R2[02,nPFor+2] += aBrw23Dt[_i,16] //Industrializacao
			END
			IF Alltrim(aBrw23Dt[_i,12]) $ _cMVIERM
				aBrw23R2[03,nPFor+2] += aBrw23Dt[_i,16] //Remessa para industrializacao
			END
			IF Alltrim(aBrw23Dt[_i,12]) $ _cMVIERI
				aBrw23R2[04,nPFor+2] += aBrw23Dt[_i,16] //Retorno Industrializacao
			END
			IF Alltrim(aBrw23Dt[_i,12]) $ _cMVIEDI .AND. Alltrim(aBrw23Dt[_i,27]) $ _cMVIEAD
				aBrw23R2[06,nPFor+2] += aBrw23Dt[_i,16] //Devolucao de insumos
			END
			IF Alltrim(aBrw23Dt[_i,12]) $ _cMVIEEB .AND. Alltrim(aBrw23Dt[_i,27]) $ _cMVIEAE
				aBrw23R2[07,nPFor+2] += aBrw23Dt[_i,16] //Entrada de bonificacao
			//ELSEIF Alltrim(aBrw23Dt[_i,12]) $ _cMVIEOE
			//	aBrw23R2[08,nPFor+2] += aBrw23Dt[_i,16] //Outras Entradas
			//ELSEIF Alltrim(aBrw23Dt[_i,12]) $ _cMVIEOS
			//	aBrw23R2[09,nPFor+2] += aBrw23Dt[_i,16] //Outras Saidas
			ENDIF

			IF Alltrim(aBrw23Dt[_i,12]) $ _cMVIERN
				aBrw23R2[05,nPFor+2] += aBrw23Dt[_i,16] //Retorno Ind nao aplicada ao processo
			ENDIF
		ENDIF
	Next _i
	
	//Carrega Compras para industrialização
	aBrw23R2[1,nQIEForn+3] := xAB23CI()
	//
	
	For _i := 2 to Len(aBrw23R2)
		nTLin23 := 0
		For _j := 3 to nQIEForn+2
			nTLin23 += aBrw23R2[_i,_j]
		Next _j
		aBrw23R2[_i,nQIEForn+3]:= nTLin23
	Next _i

	ASORT(aBrw23Rs, , ,  { | x,y | y[2] > x[2] } )
	aBrw23Tr := aBrw23Rs
	aBrw23RZ := aBrw23Rm
	aBrw23DZ := aBrw23Dv
	aBrw23OZ := aBrw23Op
	aBrw23IZ := aBrw23IN
	//Saldo de Poder de 3s
	If Select(cAlB23S3) > 0
		(cAlB23S3)->(dbCloseArea())
	Endif
	cAlB23S3:=GetNextAlias()
	
	BeginSQL  Alias cAlB23S3
		column B6_DTDIGIT as Date
		column B6_EMISSAO as Date
		SELECT
			SB6.B6_FILIAL,
			SB6.B6_IDENT,
			SB6.B6_DTDIGIT,
			SB6.B6_EMISSAO,
			SB6.B6_SERIE,
			SB6.B6_DOC,
			SB6.B6_CLIFOR,
			SB6.B6_LOJA,
			CASE WHEN SB6.B6_TPCF = 'F' THEN SA2.A2_NOME ELSE SA1.A1_NOME END AS A2_NOME,
			CASE WHEN SB6.B6_TPCF = 'F' THEN SA2.A2_CGC ELSE SA1.A1_NOME END AS CGC,
			SB6.B6_PRODUTO,
			SB1.B1_DESC,
			SB1.B1_TIPO AS TIPOPROD,
			SB6.B6_TES,
			CASE WHEN SB6.B6_TES > '500' 
				THEN ( SELECT TOP 1 D2_CF FROM %TABLE:SD2% SD2 (NOLOCK)
					WHERE SD2.%notDel%
						AND SD2.D2_FILIAL = SB6.B6_FILIAL
						AND SD2.D2_DOC = SB6.B6_DOC
						AND SD2.D2_SERIE = SB6.B6_SERIE
						AND SD2.D2_CLIENTE = SB6.B6_CLIFOR
						AND SD2.D2_LOJA = SB6.B6_LOJA
						AND SD2.D2_COD = SB6.B6_PRODUTO
						AND SD2.D2_IDENTB6 = SB6.B6_IDENT)
				ELSE (SELECT TOP 1 D1_CF FROM %TABLE:SD1% SD1 (NOLOCK)
					WHERE SD1.%notDel%
						AND SD1.D1_FILIAL = SB6.B6_FILIAL
						AND SD1.D1_DOC = SB6.B6_DOC
						AND SD1.D1_SERIE = SB6.B6_SERIE
						AND SD1.D1_FORNECE = SB6.B6_CLIFOR
						AND SD1.D1_LOJA = SB6.B6_LOJA
						AND SD1.D1_COD = SB6.B6_PRODUTO
						AND SD1.D1_IDENTB6 = SB6.B6_IDENT)
				END AS F4_CF, 
			SB6.B6_TIPO,
			SB6.B6_PODER3,
			SB6.B6_LOCAL,
			CASE WHEN SB6.B6_PODER3 = 'R' THEN SB6.B6_QUANT ELSE -SB6.B6_QUANT END AS B6_QUANT,
			SB6.B6_UM,
			(SELECT TOP 1 SB6B.B6_PRUNIT 
				FROM %TABLE:SB6% SB6B (NOLOCK)
				WHERE SB6B.B6_FILIAL = SB6.B6_FILIAL 
				AND SB6B.B6_IDENT = SB6.B6_IDENT 
				AND SB6B.%notDel%
				ORDER BY R_E_C_N_O_) AS B6_PRUNIT,
			CASE WHEN SB6.B6_PODER3 = 'R' THEN SB6.B6_PRUNIT*SB6.B6_QUANT ELSE -SB6.B6_PRUNIT*SB6.B6_QUANT END AS B6_TOTAL,
			CASE WHEN SB6.B6_TES > '500' 
				THEN ( SELECT TOP 1 D2_CCUSTO FROM %TABLE:SD2% SD2 (NOLOCK)
					WHERE SD2.%notDel%
						AND SD2.D2_FILIAL = SB6.B6_FILIAL
						AND SD2.D2_DOC = SB6.B6_DOC
						AND SD2.D2_SERIE = SB6.B6_SERIE
						AND SD2.D2_CLIENTE = SB6.B6_CLIFOR
						AND SD2.D2_LOJA = SB6.B6_LOJA
						AND SD2.D2_COD = SB6.B6_PRODUTO
						AND SD2.D2_IDENTB6 = SB6.B6_IDENT)
				ELSE (SELECT TOP 1 D1_CC FROM %TABLE:SD1% SD1 (NOLOCK)
					WHERE SD1.%notDel%
						AND SD1.D1_FILIAL = SB6.B6_FILIAL
						AND SD1.D1_DOC = SB6.B6_DOC
						AND SD1.D1_SERIE = SB6.B6_SERIE
						AND SD1.D1_FORNECE = SB6.B6_CLIFOR
						AND SD1.D1_LOJA = SB6.B6_LOJA
						AND SD1.D1_COD = SB6.B6_PRODUTO
						AND SD1.D1_IDENTB6 = SB6.B6_IDENT)
				END AS CCUSTO,
			(SELECT CTT.CTT_DESC01 
				FROM %TABLE:CTT% CTT (NOLOCK)
				WHERE CTT.%notDel% AND
				CTT.CTT_CUSTO = CASE WHEN SB6.B6_PODER3 = 'R' 
					THEN ( SELECT TOP 1 D2_CCUSTO FROM %TABLE:SD2% SD2 (NOLOCK)
						WHERE SD2.%notDel%
							AND SD2.D2_FILIAL = SB6.B6_FILIAL
							AND SD2.D2_DOC = SB6.B6_DOC
							AND SD2.D2_SERIE = SB6.B6_SERIE
							AND SD2.D2_CLIENTE = SB6.B6_CLIFOR
							AND SD2.D2_LOJA = SB6.B6_LOJA
							AND SD2.D2_COD = SB6.B6_PRODUTO
							AND SD2.D2_IDENTB6 = SB6.B6_IDENT)
					ELSE (SELECT TOP 1 D1_CC FROM %TABLE:SD1% SD1 (NOLOCK)
						WHERE SD1.%notDel%
							AND SD1.D1_FILIAL = SB6.B6_FILIAL
							AND SD1.D1_DOC = SB6.B6_DOC
							AND SD1.D1_SERIE = SB6.B6_SERIE
							AND SD1.D1_FORNECE = SB6.B6_CLIFOR
							AND SD1.D1_LOJA = SB6.B6_LOJA
							AND SD1.D1_COD = SB6.B6_PRODUTO
							AND SD1.D1_IDENTB6 = SB6.B6_IDENT)
					END ) AS DESC_CCUSTO
			FROM %TABLE:SB6% SB6 (NOLOCK)
		LEFT JOIN %TABLE:SF1% SF1 (NOLOCK) ON
			SF1.%notDel%
		AND SF1.F1_FILIAL = SB6.B6_FILIAL
		AND SF1.F1_DOC = SB6.B6_DOC
		AND SF1.F1_SERIE = SB6.B6_SERIE
		AND SF1.F1_FORNECE = SB6.B6_CLIFOR
		AND SF1.F1_LOJA = SB6.B6_LOJA
		AND SB6.B6_TES <= '500' 
		LEFT JOIN %TABLE:SF2% SF2 (NOLOCK) ON
			SF2.%notDel%
		AND SF2.F2_FILIAL = SB6.B6_FILIAL
		AND SF2.F2_DOC = SB6.B6_DOC
		AND SF2.F2_SERIE = SB6.B6_SERIE
		AND SF2.F2_CLIENTE = SB6.B6_CLIFOR
		AND SF2.F2_LOJA = SB6.B6_LOJA
		AND SB6.B6_TES > '500'
		LEFT JOIN %TABLE:SA2% SA2 (NOLOCK) ON
			SA2.%notDel%
		AND SA2.A2_COD = SB6.B6_CLIFOR
		AND SA2.A2_LOJA = SB6.B6_LOJA
		AND SB6.B6_TPCF = 'F'
		LEFT JOIN %TABLE:SA1% SA1 (NOLOCK) ON
			SA1.%notDel%
		AND SA1.A1_COD = SB6.B6_CLIFOR
		AND SA1.A1_LOJA = SB6.B6_LOJA
		AND SB6.B6_TPCF = 'C'
		LEFT JOIN %TABLE:SB1% SB1 (NOLOCK) ON
			SB1.%notDel%
		AND SB1.B1_COD = SB6.B6_PRODUTO
	WHERE
			SB6.%notDel%
		AND SB6.B6_FILIAL = %xFilial:SB6%
		AND SB6.B6_DTDIGIT BETWEEN %Exp:DToS(_dIndTer)% AND %Exp:DToS(_mvpr02)%
		AND (SA1.A1_CGC IN %Exp:_cP3Forn% OR SA2.A2_CGC IN %Exp:_cP3Forn% )
		AND SB1.B1_TIPO NOT IN ('MO')
		ORDER BY B6_FILIAL,B6_IDENT,B6_DTDIGIT
	ENDSQL

	//Ticket 64836										- Abel Babini - 07/12/2021 - Ajustar query do relatório de Poder de 3s no Relatório de Industriazação de PA para considerar data de digitação e não data de emissão
	//AND SB6.B6_EMISSAO BETWEEN %Exp:DToS(_dIndTer)% AND %Exp:DToS(_mvpr02)%

	//Ticket 10417										- Abel Babini - 05/03/2021 - Retirar filtro B1_TIPO NOT IN ('MO') para Relatório de Industrialização de PA, e acrescentado filtro no relatório de Poder de Terceiros
	//Regra acrescentada => "AND SB1.B1_TIPO NOT IN ('MO')"

	//Ticket 62140										- Abel Babini - 07/10/2021 - Ajustado relatório Porder 3 e adicionado Valores de Dev Serv Industr na Abertura da Gia para Safegg
	//Retido filtro de conferência
	/*
			LEFT JOIN %TABLE:SF4% SF4 ON
			SF4.%notDel%
		AND SF4.F4_CODIGO = SB6.B6_TES

		AND SB6.B6_TIPO = 'E'
	*/
	cAuxFil	:= ''
	cAuxIdt	:= ''
	DbSelectArea(cAlB23S3)
	(cAlB23S3)->(DbGoTop())
	// nRegS3 := Contar((cAlB23S3),"!Eof()")
	(cAlB23S3)->(DbGoTop())
	While !(cAlB23S3)->(eof())
		//Monta Array Detalhamento Poder 3
		AADD(aBrw23R3,{;
					(cAlB23S3)->B6_FILIAL,;
					(cAlB23S3)->B6_IDENT,;
					(cAlB23S3)->B6_DTDIGIT,;
					(cAlB23S3)->B6_EMISSAO,;
					(cAlB23S3)->B6_SERIE,;
					(cAlB23S3)->B6_DOC,;
					(cAlB23S3)->B6_CLIFOR,;
					(cAlB23S3)->B6_LOJA,;
					(cAlB23S3)->A2_NOME,;
					(cAlB23S3)->B6_PRODUTO,;
					(cAlB23S3)->B1_DESC,;
					(cAlB23S3)->B6_TES,;
					(cAlB23S3)->F4_CF,;
					(cAlB23S3)->B6_TIPO,;
					(cAlB23S3)->B6_PODER3,;
					(cAlB23S3)->B6_LOCAL,;
					(cAlB23S3)->B6_QUANT,;
					(cAlB23S3)->B6_UM,;
					(cAlB23S3)->B6_PRUNIT,;
					(cAlB23S3)->B6_QUANT*(cAlB23S3)->B6_PRUNIT,;
					(cAlB23S3)->CCUSTO,;
					(cAlB23S3)->DESC_CCUSTO,;
					(cAlB23S3)->TIPOPROD;
					})

		
		//Monta Array Saldo Poder 3
		//cTpOpeB6:=AllTrim((cAlB23S3)->B6_PODER3)
		cTpOpeB6:=IIf(Alltrim((cAlB23S3)->B6_TIPO) == 'E', 'R', 'D')

		IF	((cAlB23S3)->B6_FILIAL = cAuxFil .AND. (cAlB23S3)->B6_IDENT = cAuxIdt)
			aBrw23S3[nPosB6,03]	:= IIF(cTpOpeB6=='R',(cAlB23S3)->B6_DTDIGIT,aBrw23S3[nPosB6,03])
			aBrw23S3[nPosB6,12]	:= IIF(cTpOpeB6=='R',(cAlB23S3)->F4_CF,aBrw23S3[nPosB6,12])
			aBrw23S3[nPosB6,16]	+= IIF(cTpOpeB6=='R',(cAlB23S3)->B6_QUANT,0)
			aBrw23S3[nPosB6,18]	:= IIF(cTpOpeB6=='R',(cAlB23S3)->B6_PRUNIT,0)
			aBrw23S3[nPosB6,19]	+= IIF(cTpOpeB6=='R',(cAlB23S3)->B6_QUANT*(cAlB23S3)->B6_PRUNIT,0)
			aBrw23S3[nPosB6,20]	:= IIF(cTpOpeB6=='D' .AND. (cAlB23S3)->B6_DTDIGIT>aBrw23S3[nPosB6,20] ,(cAlB23S3)->B6_DTDIGIT,aBrw23S3[nPosB6,20])
			aBrw23S3[nPosB6,21]	+= IIF(cTpOpeB6=='D',(cAlB23S3)->B6_QUANT,0) 
			aBrw23S3[nPosB6,22]	+= IIF(cTpOpeB6=='D',(cAlB23S3)->B6_QUANT*(cAlB23S3)->B6_PRUNIT,0)
		ELSE
			AADD(aBrw23S3,{;
				(cAlB23S3)->B6_FILIAL,;
				(cAlB23S3)->B6_IDENT,;
				IIF(cTpOpeB6=='R',(cAlB23S3)->B6_DTDIGIT,StoD('')),;
				(cAlB23S3)->B6_SERIE,;
				(cAlB23S3)->B6_DOC,;
				(cAlB23S3)->B6_CLIFOR,;
				(cAlB23S3)->B6_LOJA,;
				(cAlB23S3)->A2_NOME,;
				(cAlB23S3)->B6_PRODUTO,;
				(cAlB23S3)->B1_DESC,;
				(cAlB23S3)->B6_TES,;
				(cAlB23S3)->F4_CF,;
				(cAlB23S3)->B6_TIPO,;
				(cAlB23S3)->B6_PODER3,;
				(cAlB23S3)->B6_LOCAL,;
				IIF(cTpOpeB6=='R',(cAlB23S3)->B6_QUANT,0),;
				IIF(cTpOpeB6=='R',(cAlB23S3)->B6_UM,''),;
				IIF(cTpOpeB6=='R',(cAlB23S3)->B6_PRUNIT,0),;
				IIF(cTpOpeB6=='R',(cAlB23S3)->B6_QUANT*(cAlB23S3)->B6_PRUNIT,0),;
				IIF(cTpOpeB6=='D',(cAlB23S3)->B6_DTDIGIT,StoD('')),;
				IIF(cTpOpeB6=='D',(cAlB23S3)->B6_QUANT,0),;
				IIF(cTpOpeB6=='D',(cAlB23S3)->B6_QUANT*(cAlB23S3)->B6_PRUNIT,0),;
				0,;
				0,;
				(cAlB23S3)->CGC,;		
				(cAlB23S3)->CCUSTO,;
				(cAlB23S3)->DESC_CCUSTO;
				})
			nPosB6 := Len(aBrw23S3)
		ENDIF
		
		cAuxFil	:= (cAlB23S3)->B6_FILIAL
		cAuxIdt	:= (cAlB23S3)->B6_IDENT
		// nRegAtu := nRegAtu + 1
		(cAlB23S3)->(DbSkip())
	EndDo
	(cAlB23S3)->(dbCloseArea())
	nQtdS3	:= Len(aBrw23S3)
	//For i:=1 to nQtdS3
	i:=1
	While i <= nQtdS3
		aBrw23S3[i,23]	:= Round(aBrw23S3[i,16] - aBrw23S3[i,21],2)
		aBrw23S3[i,24]	:= Round(aBrw23S3[i,19] - aBrw23S3[i,22],2)
		IF aBrw23S3[i,23] = 0 .AND. aBrw23S3[i,24] = 0
			ADEL(aBrw23S3,i)
			ASIZE(aBrw23S3,Len(aBrw23S3)-1)
			i	-=1
			//nQtdS3 -= 1
			nQtdS3	:= Len(aBrw23S3)
		ENDIF
		i += 1
	EndDo
	//Next i
	aBrw23SZ := aBrw23S3 
	
	////////////////////////////////////////////////////////////////
	//Monta Array do Total Resumido por produto
	aBrw23Tt := {}
	For _i := 1 to Len(aBrw23Rm)
		nPRm := ASCAN(aBrw23Tt,{|X| X[15] == (Substr(aBrw23Rm[_i,28],1,14)+Alltrim(aBrw23Rm[_i,10]))})
		If nPRm > 0
			aBrw23Tt[nPRm,7]	+= aBrw23Rm[_i,13]
			aBrw23Tt[nPRm,11]	+= aBrw23Rm[_i,15]
		Else
			IF Alltrim(aBrw23Rm[_i,31]) != 'MO'
				AADD(aBrw23Tt,{;
					aBrw23Rm[_i,01],; //Filial
					aBrw23Rm[_i,07],; //Cod. Forn
					aBrw23Rm[_i,08],; //Loja Forn
					aBrw23Rm[_i,09],; //Fornecedor
					aBrw23Rm[_i,10],; //Cod. Produto
					aBrw23Rm[_i,11],; //Produto
					aBrw23Rm[_i,13],; //Qtd Rem
					0,; //Qtd Dev
					0,; //Qtd Saldo
					0,; //Qtd Saldo SB6
					aBrw23Rm[_i,15],; //Vl Total Rem
					0,; //Vl Total Dev
					0,; //Vl Total Saldo
					0,; //Vl Total Saldo SB6
					Substr(aBrw23Rm[_i,28],1,14)+Alltrim(aBrw23Rm[_i,10]); //Chave Array
					})
			ENDIF
		Endif
	Next _i
	nPDv := 0
	For _i := 1 to Len(aBrw23Dv)
		//nPDv := ASCAN(aBrw23Tt,{|X| X[15] == (aBrw23Dv[_i,07]+aBrw23Dv[_i,08]+aBrw23Dv[_i,10])})
		//Ticket 10417										- Abel Babini - 05/03/2021 - Retirar filtro B1_TIPO NOT IN ('MO') para Relatório de Industrialização de PA, e acrescentado filtro no relatório de Poder de Terceiros, colocar 4 casas decimais no relatório de poder de 3os
		IF !Alltrim(aBrw23Dv[_i,12]) $ _cMVIERS .AND. Alltrim(aBrw23Dv[_i,30]) != 'MO' .AND. !Alltrim(aBrw23Dv[_i,12]) $ '1124/1125/2124/2125'
			nPDv := ASCAN(aBrw23Tt,{|X| X[15] == (Substr(aBrw23Dv[_i,28],1,14)+Alltrim(aBrw23Dv[_i,10]))})
			If nPDv > 0
				aBrw23Tt[nPDv,08]	+= aBrw23Dv[_i,13]
				aBrw23Tt[nPDv,12]	+= aBrw23Dv[_i,15]
			Else
				IF Alltrim(aBrw23Dv[_i,30]) != 'MO'
					AADD(aBrw23Tt,{;
						aBrw23Dv[_i,01],; //Filial
						aBrw23Dv[_i,07],; //Cod. Forn
						aBrw23Dv[_i,08],; //Loja Forn
						aBrw23Dv[_i,09],; //Fornecedor
						aBrw23Dv[_i,10],; //Cod. Produto
						aBrw23Dv[_i,11],; //Produto
						0,; //Qtd Rem
						aBrw23Dv[_i,13],; //Qtd Dev
						0,; //Qtd Saldo
						0,; //Qtd Saldo SB6
						0,; //Vl Total Rem
						aBrw23Dv[_i,15],; //Vl Total Dev
						0,; //Vl Total Saldo
						0,; //Vl Total Saldo SB6
						(Substr(aBrw23Dv[_i,28],1,14)+Alltrim(aBrw23Dv[_i,10]));
						})
						//aBrw23Dv[_i,07]+aBrw23Dv[_i,08]+aBrw23Dv[_i,10]; //Chave Array			
				ENDIF
			Endif
		ENDIF
	Next _i
	nPS3 := 0
	For _i := 1 to Len(aBrw23S3)
		//nPS3 := ASCAN(aBrw23Tt,{|X| X[15] == (aBrw23S3[_i,06]+aBrw23S3[_i,07]+aBrw23S3[_i,09])})
		nPS3 := ASCAN(aBrw23Tt,{|X| X[15] == (Substr(aBrw23S3[_i,25],1,14)+Alltrim(aBrw23S3[_i,09]))})
		If nPS3 > 0
			aBrw23Tt[nPS3,10]	+= aBrw23S3[_i,23]
			aBrw23Tt[nPS3,14]	+= aBrw23S3[_i,24]
		Else
			AADD(aBrw23Tt,{;
				aBrw23S3[_i,01],; //Filial
				aBrw23S3[_i,06],; //Cod. Forn
				aBrw23S3[_i,07],; //Loja Forn
				aBrw23S3[_i,08],; //Fornecedor
				aBrw23S3[_i,09],; //Cod. Produto
				aBrw23S3[_i,10],; //Produto
				0,; //Qtd Rem
				0,; //Qtd Dev
				0,; //Qtd Saldo
				aBrw23S3[_i,23],; //Qtd Saldo SB6
				0,; //Vl Total Rem
				0,; //Vl Total Dev
				0,; //Vl Total Saldo
				aBrw23S3[_i,24],; //Vl Total Saldo SB6	
				Substr(aBrw23S3[_i,25],1,14)+Alltrim(aBrw23S3[_i,09]);
				})
				//aBrw23S3[_i,06]+aBrw23S3[_i,07]+aBrw23S3[_i,09]; //Chave Array
		Endif
	Next _i
	
	For _i := 1 to Len(aBrw23Tt)
		aBrw23Tt[_i,09]	:= aBrw23Tt[_i,07] - aBrw23Tt[_i,08]
		aBrw23Tt[_i,13]	:= aBrw23Tt[_i,11] - aBrw23Tt[_i,12]
	Next _i
	
	aBrw23TZ := aBrw23Tt

	SysRefresh()
Return

/*/{Protheus.doc} Static Function xAB23CI
	Gera Relatório Ref. Industrialização de PA (Coopeval, Laranjal, etc)
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function xAB23CI()
	Local nRet := 0
	Local cAlB23CI
	If Select(cAlB23CI) > 0
		(cAlB23CI)->(dbCloseArea())
	Endif
	cAlB23CI:=GetNextAlias()

	BeginSQL  Alias cAlB23CI

		SELECT
			SUM(SFT.FT_VALCONT)		AS VALCONT
		FROM %TABLE:SFT% SFT (NOLOCK) 
		WHERE SFT.%notDel%
			AND SFT.FT_DTCANC = ''
			AND SFT.FT_FILIAL = %xFilial:SFT%
			AND SFT.FT_ENTRADA BETWEEN %Exp:DToS(_dIndTer)% AND %Exp:DToS(_mvpr02)%
			AND SFT.FT_VALICM > 0
			AND SFT.FT_CFOP IN %Exp:_cCFIECP%
	ENDSQL
	nRet	:= (cAlB23CI)->VALCONT
	(cAlB23CI)->(dbCloseArea())
Return nRet

/*/{Protheus.doc} Static Function xRelBr23
	Gera Relatório Ref. Industrialização de PA (Coopeval, Laranjal, etc)
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function xRelBr23(nRadio)
	Local aSays			:= {}
	Local aButtons		:= {}
	Local nOpca			:= 0
	//+-----------------------------------------------+
	//|Monta Form Batch - Interface com o Usuario     |
	//+-----------------------------------------------+
	AADD(aSays,"Este programa tem a finalidade de Gerar um arquivo Excel " )
	AADD(aSays,"Relatorio de Industrialização de Embutidos" )

	AADD(aButtons, { 1,.T.,{|o| nOpca:=1, o:oWnd:End(), Processa({||xRelBr23b(nRadio)},"Gerando arquivo","Aguarde...")    }})
	AADD(aButtons, { 2,.T.,{|o| nOpca:=2, o:oWnd:End() }})
	FormBatch( cCadastr, aSays, aButtons )

	MsgInfo("Arquivo Excel gerado!")

Return

/*/{Protheus.doc} Static Function xRelBr23b
	Gera Relatório Ref. Industrialização de PA (Coopeval, Laranjal, etc)
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function xRelBr23b(nRadio)
	Private oExcel
	Private oMsExcel
	Private nEmpIE := 0
	If nRadio == 1
		For nEmpIE := 1 to Len(aBrw23Em)
			oExcel     := FWMSEXCELEX():New()
			oMsExcel   := NIL
			cArquivo := cPathRel +  'RINDTER_' + Substr(Alltrim(aBrw23Em[nEmpIE][1]),1,20) + '_' + DTOS(DATE()) + STRTRAN(TIME(),':','') + '.XML'

			BEGIN SEQUENCE

				//IF .NOT.( ApOleClient("MsExcel") )   // se nao existir o excel sai fora..
				//	Alert("Nao Existe Excel Instalado")
				//	BREAK
				//EndIF

				Cab23P1()
				GEx23P1()

				Cab23P2()
				GEx23P2()

				Cab23P8()
				GEx23P8()

				Cab23P3()
				GEx23P3()

				Cab23P4()
				GEx23P4()

				Cab23P5()
				GEx23P5()

				Cab23P6()
				GEx23P6()

				Cab23P7()
				GEx23P7()

				SalvaXml()
				CriaExcel()

			END SEQUENCE
		Next nEmpIE
	Else
		oExcel     := FWMSEXCELEX():New()
		oMsExcel   := NIL
		cArquivo := cPathRel +  'RINDTER_' + DTOS(DATE()) + STRTRAN(TIME(),':','') + '.XML'

		BEGIN SEQUENCE

			//IF .NOT.( ApOleClient("MsExcel") )   // se nao existir o excel sai fora..
			//	Alert("Nao Existe Excel Instalado")
			//	BREAK
			//EndIF

			Cab23P1()
			GEx23P1()

			Cab23P2()
			GEx23P2()

			Cab23P8()
			GEx23P8()

			Cab23P3()
			GEx23P3()

			Cab23P4()
			GEx23P4()

			Cab23P5()
			GEx23P5()

			Cab23P6()
			GEx23P6()

			Cab23P7()
			GEx23P7()

			SalvaXml()
			CriaExcel()

		END SEQUENCE
	Endif
Return

/*/{Protheus.doc} Static Function Cab23P1
	Gera Relatório Ref. Industrialização de PA (Coopeval, Laranjal, etc)
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function Cab23P1()
	If nEmpIE > 0
		cFld23x1	:= cFld23t1 + aBrw23Em[nEmpIE][1]
	ELse
		cFld23x1	:= cFld23t1
	Endif
	oExcel:AddworkSheet(cFld231)
	oExcel:AddTable(cFld231,cFld23x1)
	oExcel:AddColumn(cFld231,cFld23x1,"Filial"  	,1,1) // 01 A
	oExcel:AddColumn(cFld231,cFld23x1,"Descrição" 	,1,1) // 02 B
	oExcel:AddColumn(cFld231,cFld23x1,"Valor"		,2,3) // 03 C
RETURN(NIL)

/*/{Protheus.doc} Static Function Cab23P2
	Gera Relatório Ref. Industrialização de PA (Coopeval, Laranjal, etc)
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function Cab23P2()

	If nEmpIE > 0
		cFld23x2	:= cFld23t2 + aBrw23Em[nEmpIE][1]
	ELse
		cFld23x2	:= cFld23t2
	Endif
	oExcel:AddworkSheet(cFld232)
	oExcel:AddTable(cFld232,cFld23x2)
	oExcel:AddColumn(cFld232,cFld23x2,"Filial"  		,1,1) // 01 A
	oExcel:AddColumn(cFld232,cFld23x2,"CFOP" 			,1,1) // 02 B
	oExcel:AddColumn(cFld232,cFld23x2,"Vl. Contábil"	,2,3,.T.) // 03 C
	oExcel:AddColumn(cFld232,cFld23x2,"Vl. ICMS"		,2,3,.T.) // 03 C
	oExcel:AddColumn(cFld232,cFld23x2,"Vl. ICMS Ret."	,2,3,.T.) // 03 C
	oExcel:AddColumn(cFld232,cFld23x2,"Quant."			,2,2,.T.) // 03 C

RETURN(NIL)

/*/{Protheus.doc} Static Function Cab23P3
	Gera Relatório Ref. Industrialização de PA (Coopeval, Laranjal, etc)
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function Cab23P3()
	If nEmpIE > 0
		cFld23x3	:= cFld23t3 + aBrw23Em[nEmpIE][1]
	Else
		cFld23x3	:= cFld23t3
	Endif

	oExcel:AddworkSheet(cFld233)
	oExcel:AddTable(cFld233,cFld23x3)
	oExcel:AddColumn(cFld233,cFld23x3,"Filial"  			,1,1) // 01 A
	oExcel:AddColumn(cFld233,cFld23x3,"Dt.Emissão"  		,1,1) // 01 A
	oExcel:AddColumn(cFld233,cFld23x3,"Espécie"  			,1,1) // 01 A
	oExcel:AddColumn(cFld233,cFld23x3,"Série"  				,1,1) // 01 A
	oExcel:AddColumn(cFld233,cFld23x3,"NFiscal"  			,1,1) // 01 A
	oExcel:AddColumn(cFld233,cFld23x3,"Item"  				,1,1) // 01 A
	oExcel:AddColumn(cFld233,cFld23x3,"Cod.Forn."  			,1,1) // 01 A
	oExcel:AddColumn(cFld233,cFld23x3,"Loja Forn."  		,1,1) // 01 A
	oExcel:AddColumn(cFld233,cFld23x3,"Fornecedor"  		,1,1) // 01 A
	oExcel:AddColumn(cFld233,cFld23x3,"Cod. Produto"  		,1,1) // 01 A
	oExcel:AddColumn(cFld233,cFld23x3,"Produto"  			,1,1) // 01 A
	oExcel:AddColumn(cFld233,cFld23x3,"CFOP" 				,1,1) // 02 B
	oExcel:AddColumn(cFld233,cFld23x3,"Quant."				,2,2,.T.) // 03 C
	oExcel:AddColumn(cFld233,cFld23x3,"Vl. Unit."			,2,3) // 03 C
	oExcel:AddColumn(cFld233,cFld23x3,"Vl. Total"			,2,3,.T.) // 03 C
	oExcel:AddColumn(cFld233,cFld23x3,"Vl. Contábil"		,2,3,.T.) // 03 C
	oExcel:AddColumn(cFld233,cFld23x3,"Vl. ICMS"			,2,3,.T.) // 03 C
	oExcel:AddColumn(cFld233,cFld23x3,"Vl. ICMS Ret."		,2,3,.T.) // 03 C
	oExcel:AddColumn(cFld233,cFld23x3,"Dt.Canc." 			,1,1) // 02 B
	oExcel:AddColumn(cFld233,cFld23x3,"Observação" 			,1,1) // 02 B
	oExcel:AddColumn(cFld233,cFld23x3,"Conta Contábil" 		,1,1) // 02 B
	oExcel:AddColumn(cFld233,cFld23x3,"TES" 				,1,1) // 02 B
	oExcel:AddColumn(cFld233,cFld23x3,"Tipo NF" 			,1,1) // 02 B
	oExcel:AddColumn(cFld233,cFld23x3,"Série NF Orig." 		,1,1) // 02 B
	oExcel:AddColumn(cFld233,cFld23x3,"NFiscal Orig." 		,1,1) // 02 B
	oExcel:AddColumn(cFld233,cFld23x3,"Item NF Orig." 		,1,1) // 02 B
	oExcel:AddColumn(cFld233,cFld23x3,"Armazém" 			,1,1) // 02 B
	oExcel:AddColumn(cFld233,cFld23x3,"Ordem Produção" 		,1,1) // 02 B
	oExcel:AddColumn(cFld233,cFld23x3,"Pedido" 		,1,1) // 02 B
	
RETURN(NIL)

/*/{Protheus.doc} Static Function Cab23P4
	Gera Relatório Ref. Industrialização de PA (Coopeval, Laranjal, etc)
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function Cab23P4()
	If nEmpIE > 0
		cFld23x4	:= cFld23t4 + aBrw23Em[nEmpIE][1]
	Else
		cFld23x4	:= cFld23t4
	Endif
	oExcel:AddworkSheet(cFld234)
	oExcel:AddTable(cFld234,cFld23x4)
	oExcel:AddColumn(cFld234,cFld23x4,"Filial"  			,1,1) // 01 A
	oExcel:AddColumn(cFld234,cFld23x4,"Dt.Entrada"  		,1,1) // 01 A
	oExcel:AddColumn(cFld234,cFld23x4,"Espécie"  			,1,1) // 01 A
	oExcel:AddColumn(cFld234,cFld23x4,"Série"  				,1,1) // 01 A
	oExcel:AddColumn(cFld234,cFld23x4,"NFiscal"  			,1,1) // 01 A
	oExcel:AddColumn(cFld234,cFld23x4,"Item"  				,1,1) // 01 A
	oExcel:AddColumn(cFld234,cFld23x4,"Cod.Forn."  			,1,1) // 01 A
	oExcel:AddColumn(cFld234,cFld23x4,"Loja Forn."  		,1,1) // 01 A
	oExcel:AddColumn(cFld234,cFld23x4,"Fornecedor"  		,1,1) // 01 A
	oExcel:AddColumn(cFld234,cFld23x4,"Cod. Produto"  		,1,1) // 01 A
	oExcel:AddColumn(cFld234,cFld23x4,"Produto"  			,1,1) // 01 A
	oExcel:AddColumn(cFld234,cFld23x4,"CFOP" 				,1,1) // 02 B
	oExcel:AddColumn(cFld234,cFld23x4,"Quant."				,2,2,.T.) // 03 C
	oExcel:AddColumn(cFld234,cFld23x4,"Vl. Unit."			,2,3) // 03 C
	oExcel:AddColumn(cFld234,cFld23x4,"Vl. Total"			,2,3,.T.) // 03 C
	oExcel:AddColumn(cFld234,cFld23x4,"Vl. Contábil"		,2,3,.T.) // 03 C
	oExcel:AddColumn(cFld234,cFld23x4,"Vl. ICMS"			,2,3,.T.) // 03 C
	oExcel:AddColumn(cFld234,cFld23x4,"Vl. ICMS Ret."		,2,3,.T.) // 03 C
	oExcel:AddColumn(cFld234,cFld23x4,"Dt.Canc." 			,1,1) // 02 B
	oExcel:AddColumn(cFld234,cFld23x4,"Observação" 			,1,1) // 02 B
	oExcel:AddColumn(cFld234,cFld23x4,"Conta Contábil" 		,1,1) // 02 B
	oExcel:AddColumn(cFld234,cFld23x4,"TES" 				,1,1) // 02 B
	oExcel:AddColumn(cFld234,cFld23x4,"Tipo NF" 			,1,1) // 02 B
	oExcel:AddColumn(cFld234,cFld23x4,"Série NF Orig." 		,1,1) // 02 B
	oExcel:AddColumn(cFld234,cFld23x4,"NFiscal Orig." 		,1,1) // 02 B
	oExcel:AddColumn(cFld234,cFld23x4,"Item NF Orig." 		,1,1) // 02 B
	oExcel:AddColumn(cFld234,cFld23x4,"Armazém" 			,1,1) // 02 B
	oExcel:AddColumn(cFld234,cFld23x4,"Ordem Produção" 		,1,1) // 02 B
	oExcel:AddColumn(cFld234,cFld23x4,"Mês-Ano" 			,1,1) // 02 B
RETURN(NIL)

/*/{Protheus.doc} Static Function Cab23P5
	Gera Relatório Ref. Industrialização de PA (Coopeval, Laranjal, etc)
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function Cab23P5()

	If nEmpIE > 0
		cFld23x5	:= cFld23t5 + aBrw23Em[nEmpIE][1]
	Else
		cFld23x5	:= cFld23t5
	Endif
	oExcel:AddworkSheet(cFld235)
	oExcel:AddTable(cFld235,cFld23x5)
	oExcel:AddColumn(cFld235,cFld23x5,"Filial"  			,1,1) // 01 A
	oExcel:AddColumn(cFld235,cFld23x5,"Dt.Entrada"  		,1,1) // 01 A
	oExcel:AddColumn(cFld235,cFld23x5,"Ordem Produção" 		,1,1) // 02 B
	oExcel:AddColumn(cFld235,cFld23x5,"Série Rem"  			,1,1) // 01 A
	oExcel:AddColumn(cFld235,cFld23x5,"NFiscal Rem"  		,1,1) // 01 A
	oExcel:AddColumn(cFld235,cFld23x5,"Item Rem"  			,1,1) // 01 A
	oExcel:AddColumn(cFld235,cFld23x5,"Cod.Forn."  			,1,1) // 01 A
	oExcel:AddColumn(cFld235,cFld23x5,"Loja Forn."  		,1,1) // 01 A
	oExcel:AddColumn(cFld235,cFld23x5,"Fornecedor"  		,1,1) // 01 A
	oExcel:AddColumn(cFld235,cFld23x5,"Cod. Produto"  		,1,1) // 01 A
	oExcel:AddColumn(cFld235,cFld23x5,"Produto"  			,1,1) // 01 A
	oExcel:AddColumn(cFld235,cFld23x5,"Série NF Ret." 		,1,1) // 02 B
	oExcel:AddColumn(cFld235,cFld23x5,"NFiscal Ret." 		,1,1) // 02 B
	oExcel:AddColumn(cFld235,cFld23x5,"Item NF Ret." 		,1,1) // 02 B
	oExcel:AddColumn(cFld235,cFld23x5,"TES" 				,1,1) // 02 B
	oExcel:AddColumn(cFld235,cFld23x5,"CFOP" 				,1,1) // 02 B
	oExcel:AddColumn(cFld235,cFld23x5,"Quant."				,2,2,.T.) // 03 C
	oExcel:AddColumn(cFld235,cFld23x5,"Vl. Unit."			,2,3) // 03 C
	oExcel:AddColumn(cFld235,cFld23x5,"Vl. Total"			,2,3,.T.) // 03 C
	oExcel:AddColumn(cFld235,cFld23x5,"Vl. Contábil"		,2,3,.T.) // 03 C
	oExcel:AddColumn(cFld235,cFld23x5,"Vl. ICMS"			,2,3,.T.) // 03 C
	oExcel:AddColumn(cFld235,cFld23x5,"Vl. ICMS Ret."		,2,3,.T.) // 03 C
RETURN(NIL)

/*/{Protheus.doc} Static Function Cab23P6
	Gera Relatório Ref. Industrialização de PA (Coopeval, Laranjal, etc)
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function Cab23P6()

	If nEmpIE > 0
		cFld23x6	:= cFld23t6 + aBrw23Em[nEmpIE][1]
	Else
		cFld23x6	:= cFld23t6
	Endif

	oExcel:AddworkSheet(cFld236)
	oExcel:AddTable(cFld236,cFld23x6)
	oExcel:AddColumn(cFld236,cFld23x6,"Filial"  			,1,1) // 01 A
	oExcel:AddColumn(cFld236,cFld23x6,"Ident.B6"  			,1,1) // 01 A
	oExcel:AddColumn(cFld236,cFld23x6,"Dt.Digitação"  		,1,1) // 01 A
	oExcel:AddColumn(cFld236,cFld23x6,"Série" 	 			,1,1) // 01 A
	oExcel:AddColumn(cFld236,cFld23x6,"NFiscal" 	 		,1,1) // 01 A
	oExcel:AddColumn(cFld236,cFld23x6,"Cod.Forn."  			,1,1) // 01 A
	oExcel:AddColumn(cFld236,cFld23x6,"Loja Forn."  		,1,1) // 01 A
	oExcel:AddColumn(cFld236,cFld23x6,"Fornecedor"  		,1,1) // 01 A
	oExcel:AddColumn(cFld236,cFld23x6,"Cod. Produto"  		,1,1) // 01 A
	oExcel:AddColumn(cFld236,cFld23x6,"Produto"  			,1,1) // 01 A
	oExcel:AddColumn(cFld236,cFld23x6,"TES" 				,1,1) // 02 B
	oExcel:AddColumn(cFld236,cFld23x6,"CFOP" 				,1,1) // 02 B
	oExcel:AddColumn(cFld236,cFld23x6,"Tipo Poder 3" 		,1,1) // 02 B
	oExcel:AddColumn(cFld236,cFld23x6,"Operação Poder 3" 	,1,1) // 02 B
	oExcel:AddColumn(cFld236,cFld23x6,"Armazém" 			,1,1) // 02 B
	oExcel:AddColumn(cFld236,cFld23x6,"Quant."				,2,2,.T.) // 03 C
	oExcel:AddColumn(cFld236,cFld23x6,"Unid.Medida" 		,1,1) // 02 B
	oExcel:AddColumn(cFld236,cFld23x6,"Preço Unit."			,2,3) // 03 C
	oExcel:AddColumn(cFld236,cFld23x6,"Vl. Total"			,2,3,.T.) // 03 C
	oExcel:AddColumn(cFld236,cFld23x6,"Dt.Ult.Retorno" 		,1,1) // 02 B
	oExcel:AddColumn(cFld236,cFld23x6,"Qtd. Total Ret."		,2,2,.T.) // 03 C
	oExcel:AddColumn(cFld236,cFld23x6,"Vl. Total Ret."		,2,3,.T.) // 03 C
	oExcel:AddColumn(cFld236,cFld23x6,"Qtd Saldo"			,2,2,.T.) // 03 C
	oExcel:AddColumn(cFld236,cFld23x6,"Total Saldo"			,2,3,.T.) // 03 C
	oExcel:AddColumn(cFld236,cFld23x6,"CCusto"				,1,1) // 03 C
	oExcel:AddColumn(cFld236,cFld23x6,"Desc CCusto"			,1,1) // 03 C
RETURN(NIL)

/*/{Protheus.doc} Static Function Cab23P7
	Gera Relatório Ref. Industrialização de PA (Coopeval, Laranjal, etc)
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function Cab23P7()

	If nEmpIE > 0
		cFld23x7	:= cFld23t7 + aBrw23Em[nEmpIE][1]
	Else
		cFld23x7	:= cFld23t7
	Endif

	oExcel:AddworkSheet(cFld237)
	oExcel:AddTable(cFld237,cFld23x7)
	oExcel:AddColumn(cFld237,cFld23x7,"Filial"  			,1,1) // 01 A
	oExcel:AddColumn(cFld237,cFld23x7,"Dt.Entrada"  		,1,1) // 01 A
	oExcel:AddColumn(cFld237,cFld23x7,"Série" 	 			,1,1) // 01 A
	oExcel:AddColumn(cFld237,cFld23x7,"NFiscal" 	 		,1,1) // 01 A
	oExcel:AddColumn(cFld237,cFld23x7,"Item NF" 	 		,1,1) // 01 A
	oExcel:AddColumn(cFld237,cFld23x7,"Cod.Forn."  			,1,1) // 01 A
	oExcel:AddColumn(cFld237,cFld23x7,"Loja Forn."  		,1,1) // 01 A
	oExcel:AddColumn(cFld237,cFld23x7,"Fornecedor"  		,1,1) // 01 A
	oExcel:AddColumn(cFld237,cFld23x7,"Cod. Produto"  		,1,1) // 01 A
	oExcel:AddColumn(cFld237,cFld23x7,"Produto"  			,1,1) // 01 A
	oExcel:AddColumn(cFld237,cFld23x7,"CFOP" 				,1,1) // 02 B
	oExcel:AddColumn(cFld237,cFld23x7,"TES" 				,1,1) // 02 B
	oExcel:AddColumn(cFld237,cFld23x7,"Série NF Rem." 		,1,1) // 02 B
	oExcel:AddColumn(cFld237,cFld23x7,"NFiscal Rem." 		,1,1) // 02 B
	oExcel:AddColumn(cFld237,cFld23x7,"Item NF Rem." 		,1,1) // 02 B
	oExcel:AddColumn(cFld237,cFld23x7,"Armazém"				,1,1) // 03 C
	oExcel:AddColumn(cFld237,cFld23x7,"Ordem Produção"		,1,1) // 02 B
	oExcel:AddColumn(cFld237,cFld23x7,"Quant."				,2,2,.T.) // 03 C
	oExcel:AddColumn(cFld237,cFld23x7,"Vl. Unit."			,2,3,.T.) // 03 C
	oExcel:AddColumn(cFld237,cFld23x7,"Vl. Total"			,2,3,.T.) // 03 C
	oExcel:AddColumn(cFld237,cFld23x7,"Vl. Contábil"		,2,3,.T.) // 03 C
	oExcel:AddColumn(cFld237,cFld23x7,"Vl. ICMS"			,2,3,.T.) // 03 C
	oExcel:AddColumn(cFld237,cFld23x7,"Vl. ICMS Ret"		,2,3,.T.) // 03 C
	oExcel:AddColumn(cFld237,cFld23x7,"Mês / Ano"		,1,1) // 03 C
RETURN(NIL)

/*/{Protheus.doc} Static Function Cab23P8
	Gera Relatório Ref. Industrialização de PA (Coopeval, Laranjal, etc)
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function Cab23P8()

	If nEmpIE > 0
		cFld23x8	:= cFld23t8 + aBrw23Em[nEmpIE][1]
	Else
		cFld23x8	:= cFld23t8
	Endif

	oExcel:AddworkSheet(cFld238)
	oExcel:AddTable(cFld238,cFld23x8)
	oExcel:AddColumn(cFld238,cFld23x8,"Filial"  			,1,1) // 01
	oExcel:AddColumn(cFld238,cFld23x8,"Cod.Forn."  			,1,1) // 02
	oExcel:AddColumn(cFld238,cFld23x8,"Loja Forn."  		,1,1) // 03
	oExcel:AddColumn(cFld238,cFld23x8,"Fornecedor"  		,1,1) // 04
	oExcel:AddColumn(cFld238,cFld23x8,"Cod. Produto"  		,1,1) // 05
	oExcel:AddColumn(cFld238,cFld23x8,"Produto"  			,1,1) // 06

	oExcel:AddColumn(cFld238,cFld23x8,"Quant Rem."			,2,2,.T.) // 07
	oExcel:AddColumn(cFld238,cFld23x8,"Total Rem."			,2,3,.T.) // 11

	oExcel:AddColumn(cFld238,cFld23x8,"Quant Dev."			,2,2,.T.) // 08
	oExcel:AddColumn(cFld238,cFld23x8,"Total Dev."			,2,3,.T.) // 12

	oExcel:AddColumn(cFld238,cFld23x8,"Quant Saldo"			,2,2,.T.) // 09
	oExcel:AddColumn(cFld238,cFld23x8,"Total Saldo"			,2,3,.T.) // 13

	oExcel:AddColumn(cFld238,cFld23x8,"Quant Saldo SB6"		,2,2,.T.) // 10
	oExcel:AddColumn(cFld238,cFld23x8,"Total Saldo SB6"		,2,3,.T.) // 14
RETURN(NIL)

/*/{Protheus.doc} Static Function GEx23P1
	Gera Relatório Ref. Industrialização de PA (Coopeval, Laranjal, etc)
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function GEx23P1()
	Local nExcel1
	FOR nExcel1 := 1 TO Len(aBrw23R2)
		oExcel:AddRow(cFld231,cFld23x1,;
			{aBrw23R2[nExcel1][1],; //Filial
		aBrw23R2[nExcel1][2],; //Produto
		IIF(nEmpIE > 0,aBrw23R2[nExcel1][nEmpIE+2],aBrw23R2[nExcel1][Len(aBrw23Em)+3]); //Descricao
		})
	NEXT nExcel1


	//Linha em Branco
	oExcel:AddRow(cFld231,cFld23x1,;
		{"",; //Filial
	"",; //Produto
	""; //VlCred.ICMS
	})
Return

/*/{Protheus.doc} Static Function GEx23P2
	Gera Relatório Ref. Industrialização de PA (Coopeval, Laranjal, etc)
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function GEx23P2()
	Local cFlAux := ""
	Local cCFAux := ""
	Local nVlCtb := 0
	Local nVlICM := 0
	Local nVlICR := 0
	Local nVlQtd := 0
	Local nExcel1

	FOR nExcel1 := 1 TO Len(aBrw23Rs)
		If nEmpIE > 0
			If Alltrim(aBrw23Rs[nExcel1,7]) == aBrw23Em[nEmpIE][2]
				oExcel:AddRow(cFld232,cFld23x2,;
					{aBrw23Rs[nExcel1][1],;
					aBrw23Rs[nExcel1][2],;
					aBrw23Rs[nExcel1][3],;
					aBrw23Rs[nExcel1][4],;
					aBrw23Rs[nExcel1][5],;
					aBrw23Rs[nExcel1][6];
					})
			Endif
		Else
			If nExcel1 == 1 .AND. nExcel1 == Len(aBrw23Rs)
				oExcel:AddRow(cFld232,cFld23x2,;
					{aBrw23Rs[nExcel1][1],;
					aBrw23Rs[nExcel1][2],;
					aBrw23Rs[nExcel1][3],;
					aBrw23Rs[nExcel1][4],;
					aBrw23Rs[nExcel1][5],;
					aBrw23Rs[nExcel1][6];
					})

			Elseif cCFAux <> '' .and. cCFAux <> aBrw23Rs[nExcel1][2] //.AND. nExcel1 <> Len(aBrw23Rs)
				oExcel:AddRow(cFld232,cFld23x2,;
					{cFlAux,;
					cCFAux,;
					nVlCtb,;
					nVlICM,;
					nVlICR,;
					nVlQtd;
					})
				nVlCtb := 0
				nVlICM := 0
				nVlICR := 0
				nVlQtd := 0

			Elseif cCFAux <> '' .AND. nExcel1 == Len(aBrw23Rs)
				oExcel:AddRow(cFld232,cFld23x2,;
					{cFlAux,;
					cCFAux,;
					nVlCtb+aBrw23Rs[nExcel1][3],;
					nVlICM+aBrw23Rs[nExcel1][4],;
					nVlICR+aBrw23Rs[nExcel1][5],;
					nVlQtd+aBrw23Rs[nExcel1][6];
					})

			EndIf
			cFlAux := aBrw23Rs[nExcel1][1]
			cCFAux := aBrw23Rs[nExcel1][2]
			nVlCtb += aBrw23Rs[nExcel1][3]
			nVlICM += aBrw23Rs[nExcel1][4]
			nVlICR += aBrw23Rs[nExcel1][5]
			nVlQtd += aBrw23Rs[nExcel1][6]

			///////////////////////////////////////////////////////////////////////
		Endif
	NEXT nExcel1

	//Linha em Branco
	oExcel:AddRow(cFld232,cFld23x2,;
		{"",;
		"",;
		"",;
		"",;
		"",;
		"";
		})
Return

/*/{Protheus.doc} Static Function GEx23P3
	Gera Relatório Ref. Industrialização de PA (Coopeval, Laranjal, etc)
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function GEx23P3()
	Local nExcel1
	FOR nExcel1 := 1 TO Len(aBrw23Rm)
		If nEmpIE > 0
			If Alltrim(aBrw23Rm[nExcel1,28]) == aBrw23Em[nEmpIE][2]
				oExcel:AddRow(cFld233,cFld23x3,;
					{aBrw23Rm[nExcel1][01],;
					IIF(Alltrim(DTOS(aBrw23Rm[nExcel1][02]))=="","",aBrw23Rm[nExcel1][02]),;
					aBrw23Rm[nExcel1][03],;
					aBrw23Rm[nExcel1][04],;
					aBrw23Rm[nExcel1][05],;
					aBrw23Rm[nExcel1][06],;
					aBrw23Rm[nExcel1][07],;
					aBrw23Rm[nExcel1][08],;
					aBrw23Rm[nExcel1][09],;
					aBrw23Rm[nExcel1][10],;
					aBrw23Rm[nExcel1][11],;
					aBrw23Rm[nExcel1][12],;
					aBrw23Rm[nExcel1][13],;
					aBrw23Rm[nExcel1][30],;
					aBrw23Rm[nExcel1][14],;
					aBrw23Rm[nExcel1][15],;
					aBrw23Rm[nExcel1][16],;
					aBrw23Rm[nExcel1][17],;
					IIF(Alltrim(DTOS(aBrw23Rm[nExcel1][18]))=="","",aBrw23Rm[nExcel1][18]),;
					aBrw23Rm[nExcel1][19],;
					aBrw23Rm[nExcel1][20],;
					aBrw23Rm[nExcel1][21],;
					aBrw23Rm[nExcel1][22],;
					aBrw23Rm[nExcel1][23],;
					aBrw23Rm[nExcel1][24],;
					aBrw23Rm[nExcel1][25],;
					aBrw23Rm[nExcel1][26],;
					aBrw23Rm[nExcel1][27],;
					aBrw23Rm[nExcel1][29];
					})
			Endif
		Else
			oExcel:AddRow(cFld233,cFld23x3,;
				{aBrw23Rm[nExcel1][01],;
				IIF(Alltrim(DTOS(aBrw23Rm[nExcel1][02]))=="","",aBrw23Rm[nExcel1][02]),;
				aBrw23Rm[nExcel1][03],;
				aBrw23Rm[nExcel1][04],;
				aBrw23Rm[nExcel1][05],;
				aBrw23Rm[nExcel1][06],;
				aBrw23Rm[nExcel1][07],;
				aBrw23Rm[nExcel1][08],;
				aBrw23Rm[nExcel1][09],;
				aBrw23Rm[nExcel1][10],;
				aBrw23Rm[nExcel1][11],;
				aBrw23Rm[nExcel1][12],;
				aBrw23Rm[nExcel1][13],;
				aBrw23Rm[nExcel1][30],;
				aBrw23Rm[nExcel1][14],;
				aBrw23Rm[nExcel1][15],;
				aBrw23Rm[nExcel1][16],;
				aBrw23Rm[nExcel1][17],;
				IIF(Alltrim(DTOS(aBrw23Rm[nExcel1][18]))=="","",aBrw23Rm[nExcel1][18]),;
				aBrw23Rm[nExcel1][19],;
				aBrw23Rm[nExcel1][20],;
				aBrw23Rm[nExcel1][21],;
				aBrw23Rm[nExcel1][22],;
				aBrw23Rm[nExcel1][23],;
				aBrw23Rm[nExcel1][24],;
				aBrw23Rm[nExcel1][25],;
				aBrw23Rm[nExcel1][26],;
				aBrw23Rm[nExcel1][27],;
				aBrw23Rm[nExcel1][29];
				})
		Endif
	NEXT nExcel1

	//Linha em Branco
	oExcel:AddRow(cFld233,cFld23x3,;
		{"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"";
		})
Return

/*/{Protheus.doc} Static Function GEx23P4
	Gera Relatório Ref. Industrialização de PA (Coopeval, Laranjal, etc)
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function GEx23P4()
	Local nExcel1
	FOR nExcel1 := 1 TO Len(aBrw23Dv)
		If nEmpIE > 0
			If Alltrim(aBrw23Dv[nExcel1,28]) == aBrw23Em[nEmpIE][2]
				oExcel:AddRow(cFld234,cFld23x4,;
					{aBrw23Dv[nExcel1][01],;
					IIF(Alltrim(DTOS(aBrw23Dv[nExcel1][02]))=="","",aBrw23Dv[nExcel1][02]),;
					aBrw23Dv[nExcel1][03],;
					aBrw23Dv[nExcel1][04],;
					aBrw23Dv[nExcel1][05],;
					aBrw23Dv[nExcel1][06],;
					aBrw23Dv[nExcel1][07],;
					aBrw23Dv[nExcel1][08],;
					aBrw23Dv[nExcel1][09],;
					aBrw23Dv[nExcel1][10],;
					aBrw23Dv[nExcel1][11],;
					aBrw23Dv[nExcel1][12],;
					aBrw23Dv[nExcel1][13],;
					aBrw23Dv[nExcel1][31],;
					aBrw23Dv[nExcel1][14],;
					aBrw23Dv[nExcel1][15],;
					aBrw23Dv[nExcel1][16],;
					aBrw23Dv[nExcel1][17],;
					IIF(Alltrim(DTOS(aBrw23Dv[nExcel1][18]))=="","",aBrw23Dv[nExcel1][18]),;
					aBrw23Dv[nExcel1][19],;
					aBrw23Dv[nExcel1][20],;
					aBrw23Dv[nExcel1][21],;
					aBrw23Dv[nExcel1][22],;
					aBrw23Dv[nExcel1][23],;
					aBrw23Dv[nExcel1][24],;
					aBrw23Dv[nExcel1][25],;
					aBrw23Dv[nExcel1][26],;
					aBrw23Dv[nExcel1][27],;
					aBrw23Dv[nExcel1][29];
					})
			Endif
		Else
			oExcel:AddRow(cFld234,cFld23x4,;
				{aBrw23Dv[nExcel1][01],;
				IIF(Alltrim(DTOS(aBrw23Dv[nExcel1][02]))=="","",aBrw23Dv[nExcel1][02]),;
				aBrw23Dv[nExcel1][03],;
				aBrw23Dv[nExcel1][04],;
				aBrw23Dv[nExcel1][05],;
				aBrw23Dv[nExcel1][06],;
				aBrw23Dv[nExcel1][07],;
				aBrw23Dv[nExcel1][08],;
				aBrw23Dv[nExcel1][09],;
				aBrw23Dv[nExcel1][10],;
				aBrw23Dv[nExcel1][11],;
				aBrw23Dv[nExcel1][12],;
				aBrw23Dv[nExcel1][13],;
				aBrw23Dv[nExcel1][31],;
				aBrw23Dv[nExcel1][14],;
				aBrw23Dv[nExcel1][15],;
				aBrw23Dv[nExcel1][16],;
				aBrw23Dv[nExcel1][17],;
				IIF(Alltrim(DTOS(aBrw23Dv[nExcel1][18]))=="","",aBrw23Dv[nExcel1][18]),;
				aBrw23Dv[nExcel1][19],;
				aBrw23Dv[nExcel1][20],;
				aBrw23Dv[nExcel1][21],;
				aBrw23Dv[nExcel1][22],;
				aBrw23Dv[nExcel1][23],;
				aBrw23Dv[nExcel1][24],;
				aBrw23Dv[nExcel1][25],;
				aBrw23Dv[nExcel1][26],;
				aBrw23Dv[nExcel1][27],;
				aBrw23Dv[nExcel1][29];
				})
		Endif
	NEXT nExcel1

	//Linha em Branco
	oExcel:AddRow(cFld234,cFld23x4,;
		{"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"";
		})
Return

/*/{Protheus.doc} Static Function GEx23P5
	Gera Relatório Ref. Industrialização de PA (Coopeval, Laranjal, etc)
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function GEx23P5()
	Local nExcel1
	FOR nExcel1 := 1 TO Len(aBrw23Op)
		If nEmpIE > 0
			If Alltrim(aBrw23Op[nExcel1,22]) == aBrw23Em[nEmpIE][2]
				oExcel:AddRow(cFld235,cFld23x5,;
					{aBrw23Op[nExcel1][01],;
					IIF(Alltrim(DTOS(aBrw23Op[nExcel1][02]))=="","",aBrw23Op[nExcel1][02]),;
					aBrw23Op[nExcel1][03],;
					aBrw23Op[nExcel1][04],;
					aBrw23Op[nExcel1][05],;
					aBrw23Op[nExcel1][06],;
					aBrw23Op[nExcel1][07],;
					aBrw23Op[nExcel1][08],;
					aBrw23Op[nExcel1][09],;
					aBrw23Op[nExcel1][10],;
					aBrw23Op[nExcel1][11],;
					aBrw23Op[nExcel1][12],;
					aBrw23Op[nExcel1][13],;
					aBrw23Op[nExcel1][14],;
					aBrw23Op[nExcel1][20],;//
					aBrw23Op[nExcel1][21],;
					aBrw23Op[nExcel1][17],;
					aBrw23Op[nExcel1][23],;
					aBrw23Op[nExcel1][18],;
					aBrw23Op[nExcel1][19],;
					aBrw23Op[nExcel1][15],;
					aBrw23Op[nExcel1][16];
					})
			Endif
		Else
			oExcel:AddRow(cFld235,cFld23x5,;
				{aBrw23Op[nExcel1][01],;
				IIF(Alltrim(DTOS(aBrw23Op[nExcel1][02]))=="","",aBrw23Op[nExcel1][02]),;
				aBrw23Op[nExcel1][03],;
				aBrw23Op[nExcel1][04],;
				aBrw23Op[nExcel1][05],;
				aBrw23Op[nExcel1][06],;
				aBrw23Op[nExcel1][07],;
				aBrw23Op[nExcel1][08],;
				aBrw23Op[nExcel1][09],;
				aBrw23Op[nExcel1][10],;
				aBrw23Op[nExcel1][11],;
				aBrw23Op[nExcel1][12],;
				aBrw23Op[nExcel1][13],;
				aBrw23Op[nExcel1][14],;
				aBrw23Op[nExcel1][15],;
				aBrw23Op[nExcel1][16],;
				aBrw23Op[nExcel1][17],;
				aBrw23Op[nExcel1][23],;
				aBrw23Op[nExcel1][18],;
				aBrw23Op[nExcel1][19],;
				aBrw23Op[nExcel1][20],;
				aBrw23Op[nExcel1][21];
				})
		Endif
	NEXT nExcel1

	//Linha em Branco
	oExcel:AddRow(cFld235,cFld23x5,;
		{"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"";
		})
Return

/*/{Protheus.doc} Static Function GEx23P6
	Gera Relatório Ref. Industrialização de PA (Coopeval, Laranjal, etc)
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function GEx23P6()
	Local nExcel1
	FOR nExcel1 := 1 TO Len(aBrw23S3)
		If nEmpIE > 0
			If Alltrim(aBrw23S3[nExcel1,25]) == aBrw23Em[nEmpIE][2]
				oExcel:AddRow(cFld236,cFld23x6,;
					{aBrw23S3[nExcel1][01],;
					aBrw23S3[nExcel1][02],;
					IIF(Alltrim(DTOS(aBrw23S3[nExcel1][03]))=="","",aBrw23S3[nExcel1][03]),;
					aBrw23S3[nExcel1][04],;
					aBrw23S3[nExcel1][05],;
					aBrw23S3[nExcel1][06],;
					aBrw23S3[nExcel1][07],;
					aBrw23S3[nExcel1][08],;
					aBrw23S3[nExcel1][09],;
					aBrw23S3[nExcel1][10],;
					aBrw23S3[nExcel1][11],;
					aBrw23S3[nExcel1][12],;
					aBrw23S3[nExcel1][13],;
					aBrw23S3[nExcel1][14],;
					aBrw23S3[nExcel1][15],;
					aBrw23S3[nExcel1][16],;
					aBrw23S3[nExcel1][17],;
					aBrw23S3[nExcel1][18],;
					aBrw23S3[nExcel1][19],;
					IIF(Alltrim(DTOS(aBrw23S3[nExcel1][20]))=="","",aBrw23S3[nExcel1][20]),;
					aBrw23S3[nExcel1][21],;
					aBrw23S3[nExcel1][22],;
					aBrw23S3[nExcel1][23],;
					aBrw23S3[nExcel1][24],;
					aBrw23S3[nExcel1][26],;
					aBrw23S3[nExcel1][27];
					})
			Endif
		Else
			oExcel:AddRow(cFld236,cFld23x6,;
				{aBrw23S3[nExcel1][01],;
				aBrw23S3[nExcel1][02],;
				IIF(Alltrim(DTOS(aBrw23S3[nExcel1][03]))=="","",aBrw23S3[nExcel1][03]),;
				aBrw23S3[nExcel1][04],;
				aBrw23S3[nExcel1][05],;
				aBrw23S3[nExcel1][06],;
				aBrw23S3[nExcel1][07],;
				aBrw23S3[nExcel1][08],;
				aBrw23S3[nExcel1][09],;
				aBrw23S3[nExcel1][10],;
				aBrw23S3[nExcel1][11],;
				aBrw23S3[nExcel1][12],;
				aBrw23S3[nExcel1][13],;
				aBrw23S3[nExcel1][14],;
				aBrw23S3[nExcel1][15],;
				aBrw23S3[nExcel1][16],;
				aBrw23S3[nExcel1][17],;
				aBrw23S3[nExcel1][18],;
				aBrw23S3[nExcel1][19],;
				IIF(Alltrim(DTOS(aBrw23S3[nExcel1][20]))=="","",aBrw23S3[nExcel1][20]),;
				aBrw23S3[nExcel1][21],;
				aBrw23S3[nExcel1][22],;
				aBrw23S3[nExcel1][23],;
				aBrw23S3[nExcel1][24],;
				aBrw23S3[nExcel1][26],;
				aBrw23S3[nExcel1][27];
				})
		Endif
	NEXT nExcel1

	//Linha em Branco
	oExcel:AddRow(cFld236,cFld23x6,;
		{"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"";
		})
Return

/*/{Protheus.doc} Static Function GEx23P7
	Gera Relatório Ref. Industrialização de PA (Coopeval, Laranjal, etc)
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function GEx23P7()
	Local nExcel1
	FOR nExcel1 := 1 TO Len(aBrw23IN)
		If nEmpIE > 0
			If Alltrim(aBrw23IN[nExcel1,23]) == aBrw23Em[nEmpIE][2]
				oExcel:AddRow(cFld237,cFld23x7,;
					{aBrw23IN[nExcel1][01],;
					IIF(Alltrim(DTOS(aBrw23IN[nExcel1][02]))=="","",aBrw23IN[nExcel1][02]),;
					aBrw23IN[nExcel1][03],;
					aBrw23IN[nExcel1][04],;
					aBrw23IN[nExcel1][05],;
					aBrw23IN[nExcel1][06],;
					aBrw23IN[nExcel1][07],;
					aBrw23IN[nExcel1][08],;
					aBrw23IN[nExcel1][09],;
					aBrw23IN[nExcel1][10],;
					aBrw23IN[nExcel1][11],;
					aBrw23IN[nExcel1][12],;
					aBrw23IN[nExcel1][13],;
					aBrw23IN[nExcel1][14],;
					aBrw23IN[nExcel1][15],;
					aBrw23IN[nExcel1][16],;
					aBrw23IN[nExcel1][17],;
					aBrw23IN[nExcel1][18],;
					aBrw23IN[nExcel1][25],;
					aBrw23IN[nExcel1][19],;
					aBrw23IN[nExcel1][20],;
					aBrw23IN[nExcel1][21],;
					aBrw23IN[nExcel1][22],;
					aBrw23IN[nExcel1][24];
					})
			Endif
		Else
			oExcel:AddRow(cFld237,cFld23x7,;
				{aBrw23IN[nExcel1][01],;
				IIF(Alltrim(DTOS(aBrw23IN[nExcel1][02]))=="","",aBrw23IN[nExcel1][02]),;
				aBrw23IN[nExcel1][03],;
				aBrw23IN[nExcel1][04],;
				aBrw23IN[nExcel1][05],;
				aBrw23IN[nExcel1][06],;
				aBrw23IN[nExcel1][07],;
				aBrw23IN[nExcel1][08],;
				aBrw23IN[nExcel1][09],;
				aBrw23IN[nExcel1][10],;
				aBrw23IN[nExcel1][11],;
				aBrw23IN[nExcel1][12],;
				aBrw23IN[nExcel1][13],;
				aBrw23IN[nExcel1][14],;
				aBrw23IN[nExcel1][15],;
				aBrw23IN[nExcel1][16],;
				aBrw23IN[nExcel1][17],;
				aBrw23IN[nExcel1][18],;
				aBrw23IN[nExcel1][25],;
				aBrw23IN[nExcel1][19],;
				aBrw23IN[nExcel1][20],;
				aBrw23IN[nExcel1][21],;
				aBrw23IN[nExcel1][22],;
				aBrw23IN[nExcel1][24];
				})
		Endif
	NEXT nExcel1

	//Linha em Branco
	oExcel:AddRow(cFld237,cFld23x7,;
		{"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"";
		})
Return

/*/{Protheus.doc} Static Function GEx23P8
	Gera Relatório Ref. Industrialização de PA (Coopeval, Laranjal, etc)
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function GEx23P8()
	Local nExcel1
	FOR nExcel1 := 1 TO Len(aBrw23Tt)
		If nEmpIE > 0
			If substr(Alltrim(aBrw23Tt[nExcel1,15]),1,14) == aBrw23Em[nEmpIE][2]
				oExcel:AddRow(cFld238,cFld23x8,;
					{aBrw23Tt[nExcel1][01],;
					aBrw23Tt[nExcel1][02],;
					aBrw23Tt[nExcel1][03],;
					aBrw23Tt[nExcel1][04],;
					aBrw23Tt[nExcel1][05],;
					aBrw23Tt[nExcel1][06],;
					aBrw23Tt[nExcel1][07],;
					aBrw23Tt[nExcel1][11],;
					aBrw23Tt[nExcel1][08],;
					aBrw23Tt[nExcel1][12],;
					aBrw23Tt[nExcel1][09],;
					aBrw23Tt[nExcel1][13],;
					aBrw23Tt[nExcel1][10],;
					aBrw23Tt[nExcel1][14];
					})
			Endif
		Else
			oExcel:AddRow(cFld238,cFld23x8,;
				{aBrw23Tt[nExcel1][01],;
				aBrw23Tt[nExcel1][02],;
				aBrw23Tt[nExcel1][03],;
				aBrw23Tt[nExcel1][04],;
				aBrw23Tt[nExcel1][05],;
				aBrw23Tt[nExcel1][06],;
				aBrw23Tt[nExcel1][07],;
				aBrw23Tt[nExcel1][11],;
				aBrw23Tt[nExcel1][08],;
				aBrw23Tt[nExcel1][12],;
				aBrw23Tt[nExcel1][09],;
				aBrw23Tt[nExcel1][13],;
				aBrw23Tt[nExcel1][10],;
				aBrw23Tt[nExcel1][14];
				})
		Endif
	NEXT nExcel1

	//Linha em Branco
	oExcel:AddRow(cFld238,cFld23x8,;
		{"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"",;
		"";
		})
Return
// FIM n.040930  ³ Relatorio Industrialização Embutidos - Abel Babini - 24/06/2019

// INICIO n.050629  ³ Relatorio Apuração ICMS Frete - Abel Babini - 01/10/2019
/*/{Protheus.doc} Static Function xABrw24
	Gera Relatório Ref. Apuracao ICMS Frete
	@type  Static Function
	@author Abel Babini Filho
	@since 01/10/2019
	@version version
	/*/
Static Function xABrw24()
	Local aValAnul	:= {}
	Local _cUFFil := Alltrim(GETMV('MV_ESTADO'))
	
	//Inicializa Variáveis

	If Select(cAlB24Rs) > 0
		(cAlB24Rs)->(dbCloseArea())
	Endif
	cAlB24Rs:=GetNextAlias()

	If Select(cAlB24An) > 0
		(cAlB24An)->(dbCloseArea())
	Endif
	cAlB24An:=GetNextAlias()

	aBrw24Dt	:= {}
	aBrw24Ex	:= {}
	aBrw24ST	:= {}
	aBrw24TF	:= {}
	aBrw24Tr	:= {}
	aBrw24An	:= {}
	aBrw24Sp	:= {}

	nA24T01		:= 0
	nA24T02		:= 0
	nA24T03		:= 0
	nA24T04		:= 0
	nA24T05		:= 0
	nA24T06		:= 0
	nA24T07		:= 0
	nA24T08		:= 0
	nA24T09		:= 0
	nA24T10		:= 0
	nA24T11		:= 0
	nA24T12		:= 0
	nA24T13		:= 0
	nA24T14		:= 0
	nA24T15		:= 0
	nA24T16		:= 0
	nA24T17		:= 0
	nA24T18		:= 0
	nA24T19		:= 0
	nA24T20		:= 0
	nA24T21		:= 0

	BeginSQL  Alias cAlB24Rs
		column DTENTRADA as Date
		column DTENTRADA_AN as Date
		SELECT
			SFT.FT_FILIAL		AS FILIAL,
			SFT.FT_ENTRADA		AS DTENTRADA,
			SFT.FT_SERIE		AS SERIE,
			SFT.FT_NFISCAL		AS NFISCAL,
			SFT.FT_ITEM			AS ITEM,
			SFT.FT_CLIEFOR		AS CLIEFOR,
			SFT.FT_LOJA			AS LOJA,
			CASE WHEN (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) THEN SA2.A2_NOME ELSE SA1.A1_NOME END AS NOME,
			CASE WHEN (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) THEN SA2.A2_CGC ELSE SA1.A1_CGC END AS CGC,
			CASE WHEN (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) THEN (CASE WHEN SA2.A2_SIMPNAC = '1' THEN 'SIM' ELSE 'NÃO' END) ELSE (CASE WHEN SA1.A1_SIMPNAC = '1' THEN 'SIM' ELSE 'NÃO' END) END AS SIMPLESNAC,
			CASE WHEN (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) THEN SA2.A2_SIMPNAC ELSE SA1.A1_SIMPNAC END AS CPSIMPLES,
			CASE WHEN (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) THEN SA2.A2_EST ELSE SA1.A1_EST END AS EST,
			SFT.FT_PRODUTO		AS CODPROD,
			SB1.B1_DESC			AS PRODUTO,
			SFT.FT_QUANT		AS QUANT,
			SFT.FT_PRCUNIT		AS PRCUNIT,
			SFT.FT_TOTAL		AS TOTAL,
			SFT.FT_VALCONT		AS VALCONT,
			SFT.FT_BASEICM		AS ICMSBASE,
			SFT.FT_ALIQICM		AS ICMSALIQ,
			SFT.FT_VALICM		AS ICMSVAL,
			SFT.FT_ICMSRET		AS ICMSRET,
			SFT.FT_OUTRICM		AS ICMSOUTR,
			SFT.FT_DESCONT		AS DESCONT,
			SFT.FT_SEGURO		AS SEGURO,
			SFT.FT_DESPESA		AS DESPESA,
			SFT.FT_FRETE		AS FRETE,
			SFT.FT_DTCANC		AS DTCANC,
			SFT.FT_OBSERV		AS OBSERV,
			SFT.FT_TES			AS TES,
			SFT.FT_CFOP			AS CFOP,
			SFT.FT_TIPO			AS TIPO,
			SFT.FT_ESPECIE		AS ESPECIE,
			SD1.D1_CC			AS CCUSTO,
			SD1.D1_VALICM		AS D1VALICM,
			CTT.CTT_DESC01		AS CCDESC,
			SF1.F1_UFDESTR		AS UFDESTR,
			SF1.F1_UFORITR		AS UFORITR
		FROM %TABLE:SFT% SFT (NOLOCK) 
			LEFT JOIN %TABLE:SB1% SB1 (NOLOCK) ON
			SB1.B1_FILIAL = %xFilial:SB1%
			AND SB1.B1_COD = SFT.FT_PRODUTO
			AND SB1.%notDel%
			LEFT JOIN %TABLE:SA2% SA2 (NOLOCK) ON
			SA2.A2_FILIAL = %xFilial:SA2%
			AND SA2.A2_COD = SFT.FT_CLIEFOR
			AND SA2.A2_LOJA = SFT.FT_LOJA
			AND ( (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) )
			AND SA2.%notDel%
			LEFT JOIN %TABLE:SA1% SA1 (NOLOCK) ON
			SA1.A1_FILIAL = %xFilial:SA1%
			AND SA1.A1_COD = SFT.FT_CLIEFOR
			AND SA1.A1_LOJA = SFT.FT_LOJA
			AND ( (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO IN ('D','B') ) )
			AND SA1.%notDel%
			LEFT JOIN %TABLE:SD1% SD1 (NOLOCK) ON
			SD1.D1_FILIAL = SFT.FT_FILIAL
			AND SD1.D1_SERIE = SFT.FT_SERIE
			AND SD1.D1_DOC = SFT.FT_NFISCAL
			AND SD1.D1_FORNECE = SFT.FT_CLIEFOR
			AND SD1.D1_LOJA = SFT.FT_LOJA
			AND SD1.D1_ITEM = SFT.FT_ITEM
			AND SD1.%notDel%
			LEFT JOIN %TABLE:SF1% SF1 (NOLOCK) ON
			SF1.F1_FILIAL = SFT.FT_FILIAL
			AND SF1.F1_SERIE = SFT.FT_SERIE
			AND SF1.F1_DOC = SFT.FT_NFISCAL
			AND SF1.F1_FORNECE = SFT.FT_CLIEFOR
			AND SF1.F1_LOJA = SFT.FT_LOJA
			AND SF1.%notDel%
			LEFT JOIN %TABLE:CTT% CTT (NOLOCK) ON
			CTT.CTT_FILIAL = %xFilial:CTT%
			AND CTT.CTT_CUSTO = SD1.D1_CC
			AND CTT.%notDel%
		WHERE SFT.FT_FILIAL = %xFilial:SFT%
			AND SFT.FT_ENTRADA BETWEEN %Exp:DToS(_mvpr01)% AND %Exp:DToS(_mvpr02)%
			AND SFT.FT_CFOP IN %Exp:_cCFFret%
			AND SFT.FT_DTCANC = ''
			AND SFT.%notDel%
	EndSQL

	BeginSQL  Alias cAlB24An
		SELECT
			SFT.FT_FILIAL		AS FILIAL,
			SFT.FT_ENTRADA		AS DTENTRADA,
			SFT.FT_SERIE		AS SERIE,
			SFT.FT_NFISCAL		AS NFISCAL,
			SFT.FT_ITEM			AS ITEM,
			SFT.FT_CLIEFOR		AS CLIEFOR,
			SFT.FT_LOJA			AS LOJA,
			CASE WHEN (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) THEN SA2.A2_NOME ELSE SA1.A1_NOME END AS NOME,
			CASE WHEN (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) THEN SA2.A2_CGC ELSE SA1.A1_CGC END AS CGC,
			CASE WHEN (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) THEN (CASE WHEN SA2.A2_SIMPNAC = '1' THEN 'SIM' ELSE 'NÃO' END) ELSE (CASE WHEN SA1.A1_SIMPNAC = '1' THEN 'SIM' ELSE 'NÃO' END) END AS SIMPLESNAC,
			CASE WHEN (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) THEN SA2.A2_EST ELSE SA1.A1_EST END AS EST,
			SFT.FT_PRODUTO		AS CODPROD,
			SB1.B1_DESC			AS PRODUTO,
			SFT.FT_QUANT		AS QUANT,
			SFT.FT_PRCUNIT		AS PRCUNIT,
			SFT.FT_TOTAL		AS TOTAL,
			SFT.FT_VALCONT		AS VALCONT,
			SFT.FT_BASEICM		AS ICMSBASE,
			SFT.FT_ALIQICM		AS ICMSALIQ,
			SFT.FT_VALICM		AS ICMSVAL,
			SFT.FT_ICMSRET		AS ICMSRET,
			SFT.FT_OUTRICM		AS ICMSOUTR,
			SFT.FT_DESCONT		AS DESCONT,
			SFT.FT_SEGURO		AS SEGURO,
			SFT.FT_DESPESA		AS DESPESA,
			SFT.FT_FRETE		AS FRETE,
			SFT.FT_DTCANC		AS DTCANC,
			SFT.FT_OBSERV		AS OBSERV,
			SFT.FT_TES			AS TES,
			SFT.FT_CFOP			AS CFOP,
			SFT.FT_TIPO			AS TIPO,
			SFT.FT_ESPECIE		AS ESPECIE,
			SD1.D1_CC			AS CCUSTO,
			CTT.CTT_DESC01		AS CCDESC,
			SF1.F1_UFDESTR		AS UFDESTR,
			SF1.F1_UFORITR		AS UFORITR,
			SFT.FT_SERORI		AS SERORI,
			SFT.FT_NFORI		AS NFORI,
			SFT.FT_ITEMORI		AS ITEMORI
		FROM %TABLE:SFT% SFT (NOLOCK) 
		LEFT JOIN %TABLE:SB1% SB1 (NOLOCK) ON
			SB1.B1_FILIAL = %xFilial:SB1%
			AND SB1.B1_COD = SFT.FT_PRODUTO
			AND SB1.%notDel%
		LEFT JOIN %TABLE:SA2% SA2 (NOLOCK) ON
			SA2.A2_FILIAL = %xFilial:SA2%
			AND SA2.A2_COD = SFT.FT_CLIEFOR
			AND SA2.A2_LOJA = SFT.FT_LOJA
			AND ( (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) )
			AND SA2.%notDel%
		LEFT JOIN %TABLE:SA1% SA1 (NOLOCK) ON
			SA1.A1_FILIAL = %xFilial:SA1%
			AND SA1.A1_COD = SFT.FT_CLIEFOR
			AND SA1.A1_LOJA = SFT.FT_LOJA
			AND ( (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO IN ('D','B') ) )
			AND SA1.%notDel%
		LEFT JOIN %TABLE:SD1% SD1 (NOLOCK) ON
			SD1.D1_FILIAL = SFT.FT_FILIAL
			AND SD1.D1_SERIE = SFT.FT_SERIE
			AND SD1.D1_DOC = SFT.FT_NFISCAL
			AND SD1.D1_FORNECE = SFT.FT_CLIEFOR
			AND SD1.D1_LOJA = SFT.FT_LOJA
			AND SD1.D1_ITEM = SFT.FT_ITEM
			AND SD1.%notDel%
		LEFT JOIN %TABLE:SF1% SF1 (NOLOCK) ON
			SF1.F1_FILIAL = SFT.FT_FILIAL
			AND SF1.F1_SERIE = SFT.FT_SERIE
			AND SF1.F1_DOC = SFT.FT_NFISCAL
			AND SF1.F1_FORNECE = SFT.FT_CLIEFOR
			AND SF1.F1_LOJA = SFT.FT_LOJA
			AND SF1.%notDel%
		LEFT JOIN %TABLE:CTT% CTT (NOLOCK) ON
			CTT.CTT_FILIAL = %xFilial:CTT%
			AND CTT.CTT_CUSTO = SD1.D1_CC
			AND CTT.%notDel%
		WHERE SFT.FT_FILIAL = %xFilial:SFT%
			AND SFT.FT_ENTRADA BETWEEN %Exp:DToS(_mvpr01)% AND %Exp:DToS(_mvpr02)%
			AND SFT.FT_CFOP IN %Exp:_cCFFrAn%
			AND SFT.FT_DTCANC = ''
			AND SFT.%notDel%
	EndSQL

	DbSelectArea(cAlB24Rs)
	(cAlB24Rs)->(DbGoTop())
	While !(cAlB24Rs)->(eof())
		aValAnul := ValAnul() //Verifica Valor de Anulação

		//Chamado n.040935 - OS n.042015 - Abel Babini - 03/04/2020 - Rel. Resumo Ceres - Acrescentada condição do código do produto
		IF !Alltrim((cAlB24Rs)->CODPROD) $ _cMVFrPr

			aAdd(aBrw24Dt,{	(cAlB24Rs)->FILIAL,;
				(cAlB24Rs)->DTENTRADA,;
				(cAlB24Rs)->SERIE,;
				(cAlB24Rs)->NFISCAL,;
				(cAlB24Rs)->ITEM,;
				(cAlB24Rs)->CLIEFOR,;
				(cAlB24Rs)->LOJA,;
				(cAlB24Rs)->NOME,;
				(cAlB24Rs)->CGC,;
				(cAlB24Rs)->SIMPLESNAC,;
				(cAlB24Rs)->CODPROD,;
				(cAlB24Rs)->PRODUTO,;
				(cAlB24Rs)->QUANT,;
				(cAlB24Rs)->PRCUNIT,;
				(cAlB24Rs)->TOTAL-aValAnul[1],;
				(cAlB24Rs)->VALCONT-aValAnul[2],;
				(cAlB24Rs)->ICMSBASE,;
				(cAlB24Rs)->ICMSALIQ,;
				(cAlB24Rs)->ICMSVAL-aValAnul[3],;
				(cAlB24Rs)->ICMSRET,;
				(cAlB24Rs)->ICMSOUTR,;
				(cAlB24Rs)->DESCONT,;
				(cAlB24Rs)->SEGURO,;
				(cAlB24Rs)->DESPESA,;
				(cAlB24Rs)->FRETE,;
				(cAlB24Rs)->DTCANC,;
				(cAlB24Rs)->OBSERV,;
				(cAlB24Rs)->TES,;
				(cAlB24Rs)->CFOP,;
				(cAlB24Rs)->TIPO,;
				(cAlB24Rs)->ESPECIE,;
				(cAlB24Rs)->CCUSTO,;
				(cAlB24Rs)->CCDESC,;
				(cAlB24Rs)->EST,;
				(cAlB24Rs)->UFDESTR,;
				(cAlB24Rs)->UFORITR,;
				aValAnul[3]})
			//NECESSÁRIO ACRESCENTAR CENTRO DE CUSTO PARA VERIFICAR AS REGRAS FISCAIS DA COLUNA
			//SITUAÇÃO TRIBUTÁRIA DA VALÉRIA. ATUALMENTE ESSA COLUNA É PREENCHIDA MANUALMENTE
			//AS REGRAS SERÃO AQUI CRIADAS.
			nA24T01 += (cAlB24Rs)->VALCONT-aValAnul[2]
			//nA24T02 += (cAlB24Rs)->ICMSVAL-aValAnul[3]
			nA24T17 += (cAlB24Rs)->ICMSOUTR

			//Verifica Fornecedores com campo Simples Naciona Em branco
			if Alltrim((cAlB24Rs)->CPSIMPLES) == ""
				aAdd(aBrw24Sp,{	(cAlB24Rs)->FILIAL,;
					(cAlB24Rs)->DTENTRADA,;
					(cAlB24Rs)->SERIE,;
					(cAlB24Rs)->NFISCAL,;
					(cAlB24Rs)->ITEM,;
					(cAlB24Rs)->CLIEFOR,;
					(cAlB24Rs)->LOJA,;
					(cAlB24Rs)->NOME,;
					(cAlB24Rs)->CGC,;
					(cAlB24Rs)->CPSIMPLES,;
					(cAlB24Rs)->CODPROD,;
					(cAlB24Rs)->PRODUTO,;
					(cAlB24Rs)->QUANT,;
					(cAlB24Rs)->PRCUNIT,;
					(cAlB24Rs)->TOTAL-aValAnul[1],;
					(cAlB24Rs)->VALCONT-aValAnul[2],;
					(cAlB24Rs)->ICMSBASE,;
					(cAlB24Rs)->ICMSALIQ,;
					(cAlB24Rs)->ICMSVAL-aValAnul[3],;
					(cAlB24Rs)->ICMSRET,;
					(cAlB24Rs)->ICMSOUTR,;
					(cAlB24Rs)->DESCONT,;
					(cAlB24Rs)->SEGURO,;
					(cAlB24Rs)->DESPESA,;
					(cAlB24Rs)->FRETE,;
					(cAlB24Rs)->DTCANC,;
					(cAlB24Rs)->OBSERV,;
					(cAlB24Rs)->TES,;
					(cAlB24Rs)->CFOP,;
					(cAlB24Rs)->TIPO,;
					(cAlB24Rs)->ESPECIE,;
					(cAlB24Rs)->CCUSTO,;
					(cAlB24Rs)->CCDESC,;
					(cAlB24Rs)->EST,;
					(cAlB24Rs)->UFDESTR,;
					(cAlB24Rs)->UFORITR,;
					aValAnul[3]})
				nA24T13 += (cAlB24Rs)->VALCONT - aValAnul[2]
				nA24T14 += (cAlB24Rs)->ICMSVAL - aValAnul[3]
				nA24T15 += 	1
			endif
			//Verifica se é exportação
			if Alltrim((cAlB24Rs)->CCUSTO) $ _cMVFrEx
				aAdd(aBrw24Ex,{	(cAlB24Rs)->FILIAL,;
					(cAlB24Rs)->DTENTRADA,;
					(cAlB24Rs)->SERIE,;
					(cAlB24Rs)->NFISCAL,;
					(cAlB24Rs)->ITEM,;
					(cAlB24Rs)->CLIEFOR,;
					(cAlB24Rs)->LOJA,;
					(cAlB24Rs)->NOME,;
					(cAlB24Rs)->CGC,;
					(cAlB24Rs)->SIMPLESNAC,;
					(cAlB24Rs)->CODPROD,;
					(cAlB24Rs)->PRODUTO,;
					(cAlB24Rs)->QUANT,;
					(cAlB24Rs)->PRCUNIT,;
					(cAlB24Rs)->TOTAL-aValAnul[1],;
					(cAlB24Rs)->VALCONT-aValAnul[2],;
					(cAlB24Rs)->ICMSBASE,;
					(cAlB24Rs)->ICMSALIQ,;
					(cAlB24Rs)->ICMSVAL-aValAnul[3],;
					(cAlB24Rs)->ICMSRET,;
					(cAlB24Rs)->ICMSOUTR,;
					(cAlB24Rs)->DESCONT,;
					(cAlB24Rs)->SEGURO,;
					(cAlB24Rs)->DESPESA,;
					(cAlB24Rs)->FRETE,;
					(cAlB24Rs)->DTCANC,;
					(cAlB24Rs)->OBSERV,;
					(cAlB24Rs)->TES,;
					(cAlB24Rs)->CFOP,;
					(cAlB24Rs)->TIPO,;
					(cAlB24Rs)->ESPECIE,;
					(cAlB24Rs)->CCUSTO,;
					(cAlB24Rs)->CCDESC,;
					(cAlB24Rs)->EST,;
					(cAlB24Rs)->UFDESTR,;
					(cAlB24Rs)->UFORITR,;
					aValAnul[3]})
				nA24T03 += (cAlB24Rs)->VALCONT - aValAnul[2]
				nA24T04 += (cAlB24Rs)->ICMSVAL - aValAnul[3]
				//Verifica se é Substituição Tributária
			elseif Alltrim((cAlB24Rs)->SIMPLESNAC) $ 'SIM' 
				IF _cUFFil == Alltrim((cAlB24Rs)->EST)
					aAdd(aBrw24ST,{	(cAlB24Rs)->FILIAL,;
						(cAlB24Rs)->DTENTRADA,;
						(cAlB24Rs)->SERIE,;
						(cAlB24Rs)->NFISCAL,;
						(cAlB24Rs)->ITEM,;
						(cAlB24Rs)->CLIEFOR,;
						(cAlB24Rs)->LOJA,;
						(cAlB24Rs)->NOME,;
						(cAlB24Rs)->CGC,;
						(cAlB24Rs)->SIMPLESNAC,;
						(cAlB24Rs)->CODPROD,;
						(cAlB24Rs)->PRODUTO,;
						(cAlB24Rs)->QUANT,;
						(cAlB24Rs)->PRCUNIT,;
						(cAlB24Rs)->TOTAL-aValAnul[1],;
						(cAlB24Rs)->VALCONT-aValAnul[2],;
						(cAlB24Rs)->ICMSBASE,;
						(cAlB24Rs)->ICMSALIQ,;
						(cAlB24Rs)->ICMSVAL-aValAnul[3],;
						(cAlB24Rs)->ICMSRET,;
						(cAlB24Rs)->ICMSOUTR,;
						(cAlB24Rs)->DESCONT,;
						(cAlB24Rs)->SEGURO,;
						(cAlB24Rs)->DESPESA,;
						(cAlB24Rs)->FRETE,;
						(cAlB24Rs)->DTCANC,;
						(cAlB24Rs)->OBSERV,;
						(cAlB24Rs)->TES,;
						(cAlB24Rs)->CFOP,;
						(cAlB24Rs)->TIPO,;
						(cAlB24Rs)->ESPECIE,;
						(cAlB24Rs)->CCUSTO,;
						(cAlB24Rs)->CCDESC,;
						(cAlB24Rs)->EST,;
						(cAlB24Rs)->UFDESTR,;
						(cAlB24Rs)->UFORITR,;
						aValAnul[3]})
				else
					aAdd(aBrw24IE,{	(cAlB24Rs)->FILIAL,;
						(cAlB24Rs)->DTENTRADA,;
						(cAlB24Rs)->SERIE,;
						(cAlB24Rs)->NFISCAL,;
						(cAlB24Rs)->ITEM,;
						(cAlB24Rs)->CLIEFOR,;
						(cAlB24Rs)->LOJA,;
						(cAlB24Rs)->NOME,;
						(cAlB24Rs)->CGC,;
						(cAlB24Rs)->SIMPLESNAC,;
						(cAlB24Rs)->CODPROD,;
						(cAlB24Rs)->PRODUTO,;
						(cAlB24Rs)->QUANT,;
						(cAlB24Rs)->PRCUNIT,;
						(cAlB24Rs)->TOTAL-aValAnul[1],;
						(cAlB24Rs)->VALCONT-aValAnul[2],;
						(cAlB24Rs)->ICMSBASE,;
						(cAlB24Rs)->ICMSALIQ,;
						(cAlB24Rs)->ICMSVAL-aValAnul[3],;
						(cAlB24Rs)->ICMSRET,;
						(cAlB24Rs)->ICMSOUTR,;
						(cAlB24Rs)->DESCONT,;
						(cAlB24Rs)->SEGURO,;
						(cAlB24Rs)->DESPESA,;
						(cAlB24Rs)->FRETE,;
						(cAlB24Rs)->DTCANC,;
						(cAlB24Rs)->OBSERV,;
						(cAlB24Rs)->TES,;
						(cAlB24Rs)->CFOP,;
						(cAlB24Rs)->TIPO,;
						(cAlB24Rs)->ESPECIE,;
						(cAlB24Rs)->CCUSTO,;
						(cAlB24Rs)->CCDESC,;
						(cAlB24Rs)->EST,;
						(cAlB24Rs)->UFDESTR,;
						(cAlB24Rs)->UFORITR,;
						aValAnul[3]})					
				endif
				//Ticket 18004                   - Abel Babini - 17/08/2021 - Alterações no Painel Fiscal - Apuração de Frete e criação do relatório Débito Serv. Industrialização
				IF _cUFFil == Alltrim((cAlB24Rs)->EST)
					nA24T05 += (cAlB24Rs)->VALCONT - aValAnul[2]
				ELSE
					nA24T20 += (cAlB24Rs)->VALCONT - aValAnul[2]
				ENDIF
				//nA24T06 := nA24T05 *
				//Verifica se é Transporte de Funcionarios
			//Ticket 3035                    - Abel Babini - 16/09/2020 - Painel Fiscal Ceres - Relatório de frete - Criar regra por produto para transporte de funcion[ários]
			elseif (!_lMVAPF .and. Alltrim((cAlB24Rs)->CCUSTO) $ _cMVFrTF) .OR. (_lMVCrFt .AND. Alltrim((cAlB24Rs)->CODPROD)$_cMVPrTF)
				aAdd(aBrw24TF,{	(cAlB24Rs)->FILIAL,;
					(cAlB24Rs)->DTENTRADA,;
					(cAlB24Rs)->SERIE,;
					(cAlB24Rs)->NFISCAL,;
					(cAlB24Rs)->ITEM,;
					(cAlB24Rs)->CLIEFOR,;
					(cAlB24Rs)->LOJA,;
					(cAlB24Rs)->NOME,;
					(cAlB24Rs)->CGC,;
					(cAlB24Rs)->SIMPLESNAC,;
					(cAlB24Rs)->CODPROD,;
					(cAlB24Rs)->PRODUTO,;
					(cAlB24Rs)->QUANT,;
					(cAlB24Rs)->PRCUNIT,;
					(cAlB24Rs)->TOTAL-aValAnul[1],;
					(cAlB24Rs)->VALCONT-aValAnul[2],;
					(cAlB24Rs)->ICMSBASE,;
					(cAlB24Rs)->ICMSALIQ,;
					(cAlB24Rs)->ICMSVAL-aValAnul[3],;
					(cAlB24Rs)->ICMSRET,;
					(cAlB24Rs)->ICMSOUTR,;
					(cAlB24Rs)->DESCONT,;
					(cAlB24Rs)->SEGURO,;
					(cAlB24Rs)->DESPESA,;
					(cAlB24Rs)->FRETE,;
					(cAlB24Rs)->DTCANC,;
					(cAlB24Rs)->OBSERV,;
					(cAlB24Rs)->TES,;
					(cAlB24Rs)->CFOP,;
					(cAlB24Rs)->TIPO,;
					(cAlB24Rs)->ESPECIE,;
					(cAlB24Rs)->CCUSTO,;
					(cAlB24Rs)->CCDESC,;
					(cAlB24Rs)->EST,;
					(cAlB24Rs)->UFDESTR,;
					(cAlB24Rs)->UFORITR,;
					aValAnul[3]})
				nA24T07 += (cAlB24Rs)->VALCONT - aValAnul[2]
				nA24T08 += (cAlB24Rs)->ICMSVAL - aValAnul[3]
				//Se não for nenhuma das anteriores, é tributado
			else
				aAdd(aBrw24Tr,{	(cAlB24Rs)->FILIAL,;
					(cAlB24Rs)->DTENTRADA,;
					(cAlB24Rs)->SERIE,;
					(cAlB24Rs)->NFISCAL,;
					(cAlB24Rs)->ITEM,;
					(cAlB24Rs)->CLIEFOR,;
					(cAlB24Rs)->LOJA,;
					(cAlB24Rs)->NOME,;
					(cAlB24Rs)->CGC,;
					(cAlB24Rs)->SIMPLESNAC,;
					(cAlB24Rs)->CODPROD,;
					(cAlB24Rs)->PRODUTO,;
					(cAlB24Rs)->QUANT,;
					(cAlB24Rs)->PRCUNIT,;
					(cAlB24Rs)->TOTAL-aValAnul[1],;
					(cAlB24Rs)->VALCONT-aValAnul[2],;
					(cAlB24Rs)->ICMSBASE,;
					(cAlB24Rs)->ICMSALIQ,;
					(cAlB24Rs)->ICMSVAL-aValAnul[3],;
					(cAlB24Rs)->ICMSRET,;
					(cAlB24Rs)->ICMSOUTR,;
					(cAlB24Rs)->DESCONT,;
					(cAlB24Rs)->SEGURO,;
					(cAlB24Rs)->DESPESA,;
					(cAlB24Rs)->FRETE,;
					(cAlB24Rs)->DTCANC,;
					(cAlB24Rs)->OBSERV,;
					(cAlB24Rs)->TES,;
					(cAlB24Rs)->CFOP,;
					(cAlB24Rs)->TIPO,;
					(cAlB24Rs)->ESPECIE,;
					(cAlB24Rs)->CCUSTO,;
					(cAlB24Rs)->CCDESC,;
					(cAlB24Rs)->EST,;
					(cAlB24Rs)->UFDESTR,;
					(cAlB24Rs)->UFORITR,;
					aValAnul[3],;
					(cAlB24Rs)->D1VALICM})
				nA24T09 += (cAlB24Rs)->VALCONT - aValAnul[2]
				nA24T10 += (cAlB24Rs)->ICMSVAL - aValAnul[3]
				IF (cAlB24Rs)->D1VALICM == 0
					nA24T16 += 1
				ENDIF
			endif
		ENDIF
		(cAlB24Rs)->(DbSkip())
	EndDo

	//Carrega Array de Anulação de Frete
	DbSelectArea(cAlB24An)
	(cAlB24An)->(DbGoTop())
	While !(cAlB24An)->(eof())
		aAdd(aBrw24An,{	(cAlB24An)->FILIAL,;
			(cAlB24An)->DTENTRADA,;
			(cAlB24An)->SERIE,;
			(cAlB24An)->NFISCAL,;
			(cAlB24An)->ITEM,;
			(cAlB24An)->CLIEFOR,;
			(cAlB24An)->LOJA,;
			(cAlB24An)->NOME,;
			(cAlB24An)->CGC,;
			(cAlB24An)->SIMPLESNAC,;
			(cAlB24An)->CODPROD,;
			(cAlB24An)->PRODUTO,;
			(cAlB24An)->QUANT,;
			(cAlB24An)->PRCUNIT,;
			(cAlB24An)->TOTAL,;
			(cAlB24An)->VALCONT,;
			(cAlB24An)->ICMSBASE,;
			(cAlB24An)->ICMSALIQ,;
			(cAlB24An)->ICMSVAL,;
			(cAlB24An)->ICMSRET,;
			(cAlB24An)->ICMSOUTR,;
			(cAlB24An)->DESCONT,;
			(cAlB24An)->SEGURO,;
			(cAlB24An)->DESPESA,;
			(cAlB24An)->FRETE,;
			(cAlB24An)->DTCANC,;
			(cAlB24An)->OBSERV,;
			(cAlB24An)->TES,;
			(cAlB24An)->CFOP,;
			(cAlB24An)->TIPO,;
			(cAlB24An)->ESPECIE,;
			(cAlB24An)->CCUSTO,;
			(cAlB24An)->CCDESC,;
			(cAlB24An)->EST,;
			(cAlB24An)->UFDESTR,;
			(cAlB24An)->UFORITR})

		//INICIO Ticket 6225                    - Abel Babini - 07/12/2020 - Painel Fiscal - Criar linha para anulação extemporânea de frete
		dbSelectArea("SFT")
		dbSetOrder(1) //FT_FILIAL+FT_TIPOMOV+FT_SERIE+FT_NFISCAL+FT_CLIEFOR+FT_LOJA+FT_ITEM+FT_PRODUTO
		IF SFT->( MsSeek(xFilial("SFT")+"E"+(cAlB24An)->SERORI+PadL(Alltrim((cAlB24An)->NFORI),9,'0')+(cAlB24An)->CLIEFOR+(cAlB24An)->LOJA /*+ IIF(Alltrim((cAlB24An)->ITEMORI)='','0001',PadL(Alltrim((cAlB24An)->ITEMORI),4,'0')) +(cAlB24An)->PRODUTO*/) ) ;
			.AND. SFT->FT_ENTRADA < _mvpr01
			nA24T18 += (cAlB24An)->VALCONT
			nA24T19 += (cAlB24An)->ICMSVAL
		ELSE			
			nA24T11 += (cAlB24An)->VALCONT
			nA24T12 += (cAlB24An)->ICMSVAL
		ENDIF
		//FIM Ticket 6225                    - Abel Babini - 07/12/2020 - Painel Fiscal - Criar linha para anulação extemporânea de frete
		(cAlB24An)->(DbSkip())
	EndDo

	//Ticket 18004                   - Abel Babini - 17/08/2021 - Alterações no Painel Fiscal - Apuração de Frete e criação do relatório Débito Serv. Industrialização
	// nA24T06 := nA24T05 * _nAlFrST
	nA24T21 := nA24T20 * _nAlFrST
	nA24T02 := nA24T21 //nA24T06

	(cAlB24Rs)->(dbCloseArea())
	(cAlB24An)->(dbCloseArea())
	SysRefresh()
Return

/*/{Protheus.doc} Static Function ValAnul
	Gera Relatório Ref. Apuracao ICMS Frete
	@type  Static Function
	@author Abel Babini Filho
	@since 01/10/2019
	@version version
	/*/
Static Function ValAnul()
	Local aValAn	:= Array(4)
	aValAn[1]	:= 0
	aValAn[2]	:= 0
	aValAn[3]	:= 0
	aValAn[4]	:= ""

	DbSelectArea(cAlB24An)
	(cAlB24An)->(DbGoTop())
	While !(cAlB24An)->(eof())

		IF (cAlB24An)->SERORI == (cAlB24Rs)->SERIE .AND.;
				(cAlB24An)->NFORI == (cAlB24Rs)->NFISCAL .AND.;
				(cAlB24An)->ITEMORI == (cAlB24Rs)->ITEM .AND.;
				(cAlB24An)->CLIEFOR == (cAlB24Rs)->CLIEFOR .AND.;
				(cAlB24An)->LOJA == (cAlB24Rs)->LOJA

			//INICIO Ticket 6225                    - Abel Babini - 07/12/2020 - Painel Fiscal - Criar linha para anulação extemporânea de frete
			dbSelectArea("SFT")
			dbSetOrder(1) //FT_FILIAL+FT_TIPOMOV+FT_SERIE+FT_NFISCAL+FT_CLIEFOR+FT_LOJA+FT_ITEM+FT_PRODUTO
			IF SFT->( MsSeek(xFilial("SFT")+"E"+(cAlB24An)->SERORI+PadL(Alltrim((cAlB24An)->NFORI),9,'0')+(cAlB24An)->CLIEFOR+(cAlB24An)->LOJA /*+ IIF(Alltrim((cAlB24An)->ITEMORI)='','0001',PadL(Alltrim((cAlB24An)->ITEMORI),4,'0')) +(cAlB24An)->PRODUTO*/) ) ;
				.AND. SFT->FT_ENTRADA < _mvpr01
				//
			ELSE
				aValAn[1]	:= (cAlB24An)->TOTAL
				aValAn[2]	:= (cAlB24An)->VALCONT
				aValAn[3]	:= (cAlB24An)->ICMSVAL
				aValAn[4]	:= (cAlB24An)->SERIE+(cAlB24An)->NFISCAL+(cAlB24An)->ITEM
			ENDIF
			EXIT
		ENDIF


		(cAlB24An)->(DbSkip())
	EndDo
Return aValAn

/*/{Protheus.doc} Static Function xRelBr24
	Gera Relatório Ref. Apuracao ICMS Frete
	@type  Static Function
	@author Abel Babini Filho
	@since 01/10/2019
	@version version
	/*/
Static Function xRelBr24()
	Local aSays			:= {}
	Local aButtons		:= {}
	Local nOpca			:= 0
	//+-----------------------------------------------+
	//|Monta Form Batch - Interface com o Usuario     |
	//+-----------------------------------------------+
	AADD(aSays,"Este programa tem a finalidade de Gerar um arquivo Excel " )
	AADD(aSays,"Relatorio de ICMS sobre Fretes" )

	AADD(aButtons, { 1,.T.,{|o| nOpca:=1, o:oWnd:End(), Processa({||xRelBr24b()},"Gerando arquivo","Aguarde...")    }})
	AADD(aButtons, { 2,.T.,{|o| nOpca:=2, o:oWnd:End() }})
	FormBatch( cCadastr, aSays, aButtons )

	MsgInfo("Arquivo Excel gerado!")

Return

/*/{Protheus.doc} Static Function xRelBr24b
	Gera Relatório Ref. Apuracao ICMS Frete
	@type  Static Function
	@author Abel Babini Filho
	@since 01/10/2019
	@version version
	/*/
Static Function xRelBr24b()
	Private oExcel := FWMSEXCELEX():New()
	//Private cArquivo	:= cGetFile("Arquivo XML", "Selecione o diretório para salvar o relatório",,'C:\',.T.,GETF_RETDIRECTORY + GETF_LOCALHARD + GETF_NETWORKDRIVE)
	Private oMsExcel   := NIL

	cArquivo := cPathRel +  'RICMSFRETES_' + DTOS(DATE()) + STRTRAN(TIME(),':','') + '.XML'
	BEGIN SEQUENCE

		//IF .NOT.( ApOleClient("MsExcel") )   // se nao existir o excel sai fora..
		//	Alert("Nao Existe Excel Instalado")
		//	BREAK
		//EndIF

		//Planilha1 - Resumo
		Cab24P1()
		GEx24P1()

		//Planilha2 - Detalhe
		Cab24P2()
		GEx24P2()

		IF nOpMdl == 1
			//Planilha2 - Exportação
			Cab24P3()
			GEx24P3()

			//Planilha2 - Subst.Tributária Estadual
			Cab24P4()
			GEx24P4()

			//Planilha2 - Subst.Tributária Interestadual
			Cab24P9()
			GEx24P9()

			//Planilha2 - Transp.Funcionários
			Cab24P5()
			GEx24P5()

			//Planilha2 - Tributado
			Cab24P6()
			GEx24P6()

			//Chamado n.060517 - OS n.062030 - Abel Babini - 17/08/2020 - Altera regra de calculo do ICMS sobre Frete para os modelos 2 e 4
			//Planilha2 - Anulação de Frete
			Cab24P7()
			GEx24P7()

		ELSEIF nOpMdl == 2 .or. nOpMdl == 4 ////Ticket 6225                    - Abel Babini - 07/12/2020 - Painel Fiscal - Criar linha para anulação extemporânea de frete
			//Planilha2 - Subst.Tributária Estadual
			Cab24P4()
			GEx24P4()

			//Planilha2 - Transp.Funcionários
			Cab24P5()
			GEx24P5()

			//Planilha2 - Tributado
			Cab24P6()
			GEx24P6()

			//Planilha2 - Anulação de Frete
			Cab24P7()
			GEx24P7()
		ENDIF
	
		//Planilha2 - Análise Fornecedores
		Cab24P8()
		GEx24P8()
		

		SalvaXml()
		CriaExcel()

	END SEQUENCE

Return

/*/{Protheus.doc} Static Function Cab24P1
	Gera Relatório Ref. Apuracao ICMS Frete
	@type  Static Function
	@author Abel Babini Filho
	@since 01/10/2019
	@version version
	/*/
Static Function Cab24P1()
	oExcel:AddworkSheet(cFld241)
	oExcel:AddTable(cFld241,cFld24t1)
	oExcel:AddColumn(cFld241,cFld24t1,"Filial",1,1)
	oExcel:AddColumn(cFld241,cFld24t1,"Descrição",1,1)
	oExcel:AddColumn(cFld241,cFld24t1,"Vl. Total",2,3)
	oExcel:AddColumn(cFld241,cFld24t1,"Vl.ICMS",2,3)

RETURN(NIL)

/*/{Protheus.doc} Static Function GEx24P1
	Gera Relatório Ref. Apuracao ICMS Frete
	@type  Static Function
	@author Abel Babini Filho
	@since 01/10/2019
	@version version
	/*/
Static Function GEx24P1()
	//
	IF nOpMdl == 1
		oExcel:AddRow(cFld241,cFld24t1,{ cFilAnt, "Exportação" 							, nA24T03	, nA24T04 })
		//Ticket 18004                   - Abel Babini - 17/08/2021 - Alterações no Painel Fiscal - Apuração de Frete e criação do relatório Débito Serv. Industrialização
		oExcel:AddRow(cFld241,cFld24t1,{ cFilAnt, "Subst.Tributária Estadual", nA24T05	, nA24T06 })
		oExcel:AddRow(cFld241,cFld24t1,{ cFilAnt, "Subst.Tributária Interestadual", nA24T20	, nA24T21 })
		oExcel:AddRow(cFld241,cFld24t1,{ cFilAnt, "Transp.Funcionários" 		, nA24T07	, nA24T08 })
		oExcel:AddRow(cFld241,cFld24t1,{ cFilAnt, "Tributado" 							, nA24T09	, nA24T10 })
		oExcel:AddRow(cFld241,cFld24t1,{ cFilAnt, "Anulação de Frete" 			, nA24T11	, nA24T12 })
		oExcel:AddRow(cFld241,cFld24t1,{ cFilAnt, "Total" 									, nA24T01	, nA24T02 })

		//Ticket 6225                    - Abel Babini - 07/12/2020 - Painel Fiscal - Criar linha para anulação extemporânea de frete
		oExcel:AddRow(cFld241,cFld24t1,{ cFilAnt, "Anulação Extemporânea" 	, nA24T18	, nA24T19 })
	ELSEIF nOpMdl == 2 
		//Ticket 6225                    - Abel Babini - 07/12/2020 - Painel Fiscal - Criar linha para anulação extemporânea de frete
		oExcel:AddRow(cFld241,cFld24t1,{ cFilAnt, "Exportação" 							, nA24T03	, nA24T04 })
		//Ticket 18004                   - Abel Babini - 17/08/2021 - Alterações no Painel Fiscal - Apuração de Frete e criação do relatório Débito Serv. Industrialização
		oExcel:AddRow(cFld241,cFld24t1,{ cFilAnt, "Subst.Tributária Estadual", nA24T05	, nA24T06 })
		oExcel:AddRow(cFld241,cFld24t1,{ cFilAnt, "Subst.Tributária Interestadual", nA24T20	, nA24T21 })
		oExcel:AddRow(cFld241,cFld24t1,{ cFilAnt, "Transp.Funcionários" 		, nA24T07	, nA24T08 })
		oExcel:AddRow(cFld241,cFld24t1,{ cFilAnt, "Tributado" 							, nA24T09	, nA24T10 })
		oExcel:AddRow(cFld241,cFld24t1,{ cFilAnt, "Anulação de Frete" 			, nA24T11	, nA24T12 })

		//Chamado n.060517 - OS n.062030 - Abel Babini - 17/08/2020 - Altera regra de calculo do ICMS sobre Frete para os modelos 2 e 4
		IF _lMVCrFt			
			oExcel:AddRow(cFld241,cFld24t1,{ cFilAnt, "Total" 				, nA24T01	, nA24T02 })
		ELSE
			oExcel:AddRow(cFld241,cFld24t1,{ cFilAnt, "Total" 				, nA24T01	, nVFrt })
		ENDIF
		oExcel:AddRow(cFld241,cFld24t1,{ cFilAnt, "Anulação Extemporânea" 	, nA24T18	, nA24T19 })

	ELSEIF nOpMdl == 4
		oExcel:AddRow(cFld241,cFld24t1,{ cFilAnt, "Subst.Tributária" 	, nA24T05	, nA24T06 })
		//Chamado n.060517 - OS n.062030 - Abel Babini - 17/08/2020 - Altera regra de calculo do ICMS sobre Frete para os modelos 2 e 4
		oExcel:AddRow(cFld241,cFld24t1,{ cFilAnt, "Transp.Funcionários" , nA24T07	, nA24T08 })
		
		oExcel:AddRow(cFld241,cFld24t1,{ cFilAnt, "Tributado" 			, nA24T09	, nA24T10 })
		oExcel:AddRow(cFld241,cFld24t1,{ cFilAnt, "Anulação de Frete" 	, nA24T11	, nA24T12 })

		//Chamado n.060517 - OS n.062030 - Abel Babini - 17/08/2020 - Altera regra de calculo do ICMS sobre Frete para os modelos 2 e 4
		IF _lMVCrFt
			oExcel:AddRow(cFld241,cFld24t1,{ cFilAnt, "Total" 				, nA24T01	, nA24T02 })
		ELSE
			oExcel:AddRow(cFld241,cFld24t1,{ cFilAnt, "Total" 				, nA24T01	, nVFrt })
		ENDIF

		//Ticket 6225                    - Abel Babini - 07/12/2020 - Painel Fiscal - Criar linha para anulação extemporânea de frete
		oExcel:AddRow(cFld241,cFld24t1,{ cFilAnt, "Anulação Extemporânea" 	, nA24T18	, nA24T19 })
	ENDIF
	//
Return

/*/{Protheus.doc} Static Function Cab24P2
	Gera Relatório Ref. Apuracao ICMS Frete
	@type  Static Function
	@author Abel Babini Filho
	@since 01/10/2019
	@version version
	/*/
Static Function Cab24P2()
	oExcel:AddworkSheet(cFld242)
	oExcel:AddTable(cFld242,cFld24t2)
	oExcel:AddColumn(cFld242,cFld24t2,"Filial"		,1,1)
	oExcel:AddColumn(cFld242,cFld24t2,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld242,cFld24t2,"Série"		,1,1)
	oExcel:AddColumn(cFld242,cFld24t2,"NF"			,1,1)
	oExcel:AddColumn(cFld242,cFld24t2,"Item"		,1,1)
	oExcel:AddColumn(cFld242,cFld24t2,"Cod.Forn."	,1,1)
	oExcel:AddColumn(cFld242,cFld24t2,"Loja.Forn."	,1,1)
	oExcel:AddColumn(cFld242,cFld24t2,"Fornecedor"	,1,1)
	oExcel:AddColumn(cFld242,cFld24t2,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld242,cFld24t2,"Opt.Simples"	,1,1)
	oExcel:AddColumn(cFld242,cFld24t2,"Cod.Prod."	,1,1)
	oExcel:AddColumn(cFld242,cFld24t2,"Produto"		,1,1)
	oExcel:AddColumn(cFld242,cFld24t2,"Quant."		,2,2,.T.)
	oExcel:AddColumn(cFld242,cFld24t2,"Prc.Unit"	,2,3)
	oExcel:AddColumn(cFld242,cFld24t2,"Total"		,2,3,.T.)
	oExcel:AddColumn(cFld242,cFld24t2,"Vl.Cont."	,2,3,.T.)
	oExcel:AddColumn(cFld242,cFld24t2,"Base ICMS"	,2,3,.T.)
	oExcel:AddColumn(cFld242,cFld24t2,"Aliq.ICMS"	,2,3)
	oExcel:AddColumn(cFld242,cFld24t2,"Vl.ICMS"		,2,3,.T.)
	oExcel:AddColumn(cFld242,cFld24t2,"Vl.ICMS Ret.",2,3,.T.)
	oExcel:AddColumn(cFld242,cFld24t2,"Vl.ICMS Out.",2,3,.T.)
	oExcel:AddColumn(cFld242,cFld24t2,"Desconto"	,2,3,.T.)
	oExcel:AddColumn(cFld242,cFld24t2,"Seguro"		,2,3,.T.)
	oExcel:AddColumn(cFld242,cFld24t2,"Despesa"		,2,3,.T.)
	oExcel:AddColumn(cFld242,cFld24t2,"Frete"		,2,3,.T.)
	oExcel:AddColumn(cFld242,cFld24t2,"Dt.Canc."	,1,1)
	oExcel:AddColumn(cFld242,cFld24t2,"Observações"	,1,1)
	oExcel:AddColumn(cFld242,cFld24t2,"TES"			,1,1)
	oExcel:AddColumn(cFld242,cFld24t2,"CFOP"		,1,1)
	oExcel:AddColumn(cFld242,cFld24t2,"Tipo"		,1,1)
	oExcel:AddColumn(cFld242,cFld24t2,"Espécie"		,1,1)
	oExcel:AddColumn(cFld242,cFld24t2,"Centro Custo",1,1)
	oExcel:AddColumn(cFld242,cFld24t2,"Desc. CCusto",1,1)
	oExcel:AddColumn(cFld242,cFld24t2,"UF Forn."	,1,1)
	oExcel:AddColumn(cFld242,cFld24t2,"UF Origem"	,1,1)
	oExcel:AddColumn(cFld242,cFld24t2,"UF Destino"	,1,1)
	oExcel:AddColumn(cFld242,cFld24t2,"Vl.Anulação"	,2,3,.T.)

RETURN(NIL)

/*/{Protheus.doc} Static Function Cab24P3
	Gera Relatório Ref. Apuracao ICMS Frete
	@type  Static Function
	@author Abel Babini Filho
	@since 01/10/2019
	@version version
	/*/
Static Function Cab24P3()
	oExcel:AddworkSheet(cFld243)
	oExcel:AddTable(cFld243,cFld24t3)
	oExcel:AddColumn(cFld243,cFld24t3,"Filial"		,1,1)
	oExcel:AddColumn(cFld243,cFld24t3,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld243,cFld24t3,"Série"		,1,1)
	oExcel:AddColumn(cFld243,cFld24t3,"NF"			,1,1)
	oExcel:AddColumn(cFld243,cFld24t3,"Item"		,1,1)
	oExcel:AddColumn(cFld243,cFld24t3,"Cod.Forn."	,1,1)
	oExcel:AddColumn(cFld243,cFld24t3,"Loja.Forn."	,1,1)
	oExcel:AddColumn(cFld243,cFld24t3,"Fornecedor"	,1,1)
	oExcel:AddColumn(cFld243,cFld24t3,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld243,cFld24t3,"Opt.Simples"	,1,1)
	oExcel:AddColumn(cFld243,cFld24t3,"Cod.Prod."	,1,1)
	oExcel:AddColumn(cFld243,cFld24t3,"Produto"		,1,1)
	oExcel:AddColumn(cFld243,cFld24t3,"Quant."		,2,2,.T.)
	oExcel:AddColumn(cFld243,cFld24t3,"Prc.Unit"	,2,3)
	oExcel:AddColumn(cFld243,cFld24t3,"Total"		,2,3,.T.)
	oExcel:AddColumn(cFld243,cFld24t3,"Vl.Cont."	,2,3,.T.)
	oExcel:AddColumn(cFld243,cFld24t3,"Base ICMS"	,2,3,.T.)
	oExcel:AddColumn(cFld243,cFld24t3,"Aliq.ICMS"	,2,3)
	oExcel:AddColumn(cFld243,cFld24t3,"Vl.ICMS"		,2,3,.T.)
	oExcel:AddColumn(cFld243,cFld24t3,"Vl.ICMS Ret.",2,3,.T.)
	oExcel:AddColumn(cFld243,cFld24t3,"Vl.ICMS Out.",2,3,.T.)
	oExcel:AddColumn(cFld243,cFld24t3,"Desconto"	,2,3,.T.)
	oExcel:AddColumn(cFld243,cFld24t3,"Seguro"		,2,3,.T.)
	oExcel:AddColumn(cFld243,cFld24t3,"Despesa"		,2,3,.T.)
	oExcel:AddColumn(cFld243,cFld24t3,"Frete"		,2,3,.T.)
	oExcel:AddColumn(cFld243,cFld24t3,"Dt.Canc."	,1,1)
	oExcel:AddColumn(cFld243,cFld24t3,"Observações"	,1,1)
	oExcel:AddColumn(cFld243,cFld24t3,"TES"			,1,1)
	oExcel:AddColumn(cFld243,cFld24t3,"CFOP"		,1,1)
	oExcel:AddColumn(cFld243,cFld24t3,"Tipo"		,1,1)
	oExcel:AddColumn(cFld243,cFld24t3,"Espécie"		,1,1)
	oExcel:AddColumn(cFld243,cFld24t3,"Centro Custo",1,1)
	oExcel:AddColumn(cFld243,cFld24t3,"Desc. CCusto",1,1)
	oExcel:AddColumn(cFld243,cFld24t3,"UF Forn."	,1,1)
	oExcel:AddColumn(cFld243,cFld24t3,"UF Origem"	,1,1)
	oExcel:AddColumn(cFld243,cFld24t3,"UF Destino"	,1,1)
	oExcel:AddColumn(cFld243,cFld24t3,"Vl.Anulação"	,2,3,.T.)
RETURN(NIL)

/*/{Protheus.doc} Static Function Cab24P4
	Gera Relatório Ref. Apuracao ICMS Frete
	@type  Static Function
	@author Abel Babini Filho
	@since 01/10/2019
	@version version
	/*/
Static Function Cab24P4()
	oExcel:AddworkSheet(cFld244)
	oExcel:AddTable(cFld244,cFld24t4)
	oExcel:AddColumn(cFld244,cFld24t4,"Filial"		,1,1)
	oExcel:AddColumn(cFld244,cFld24t4,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld244,cFld24t4,"Série"		,1,1)
	oExcel:AddColumn(cFld244,cFld24t4,"NF"			,1,1)
	oExcel:AddColumn(cFld244,cFld24t4,"Item"		,1,1)
	oExcel:AddColumn(cFld244,cFld24t4,"Cod.Forn."	,1,1)
	oExcel:AddColumn(cFld244,cFld24t4,"Loja.Forn."	,1,1)
	oExcel:AddColumn(cFld244,cFld24t4,"Fornecedor"	,1,1)
	oExcel:AddColumn(cFld244,cFld24t4,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld244,cFld24t4,"Opt.Simples"	,1,1)
	oExcel:AddColumn(cFld244,cFld24t4,"Cod.Prod."	,1,1)
	oExcel:AddColumn(cFld244,cFld24t4,"Produto"		,1,1)
	oExcel:AddColumn(cFld244,cFld24t4,"Quant."		,2,2,.T.)
	oExcel:AddColumn(cFld244,cFld24t4,"Prc.Unit"	,2,3)
	oExcel:AddColumn(cFld244,cFld24t4,"Total"		,2,3,.T.)
	oExcel:AddColumn(cFld244,cFld24t4,"Vl.Cont."	,2,3,.T.)
	oExcel:AddColumn(cFld244,cFld24t4,"Base ICMS"	,2,3,.T.)
	oExcel:AddColumn(cFld244,cFld24t4,"Aliq.ICMS"	,2,3)
	oExcel:AddColumn(cFld244,cFld24t4,"Vl.ICMS"		,2,3,.T.)
	oExcel:AddColumn(cFld244,cFld24t4,"Vl.ICMS Ret.",2,3,.T.)
	oExcel:AddColumn(cFld244,cFld24t4,"Vl.ICMS Out.",2,3,.T.)
	oExcel:AddColumn(cFld244,cFld24t4,"Desconto"	,2,3,.T.)
	oExcel:AddColumn(cFld244,cFld24t4,"Seguro"		,2,3,.T.)
	oExcel:AddColumn(cFld244,cFld24t4,"Despesa"		,2,3,.T.)
	oExcel:AddColumn(cFld244,cFld24t4,"Frete"		,2,3,.T.)
	oExcel:AddColumn(cFld244,cFld24t4,"Dt.Canc."	,1,1)
	oExcel:AddColumn(cFld244,cFld24t4,"Observações"	,1,1)
	oExcel:AddColumn(cFld244,cFld24t4,"TES"			,1,1)
	oExcel:AddColumn(cFld244,cFld24t4,"CFOP"		,1,1)
	oExcel:AddColumn(cFld244,cFld24t4,"Tipo"		,1,1)
	oExcel:AddColumn(cFld244,cFld24t4,"Espécie"		,1,1)
	oExcel:AddColumn(cFld244,cFld24t4,"Centro Custo",1,1)
	oExcel:AddColumn(cFld244,cFld24t4,"Desc. CCusto",1,1)
	oExcel:AddColumn(cFld244,cFld24t4,"UF Forn."	,1,1)
	oExcel:AddColumn(cFld244,cFld24t4,"UF Origem"	,1,1)
	oExcel:AddColumn(cFld244,cFld24t4,"UF Destino"	,1,1)
	oExcel:AddColumn(cFld244,cFld24t4,"Vl.Anulação"	,2,3,.T.)
RETURN(NIL)

/*/{Protheus.doc} Static Function Cab24P5
	Gera Relatório Ref. Apuracao ICMS Frete
	@type  Static Function
	@author Abel Babini Filho
	@since 01/10/2019
	@version version
	/*/
Static Function Cab24P5()
	oExcel:AddworkSheet(cFld245)
	oExcel:AddTable(cFld245,cFld24t5)
	oExcel:AddColumn(cFld245,cFld24t5,"Filial"		,1,1)
	oExcel:AddColumn(cFld245,cFld24t5,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld245,cFld24t5,"Série"		,1,1)
	oExcel:AddColumn(cFld245,cFld24t5,"NF"			,1,1)
	oExcel:AddColumn(cFld245,cFld24t5,"Item"		,1,1)
	oExcel:AddColumn(cFld245,cFld24t5,"Cod.Forn."	,1,1)
	oExcel:AddColumn(cFld245,cFld24t5,"Loja.Forn."	,1,1)
	oExcel:AddColumn(cFld245,cFld24t5,"Fornecedor"	,1,1)
	oExcel:AddColumn(cFld245,cFld24t5,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld245,cFld24t5,"Opt.Simples"	,1,1)
	oExcel:AddColumn(cFld245,cFld24t5,"Cod.Prod."	,1,1)
	oExcel:AddColumn(cFld245,cFld24t5,"Produto"		,1,1)
	oExcel:AddColumn(cFld245,cFld24t5,"Quant."		,2,2,.T.)
	oExcel:AddColumn(cFld245,cFld24t5,"Prc.Unit"	,2,3)
	oExcel:AddColumn(cFld245,cFld24t5,"Total"		,2,3,.T.)
	oExcel:AddColumn(cFld245,cFld24t5,"Vl.Cont."	,2,3,.T.)
	oExcel:AddColumn(cFld245,cFld24t5,"Base ICMS"	,2,3,.T.)
	oExcel:AddColumn(cFld245,cFld24t5,"Aliq.ICMS"	,2,3)
	oExcel:AddColumn(cFld245,cFld24t5,"Vl.ICMS"		,2,3,.T.)
	oExcel:AddColumn(cFld245,cFld24t5,"Vl.ICMS Ret.",2,3,.T.)
	oExcel:AddColumn(cFld245,cFld24t5,"Vl.ICMS Out.",2,3,.T.)
	oExcel:AddColumn(cFld245,cFld24t5,"Desconto"	,2,3,.T.)
	oExcel:AddColumn(cFld245,cFld24t5,"Seguro"		,2,3,.T.)
	oExcel:AddColumn(cFld245,cFld24t5,"Despesa"		,2,3,.T.)
	oExcel:AddColumn(cFld245,cFld24t5,"Frete"		,2,3,.T.)
	oExcel:AddColumn(cFld245,cFld24t5,"Dt.Canc."	,1,1)
	oExcel:AddColumn(cFld245,cFld24t5,"Observações"	,1,1)
	oExcel:AddColumn(cFld245,cFld24t5,"TES"			,1,1)
	oExcel:AddColumn(cFld245,cFld24t5,"CFOP"		,1,1)
	oExcel:AddColumn(cFld245,cFld24t5,"Tipo"		,1,1)
	oExcel:AddColumn(cFld245,cFld24t5,"Espécie"		,1,1)
	oExcel:AddColumn(cFld245,cFld24t5,"Centro Custo",1,1)
	oExcel:AddColumn(cFld245,cFld24t5,"Desc. CCusto",1,1)
	oExcel:AddColumn(cFld245,cFld24t5,"UF Forn."	,1,1)
	oExcel:AddColumn(cFld245,cFld24t5,"UF Origem"	,1,1)
	oExcel:AddColumn(cFld245,cFld24t5,"UF Destino"	,1,1)
	oExcel:AddColumn(cFld245,cFld24t5,"Vl.Anulação"	,2,3,.T.)
RETURN(NIL)

/*/{Protheus.doc} Static Function Cab24P6
	Gera Relatório Ref. Apuracao ICMS Frete
	@type  Static Function
	@author Abel Babini Filho
	@since 01/10/2019
	@version version
	/*/
Static Function Cab24P6()
	oExcel:AddworkSheet(cFld246)
	oExcel:AddTable(cFld246,cFld24t6)
	oExcel:AddColumn(cFld246,cFld24t6,"Filial"		,1,1)
	oExcel:AddColumn(cFld246,cFld24t6,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld246,cFld24t6,"Série"		,1,1)
	oExcel:AddColumn(cFld246,cFld24t6,"NF"			,1,1)
	oExcel:AddColumn(cFld246,cFld24t6,"Item"		,1,1)
	oExcel:AddColumn(cFld246,cFld24t6,"Cod.Forn."	,1,1)
	oExcel:AddColumn(cFld246,cFld24t6,"Loja.Forn."	,1,1)
	oExcel:AddColumn(cFld246,cFld24t6,"Fornecedor"	,1,1)
	oExcel:AddColumn(cFld246,cFld24t6,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld246,cFld24t6,"Opt.Simples"	,1,1)
	oExcel:AddColumn(cFld246,cFld24t6,"Cod.Prod."	,1,1)
	oExcel:AddColumn(cFld246,cFld24t6,"Produto"		,1,1)
	oExcel:AddColumn(cFld246,cFld24t6,"Quant."		,2,2,.T.)
	oExcel:AddColumn(cFld246,cFld24t6,"Prc.Unit"	,2,3)
	oExcel:AddColumn(cFld246,cFld24t6,"Total"		,2,3,.T.)
	oExcel:AddColumn(cFld246,cFld24t6,"Vl.Cont."	,2,3,.T.)
	oExcel:AddColumn(cFld246,cFld24t6,"Base ICMS"	,2,3,.T.)
	oExcel:AddColumn(cFld246,cFld24t6,"Aliq.ICMS"	,2,3)
	oExcel:AddColumn(cFld246,cFld24t6,"Vl.ICMS"		,2,3,.T.)
	oExcel:AddColumn(cFld246,cFld24t6,"Vl.ICMS Ret.",2,3,.T.)
	oExcel:AddColumn(cFld246,cFld24t6,"Vl.ICMS Out.",2,3,.T.)
	oExcel:AddColumn(cFld246,cFld24t6,"Desconto"	,2,3,.T.)
	oExcel:AddColumn(cFld246,cFld24t6,"Seguro"		,2,3,.T.)
	oExcel:AddColumn(cFld246,cFld24t6,"Despesa"		,2,3,.T.)
	oExcel:AddColumn(cFld246,cFld24t6,"Frete"		,2,3,.T.)
	oExcel:AddColumn(cFld246,cFld24t6,"Dt.Canc."	,1,1)
	oExcel:AddColumn(cFld246,cFld24t6,"Observações"	,1,1)
	oExcel:AddColumn(cFld246,cFld24t6,"TES"			,1,1)
	oExcel:AddColumn(cFld246,cFld24t6,"CFOP"		,1,1)
	oExcel:AddColumn(cFld246,cFld24t6,"Tipo"		,1,1)
	oExcel:AddColumn(cFld246,cFld24t6,"Espécie"		,1,1)
	oExcel:AddColumn(cFld246,cFld24t6,"Centro Custo",1,1)
	oExcel:AddColumn(cFld246,cFld24t6,"Desc. CCusto",1,1)
	oExcel:AddColumn(cFld246,cFld24t6,"UF Forn."	,1,1)
	oExcel:AddColumn(cFld246,cFld24t6,"UF Origem"	,1,1)
	oExcel:AddColumn(cFld246,cFld24t6,"UF Destino"	,1,1)
	oExcel:AddColumn(cFld246,cFld24t6,"Vl.Anulação"	,2,3,.T.)
	oExcel:AddColumn(cFld246,cFld24t6,"Vl.ICMS SD1"	,2,3,.T.)
RETURN(NIL)

/*/{Protheus.doc} Static Function Cab24P7
	Gera Relatório Ref. Apuracao ICMS Frete
	@type  Static Function
	@author Abel Babini Filho
	@since 01/10/2019
	@version version
	/*/
Static Function Cab24P7()
	oExcel:AddworkSheet(cFld247)
	oExcel:AddTable(cFld247,cFld24t7)
	oExcel:AddColumn(cFld247,cFld24t7,"Filial"		,1,1)
	oExcel:AddColumn(cFld247,cFld24t7,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld247,cFld24t7,"Série"		,1,1)
	oExcel:AddColumn(cFld247,cFld24t7,"NF"			,1,1)
	oExcel:AddColumn(cFld247,cFld24t7,"Item"		,1,1)
	oExcel:AddColumn(cFld247,cFld24t7,"Cod.Forn."	,1,1)
	oExcel:AddColumn(cFld247,cFld24t7,"Loja.Forn."	,1,1)
	oExcel:AddColumn(cFld247,cFld24t7,"Fornecedor"	,1,1)
	oExcel:AddColumn(cFld247,cFld24t7,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld247,cFld24t7,"Opt.Simples"	,1,1)
	oExcel:AddColumn(cFld247,cFld24t7,"Cod.Prod."	,1,1)
	oExcel:AddColumn(cFld247,cFld24t7,"Produto"		,1,1)
	oExcel:AddColumn(cFld247,cFld24t7,"Quant."		,2,2,.T.)
	oExcel:AddColumn(cFld247,cFld24t7,"Prc.Unit"	,2,3)
	oExcel:AddColumn(cFld247,cFld24t7,"Total"		,2,3,.T.)
	oExcel:AddColumn(cFld247,cFld24t7,"Vl.Cont."	,2,3,.T.)
	oExcel:AddColumn(cFld247,cFld24t7,"Base ICMS"	,2,3,.T.)
	oExcel:AddColumn(cFld247,cFld24t7,"Aliq.ICMS"	,2,3)
	oExcel:AddColumn(cFld247,cFld24t7,"Vl.ICMS"		,2,3,.T.)
	oExcel:AddColumn(cFld247,cFld24t7,"Vl.ICMS Ret.",2,3,.T.)
	oExcel:AddColumn(cFld247,cFld24t7,"Vl.ICMS Out.",2,3,.T.)
	oExcel:AddColumn(cFld247,cFld24t7,"Desconto"	,2,3,.T.)
	oExcel:AddColumn(cFld247,cFld24t7,"Seguro"		,2,3,.T.)
	oExcel:AddColumn(cFld247,cFld24t7,"Despesa"		,2,3,.T.)
	oExcel:AddColumn(cFld247,cFld24t7,"Frete"		,2,3,.T.)
	oExcel:AddColumn(cFld247,cFld24t7,"Dt.Canc."	,1,1)
	oExcel:AddColumn(cFld247,cFld24t7,"Observações"	,1,1)
	oExcel:AddColumn(cFld247,cFld24t7,"TES"			,1,1)
	oExcel:AddColumn(cFld247,cFld24t7,"CFOP"		,1,1)
	oExcel:AddColumn(cFld247,cFld24t7,"Tipo"		,1,1)
	oExcel:AddColumn(cFld247,cFld24t7,"Espécie"		,1,1)
	oExcel:AddColumn(cFld247,cFld24t7,"Centro Custo",1,1)
	oExcel:AddColumn(cFld247,cFld24t7,"Desc. CCusto",1,1)
	oExcel:AddColumn(cFld247,cFld24t7,"UF Forn."	,1,1)
	oExcel:AddColumn(cFld247,cFld24t7,"UF Origem"	,1,1)
	oExcel:AddColumn(cFld247,cFld24t7,"UF Destino"	,1,1)
RETURN(NIL)

/*/{Protheus.doc} Static Function Cab24P8
	Gera Relatório Ref. Apuracao ICMS Frete
	@type  Static Function
	@author Abel Babini Filho
	@since 01/10/2019
	@version version
	/*/
Static Function Cab24P8()
	oExcel:AddworkSheet(cFld248)
	oExcel:AddTable(cFld248,cFld24t8)
	oExcel:AddColumn(cFld248,cFld24t8,"Filial"		,1,1)
	oExcel:AddColumn(cFld248,cFld24t8,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld248,cFld24t8,"Série"		,1,1)
	oExcel:AddColumn(cFld248,cFld24t8,"NF"			,1,1)
	oExcel:AddColumn(cFld248,cFld24t8,"Item"		,1,1)
	oExcel:AddColumn(cFld248,cFld24t8,"Cod.Forn."	,1,1)
	oExcel:AddColumn(cFld248,cFld24t8,"Loja.Forn."	,1,1)
	oExcel:AddColumn(cFld248,cFld24t8,"Fornecedor"	,1,1)
	oExcel:AddColumn(cFld248,cFld24t8,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld248,cFld24t8,"Opt.Simples"	,1,1)
	oExcel:AddColumn(cFld248,cFld24t8,"Cod.Prod."	,1,1)
	oExcel:AddColumn(cFld248,cFld24t8,"Produto"		,1,1)
	oExcel:AddColumn(cFld248,cFld24t8,"Quant."		,2,2,.T.)
	oExcel:AddColumn(cFld248,cFld24t8,"Prc.Unit"	,2,3)
	oExcel:AddColumn(cFld248,cFld24t8,"Total"		,2,3,.T.)
	oExcel:AddColumn(cFld248,cFld24t8,"Vl.Cont."	,2,3,.T.)
	oExcel:AddColumn(cFld248,cFld24t8,"Base ICMS"	,2,3,.T.)
	oExcel:AddColumn(cFld248,cFld24t8,"Aliq.ICMS"	,2,3)
	oExcel:AddColumn(cFld248,cFld24t8,"Vl.ICMS"		,2,3,.T.)
	oExcel:AddColumn(cFld248,cFld24t8,"Vl.ICMS Ret.",2,3,.T.)
	oExcel:AddColumn(cFld248,cFld24t8,"Vl.ICMS Out.",2,3,.T.)
	oExcel:AddColumn(cFld248,cFld24t8,"Desconto"	,2,3,.T.)
	oExcel:AddColumn(cFld248,cFld24t8,"Seguro"		,2,3,.T.)
	oExcel:AddColumn(cFld248,cFld24t8,"Despesa"		,2,3,.T.)
	oExcel:AddColumn(cFld248,cFld24t8,"Frete"		,2,3,.T.)
	oExcel:AddColumn(cFld248,cFld24t8,"Dt.Canc."	,1,1)
	oExcel:AddColumn(cFld248,cFld24t8,"Observações"	,1,1)
	oExcel:AddColumn(cFld248,cFld24t8,"TES"			,1,1)
	oExcel:AddColumn(cFld248,cFld24t8,"CFOP"		,1,1)
	oExcel:AddColumn(cFld248,cFld24t8,"Tipo"		,1,1)
	oExcel:AddColumn(cFld248,cFld24t8,"Espécie"		,1,1)
	oExcel:AddColumn(cFld248,cFld24t8,"Centro Custo",1,1)
	oExcel:AddColumn(cFld248,cFld24t8,"Desc. CCusto",1,1)
	oExcel:AddColumn(cFld248,cFld24t8,"UF Forn."	,1,1)
	oExcel:AddColumn(cFld248,cFld24t8,"UF Origem"	,1,1)
	oExcel:AddColumn(cFld248,cFld24t8,"UF Destino"	,1,1)
	oExcel:AddColumn(cFld248,cFld24t8,"Vl.Anulação"	,2,3,.T.)
RETURN(NIL)

/*/{Protheus.doc} Static Function Cab24P4
	Gera Relatório Ref. Apuracao ICMS Frete
	@type  Static Function
	@author Abel Babini Filho
	@since 01/10/2019
	@version version
	/*/
Static Function Cab24P9()
	oExcel:AddworkSheet(cFld249)
	oExcel:AddTable(cFld249,cFld24t9)
	oExcel:AddColumn(cFld249,cFld24t9,"Filial"		,1,1)
	oExcel:AddColumn(cFld249,cFld24t9,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld249,cFld24t9,"Série"		,1,1)
	oExcel:AddColumn(cFld249,cFld24t9,"NF"			,1,1)
	oExcel:AddColumn(cFld249,cFld24t9,"Item"		,1,1)
	oExcel:AddColumn(cFld249,cFld24t9,"Cod.Forn."	,1,1)
	oExcel:AddColumn(cFld249,cFld24t9,"Loja.Forn."	,1,1)
	oExcel:AddColumn(cFld249,cFld24t9,"Fornecedor"	,1,1)
	oExcel:AddColumn(cFld249,cFld24t9,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld249,cFld24t9,"Opt.Simples"	,1,1)
	oExcel:AddColumn(cFld249,cFld24t9,"Cod.Prod."	,1,1)
	oExcel:AddColumn(cFld249,cFld24t9,"Produto"		,1,1)
	oExcel:AddColumn(cFld249,cFld24t9,"Quant."		,2,2,.T.)
	oExcel:AddColumn(cFld249,cFld24t9,"Prc.Unit"	,2,3)
	oExcel:AddColumn(cFld249,cFld24t9,"Total"		,2,3,.T.)
	oExcel:AddColumn(cFld249,cFld24t9,"Vl.Cont."	,2,3,.T.)
	oExcel:AddColumn(cFld249,cFld24t9,"Base ICMS"	,2,3,.T.)
	oExcel:AddColumn(cFld249,cFld24t9,"Aliq.ICMS"	,2,3)
	oExcel:AddColumn(cFld249,cFld24t9,"Vl.ICMS"		,2,3,.T.)
	oExcel:AddColumn(cFld249,cFld24t9,"Vl.ICMS Ret.",2,3,.T.)
	oExcel:AddColumn(cFld249,cFld24t9,"Vl.ICMS Out.",2,3,.T.)
	oExcel:AddColumn(cFld249,cFld24t9,"Desconto"	,2,3,.T.)
	oExcel:AddColumn(cFld249,cFld24t9,"Seguro"		,2,3,.T.)
	oExcel:AddColumn(cFld249,cFld24t9,"Despesa"		,2,3,.T.)
	oExcel:AddColumn(cFld249,cFld24t9,"Frete"		,2,3,.T.)
	oExcel:AddColumn(cFld249,cFld24t9,"Dt.Canc."	,1,1)
	oExcel:AddColumn(cFld249,cFld24t9,"Observações"	,1,1)
	oExcel:AddColumn(cFld249,cFld24t9,"TES"			,1,1)
	oExcel:AddColumn(cFld249,cFld24t9,"CFOP"		,1,1)
	oExcel:AddColumn(cFld249,cFld24t9,"Tipo"		,1,1)
	oExcel:AddColumn(cFld249,cFld24t9,"Espécie"		,1,1)
	oExcel:AddColumn(cFld249,cFld24t9,"Centro Custo",1,1)
	oExcel:AddColumn(cFld249,cFld24t9,"Desc. CCusto",1,1)
	oExcel:AddColumn(cFld249,cFld24t9,"UF Forn."	,1,1)
	oExcel:AddColumn(cFld249,cFld24t9,"UF Origem"	,1,1)
	oExcel:AddColumn(cFld249,cFld24t9,"UF Destino"	,1,1)
	oExcel:AddColumn(cFld249,cFld24t9,"Vl.Anulação"	,2,3,.T.)
RETURN(NIL)

/*/{Protheus.doc} Static Function GEx24P2
	Gera Relatório Ref. Apuracao ICMS Frete
	@type  Static Function
	@author Abel Babini Filho
	@since 01/10/2019
	@version version
	/*/
Static Function GEx24P2()
	Local nExcel1
	//ExForCel('') //FORMATA EXCEL
	FOR nExcel1 := 1 TO Len(aBrw24Dt)
		oExcel:AddRow(cFld242,cFld24t2,{aBrw24Dt[nExcel1,01],;
			aBrw24Dt[nExcel1,02],;
			aBrw24Dt[nExcel1,03],;
			aBrw24Dt[nExcel1,04],;
			aBrw24Dt[nExcel1,05],;
			aBrw24Dt[nExcel1,06],;
			aBrw24Dt[nExcel1,07],;
			aBrw24Dt[nExcel1,08],;
			aBrw24Dt[nExcel1,09],;
			aBrw24Dt[nExcel1,10],;
			aBrw24Dt[nExcel1,11],;
			aBrw24Dt[nExcel1,12],;
			aBrw24Dt[nExcel1,13],;
			aBrw24Dt[nExcel1,14],;
			aBrw24Dt[nExcel1,15],;
			aBrw24Dt[nExcel1,16],;
			aBrw24Dt[nExcel1,17],;
			aBrw24Dt[nExcel1,18],;
			aBrw24Dt[nExcel1,19],;
			aBrw24Dt[nExcel1,20],;
			aBrw24Dt[nExcel1,21],;
			aBrw24Dt[nExcel1,22],;
			aBrw24Dt[nExcel1,23],;
			aBrw24Dt[nExcel1,24],;
			aBrw24Dt[nExcel1,25],;
			aBrw24Dt[nExcel1,26],;
			aBrw24Dt[nExcel1,27],;
			aBrw24Dt[nExcel1,28],;
			aBrw24Dt[nExcel1,29],;
			aBrw24Dt[nExcel1,30],;
			aBrw24Dt[nExcel1,31],;
			aBrw24Dt[nExcel1,32],;
			aBrw24Dt[nExcel1,33],;
			aBrw24Dt[nExcel1,34],;
			aBrw24Dt[nExcel1,35],;
			aBrw24Dt[nExcel1,36],;
			aBrw24Dt[nExcel1,37]})//,;
			//{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37})

	Next nExcel1
	//Linha Em branco
	oExcel:AddRow(cFld242,cFld24t2,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
	//ExForCel('TOT') //FORMATA EXCEL
RETURN

/*/{Protheus.doc} Static Function GEx24P3
	Gera Relatório Ref. Apuracao ICMS Frete
	@type  Static Function
	@author Abel Babini Filho
	@since 01/10/2019
	@version version
	/*/
Static Function GEx24P3()
	Local nExcel1
	FOR nExcel1 := 1 TO Len(aBrw24Ex)
		oExcel:AddRow(cFld243,cFld24t3,{aBrw24Ex[nExcel1,01],;
			aBrw24Ex[nExcel1,02],;
			aBrw24Ex[nExcel1,03],;
			aBrw24Ex[nExcel1,04],;
			aBrw24Ex[nExcel1,05],;
			aBrw24Ex[nExcel1,06],;
			aBrw24Ex[nExcel1,07],;
			aBrw24Ex[nExcel1,08],;
			aBrw24Ex[nExcel1,09],;
			aBrw24Ex[nExcel1,10],;
			aBrw24Ex[nExcel1,11],;
			aBrw24Ex[nExcel1,12],;
			aBrw24Ex[nExcel1,13],;
			aBrw24Ex[nExcel1,14],;
			aBrw24Ex[nExcel1,15],;
			aBrw24Ex[nExcel1,16],;
			aBrw24Ex[nExcel1,17],;
			aBrw24Ex[nExcel1,18],;
			aBrw24Ex[nExcel1,19],;
			aBrw24Ex[nExcel1,20],;
			aBrw24Ex[nExcel1,21],;
			aBrw24Ex[nExcel1,22],;
			aBrw24Ex[nExcel1,23],;
			aBrw24Ex[nExcel1,24],;
			aBrw24Ex[nExcel1,25],;
			aBrw24Ex[nExcel1,26],;
			aBrw24Ex[nExcel1,27],;
			aBrw24Ex[nExcel1,28],;
			aBrw24Ex[nExcel1,29],;
			aBrw24Ex[nExcel1,30],;
			aBrw24Ex[nExcel1,31],;
			aBrw24Ex[nExcel1,32],;
			aBrw24Ex[nExcel1,33],;
			aBrw24Ex[nExcel1,34],;
			aBrw24Ex[nExcel1,35],;
			aBrw24Ex[nExcel1,36],;
			aBrw24Ex[nExcel1,37]})


	Next nExcel1
	//Linha Em branco
	oExcel:AddRow(cFld243,cFld24t3,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
RETURN

/*/{Protheus.doc} Static Function GEx24P4
	Gera Relatório Ref. Apuracao ICMS Frete
	@type  Static Function
	@author Abel Babini Filho
	@since 01/10/2019
	@version version
	/*/
Static Function GEx24P4()
	Local nExcel1
	FOR nExcel1 := 1 TO Len(aBrw24ST)
		oExcel:AddRow(cFld244,cFld24t4,{aBrw24ST[nExcel1,01],;
			aBrw24ST[nExcel1,02],;
			aBrw24ST[nExcel1,03],;
			aBrw24ST[nExcel1,04],;
			aBrw24ST[nExcel1,05],;
			aBrw24ST[nExcel1,06],;
			aBrw24ST[nExcel1,07],;
			aBrw24ST[nExcel1,08],;
			aBrw24ST[nExcel1,09],;
			aBrw24ST[nExcel1,10],;
			aBrw24ST[nExcel1,11],;
			aBrw24ST[nExcel1,12],;
			aBrw24ST[nExcel1,13],;
			aBrw24ST[nExcel1,14],;
			aBrw24ST[nExcel1,15],;
			aBrw24ST[nExcel1,16],;
			aBrw24ST[nExcel1,17],;
			aBrw24ST[nExcel1,18],;
			aBrw24ST[nExcel1,19],;
			aBrw24ST[nExcel1,20],;
			aBrw24ST[nExcel1,21],;
			aBrw24ST[nExcel1,22],;
			aBrw24ST[nExcel1,23],;
			aBrw24ST[nExcel1,24],;
			aBrw24ST[nExcel1,25],;
			aBrw24ST[nExcel1,26],;
			aBrw24ST[nExcel1,27],;
			aBrw24ST[nExcel1,28],;
			aBrw24ST[nExcel1,29],;
			aBrw24ST[nExcel1,30],;
			aBrw24ST[nExcel1,31],;
			aBrw24ST[nExcel1,32],;
			aBrw24ST[nExcel1,33],;
			aBrw24ST[nExcel1,34],;
			aBrw24ST[nExcel1,35],;
			aBrw24ST[nExcel1,36],;
			aBrw24ST[nExcel1,37]})


	Next nExcel1
	//Linha Em branco
	oExcel:AddRow(cFld244,cFld24t4,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
RETURN

/*/{Protheus.doc} Static Function GEx24P5
	Gera Relatório Ref. Apuracao ICMS Frete
	@type  Static Function
	@author Abel Babini Filho
	@since 01/10/2019
	@version version
	/*/
Static Function GEx24P5()
	Local nExcel1
	FOR nExcel1 := 1 TO Len(aBrw24TF)
		oExcel:AddRow(cFld245,cFld24t5,{aBrw24TF[nExcel1,01],;
			aBrw24TF[nExcel1,02],;
			aBrw24TF[nExcel1,03],;
			aBrw24TF[nExcel1,04],;
			aBrw24TF[nExcel1,05],;
			aBrw24TF[nExcel1,06],;
			aBrw24TF[nExcel1,07],;
			aBrw24TF[nExcel1,08],;
			aBrw24TF[nExcel1,09],;
			aBrw24TF[nExcel1,10],;
			aBrw24TF[nExcel1,11],;
			aBrw24TF[nExcel1,12],;
			aBrw24TF[nExcel1,13],;
			aBrw24TF[nExcel1,14],;
			aBrw24TF[nExcel1,15],;
			aBrw24TF[nExcel1,16],;
			aBrw24TF[nExcel1,17],;
			aBrw24TF[nExcel1,18],;
			aBrw24TF[nExcel1,19],;
			aBrw24TF[nExcel1,20],;
			aBrw24TF[nExcel1,21],;
			aBrw24TF[nExcel1,22],;
			aBrw24TF[nExcel1,23],;
			aBrw24TF[nExcel1,24],;
			aBrw24TF[nExcel1,25],;
			aBrw24TF[nExcel1,26],;
			aBrw24TF[nExcel1,27],;
			aBrw24TF[nExcel1,28],;
			aBrw24TF[nExcel1,29],;
			aBrw24TF[nExcel1,30],;
			aBrw24TF[nExcel1,31],;
			aBrw24TF[nExcel1,32],;
			aBrw24TF[nExcel1,33],;
			aBrw24TF[nExcel1,34],;
			aBrw24TF[nExcel1,35],;
			aBrw24TF[nExcel1,36],;
			aBrw24TF[nExcel1,37]})


	Next nExcel1
	//Linha Em branco
	oExcel:AddRow(cFld245,cFld24t5,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
RETURN

/*/{Protheus.doc} Static Function GEx24P6
	Gera Relatório Ref. Apuracao ICMS Frete
	@type  Static Function
	@author Abel Babini Filho
	@since 01/10/2019
	@version version
	/*/
Static Function GEx24P6()
	Local nExcel1
	FOR nExcel1 := 1 TO Len(aBrw24Tr)
		oExcel:AddRow(cFld246,cFld24t6,{aBrw24Tr[nExcel1,01],;
			aBrw24Tr[nExcel1,02],;
			aBrw24Tr[nExcel1,03],;
			aBrw24Tr[nExcel1,04],;
			aBrw24Tr[nExcel1,05],;
			aBrw24Tr[nExcel1,06],;
			aBrw24Tr[nExcel1,07],;
			aBrw24Tr[nExcel1,08],;
			aBrw24Tr[nExcel1,09],;
			aBrw24Tr[nExcel1,10],;
			aBrw24Tr[nExcel1,11],;
			aBrw24Tr[nExcel1,12],;
			aBrw24Tr[nExcel1,13],;
			aBrw24Tr[nExcel1,14],;
			aBrw24Tr[nExcel1,15],;
			aBrw24Tr[nExcel1,16],;
			aBrw24Tr[nExcel1,17],;
			aBrw24Tr[nExcel1,18],;
			aBrw24Tr[nExcel1,19],;
			aBrw24Tr[nExcel1,20],;
			aBrw24Tr[nExcel1,21],;
			aBrw24Tr[nExcel1,22],;
			aBrw24Tr[nExcel1,23],;
			aBrw24Tr[nExcel1,24],;
			aBrw24Tr[nExcel1,25],;
			aBrw24Tr[nExcel1,26],;
			aBrw24Tr[nExcel1,27],;
			aBrw24Tr[nExcel1,28],;
			aBrw24Tr[nExcel1,29],;
			aBrw24Tr[nExcel1,30],;
			aBrw24Tr[nExcel1,31],;
			aBrw24Tr[nExcel1,32],;
			aBrw24Tr[nExcel1,33],;
			aBrw24Tr[nExcel1,34],;
			aBrw24Tr[nExcel1,35],;
			aBrw24Tr[nExcel1,36],;
			aBrw24Tr[nExcel1,37],;
			aBrw24Tr[nExcel1,38]})


	Next nExcel1
	//Linha Em branco
	oExcel:AddRow(cFld246,cFld24t6,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
RETURN

/*/{Protheus.doc} Static Function GEx24P7
	Gera Relatório Ref. Apuracao ICMS Frete
	@type  Static Function
	@author Abel Babini Filho
	@since 01/10/2019
	@version version
	/*/
Static Function GEx24P7()
	Local nExcel1
	FOR nExcel1 := 1 TO Len(aBrw24An)
		oExcel:AddRow(cFld247,cFld24t7,{aBrw24An[nExcel1,01],;
			aBrw24An[nExcel1,02],;
			aBrw24An[nExcel1,03],;
			aBrw24An[nExcel1,04],;
			aBrw24An[nExcel1,05],;
			aBrw24An[nExcel1,06],;
			aBrw24An[nExcel1,07],;
			aBrw24An[nExcel1,08],;
			aBrw24An[nExcel1,09],;
			aBrw24An[nExcel1,10],;
			aBrw24An[nExcel1,11],;
			aBrw24An[nExcel1,12],;
			aBrw24An[nExcel1,13],;
			aBrw24An[nExcel1,14],;
			aBrw24An[nExcel1,15],;
			aBrw24An[nExcel1,16],;
			aBrw24An[nExcel1,17],;
			aBrw24An[nExcel1,18],;
			aBrw24An[nExcel1,19],;
			aBrw24An[nExcel1,20],;
			aBrw24An[nExcel1,21],;
			aBrw24An[nExcel1,22],;
			aBrw24An[nExcel1,23],;
			aBrw24An[nExcel1,24],;
			aBrw24An[nExcel1,25],;
			aBrw24An[nExcel1,26],;
			aBrw24An[nExcel1,27],;
			aBrw24An[nExcel1,28],;
			aBrw24An[nExcel1,29],;
			aBrw24An[nExcel1,30],;
			aBrw24An[nExcel1,31],;
			aBrw24An[nExcel1,32],;
			aBrw24An[nExcel1,33],;
			aBrw24An[nExcel1,34],;
			aBrw24An[nExcel1,35],;
			aBrw24An[nExcel1,36]})


	Next nExcel1
	//Linha Em branco
	oExcel:AddRow(cFld247,cFld24t7,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
RETURN

/*/{Protheus.doc} Static Function GEx24P8
	Gera Relatório Ref. Apuracao ICMS Frete
	@type  Static Function
	@author Abel Babini Filho
	@since 01/10/2019
	@version version
	/*/
Static Function GEx24P8()
	Local nExcel1
	FOR nExcel1 := 1 TO Len(aBrw24Sp)
		oExcel:AddRow(cFld248,cFld24t8,{aBrw24Sp[nExcel1,01],;
			aBrw24Sp[nExcel1,02],;
			aBrw24Sp[nExcel1,03],;
			aBrw24Sp[nExcel1,04],;
			aBrw24Sp[nExcel1,05],;
			aBrw24Sp[nExcel1,06],;
			aBrw24Sp[nExcel1,07],;
			aBrw24Sp[nExcel1,08],;
			aBrw24Sp[nExcel1,09],;
			aBrw24Sp[nExcel1,10],;
			aBrw24Sp[nExcel1,11],;
			aBrw24Sp[nExcel1,12],;
			aBrw24Sp[nExcel1,13],;
			aBrw24Sp[nExcel1,14],;
			aBrw24Sp[nExcel1,15],;
			aBrw24Sp[nExcel1,16],;
			aBrw24Sp[nExcel1,17],;
			aBrw24Sp[nExcel1,18],;
			aBrw24Sp[nExcel1,19],;
			aBrw24Sp[nExcel1,20],;
			aBrw24Sp[nExcel1,21],;
			aBrw24Sp[nExcel1,22],;
			aBrw24Sp[nExcel1,23],;
			aBrw24Sp[nExcel1,24],;
			aBrw24Sp[nExcel1,25],;
			aBrw24Sp[nExcel1,26],;
			aBrw24Sp[nExcel1,27],;
			aBrw24Sp[nExcel1,28],;
			aBrw24Sp[nExcel1,29],;
			aBrw24Sp[nExcel1,30],;
			aBrw24Sp[nExcel1,31],;
			aBrw24Sp[nExcel1,32],;
			aBrw24Sp[nExcel1,33],;
			aBrw24Sp[nExcel1,34],;
			aBrw24Sp[nExcel1,35],;
			aBrw24Sp[nExcel1,36],;
			aBrw24Sp[nExcel1,37]})


	Next nExcel1
	//Linha Em branco
	oExcel:AddRow(cFld248,cFld24t8,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
RETURN

/*/{Protheus.doc} Static Function GEx24P9
	Gera Relatório Ref. Apuracao ICMS Frete
	@type  Static Function
	@author Abel Babini Filho
	@since 01/10/2019
	@version version
	/*/
Static Function GEx24P9()
	Local nExcel1
	FOR nExcel1 := 1 TO Len(aBrw24IE)
		oExcel:AddRow(cFld249,cFld24t9,{aBrw24IE[nExcel1,01],;
			aBrw24IE[nExcel1,02],;
			aBrw24IE[nExcel1,03],;
			aBrw24IE[nExcel1,04],;
			aBrw24IE[nExcel1,05],;
			aBrw24IE[nExcel1,06],;
			aBrw24IE[nExcel1,07],;
			aBrw24IE[nExcel1,08],;
			aBrw24IE[nExcel1,09],;
			aBrw24IE[nExcel1,10],;
			aBrw24IE[nExcel1,11],;
			aBrw24IE[nExcel1,12],;
			aBrw24IE[nExcel1,13],;
			aBrw24IE[nExcel1,14],;
			aBrw24IE[nExcel1,15],;
			aBrw24IE[nExcel1,16],;
			aBrw24IE[nExcel1,17],;
			aBrw24IE[nExcel1,18],;
			aBrw24IE[nExcel1,19],;
			aBrw24IE[nExcel1,20],;
			aBrw24IE[nExcel1,21],;
			aBrw24IE[nExcel1,22],;
			aBrw24IE[nExcel1,23],;
			aBrw24IE[nExcel1,24],;
			aBrw24IE[nExcel1,25],;
			aBrw24IE[nExcel1,26],;
			aBrw24IE[nExcel1,27],;
			aBrw24IE[nExcel1,28],;
			aBrw24IE[nExcel1,29],;
			aBrw24IE[nExcel1,30],;
			aBrw24IE[nExcel1,31],;
			aBrw24IE[nExcel1,32],;
			aBrw24IE[nExcel1,33],;
			aBrw24IE[nExcel1,34],;
			aBrw24IE[nExcel1,35],;
			aBrw24IE[nExcel1,36],;
			aBrw24IE[nExcel1,37]})
	Next nExcel1
	//Linha Em branco
	oExcel:AddRow(cFld249,cFld24t9,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
RETURN

// FIM n.050629  ³ Relatorio Apuração ICMS Frete - Abel Babini - 01/10/2019

// INICIO  n.050629  ³ Relatorio Compra de Aves - Abel Babini - 29/10/2019
/*/{Protheus.doc} Static Function xABrw16
	Carrega da dados Ref. Compra de Aves
	@type  Static Function
	@author Abel Babini Filho
	@since 29/10/2019
	@version 01
	/*/
Static Function xABrw16()
	If Select(cAlB16Rs) > 0
		(cAlB16Rs)->(dbCloseArea())
	Endif
	cAlB16Rs:=GetNextAlias()

	//Inicializa Variáveis
	aBrw16Rs	:= {}
	aBrw16Dt	:= {}

	BeginSQL  Alias cAlB16Rs
		column DTENTRADA as Date
		SELECT
			SFT.FT_FILIAL		AS FILIAL,
			SFT.FT_ENTRADA		AS DTENTRADA,
			SFT.FT_SERIE		AS SERIE,
			SFT.FT_NFISCAL		AS NFISCAL,
			SFT.FT_ITEM			AS ITEM,
			SFT.FT_CLIEFOR		AS CLIEFOR,
			SFT.FT_LOJA			AS LOJA,
			CASE WHEN (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) THEN SA2.A2_NOME ELSE SA1.A1_NOME END AS NOME,
			CASE WHEN (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) THEN SA2.A2_CGC ELSE SA1.A1_CGC END AS CGC,
			CASE WHEN (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) THEN (CASE WHEN SA2.A2_SIMPNAC = '1' THEN 'SIM' ELSE 'NÃO' END) ELSE (CASE WHEN SA1.A1_SIMPNAC = '1' THEN 'SIM' ELSE 'NÃO' END) END AS SIMPLESNAC,
			SFT.FT_PRODUTO		AS CODPROD,
			SB1.B1_DESC			AS PRODUTO,
			SFT.FT_QUANT		AS QUANT,
			SFT.FT_PRCUNIT		AS PRCUNIT,
			SFT.FT_TOTAL		AS TOTAL,
			SFT.FT_VALCONT		AS VALCONT,
			SFT.FT_BASEICM		AS ICMSBASE,
			SFT.FT_ALIQICM		AS ICMSALIQ,
			SFT.FT_VALICM		AS ICMSVAL,
			SFT.FT_ICMSRET		AS ICMSRET,
			SFT.FT_OUTRICM		AS ICMSOUTR,
			SFT.FT_DESCONT		AS DESCONT,
			SFT.FT_SEGURO		AS SEGURO,
			SFT.FT_DESPESA		AS DESPESA,
			SFT.FT_FRETE		AS FRETE,
			SFT.FT_DTCANC		AS DTCANC,
			SFT.FT_OBSERV		AS OBSERV,
			SFT.FT_TES			AS TES,
			SFT.FT_CFOP			AS CFOP,
			SFT.FT_TIPO			AS TIPO,
			SFT.FT_ESPECIE		AS ESPECIE,
			SD1.D1_CC			AS CCUSTO
		FROM %TABLE:SFT% SFT (NOLOCK) 
			LEFT JOIN %TABLE:SB1% SB1 (NOLOCK) ON
			SB1.B1_FILIAL = %xFilial:SB1%
			AND SB1.B1_COD = SFT.FT_PRODUTO
			AND SB1.%notDel%
		LEFT JOIN %TABLE:SA2% SA2 (NOLOCK) ON
			SA2.A2_FILIAL = %xFilial:SA2%
			AND SA2.A2_COD = SFT.FT_CLIEFOR
			AND SA2.A2_LOJA = SFT.FT_LOJA
			AND ( (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) )
			AND SA2.%notDel%
		LEFT JOIN %TABLE:SA1% SA1 (NOLOCK) ON
			SA1.A1_FILIAL = %xFilial:SA1%
			AND SA1.A1_COD = SFT.FT_CLIEFOR
			AND SA1.A1_LOJA = SFT.FT_LOJA
			AND ( (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO IN ('D','B') ) )
			AND SA1.%notDel%
		LEFT JOIN %TABLE:SD1% SD1 (NOLOCK) ON
			SD1.D1_FILIAL = SFT.FT_FILIAL
			AND SD1.D1_SERIE = SFT.FT_SERIE
			AND SD1.D1_DOC = SFT.FT_NFISCAL
			AND SD1.D1_FORNECE = SFT.FT_CLIEFOR
			AND SD1.D1_LOJA = SFT.FT_LOJA
			AND SD1.D1_ITEM = SFT.FT_ITEM
			AND SD1.%notDel%
		WHERE SFT.FT_FILIAL = %xFilial:SFT%
			AND SFT.FT_ENTRADA BETWEEN %Exp:DToS(_mvpr01)% AND %Exp:DToS(_mvpr02)%
			AND SFT.FT_PRODUTO IN %Exp:_cInPrAv%
			AND SFT.FT_CFOP NOT IN %Exp:_cInCfAv%
			AND SFT.FT_DTCANC = ''
			AND SFT.%notDel%
	EndSQL

	DbSelectArea(cAlB16Rs)
	(cAlB16Rs)->(DbGoTop())
	While !(cAlB16Rs)->(eof())

		nPos := ASCAN(aBrw16Rs, {|X| X[1] == Alltrim((cAlB16Rs)->CFOP)+Alltrim((cAlB16Rs)->CODPROD)})
		IF nPos == 0
			aAdd(aBrw16Rs,{Alltrim((cAlB16Rs)->CFOP)+Alltrim((cAlB16Rs)->CODPROD),;
										(cAlB16Rs)->FILIAL,;							
										(cAlB16Rs)->CFOP,;
										(cAlB16Rs)->CODPROD+' - '+(cAlB16Rs)->PRODUTO,;
										(cAlB16Rs)->QUANT,;
										(cAlB16Rs)->VALCONT,;
										(cAlB16Rs)->ICMSVAL,;
										Round((cAlB16Rs)->VALCONT/(cAlB16Rs)->QUANT,2)})
		ELSE
			aBrw16Rs[nPos,05] += (cAlB16Rs)->QUANT
			aBrw16Rs[nPos,06] += (cAlB16Rs)->VALCONT
			aBrw16Rs[nPos,07] += (cAlB16Rs)->ICMSVAL
			aBrw16Rs[nPos,08] += Round(aBrw16Rs[nPos,06]/aBrw16Rs[nPos,05],2)
		ENDIF

		aAdd(aBrw16Dt,{	(cAlB16Rs)->FILIAL,;
			(cAlB16Rs)->DTENTRADA,;
			(cAlB16Rs)->SERIE,;
			(cAlB16Rs)->NFISCAL,;
			(cAlB16Rs)->ITEM,;
			(cAlB16Rs)->CLIEFOR,;
			(cAlB16Rs)->LOJA,;
			(cAlB16Rs)->NOME,;
			(cAlB16Rs)->CGC,;
			(cAlB16Rs)->SIMPLESNAC,;
			(cAlB16Rs)->CODPROD,;
			(cAlB16Rs)->PRODUTO,;
			(cAlB16Rs)->QUANT,;
			(cAlB16Rs)->PRCUNIT,;
			(cAlB16Rs)->TOTAL,;
			(cAlB16Rs)->VALCONT,;
			(cAlB16Rs)->ICMSBASE,;
			(cAlB16Rs)->ICMSALIQ,;
			(cAlB16Rs)->ICMSVAL,;
			(cAlB16Rs)->ICMSRET,;
			(cAlB16Rs)->ICMSOUTR,;
			(cAlB16Rs)->DESCONT,;
			(cAlB16Rs)->SEGURO,;
			(cAlB16Rs)->DESPESA,;
			(cAlB16Rs)->FRETE,;
			(cAlB16Rs)->DTCANC,;
			(cAlB16Rs)->OBSERV,;
			(cAlB16Rs)->TES,;
			(cAlB16Rs)->CFOP,;
			(cAlB16Rs)->TIPO,;
			(cAlB16Rs)->ESPECIE,;
			(cAlB16Rs)->CCUSTO})
		(cAlB16Rs)->(DbSkip())
	EndDo

	(cAlB16Rs)->(dbCloseArea())
	SysRefresh()
Return

/*/{Protheus.doc} Static Function xRelBr16
	Gera Relatório Ref. Compra de Aves
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function xRelBr16()
	Local aSays			:= {}
	Local aButtons		:= {}
	Local nOpca			:= 0
	//+-----------------------------------------------+
	//|Monta Form Batch - Interface com o Usuario     |
	//+-----------------------------------------------+
	AADD(aSays,"Este programa tem a finalidade de Gerar um arquivo Excel " )
	AADD(aSays,"Relatorio de Compra de Aves" )

	AADD(aButtons, { 1,.T.,{|o| nOpca:=1, o:oWnd:End(), Processa({||xRelBr16b()},"Gerando arquivo","Aguarde...")    }})
	AADD(aButtons, { 2,.T.,{|o| nOpca:=2, o:oWnd:End() }})
	FormBatch( cCadastr, aSays, aButtons )

	MsgInfo("Arquivo Excel gerado!")

Return

/*/{Protheus.doc} Static Function xRelBr16b
	Gera Relatório Ref. Compra de Aves
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function xRelBr16b()
	Private oExcel     := FWMSEXCELEX():New()
	//Private cArquivo	:= cGetFile("Arquivo XML", "Selecione o diretório para salvar o relatório",,'C:\',.T.,GETF_RETDIRECTORY + GETF_LOCALHARD + GETF_NETWORKDRIVE)
	Private oMsExcel   := NIL

	cArquivo := cPathRel +  'RAVES_' + DTOS(DATE()) + STRTRAN(TIME(),':','') + '.XML'
	BEGIN SEQUENCE

		//IF .NOT.( ApOleClient("MsExcel") )   // se nao existir o excel sai fora..
		//	Alert("Nao Existe Excel Instalado")
		//	BREAK
		//EndIF

		//Planilha1 - Resumo
		Cab16P1()
		GEx16P1()

		//Planilha2 - Detalhe
		Cab16P2()
		GEx16P2()

		SalvaXml()
		CriaExcel()

	END SEQUENCE

Return

/*/{Protheus.doc} Static Function Cab16P1
	Gera Relatório Ref. Compra de Aves
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function Cab16P1()
	oExcel:AddworkSheet(cFld161)
	oExcel:AddTable(cFld161,cFld16t1)
	oExcel:AddColumn(cFld161,cFld16t1,"Filial",1,1)
	oExcel:AddColumn(cFld161,cFld16t1,"CFOP",1,1)
	oExcel:AddColumn(cFld161,cFld16t1,"Produto",1,1)
	oExcel:AddColumn(cFld161,cFld16t1,"Quantidade",2,3,.t.)
	oExcel:AddColumn(cFld161,cFld16t1,"Vl. Contábil",2,3,.t.)
	oExcel:AddColumn(cFld161,cFld16t1,"Vl. ICMS",2,3,.t.)
	oExcel:AddColumn(cFld161,cFld16t1,"Média Preço Unit.",2,3)
RETURN(NIL)

/*/{Protheus.doc} Static Function GEx16P1
	Gera Relatório Ref. Compra de Aves
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function GEx16P1()
	Local i
	For i:=1 to Len(aBrw16Rs)
		oExcel:AddRow(cFld161,cFld16t1,{	aBrw16Rs[i,2],;
																			aBrw16Rs[i,3],;
																			aBrw16Rs[i,4],;
																			aBrw16Rs[i,5],;
																			aBrw16Rs[i,6],;
																			aBrw16Rs[i,7],;
																			aBrw16Rs[i,8]})
	Next i

	oExcel:AddRow(cFld161,cFld16t1,{"","","","","","",""})
	//
Return

/*/{Protheus.doc} Static Function Cab16P2
	Gera Relatório Ref. Compra de Aves
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function Cab16P2()
	oExcel:AddworkSheet(cFld162)
	oExcel:AddTable(cFld162,cFld16t2)
	oExcel:AddColumn(cFld162,cFld16t2,"Filial"		,1,1)
	oExcel:AddColumn(cFld162,cFld16t2,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld162,cFld16t2,"Série"		,1,1)
	oExcel:AddColumn(cFld162,cFld16t2,"NF"			,1,1)
	oExcel:AddColumn(cFld162,cFld16t2,"Item"		,1,1)
	oExcel:AddColumn(cFld162,cFld16t2,"Cod.Forn."	,1,1)
	oExcel:AddColumn(cFld162,cFld16t2,"Loja.Forn."	,1,1)
	oExcel:AddColumn(cFld162,cFld16t2,"Fornecedor"	,1,1)
	oExcel:AddColumn(cFld162,cFld16t2,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld162,cFld16t2,"Opt.Simples"	,1,1)
	oExcel:AddColumn(cFld162,cFld16t2,"Cod.Prod."	,1,1)
	oExcel:AddColumn(cFld162,cFld16t2,"Produto"		,1,1)
	oExcel:AddColumn(cFld162,cFld16t2,"Quant."		,2,2,.T.)
	oExcel:AddColumn(cFld162,cFld16t2,"Prc.Unit"	,2,3)
	oExcel:AddColumn(cFld162,cFld16t2,"Total"		,2,3,.T.)
	oExcel:AddColumn(cFld162,cFld16t2,"Vl.Cont."	,2,3,.T.)
	oExcel:AddColumn(cFld162,cFld16t2,"Base ICMS"	,2,3,.T.)
	oExcel:AddColumn(cFld162,cFld16t2,"Aliq.ICMS"	,2,3)
	oExcel:AddColumn(cFld162,cFld16t2,"Vl.ICMS"		,2,3,.T.)
	oExcel:AddColumn(cFld162,cFld16t2,"Vl.ICMS Ret.",2,3,.T.)
	oExcel:AddColumn(cFld162,cFld16t2,"Vl.ICMS Out.",2,3,.T.)
	oExcel:AddColumn(cFld162,cFld16t2,"Desconto"	,2,3,.T.)
	oExcel:AddColumn(cFld162,cFld16t2,"Seguro"		,2,3,.T.)
	oExcel:AddColumn(cFld162,cFld16t2,"Despesa"		,2,3,.T.)
	oExcel:AddColumn(cFld162,cFld16t2,"Frete"		,2,3,.T.)
	oExcel:AddColumn(cFld162,cFld16t2,"Dt.Canc."	,1,1)
	oExcel:AddColumn(cFld162,cFld16t2,"Observações"	,1,1)
	oExcel:AddColumn(cFld162,cFld16t2,"TES"			,1,1)
	oExcel:AddColumn(cFld162,cFld16t2,"CFOP"		,1,1)
	oExcel:AddColumn(cFld162,cFld16t2,"Tipo"		,1,1)
	oExcel:AddColumn(cFld162,cFld16t2,"Espécie"		,1,1)
	oExcel:AddColumn(cFld162,cFld16t2,"Centro Custo",1,1)

RETURN(NIL)

/*/{Protheus.doc} Static Function GEx16P2
	Gera Relatório Ref. Compra de Aves
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function GEx16P2()
	Local nExcel1
	FOR nExcel1 := 1 TO Len(aBrw16Dt)
		oExcel:AddRow(cFld162,cFld16t2,{aBrw16Dt[nExcel1,01],;
			aBrw16Dt[nExcel1,02],;
			aBrw16Dt[nExcel1,03],;
			aBrw16Dt[nExcel1,04],;
			aBrw16Dt[nExcel1,05],;
			aBrw16Dt[nExcel1,06],;
			aBrw16Dt[nExcel1,07],;
			aBrw16Dt[nExcel1,08],;
			aBrw16Dt[nExcel1,09],;
			aBrw16Dt[nExcel1,10],;
			aBrw16Dt[nExcel1,11],;
			aBrw16Dt[nExcel1,12],;
			aBrw16Dt[nExcel1,13],;
			aBrw16Dt[nExcel1,14],;
			aBrw16Dt[nExcel1,15],;
			aBrw16Dt[nExcel1,16],;
			aBrw16Dt[nExcel1,17],;
			aBrw16Dt[nExcel1,18],;
			aBrw16Dt[nExcel1,19],;
			aBrw16Dt[nExcel1,20],;
			aBrw16Dt[nExcel1,21],;
			aBrw16Dt[nExcel1,22],;
			aBrw16Dt[nExcel1,23],;
			aBrw16Dt[nExcel1,24],;
			aBrw16Dt[nExcel1,25],;
			aBrw16Dt[nExcel1,26],;
			aBrw16Dt[nExcel1,27],;
			aBrw16Dt[nExcel1,28],;
			aBrw16Dt[nExcel1,29],;
			aBrw16Dt[nExcel1,30],;
			aBrw16Dt[nExcel1,31],;
			aBrw16Dt[nExcel1,32]})
	Next nExcel1
	//Linha Em branco
	oExcel:AddRow(cFld162,cFld16t2,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
RETURN

// FIM n.050629  ³ Relatorio Compra de Aves - Abel Babini - 29/10/2019

//INICIO Chamado n.050629 - OS n.054353 - Relatorio Graxaria - Abel Babini - 29/10/2019
/*/{Protheus.doc} Static Function xABrw14
	Carrega da dados Ref. Graxaria
	@type  Static Function
	@author Abel Babini Filho
	@since 29/10/2019
	@version 01
	/*/
Static Function xABrw14()
	Local cTipOper	:= ''
	Local _aFields	:= {}

	If Select(cAlB14Rs) > 0
		(cAlB14Rs)->(dbCloseArea())
	Endif
	cAlB14Rs:=GetNextAlias()

	If Select(cAlB04Tt) > 0
		(cAlB04Tt)->(dbCloseArea())
	Endif
	cAlB04Tt:=GetNextAlias()

	_aFields	:= CriaExtr(T14GRAXA)
	_aIndex		:= CriaInd(T14GRAXA)
	oAlB14Rs		:= CriaTmpT(cAlB04Tt, _aFields, _aIndex)

	//Inicializa Variáveis
	aBrw14Rs	:= {}
	aBrw14Sd	:= {}
	aBrw14Tr	:= {}
	aBrw14Dv	:= {}
	aBrw14Cp	:= {}
	aBrw14RV	:= {}
	aBrw14RT	:= {}
	aBrw14RD	:= {}
	nA14T01		:= 0
	nA14T02		:= 0
	nA14T03		:= 0
	nA14T11		:= 0
	nA14T12		:= 0
	nA14T13		:= 0
	nA14T21		:= 0
	nA14T22		:= 0
	nA14T23		:= 0
	nA14T31		:= 0
	nA14T32		:= 0
	nA14T33		:= 0

	BeginSQL  Alias cAlB14Rs
		column DTENTRADA as Date
		SELECT
			SFT.FT_FILIAL		AS FILIAL,
			SFT.FT_ENTRADA		AS DTENTRADA,
			SFT.FT_SERIE		AS SERIE,
			SFT.FT_NFISCAL		AS NFISCAL,
			SFT.FT_ITEM			AS ITEM,
			SFT.FT_CLIEFOR		AS CLIEFOR,
			SFT.FT_LOJA			AS LOJA,
			CASE WHEN (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) THEN SA2.A2_NOME ELSE SA1.A1_NOME END AS NOME,
			CASE WHEN (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) THEN SA2.A2_CGC ELSE SA1.A1_CGC END AS CGC,
			CASE WHEN (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) THEN (CASE WHEN SA2.A2_SIMPNAC = '1' THEN 'SIM' ELSE 'NÃO' END) ELSE (CASE WHEN SA1.A1_SIMPNAC = '1' THEN 'SIM' ELSE 'NÃO' END) END AS SIMPLESNAC,
			SFT.FT_PRODUTO		AS CODPROD,
			SB1.B1_DESC			AS PRODUTO,
			SFT.FT_QUANT		AS QUANT,
			SFT.FT_PRCUNIT		AS PRCUNIT,
			SFT.FT_TOTAL		AS TOTAL,
			SFT.FT_VALCONT		AS VALCONT,
			SFT.FT_BASEICM		AS ICMSBASE,
			SFT.FT_ALIQICM		AS ICMSALIQ,
			SFT.FT_VALICM		AS ICMSVAL,
			SFT.FT_ICMSRET		AS ICMSRET,
			SFT.FT_OUTRICM		AS ICMSOUTR,
			SFT.FT_DESCONT		AS DESCONT,
			SFT.FT_SEGURO		AS SEGURO,
			SFT.FT_DESPESA		AS DESPESA,
			SFT.FT_FRETE		AS FRETE,
			SFT.FT_DTCANC		AS DTCANC,
			SFT.FT_OBSERV		AS OBSERV,
			SFT.FT_TES			AS TES,
			SFT.FT_CFOP			AS CFOP,
			SFT.FT_TIPO			AS TIPO,
			SFT.FT_ESPECIE		AS ESPECIE,
			SD1.D1_CC			AS CCUSTO
		FROM %TABLE:SFT% SFT (NOLOCK) 
			LEFT JOIN %TABLE:SB1% SB1 (NOLOCK) ON
			SB1.B1_FILIAL = %xFilial:SB1%
			AND SB1.B1_COD = SFT.FT_PRODUTO
			AND SB1.%notDel%
			LEFT JOIN %TABLE:SA2% SA2 (NOLOCK) ON
			SA2.A2_FILIAL = %xFilial:SA2%
			AND SA2.A2_COD = SFT.FT_CLIEFOR
			AND SA2.A2_LOJA = SFT.FT_LOJA
			AND ( (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) )
			AND SA2.%notDel%
			LEFT JOIN %TABLE:SA1% SA1 (NOLOCK) ON
			SA1.A1_FILIAL = %xFilial:SA1%
			AND SA1.A1_COD = SFT.FT_CLIEFOR
			AND SA1.A1_LOJA = SFT.FT_LOJA
			AND ( (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO IN ('D','B') ) )
			AND SA1.%notDel%
			LEFT JOIN %TABLE:SD1% SD1 (NOLOCK) ON
			SD1.D1_FILIAL = SFT.FT_FILIAL
			AND SD1.D1_SERIE = SFT.FT_SERIE
			AND SD1.D1_DOC = SFT.FT_NFISCAL
			AND SD1.D1_FORNECE = SFT.FT_CLIEFOR
			AND SD1.D1_LOJA = SFT.FT_LOJA
			AND SD1.D1_ITEM = SFT.FT_ITEM
			AND SD1.%notDel%
		WHERE SFT.FT_FILIAL = %xFilial:SFT%
			AND SFT.FT_ENTRADA BETWEEN %Exp:DToS(_mvpr01)% AND %Exp:DToS(_mvpr02)%
			AND SFT.FT_POSIPI IN %Exp:_cGraxar%
			AND SFT.FT_DTCANC = ''
			AND SFT.%notDel%
	EndSQL

	DbSelectArea(cAlB14Rs)
	(cAlB14Rs)->(DbGoTop())
	While !(cAlB14Rs)->(eof())
		//
		IF Alltrim((cAlB14Rs)->CFOP) >= '5000' .AND. Alltrim((cAlB14Rs)->CFOP) < '6000' .AND. Alltrim((cAlB14Rs)->CFOP) != '5151'
			cTipOper := '1- SAIDAS PARA O ESTADO'
		ELSEIF Alltrim((cAlB14Rs)->CFOP) >= '6000' .AND. Alltrim((cAlB14Rs)->CFOP) < '7000' .AND. Alltrim((cAlB14Rs)->CFOP) != '6151'
			cTipOper := '2- SAIDAS FORA DO ESTADO'
		ELSEIF Alltrim((cAlB14Rs)->CFOP) == '5151' .OR. Alltrim((cAlB14Rs)->CFOP) == '6151'
			cTipOper := '3- TRANSFERENCIAS'
		ELSEIF Alltrim((cAlB14Rs)->CFOP) == '1201'
			cTipOper := '4- DEVOLUCOES NO ESTADO'
		ELSEIF Alltrim((cAlB14Rs)->CFOP) == '2201'
			cTipOper := '5- DEVOLUCOES FORA DO ESTADO'
		ENDIF
		//dbSelectArea(cAlB04Tt)
		//(cAlB04Tt)->(dbSetOrder(1))
		(cAlB04Tt)->(dbGoTop())
		IF (cAlB04Tt)->(dbSeek(cFilAnt+cTipOper+Alltrim((cAlB14Rs)->CFOP)+Alltrim((cAlB14Rs)->CODPROD)+Alltrim((cAlB14Rs)->PRODUTO)))
			RECLOCK(cAlB04Tt,.F.)
				(cAlB04Tt)->QUANT		+= (cAlB14Rs)->QUANT
				(cAlB04Tt)->VLCONT	+= (cAlB14Rs)->VALCONT
				(cAlB04Tt)->VLICMS	+= (cAlB14Rs)->ICMSVAL
			MSUNLOCK()	
		ELSE	
			RECLOCK(cAlB04Tt,.T.)
				(cAlB04Tt)->INDICE:=cFilAnt+cTipOper+Alltrim((cAlB14Rs)->CFOP)+Alltrim((cAlB14Rs)->CODPROD)+Alltrim((cAlB14Rs)->PRODUTO)
				(cAlB04Tt)->FILIAL:= cFilAnt
				(cAlB04Tt)->DESCR	:= cTipOper
				(cAlB04Tt)->PRODUTO	:= Alltrim((cAlB14Rs)->CFOP)+' - '+Alltrim((cAlB14Rs)->CODPROD)+' '+Alltrim((cAlB14Rs)->PRODUTO)
				(cAlB04Tt)->QUANT		:= (cAlB14Rs)->QUANT
				(cAlB04Tt)->VLCONT	:= (cAlB14Rs)->VALCONT
				(cAlB04Tt)->VLICMS	:= (cAlB14Rs)->ICMSVAL
			MSUNLOCK()	
		ENDIF

		aAdd(aBrw14Rs,{	(cAlB14Rs)->FILIAL,;
			(cAlB14Rs)->DTENTRADA,;
			(cAlB14Rs)->SERIE,;
			(cAlB14Rs)->NFISCAL,;
			(cAlB14Rs)->ITEM,;
			(cAlB14Rs)->CLIEFOR,;
			(cAlB14Rs)->LOJA,;
			(cAlB14Rs)->NOME,;
			(cAlB14Rs)->CGC,;
			(cAlB14Rs)->SIMPLESNAC,;
			(cAlB14Rs)->CODPROD,;
			(cAlB14Rs)->PRODUTO,;
			(cAlB14Rs)->QUANT,;
			(cAlB14Rs)->PRCUNIT,;
			(cAlB14Rs)->TOTAL,;
			(cAlB14Rs)->VALCONT,;
			(cAlB14Rs)->ICMSBASE,;
			(cAlB14Rs)->ICMSALIQ,;
			(cAlB14Rs)->ICMSVAL,;
			(cAlB14Rs)->ICMSRET,;
			(cAlB14Rs)->ICMSOUTR,;
			(cAlB14Rs)->DESCONT,;
			(cAlB14Rs)->SEGURO,;
			(cAlB14Rs)->DESPESA,;
			(cAlB14Rs)->FRETE,;
			(cAlB14Rs)->DTCANC,;
			(cAlB14Rs)->OBSERV,;
			(cAlB14Rs)->TES,;
			(cAlB14Rs)->CFOP,;
			(cAlB14Rs)->TIPO,;
			(cAlB14Rs)->ESPECIE,;
			(cAlB14Rs)->CCUSTO})
		//SAÍDAS
		IF Alltrim((cAlB14Rs)->CFOP) > '5000' .AND. !Alltrim((cAlB14Rs)->CFOP) $ '5151,6151'

			nPos := ASCAN(aBrw14RV, {|X| X[1] == Alltrim((cAlB14Rs)->CFOP)+Alltrim((cAlB14Rs)->CODPROD)})
			IF nPos == 0
				aAdd(aBrw14RV,{Alltrim((cAlB14Rs)->CFOP)+Alltrim((cAlB14Rs)->CODPROD),;
											(cAlB14Rs)->FILIAL,;
											(cAlB14Rs)->CFOP,;
											(cAlB14Rs)->CODPROD+' - '+(cAlB14Rs)->PRODUTO,;
											(cAlB14Rs)->QUANT,;
											(cAlB14Rs)->VALCONT,;
											(cAlB14Rs)->ICMSVAL})
			ELSE
				aBrw14RV[nPos,05] += (cAlB14Rs)->QUANT
				aBrw14RV[nPos,06] += (cAlB14Rs)->VALCONT
				aBrw14RV[nPos,07] += (cAlB14Rs)->ICMSVAL
			ENDIF
			aAdd(aBrw14Sd,{	(cAlB14Rs)->FILIAL,;
				(cAlB14Rs)->DTENTRADA,;
				(cAlB14Rs)->SERIE,;
				(cAlB14Rs)->NFISCAL,;
				(cAlB14Rs)->ITEM,;
				(cAlB14Rs)->CLIEFOR,;
				(cAlB14Rs)->LOJA,;
				(cAlB14Rs)->NOME,;
				(cAlB14Rs)->CGC,;
				(cAlB14Rs)->SIMPLESNAC,;
				(cAlB14Rs)->CODPROD,;
				(cAlB14Rs)->PRODUTO,;
				(cAlB14Rs)->QUANT,;
				(cAlB14Rs)->PRCUNIT,;
				(cAlB14Rs)->TOTAL,;
				(cAlB14Rs)->VALCONT,;
				(cAlB14Rs)->ICMSBASE,;
				(cAlB14Rs)->ICMSALIQ,;
				(cAlB14Rs)->ICMSVAL,;
				(cAlB14Rs)->ICMSRET,;
				(cAlB14Rs)->ICMSOUTR,;
				(cAlB14Rs)->DESCONT,;
				(cAlB14Rs)->SEGURO,;
				(cAlB14Rs)->DESPESA,;
				(cAlB14Rs)->FRETE,;
				(cAlB14Rs)->DTCANC,;
				(cAlB14Rs)->OBSERV,;
				(cAlB14Rs)->TES,;
				(cAlB14Rs)->CFOP,;
				(cAlB14Rs)->TIPO,;
				(cAlB14Rs)->ESPECIE,;
				(cAlB14Rs)->CCUSTO})
			nA14T01		+= (cAlB14Rs)->QUANT
			nA14T02		+= (cAlB14Rs)->VALCONT
			nA14T03		+= (cAlB14Rs)->ICMSVAL

		//TRANSFERÊNCIAS
		ELSEIF Alltrim((cAlB14Rs)->CFOP) $ '5151,6151'
			nPos := ASCAN(aBrw14RT, {|X| X[1] == Alltrim((cAlB14Rs)->CFOP)+Alltrim((cAlB14Rs)->CODPROD)})
			IF nPos == 0
				aAdd(aBrw14RT,{Alltrim((cAlB14Rs)->CFOP)+Alltrim((cAlB14Rs)->CODPROD),;
											(cAlB14Rs)->FILIAL,;							
											(cAlB14Rs)->CFOP,;
											(cAlB14Rs)->CODPROD+' - '+(cAlB14Rs)->PRODUTO,;
											(cAlB14Rs)->QUANT,;
											(cAlB14Rs)->VALCONT,;
											(cAlB14Rs)->ICMSVAL})
			ELSE
				aBrw14RT[nPos,05] += (cAlB14Rs)->QUANT
				aBrw14RT[nPos,06] += (cAlB14Rs)->VALCONT
				aBrw14RT[nPos,07] += (cAlB14Rs)->ICMSVAL
			ENDIF
			aAdd(aBrw14Tr,{	(cAlB14Rs)->FILIAL,;
				(cAlB14Rs)->DTENTRADA,;
				(cAlB14Rs)->SERIE,;
				(cAlB14Rs)->NFISCAL,;
				(cAlB14Rs)->ITEM,;
				(cAlB14Rs)->CLIEFOR,;
				(cAlB14Rs)->LOJA,;
				(cAlB14Rs)->NOME,;
				(cAlB14Rs)->CGC,;
				(cAlB14Rs)->SIMPLESNAC,;
				(cAlB14Rs)->CODPROD,;
				(cAlB14Rs)->PRODUTO,;
				(cAlB14Rs)->QUANT,;
				(cAlB14Rs)->PRCUNIT,;
				(cAlB14Rs)->TOTAL,;
				(cAlB14Rs)->VALCONT,;
				(cAlB14Rs)->ICMSBASE,;
				(cAlB14Rs)->ICMSALIQ,;
				(cAlB14Rs)->ICMSVAL,;
				(cAlB14Rs)->ICMSRET,;
				(cAlB14Rs)->ICMSOUTR,;
				(cAlB14Rs)->DESCONT,;
				(cAlB14Rs)->SEGURO,;
				(cAlB14Rs)->DESPESA,;
				(cAlB14Rs)->FRETE,;
				(cAlB14Rs)->DTCANC,;
				(cAlB14Rs)->OBSERV,;
				(cAlB14Rs)->TES,;
				(cAlB14Rs)->CFOP,;
				(cAlB14Rs)->TIPO,;
				(cAlB14Rs)->ESPECIE,;
				(cAlB14Rs)->CCUSTO})
			nA14T11		+= (cAlB14Rs)->QUANT
			nA14T12		+= (cAlB14Rs)->VALCONT
			nA14T13		+= (cAlB14Rs)->ICMSVAL
		//DEVOLUÇÕES
		ELSEIF Alltrim((cAlB14Rs)->CFOP) >= '1200' .AND. Alltrim((cAlB14Rs)->CFOP) <= '1299' .OR. ;
						Alltrim((cAlB14Rs)->CFOP) >= '2200' .AND. Alltrim((cAlB14Rs)->CFOP) <= '2299'

			nPos := ASCAN(aBrw14RD, {|X| X[1] == Alltrim((cAlB14Rs)->CFOP)+Alltrim((cAlB14Rs)->CODPROD)})
			IF nPos == 0
				aAdd(aBrw14RD,{Alltrim((cAlB14Rs)->CFOP)+Alltrim((cAlB14Rs)->CODPROD),;
											(cAlB14Rs)->FILIAL,;							
											(cAlB14Rs)->CFOP,;
											(cAlB14Rs)->CODPROD+' - '+(cAlB14Rs)->PRODUTO,;
											(cAlB14Rs)->QUANT,;
											(cAlB14Rs)->VALCONT,;
											(cAlB14Rs)->ICMSVAL})
			ELSE
				aBrw14RD[nPos,05] += (cAlB14Rs)->QUANT
				aBrw14RD[nPos,06] += (cAlB14Rs)->VALCONT
				aBrw14RD[nPos,07] += (cAlB14Rs)->ICMSVAL
			ENDIF

			aAdd(aBrw14Dv,{	(cAlB14Rs)->FILIAL,;
				(cAlB14Rs)->DTENTRADA,;
				(cAlB14Rs)->SERIE,;
				(cAlB14Rs)->NFISCAL,;
				(cAlB14Rs)->ITEM,;
				(cAlB14Rs)->CLIEFOR,;
				(cAlB14Rs)->LOJA,;
				(cAlB14Rs)->NOME,;
				(cAlB14Rs)->CGC,;
				(cAlB14Rs)->SIMPLESNAC,;
				(cAlB14Rs)->CODPROD,;
				(cAlB14Rs)->PRODUTO,;
				(cAlB14Rs)->QUANT,;
				(cAlB14Rs)->PRCUNIT,;
				(cAlB14Rs)->TOTAL,;
				(cAlB14Rs)->VALCONT,;
				(cAlB14Rs)->ICMSBASE,;
				(cAlB14Rs)->ICMSALIQ,;
				(cAlB14Rs)->ICMSVAL,;
				(cAlB14Rs)->ICMSRET,;
				(cAlB14Rs)->ICMSOUTR,;
				(cAlB14Rs)->DESCONT,;
				(cAlB14Rs)->SEGURO,;
				(cAlB14Rs)->DESPESA,;
				(cAlB14Rs)->FRETE,;
				(cAlB14Rs)->DTCANC,;
				(cAlB14Rs)->OBSERV,;
				(cAlB14Rs)->TES,;
				(cAlB14Rs)->CFOP,;
				(cAlB14Rs)->TIPO,;
				(cAlB14Rs)->ESPECIE,;
				(cAlB14Rs)->CCUSTO})
			nA14T21		+= (cAlB14Rs)->QUANT
			nA14T22		+= (cAlB14Rs)->VALCONT
			nA14T23		+= (cAlB14Rs)->ICMSVAL
		ELSEIF Alltrim((cAlB14Rs)->CFOP) < '5000' .AND. (Alltrim((cAlB14Rs)->CFOP) < '1200' .or. Alltrim((cAlB14Rs)->CFOP) > '1299') .and. (Alltrim((cAlB14Rs)->CFOP) < '2200' .or. Alltrim((cAlB14Rs)->CFOP) > '2299')
			aAdd(aBrw14Cp,{	(cAlB14Rs)->FILIAL,;
				(cAlB14Rs)->DTENTRADA,;
				(cAlB14Rs)->SERIE,;
				(cAlB14Rs)->NFISCAL,;
				(cAlB14Rs)->ITEM,;
				(cAlB14Rs)->CLIEFOR,;
				(cAlB14Rs)->LOJA,;
				(cAlB14Rs)->NOME,;
				(cAlB14Rs)->CGC,;
				(cAlB14Rs)->SIMPLESNAC,;
				(cAlB14Rs)->CODPROD,;
				(cAlB14Rs)->PRODUTO,;
				(cAlB14Rs)->QUANT,;
				(cAlB14Rs)->PRCUNIT,;
				(cAlB14Rs)->TOTAL,;
				(cAlB14Rs)->VALCONT,;
				(cAlB14Rs)->ICMSBASE,;
				(cAlB14Rs)->ICMSALIQ,;
				(cAlB14Rs)->ICMSVAL,;
				(cAlB14Rs)->ICMSRET,;
				(cAlB14Rs)->ICMSOUTR,;
				(cAlB14Rs)->DESCONT,;
				(cAlB14Rs)->SEGURO,;
				(cAlB14Rs)->DESPESA,;
				(cAlB14Rs)->FRETE,;
				(cAlB14Rs)->DTCANC,;
				(cAlB14Rs)->OBSERV,;
				(cAlB14Rs)->TES,;
				(cAlB14Rs)->CFOP,;
				(cAlB14Rs)->TIPO,;
				(cAlB14Rs)->ESPECIE,;
				(cAlB14Rs)->CCUSTO})
			nA14T31		+= (cAlB14Rs)->QUANT
			nA14T32		+= (cAlB14Rs)->VALCONT
			nA14T33		+= (cAlB14Rs)->ICMSVAL
		ENDIF

		(cAlB14Rs)->(DbSkip())
	EndDo

	(cAlB14Rs)->(dbCloseArea())
	
	(cAlB04Tt)->(dbGoTOP())
		
	SysRefresh()
Return

/*/{Protheus.doc} Static Function xRelBr16
	Gera Relatório Ref. Graxaria
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function xRelBr14()
	Local aSays			:= {}
	Local aButtons		:= {}
	Local nOpca			:= 0
	//+-----------------------------------------------+
	//|Monta Form Batch - Interface com o Usuario     |
	//+-----------------------------------------------+
	AADD(aSays,"Este programa tem a finalidade de Gerar um arquivo Excel " )
	AADD(aSays,"Relatorio de Graxaria" )

	AADD(aButtons, { 1,.T.,{|o| nOpca:=1, o:oWnd:End(), Processa({||xRelBr14b()},"Gerando arquivo","Aguarde...")    }})
	AADD(aButtons, { 2,.T.,{|o| nOpca:=2, o:oWnd:End() }})
	FormBatch( cCadastr, aSays, aButtons )

	MsgInfo("Arquivo Excel gerado!")

Return

/*/{Protheus.doc} Static Function xRelBr14b
	Gera Relatório Ref. Graxaria
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function xRelBr14b()
	Private oExcel     := FWMSEXCELEX():New()
	//Private cArquivo	:= cGetFile("Arquivo XML", "Selecione o diretório para salvar o relatório",,'C:\',.T.,GETF_RETDIRECTORY + GETF_LOCALHARD + GETF_NETWORKDRIVE)
	Private oMsExcel   := NIL

	cArquivo := cPathRel +  'RGRAXARIA_' + DTOS(DATE()) + STRTRAN(TIME(),':','') + '.XML'
	BEGIN SEQUENCE

		//IF .NOT.( ApOleClient("MsExcel") )   // se nao existir o excel sai fora..
		//	Alert("Nao Existe Excel Instalado")
		//	BREAK
		//EndIF

		//Planilha1 - Resumo
		Cab14P1()
		GEx14P1()

		//Planilha2 - Detalhe
		Cab14P2()
		GEx14P2()

		//Planilha2 - Detalhe Saídas
		Cab14P3()
		GEx14P3()

		//Planilha2 - Detalhe Transferências
		Cab14P4()
		GEx14P4()

		//Planilha2 - Detalhe Devoluções
		Cab14P5()
		GEx14P5()

		//Planilha2 - Detalhe Total da Operação
		Cab14P6()
		GEx14P6()
		
		SalvaXml()
		CriaExcel()

	END SEQUENCE

Return

/*/{Protheus.doc} Static Function Cab14P1
	Gera Relatório Ref. Graxaria
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function Cab14P1()
	oExcel:AddworkSheet(cFld141)
	oExcel:AddTable(cFld141,cFld14t1)
	oExcel:AddColumn(cFld141,cFld14t1,"Operação",1,1)
	oExcel:AddColumn(cFld141,cFld14t1,"Descrição",1,1)
	oExcel:AddColumn(cFld141,cFld14t1,"Quantidade",2,2)
	oExcel:AddColumn(cFld141,cFld14t1,"Vl. Total",2,3)
	oExcel:AddColumn(cFld141,cFld14t1,"Vl.ICMS",2,3)

RETURN(NIL)

/*/{Protheus.doc} Static Function GEx14P1
	Gera Relatório Ref. Graxaria
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function GEx14P1()
	Local nTot1 := 0
	Local nTot2 := 0
	Local nTot3 := 0
	Local nTot4 := 0
	Local nTot5 := 0
	Local nTot6 := 0
	//
	oExcel:AddRow(cFld141,cFld14t1,{ "SAIDAS", "", "", "", ""})	
	//SAIDAS PARA O ESTADO
	(cAlB04Tt)->(dbGoTOP())
	IF (cAlB04Tt)->(dbSeek(cFilAnt+'1- SAIDAS PARA O ESTADO'))
		While !(cAlB04Tt)->(eof()) .AND. Alltrim((cAlB04Tt)->DESCR) == '1- SAIDAS PARA O ESTADO'
			oExcel:AddRow(cFld141,cFld14t1,{ (cAlB04Tt)->DESCR, (cAlB04Tt)->PRODUTO, (cAlB04Tt)->QUANT, (cAlB04Tt)->VLCONT, (cAlB04Tt)->VLICMS})	
			nTot1 += (cAlB04Tt)->QUANT
			nTot2 += (cAlB04Tt)->VLCONT
			nTot3 += (cAlB04Tt)->VLICMS
			nTot4 += (cAlB04Tt)->QUANT
			nTot5 += (cAlB04Tt)->VLCONT
			nTot6 += (cAlB04Tt)->VLICMS
			(cAlB04Tt)->(dbSkip())
		EndDo
		oExcel:AddRow(cFld141,cFld14t1,{ "", "", nTot1, nTot2, nTot3})	
	ENDIF
	oExcel:AddRow(cFld141,cFld14t1,{ "", "", "", "", ""})	

	//SAIDAS PARA FORA DO ESTADO
	nTot1 := 0
	nTot2 := 0
	nTot3 := 0
	(cAlB04Tt)->(dbGoTOP())
	IF (cAlB04Tt)->(dbSeek(cFilAnt+'2- SAIDAS FORA DO ESTADO'))
		While !(cAlB04Tt)->(eof()) .AND. Alltrim((cAlB04Tt)->DESCR) == '2- SAIDAS FORA DO ESTADO'
			oExcel:AddRow(cFld141,cFld14t1,{ (cAlB04Tt)->DESCR, (cAlB04Tt)->PRODUTO, (cAlB04Tt)->QUANT, (cAlB04Tt)->VLCONT, (cAlB04Tt)->VLICMS})	
			nTot1 += (cAlB04Tt)->QUANT
			nTot2 += (cAlB04Tt)->VLCONT
			nTot3 += (cAlB04Tt)->VLICMS
			nTot4 += (cAlB04Tt)->QUANT
			nTot5 += (cAlB04Tt)->VLCONT
			nTot6 += (cAlB04Tt)->VLICMS
			(cAlB04Tt)->(dbSkip())
		EndDo
		oExcel:AddRow(cFld141,cFld14t1,{ "", "", nTot1, nTot2, nTot3})	
	ENDIF
	oExcel:AddRow(cFld141,cFld14t1,{ "", "", "", "", ""})	
	oExcel:AddRow(cFld141,cFld14t1,{ "TOTAL DAS SAÍDAS", "", nTot4, nTot5, nTot6})	

	oExcel:AddRow(cFld141,cFld14t1,{ "", "", "", "", ""})	
	oExcel:AddRow(cFld141,cFld14t1,{ "", "", "", "", ""})	

	//TRANSFERÊNCIAS
	oExcel:AddRow(cFld141,cFld14t1,{ "TRANSFERENCIAS", "", "", "", ""})	
	nTot1 := 0
	nTot2 := 0
	nTot3 := 0
	nTot4 := 0
	nTot5 := 0
	nTot6 := 0
	(cAlB04Tt)->(dbGoTOP())
	IF (cAlB04Tt)->(dbSeek(cFilAnt+'3- TRANSFERENCIAS'))
		While !(cAlB04Tt)->(eof()) .AND. Alltrim((cAlB04Tt)->DESCR) == '3- TRANSFERENCIAS'
			oExcel:AddRow(cFld141,cFld14t1,{ (cAlB04Tt)->DESCR, (cAlB04Tt)->PRODUTO, (cAlB04Tt)->QUANT, (cAlB04Tt)->VLCONT, (cAlB04Tt)->VLICMS})	
			nTot1 += (cAlB04Tt)->QUANT
			nTot2 += (cAlB04Tt)->VLCONT
			nTot3 += (cAlB04Tt)->VLICMS
			nTot4 += (cAlB04Tt)->QUANT
			nTot5 += (cAlB04Tt)->VLCONT
			nTot6 += (cAlB04Tt)->VLICMS
			(cAlB04Tt)->(dbSkip())
		EndDo
		//oExcel:AddRow(cFld141,cFld14t1,{ "", "", nTot1, nTot2, nTot3})	
	ENDIF
	//oExcel:AddRow(cFld141,cFld14t1,{ "", "", "", "", ""})	
	oExcel:AddRow(cFld141,cFld14t1,{ "TOTAL DAS TRANSFERENCIAS", "", nTot4, nTot5, nTot6})	

	oExcel:AddRow(cFld141,cFld14t1,{ "", "", "", "", ""})	
	oExcel:AddRow(cFld141,cFld14t1,{ "", "", "", "", ""})	

	//DEVOLUÇÕES NO ESTADO
	oExcel:AddRow(cFld141,cFld14t1,{ "DEVOLUÇÕES", "", "", "", ""})	
	nTot1 := 0
	nTot2 := 0
	nTot3 := 0
	nTot4 := 0
	nTot5 := 0
	nTot6 := 0
	(cAlB04Tt)->(dbGoTOP())
	IF (cAlB04Tt)->(dbSeek(cFilAnt+'4- DEVOLUCOES NO ESTADO'))
		While !(cAlB04Tt)->(eof()) .AND. Alltrim((cAlB04Tt)->DESCR) == '4- DEVOLUCOES NO ESTADO'
			oExcel:AddRow(cFld141,cFld14t1,{ (cAlB04Tt)->DESCR, (cAlB04Tt)->PRODUTO, (cAlB04Tt)->QUANT, (cAlB04Tt)->VLCONT, (cAlB04Tt)->VLICMS})	
			nTot1 += (cAlB04Tt)->QUANT
			nTot2 += (cAlB04Tt)->VLCONT
			nTot3 += (cAlB04Tt)->VLICMS
			nTot4 += (cAlB04Tt)->QUANT
			nTot5 += (cAlB04Tt)->VLCONT
			nTot6 += (cAlB04Tt)->VLICMS
			(cAlB04Tt)->(dbSkip())
		EndDo
		oExcel:AddRow(cFld141,cFld14t1,{ "", "", nTot1, nTot2, nTot3})	
	ENDIF

	//DEVOLUÇÕES PARA FORA DO ESTADO
	nTot1 := 0
	nTot2 := 0
	nTot3 := 0
	(cAlB04Tt)->(dbGoTOP())
	IF (cAlB04Tt)->(dbSeek(cFilAnt+'5- DEVOLUCOES FORA DO ESTADO'))
		While !(cAlB04Tt)->(eof()) .AND. Alltrim((cAlB04Tt)->DESCR) == '5- DEVOLUCOES FORA DO ESTADO'
			oExcel:AddRow(cFld141,cFld14t1,{ (cAlB04Tt)->DESCR, (cAlB04Tt)->PRODUTO, (cAlB04Tt)->QUANT, (cAlB04Tt)->VLCONT, (cAlB04Tt)->VLICMS})	
			nTot1 += (cAlB04Tt)->QUANT
			nTot2 += (cAlB04Tt)->VLCONT
			nTot3 += (cAlB04Tt)->VLICMS
			nTot4 += (cAlB04Tt)->QUANT
			nTot5 += (cAlB04Tt)->VLCONT
			nTot6 += (cAlB04Tt)->VLICMS
			(cAlB04Tt)->(dbSkip())
		EndDo
		oExcel:AddRow(cFld141,cFld14t1,{ "", "", nTot1, nTot2, nTot3})	
	ENDIF
	oExcel:AddRow(cFld141,cFld14t1,{ "TOTAL DAS DEVOLUÇÕES", "", nTot4, nTot5, nTot6})	
	//oExcel:AddRow(cFld141,cFld14t1,{ "", "", "", "", ""})	
Return

/*/{Protheus.doc} Static Function Cab14P2
	Gera Relatório Ref. Graxaria
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function Cab14P2()
	oExcel:AddworkSheet(cFld142)
	oExcel:AddTable(cFld142,cFld14t2)
	oExcel:AddColumn(cFld142,cFld14t2,"Filial"		,1,1)
	oExcel:AddColumn(cFld142,cFld14t2,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld142,cFld14t2,"Série"		,1,1)
	oExcel:AddColumn(cFld142,cFld14t2,"NF"			,1,1)
	oExcel:AddColumn(cFld142,cFld14t2,"Item"		,1,1)
	oExcel:AddColumn(cFld142,cFld14t2,"Cod.Forn."	,1,1)
	oExcel:AddColumn(cFld142,cFld14t2,"Loja.Forn."	,1,1)
	oExcel:AddColumn(cFld142,cFld14t2,"Fornecedor"	,1,1)
	oExcel:AddColumn(cFld142,cFld14t2,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld142,cFld14t2,"Opt.Simples"	,1,1)
	oExcel:AddColumn(cFld142,cFld14t2,"Cod.Prod."	,1,1)
	oExcel:AddColumn(cFld142,cFld14t2,"Produto"		,1,1)
	oExcel:AddColumn(cFld142,cFld14t2,"Quant."		,2,2,.T.)
	oExcel:AddColumn(cFld142,cFld14t2,"Prc.Unit"	,2,3)
	oExcel:AddColumn(cFld142,cFld14t2,"Total"		,2,3,.T.)
	oExcel:AddColumn(cFld142,cFld14t2,"Vl.Cont."	,2,3,.T.)
	oExcel:AddColumn(cFld142,cFld14t2,"Base ICMS"	,2,3,.T.)
	oExcel:AddColumn(cFld142,cFld14t2,"Aliq.ICMS"	,2,3)
	oExcel:AddColumn(cFld142,cFld14t2,"Vl.ICMS"		,2,3,.T.)
	oExcel:AddColumn(cFld142,cFld14t2,"Vl.ICMS Ret.",2,3,.T.)
	oExcel:AddColumn(cFld142,cFld14t2,"Vl.ICMS Out.",2,3,.T.)
	oExcel:AddColumn(cFld142,cFld14t2,"Desconto"	,2,3,.T.)
	oExcel:AddColumn(cFld142,cFld14t2,"Seguro"		,2,3,.T.)
	oExcel:AddColumn(cFld142,cFld14t2,"Despesa"		,2,3,.T.)
	oExcel:AddColumn(cFld142,cFld14t2,"Frete"		,2,3,.T.)
	oExcel:AddColumn(cFld142,cFld14t2,"Dt.Canc."	,1,1)
	oExcel:AddColumn(cFld142,cFld14t2,"Observações"	,1,1)
	oExcel:AddColumn(cFld142,cFld14t2,"TES"			,1,1)
	oExcel:AddColumn(cFld142,cFld14t2,"CFOP"		,1,1)
	oExcel:AddColumn(cFld142,cFld14t2,"Tipo"		,1,1)
	oExcel:AddColumn(cFld142,cFld14t2,"Espécie"		,1,1)
	oExcel:AddColumn(cFld142,cFld14t2,"Centro Custo",1,1)
RETURN(NIL)

/*/{Protheus.doc} Static Function Cab14P3
	Gera Relatório Ref. Graxaria
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function Cab14P3()
	oExcel:AddworkSheet(cFld143)
	oExcel:AddTable(cFld143,cFld14t3)
	oExcel:AddColumn(cFld143,cFld14t3,"Filial"		,1,1)
	oExcel:AddColumn(cFld143,cFld14t3,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld143,cFld14t3,"Série"		,1,1)
	oExcel:AddColumn(cFld143,cFld14t3,"NF"			,1,1)
	oExcel:AddColumn(cFld143,cFld14t3,"Item"		,1,1)
	oExcel:AddColumn(cFld143,cFld14t3,"Cod.Forn."	,1,1)
	oExcel:AddColumn(cFld143,cFld14t3,"Loja.Forn."	,1,1)
	oExcel:AddColumn(cFld143,cFld14t3,"Fornecedor"	,1,1)
	oExcel:AddColumn(cFld143,cFld14t3,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld143,cFld14t3,"Opt.Simples"	,1,1)
	oExcel:AddColumn(cFld143,cFld14t3,"Cod.Prod."	,1,1)
	oExcel:AddColumn(cFld143,cFld14t3,"Produto"		,1,1)
	oExcel:AddColumn(cFld143,cFld14t3,"Quant."		,2,2,.T.)
	oExcel:AddColumn(cFld143,cFld14t3,"Prc.Unit"	,2,3)
	oExcel:AddColumn(cFld143,cFld14t3,"Total"		,2,3,.T.)
	oExcel:AddColumn(cFld143,cFld14t3,"Vl.Cont."	,2,3,.T.)
	oExcel:AddColumn(cFld143,cFld14t3,"Base ICMS"	,2,3,.T.)
	oExcel:AddColumn(cFld143,cFld14t3,"Aliq.ICMS"	,2,3)
	oExcel:AddColumn(cFld143,cFld14t3,"Vl.ICMS"		,2,3,.T.)
	oExcel:AddColumn(cFld143,cFld14t3,"Vl.ICMS Ret.",2,3,.T.)
	oExcel:AddColumn(cFld143,cFld14t3,"Vl.ICMS Out.",2,3,.T.)
	oExcel:AddColumn(cFld143,cFld14t3,"Desconto"	,2,3,.T.)
	oExcel:AddColumn(cFld143,cFld14t3,"Seguro"		,2,3,.T.)
	oExcel:AddColumn(cFld143,cFld14t3,"Despesa"		,2,3,.T.)
	oExcel:AddColumn(cFld143,cFld14t3,"Frete"		,2,3,.T.)
	oExcel:AddColumn(cFld143,cFld14t3,"Dt.Canc."	,1,1)
	oExcel:AddColumn(cFld143,cFld14t3,"Observações"	,1,1)
	oExcel:AddColumn(cFld143,cFld14t3,"TES"			,1,1)
	oExcel:AddColumn(cFld143,cFld14t3,"CFOP"		,1,1)
	oExcel:AddColumn(cFld143,cFld14t3,"Tipo"		,1,1)
	oExcel:AddColumn(cFld143,cFld14t3,"Espécie"		,1,1)
	oExcel:AddColumn(cFld143,cFld14t3,"Centro Custo",1,1)
RETURN(NIL)

/*/{Protheus.doc} Static Function Cab14P4
	Gera Relatório Ref. Graxaria
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function Cab14P4()
	oExcel:AddworkSheet(cFld144)
	oExcel:AddTable(cFld144,cFld14t4)
	oExcel:AddColumn(cFld144,cFld14t4,"Filial"		,1,1)
	oExcel:AddColumn(cFld144,cFld14t4,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld144,cFld14t4,"Série"		,1,1)
	oExcel:AddColumn(cFld144,cFld14t4,"NF"			,1,1)
	oExcel:AddColumn(cFld144,cFld14t4,"Item"		,1,1)
	oExcel:AddColumn(cFld144,cFld14t4,"Cod.Forn."	,1,1)
	oExcel:AddColumn(cFld144,cFld14t4,"Loja.Forn."	,1,1)
	oExcel:AddColumn(cFld144,cFld14t4,"Fornecedor"	,1,1)
	oExcel:AddColumn(cFld144,cFld14t4,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld144,cFld14t4,"Opt.Simples"	,1,1)
	oExcel:AddColumn(cFld144,cFld14t4,"Cod.Prod."	,1,1)
	oExcel:AddColumn(cFld144,cFld14t4,"Produto"		,1,1)
	oExcel:AddColumn(cFld144,cFld14t4,"Quant."		,2,2,.T.)
	oExcel:AddColumn(cFld144,cFld14t4,"Prc.Unit"	,2,3)
	oExcel:AddColumn(cFld144,cFld14t4,"Total"		,2,3,.T.)
	oExcel:AddColumn(cFld144,cFld14t4,"Vl.Cont."	,2,3,.T.)
	oExcel:AddColumn(cFld144,cFld14t4,"Base ICMS"	,2,3,.T.)
	oExcel:AddColumn(cFld144,cFld14t4,"Aliq.ICMS"	,2,3)
	oExcel:AddColumn(cFld144,cFld14t4,"Vl.ICMS"		,2,3,.T.)
	oExcel:AddColumn(cFld144,cFld14t4,"Vl.ICMS Ret.",2,3,.T.)
	oExcel:AddColumn(cFld144,cFld14t4,"Vl.ICMS Out.",2,3,.T.)
	oExcel:AddColumn(cFld144,cFld14t4,"Desconto"	,2,3,.T.)
	oExcel:AddColumn(cFld144,cFld14t4,"Seguro"		,2,3,.T.)
	oExcel:AddColumn(cFld144,cFld14t4,"Despesa"		,2,3,.T.)
	oExcel:AddColumn(cFld144,cFld14t4,"Frete"		,2,3,.T.)
	oExcel:AddColumn(cFld144,cFld14t4,"Dt.Canc."	,1,1)
	oExcel:AddColumn(cFld144,cFld14t4,"Observações"	,1,1)
	oExcel:AddColumn(cFld144,cFld14t4,"TES"			,1,1)
	oExcel:AddColumn(cFld144,cFld14t4,"CFOP"		,1,1)
	oExcel:AddColumn(cFld144,cFld14t4,"Tipo"		,1,1)
	oExcel:AddColumn(cFld144,cFld14t4,"Espécie"		,1,1)
	oExcel:AddColumn(cFld144,cFld14t4,"Centro Custo",1,1)
RETURN(NIL)

/*/{Protheus.doc} Static Function Cab14P5
	Gera Relatório Ref. Graxaria
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function Cab14P5()
	oExcel:AddworkSheet(cFld145)
	oExcel:AddTable(cFld145,cFld14t5)
	oExcel:AddColumn(cFld145,cFld14t5,"Filial"		,1,1)
	oExcel:AddColumn(cFld145,cFld14t5,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld145,cFld14t5,"Série"		,1,1)
	oExcel:AddColumn(cFld145,cFld14t5,"NF"			,1,1)
	oExcel:AddColumn(cFld145,cFld14t5,"Item"		,1,1)
	oExcel:AddColumn(cFld145,cFld14t5,"Cod.Forn."	,1,1)
	oExcel:AddColumn(cFld145,cFld14t5,"Loja.Forn."	,1,1)
	oExcel:AddColumn(cFld145,cFld14t5,"Fornecedor"	,1,1)
	oExcel:AddColumn(cFld145,cFld14t5,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld145,cFld14t5,"Opt.Simples"	,1,1)
	oExcel:AddColumn(cFld145,cFld14t5,"Cod.Prod."	,1,1)
	oExcel:AddColumn(cFld145,cFld14t5,"Produto"		,1,1)
	oExcel:AddColumn(cFld145,cFld14t5,"Quant."		,2,2,.T.)
	oExcel:AddColumn(cFld145,cFld14t5,"Prc.Unit"	,2,3)
	oExcel:AddColumn(cFld145,cFld14t5,"Total"		,2,3,.T.)
	oExcel:AddColumn(cFld145,cFld14t5,"Vl.Cont."	,2,3,.T.)
	oExcel:AddColumn(cFld145,cFld14t5,"Base ICMS"	,2,3,.T.)
	oExcel:AddColumn(cFld145,cFld14t5,"Aliq.ICMS"	,2,3)
	oExcel:AddColumn(cFld145,cFld14t5,"Vl.ICMS"		,2,3,.T.)
	oExcel:AddColumn(cFld145,cFld14t5,"Vl.ICMS Ret.",2,3,.T.)
	oExcel:AddColumn(cFld145,cFld14t5,"Vl.ICMS Out.",2,3,.T.)
	oExcel:AddColumn(cFld145,cFld14t5,"Desconto"	,2,3,.T.)
	oExcel:AddColumn(cFld145,cFld14t5,"Seguro"		,2,3,.T.)
	oExcel:AddColumn(cFld145,cFld14t5,"Despesa"		,2,3,.T.)
	oExcel:AddColumn(cFld145,cFld14t5,"Frete"		,2,3,.T.)
	oExcel:AddColumn(cFld145,cFld14t5,"Dt.Canc."	,1,1)
	oExcel:AddColumn(cFld145,cFld14t5,"Observações"	,1,1)
	oExcel:AddColumn(cFld145,cFld14t5,"TES"			,1,1)
	oExcel:AddColumn(cFld145,cFld14t5,"CFOP"		,1,1)
	oExcel:AddColumn(cFld145,cFld14t5,"Tipo"		,1,1)
	oExcel:AddColumn(cFld145,cFld14t5,"Espécie"		,1,1)
	oExcel:AddColumn(cFld145,cFld14t5,"Centro Custo",1,1)
RETURN(NIL)

/*/{Protheus.doc} Static Function Cab14P6
	Gera Relatório Ref. Graxaria
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function Cab14P6()
	oExcel:AddworkSheet(cFld146)
	oExcel:AddTable(cFld146,cFld14t6)
	oExcel:AddColumn(cFld146,cFld14t6,"Filial"		,1,1)
	oExcel:AddColumn(cFld146,cFld14t6,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld146,cFld14t6,"Série"		,1,1)
	oExcel:AddColumn(cFld146,cFld14t6,"NF"			,1,1)
	oExcel:AddColumn(cFld146,cFld14t6,"Item"		,1,1)
	oExcel:AddColumn(cFld146,cFld14t6,"Cod.Forn."	,1,1)
	oExcel:AddColumn(cFld146,cFld14t6,"Loja.Forn."	,1,1)
	oExcel:AddColumn(cFld146,cFld14t6,"Fornecedor"	,1,1)
	oExcel:AddColumn(cFld146,cFld14t6,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld146,cFld14t6,"Opt.Simples"	,1,1)
	oExcel:AddColumn(cFld146,cFld14t6,"Cod.Prod."	,1,1)
	oExcel:AddColumn(cFld146,cFld14t6,"Produto"		,1,1)
	oExcel:AddColumn(cFld146,cFld14t6,"Quant."		,2,2,.T.)
	oExcel:AddColumn(cFld146,cFld14t6,"Prc.Unit"	,2,3)
	oExcel:AddColumn(cFld146,cFld14t6,"Total"		,2,3,.T.)
	oExcel:AddColumn(cFld146,cFld14t6,"Vl.Cont."	,2,3,.T.)
	oExcel:AddColumn(cFld146,cFld14t6,"Base ICMS"	,2,3,.T.)
	oExcel:AddColumn(cFld146,cFld14t6,"Aliq.ICMS"	,2,3)
	oExcel:AddColumn(cFld146,cFld14t6,"Vl.ICMS"		,2,3,.T.)
	oExcel:AddColumn(cFld146,cFld14t6,"Vl.ICMS Ret.",2,3,.T.)
	oExcel:AddColumn(cFld146,cFld14t6,"Vl.ICMS Out.",2,3,.T.)
	oExcel:AddColumn(cFld146,cFld14t6,"Desconto"	,2,3,.T.)
	oExcel:AddColumn(cFld146,cFld14t6,"Seguro"		,2,3,.T.)
	oExcel:AddColumn(cFld146,cFld14t6,"Despesa"		,2,3,.T.)
	oExcel:AddColumn(cFld146,cFld14t6,"Frete"		,2,3,.T.)
	oExcel:AddColumn(cFld146,cFld14t6,"Dt.Canc."	,1,1)
	oExcel:AddColumn(cFld146,cFld14t6,"Observações"	,1,1)
	oExcel:AddColumn(cFld146,cFld14t6,"TES"			,1,1)
	oExcel:AddColumn(cFld146,cFld14t6,"CFOP"		,1,1)
	oExcel:AddColumn(cFld146,cFld14t6,"Tipo"		,1,1)
	oExcel:AddColumn(cFld146,cFld14t6,"Espécie"		,1,1)
	oExcel:AddColumn(cFld146,cFld14t6,"Centro Custo",1,1)
RETURN(NIL)

/*/{Protheus.doc} Static Function GEx14P2
	Gera Relatório Ref. Graxaria
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function GEx14P2()
	Local nExcel1
	FOR nExcel1 := 1 TO Len(aBrw14Sd)
		oExcel:AddRow(cFld142,cFld14t2,{aBrw14Sd[nExcel1,01],;
			aBrw14Sd[nExcel1,02],;
			aBrw14Sd[nExcel1,03],;
			aBrw14Sd[nExcel1,04],;
			aBrw14Sd[nExcel1,05],;
			aBrw14Sd[nExcel1,06],;
			aBrw14Sd[nExcel1,07],;
			aBrw14Sd[nExcel1,08],;
			aBrw14Sd[nExcel1,09],;
			aBrw14Sd[nExcel1,10],;
			aBrw14Sd[nExcel1,11],;
			aBrw14Sd[nExcel1,12],;
			aBrw14Sd[nExcel1,13],;
			aBrw14Sd[nExcel1,14],;
			aBrw14Sd[nExcel1,15],;
			aBrw14Sd[nExcel1,16],;
			aBrw14Sd[nExcel1,17],;
			aBrw14Sd[nExcel1,18],;
			aBrw14Sd[nExcel1,19],;
			aBrw14Sd[nExcel1,20],;
			aBrw14Sd[nExcel1,21],;
			aBrw14Sd[nExcel1,22],;
			aBrw14Sd[nExcel1,23],;
			aBrw14Sd[nExcel1,24],;
			aBrw14Sd[nExcel1,25],;
			aBrw14Sd[nExcel1,26],;
			aBrw14Sd[nExcel1,27],;
			aBrw14Sd[nExcel1,28],;
			aBrw14Sd[nExcel1,29],;
			aBrw14Sd[nExcel1,30],;
			aBrw14Sd[nExcel1,31],;
			aBrw14Sd[nExcel1,32]})
	Next nExcel1
	//Linha Em branco
	oExcel:AddRow(cFld142,cFld14t2,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
RETURN

/*/{Protheus.doc} Static Function GEx14P3
	Gera Relatório Ref. Graxaria
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function GEx14P3()
	Local nExcel1
	FOR nExcel1 := 1 TO Len(aBrw14Tr)
		oExcel:AddRow(cFld143,cFld14t3,{aBrw14Tr[nExcel1,01],;
			aBrw14Tr[nExcel1,02],;
			aBrw14Tr[nExcel1,03],;
			aBrw14Tr[nExcel1,04],;
			aBrw14Tr[nExcel1,05],;
			aBrw14Tr[nExcel1,06],;
			aBrw14Tr[nExcel1,07],;
			aBrw14Tr[nExcel1,08],;
			aBrw14Tr[nExcel1,09],;
			aBrw14Tr[nExcel1,10],;
			aBrw14Tr[nExcel1,11],;
			aBrw14Tr[nExcel1,12],;
			aBrw14Tr[nExcel1,13],;
			aBrw14Tr[nExcel1,14],;
			aBrw14Tr[nExcel1,15],;
			aBrw14Tr[nExcel1,16],;
			aBrw14Tr[nExcel1,17],;
			aBrw14Tr[nExcel1,18],;
			aBrw14Tr[nExcel1,19],;
			aBrw14Tr[nExcel1,20],;
			aBrw14Tr[nExcel1,21],;
			aBrw14Tr[nExcel1,22],;
			aBrw14Tr[nExcel1,23],;
			aBrw14Tr[nExcel1,24],;
			aBrw14Tr[nExcel1,25],;
			aBrw14Tr[nExcel1,26],;
			aBrw14Tr[nExcel1,27],;
			aBrw14Tr[nExcel1,28],;
			aBrw14Tr[nExcel1,29],;
			aBrw14Tr[nExcel1,30],;
			aBrw14Tr[nExcel1,31],;
			aBrw14Tr[nExcel1,32]})
	Next nExcel1
	//Linha Em branco
	oExcel:AddRow(cFld143,cFld14t3,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
RETURN

/*/{Protheus.doc} Static Function GEx14P4
	Gera Relatório Ref. Graxaria
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
	Static Function GEx14P4()
		Local nExcel1
		FOR nExcel1 := 1 TO Len(aBrw14Dv)
			oExcel:AddRow(cFld144,cFld14t4,{aBrw14Dv[nExcel1,01],;
			aBrw14Dv[nExcel1,02],;
			aBrw14Dv[nExcel1,03],;
			aBrw14Dv[nExcel1,04],;
			aBrw14Dv[nExcel1,05],;
			aBrw14Dv[nExcel1,06],;
			aBrw14Dv[nExcel1,07],;
			aBrw14Dv[nExcel1,08],;
			aBrw14Dv[nExcel1,09],;
			aBrw14Dv[nExcel1,10],;
			aBrw14Dv[nExcel1,11],;
			aBrw14Dv[nExcel1,12],;
			aBrw14Dv[nExcel1,13],;
			aBrw14Dv[nExcel1,14],;
			aBrw14Dv[nExcel1,15],;
			aBrw14Dv[nExcel1,16],;
			aBrw14Dv[nExcel1,17],;
			aBrw14Dv[nExcel1,18],;
			aBrw14Dv[nExcel1,19],;
			aBrw14Dv[nExcel1,20],;
			aBrw14Dv[nExcel1,21],;
			aBrw14Dv[nExcel1,22],;
			aBrw14Dv[nExcel1,23],;
			aBrw14Dv[nExcel1,24],;
			aBrw14Dv[nExcel1,25],;
			aBrw14Dv[nExcel1,26],;
			aBrw14Dv[nExcel1,27],;
			aBrw14Dv[nExcel1,28],;
			aBrw14Dv[nExcel1,29],;
			aBrw14Dv[nExcel1,30],;
			aBrw14Dv[nExcel1,31],;
			aBrw14Dv[nExcel1,32]})
	Next nExcel1
	//Linha Em branco
	oExcel:AddRow(cFld144,cFld14t4,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
RETURN

/*/{Protheus.doc} Static Function GEx14P5
	Gera Relatório Ref. Graxaria
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function GEx14P5()
	Local nExcel1
	FOR nExcel1 := 1 TO Len(aBrw14Cp)
			oExcel:AddRow(cFld145,cFld14t5,{aBrw14Cp[nExcel1,01],;
			aBrw14Cp[nExcel1,02],;
			aBrw14Cp[nExcel1,03],;
			aBrw14Cp[nExcel1,04],;
			aBrw14Cp[nExcel1,05],;
			aBrw14Cp[nExcel1,06],;
			aBrw14Cp[nExcel1,07],;
			aBrw14Cp[nExcel1,08],;
			aBrw14Cp[nExcel1,09],;
			aBrw14Cp[nExcel1,10],;
			aBrw14Cp[nExcel1,11],;
			aBrw14Cp[nExcel1,12],;
			aBrw14Cp[nExcel1,13],;
			aBrw14Cp[nExcel1,14],;
			aBrw14Cp[nExcel1,15],;
			aBrw14Cp[nExcel1,16],;
			aBrw14Cp[nExcel1,17],;
			aBrw14Cp[nExcel1,18],;
			aBrw14Cp[nExcel1,19],;
			aBrw14Cp[nExcel1,20],;
			aBrw14Cp[nExcel1,21],;
			aBrw14Cp[nExcel1,22],;
			aBrw14Cp[nExcel1,23],;
			aBrw14Cp[nExcel1,24],;
			aBrw14Cp[nExcel1,25],;
			aBrw14Cp[nExcel1,26],;
			aBrw14Cp[nExcel1,27],;
			aBrw14Cp[nExcel1,28],;
			aBrw14Cp[nExcel1,29],;
			aBrw14Cp[nExcel1,30],;
			aBrw14Cp[nExcel1,31],;
			aBrw14Cp[nExcel1,32]})
	Next nExcel1
	//Linha Em branco
	oExcel:AddRow(cFld145,cFld14t5,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
RETURN

/*/{Protheus.doc} Static Function GEx14P6
	Gera Relatório Ref. Graxaria
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function GEx14P6()
	Local nExcel1
	FOR nExcel1 := 1 TO Len(aBrw14Rs)
		oExcel:AddRow(cFld146,cFld14t6,{aBrw14Rs[nExcel1,01],;
			aBrw14Rs[nExcel1,02],;
			aBrw14Rs[nExcel1,03],;
			aBrw14Rs[nExcel1,04],;
			aBrw14Rs[nExcel1,05],;
			aBrw14Rs[nExcel1,06],;
			aBrw14Rs[nExcel1,07],;
			aBrw14Rs[nExcel1,08],;
			aBrw14Rs[nExcel1,09],;
			aBrw14Rs[nExcel1,10],;
			aBrw14Rs[nExcel1,11],;
			aBrw14Rs[nExcel1,12],;
			aBrw14Rs[nExcel1,13],;
			aBrw14Rs[nExcel1,14],;
			aBrw14Rs[nExcel1,15],;
			aBrw14Rs[nExcel1,16],;
			aBrw14Rs[nExcel1,17],;
			aBrw14Rs[nExcel1,18],;
			aBrw14Rs[nExcel1,19],;
			aBrw14Rs[nExcel1,20],;
			aBrw14Rs[nExcel1,21],;
			aBrw14Rs[nExcel1,22],;
			aBrw14Rs[nExcel1,23],;
			aBrw14Rs[nExcel1,24],;
			aBrw14Rs[nExcel1,25],;
			aBrw14Rs[nExcel1,26],;
			aBrw14Rs[nExcel1,27],;
			aBrw14Rs[nExcel1,28],;
			aBrw14Rs[nExcel1,29],;
			aBrw14Rs[nExcel1,30],;
			aBrw14Rs[nExcel1,31],;
			aBrw14Rs[nExcel1,32]})
	Next nExcel1
	//Linha Em branco
	oExcel:AddRow(cFld146,cFld14t6,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
RETURN
//FIM Chamado n.050629 - OS n.054353 - Relatorio Graxaria - Abel Babini - 29/10/2019

// INICIO Chamado n.050629 - OS n.054354 - Relatorio Compra Lenha - Abel Babini - 08/11/2019
/*/{Protheus.doc} Static Function xABrw15
	Carrega da dados Ref. Compra de Lenha
	@type  Static Function
	@author Abel Babini Filho
	@since 08/11/2019
	@version 01
	/*/
Static Function xABrw15()
	If Select(cAlB15Rs) > 0
		(cAlB15Rs)->(dbCloseArea())
	Endif
	cAlB15Rs:=GetNextAlias()

	//Inicializa Variáveis
	aBrw15Rs	:= {}
	aBrw15Dt	:= {}
	nA15T01		:= 0
	nA15T02		:= 0
	nA15T03		:= 0
	nA15T04		:= 0
	nA15T05		:= 0
	nA15T06		:= 0

	BeginSQL  Alias cAlB15Rs
		column DTENTRADA as Date
		SELECT
			SFT.FT_FILIAL		AS FILIAL,
			SFT.FT_ENTRADA		AS DTENTRADA,
			SFT.FT_SERIE		AS SERIE,
			SFT.FT_NFISCAL		AS NFISCAL,
			SFT.FT_ITEM			AS ITEM,
			SFT.FT_CLIEFOR		AS CLIEFOR,
			SFT.FT_LOJA			AS LOJA,
			CASE WHEN (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) THEN SA2.A2_NOME ELSE SA1.A1_NOME END AS NOME,
			CASE WHEN (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) THEN SA2.A2_CGC ELSE SA1.A1_CGC END AS CGC,
			CASE WHEN (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) THEN (CASE WHEN SA2.A2_SIMPNAC = '1' THEN 'SIM' ELSE 'NÃO' END) ELSE (CASE WHEN SA1.A1_SIMPNAC = '1' THEN 'SIM' ELSE 'NÃO' END) END AS SIMPLESNAC,
			SFT.FT_PRODUTO		AS CODPROD,
			SB1.B1_DESC			AS PRODUTO,
			SFT.FT_QUANT		AS QUANT,
			SFT.FT_PRCUNIT		AS PRCUNIT,
			SFT.FT_TOTAL		AS TOTAL,
			SFT.FT_VALCONT		AS VALCONT,
			SFT.FT_BASEICM		AS ICMSBASE,
			SFT.FT_ALIQICM		AS ICMSALIQ,
			SFT.FT_VALICM		AS ICMSVAL,
			SFT.FT_ICMSRET		AS ICMSRET,
			SFT.FT_OUTRICM		AS ICMSOUTR,
			SFT.FT_DESCONT		AS DESCONT,
			SFT.FT_SEGURO		AS SEGURO,
			SFT.FT_DESPESA		AS DESPESA,
			SFT.FT_FRETE		AS FRETE,
			SFT.FT_DTCANC		AS DTCANC,
			SFT.FT_OBSERV		AS OBSERV,
			SFT.FT_TES			AS TES,
			SFT.FT_CFOP			AS CFOP,
			SFT.FT_TIPO			AS TIPO,
			SFT.FT_ESPECIE		AS ESPECIE,
			SFT.FT_FORMUL		AS FORMULARIO,
			SD1.D1_CC			AS CCUSTO
		FROM %TABLE:SFT% SFT (NOLOCK) 
		LEFT JOIN %TABLE:SB1% SB1 (NOLOCK) ON
			SB1.B1_FILIAL = %xFilial:SB1%
			AND SB1.B1_COD = SFT.FT_PRODUTO
			AND SB1.%notDel%
		LEFT JOIN %TABLE:SA2% SA2 (NOLOCK) ON
			SA2.A2_FILIAL = %xFilial:SA2%
			AND SA2.A2_COD = SFT.FT_CLIEFOR
			AND SA2.A2_LOJA = SFT.FT_LOJA
			AND ( (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) )
			AND SA2.%notDel%
		LEFT JOIN %TABLE:SA1% SA1 (NOLOCK) ON
			SA1.A1_FILIAL = %xFilial:SA1%
			AND SA1.A1_COD = SFT.FT_CLIEFOR
			AND SA1.A1_LOJA = SFT.FT_LOJA
			AND ( (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO IN ('D','B') ) )
			AND SA1.%notDel%
		LEFT JOIN %TABLE:SD1% SD1 (NOLOCK) ON
			SD1.D1_FILIAL = SFT.FT_FILIAL
			AND SD1.D1_SERIE = SFT.FT_SERIE
			AND SD1.D1_DOC = SFT.FT_NFISCAL
			AND SD1.D1_FORNECE = SFT.FT_CLIEFOR
			AND SD1.D1_LOJA = SFT.FT_LOJA
			AND SD1.D1_ITEM = SFT.FT_ITEM
			AND SD1.%notDel%
		WHERE SFT.FT_FILIAL = %xFilial:SFT%
			AND SFT.FT_ENTRADA BETWEEN %Exp:DToS(_mvpr01)% AND %Exp:DToS(_mvpr02)%
			AND SFT.FT_POSIPI IN %Exp:_cInPrLn%
			AND SFT.FT_CFOP IN %Exp:_cInCfLn%
			AND SFT.FT_DTCANC = ''
			
			AND SFT.%notDel%
	EndSQL
	//Chamado n.060037 - OS n.061528 - Abel Babini - 27/07/2020 - Excluir filtro de Formulário próprio do relatório de Lenha e incluir informação no Demonstrativo e Abertura da Gia
			// AND SFT.FT_FORMUL = 'S'
	DbSelectArea(cAlB15Rs)
	(cAlB15Rs)->(DbGoTop())
	While !(cAlB15Rs)->(eof())
		//Chamado n.060037 - OS n.061528 - Abel Babini - 27/07/2020 - Excluir filtro de Formulário próprio do relatório de Lenha e incluir informação no Demonstrativo e Abertura da Gia
		// IF Alltrim((cAlB15Rs)->FORMULARIO) = 'S'
			nPos := ASCAN(aBrw15Rs, {|X| X[1] == Alltrim((cAlB15Rs)->CFOP)+Alltrim((cAlB15Rs)->CODPROD)})
			IF nPos == 0
				aAdd(aBrw15Rs,{Alltrim((cAlB15Rs)->CFOP)+Alltrim((cAlB15Rs)->CODPROD),;
											(cAlB15Rs)->FILIAL,;							
											(cAlB15Rs)->CFOP,;
											(cAlB15Rs)->CODPROD+' - '+(cAlB15Rs)->PRODUTO,;
											(cAlB15Rs)->QUANT,;
											(cAlB15Rs)->VALCONT,;
											(cAlB15Rs)->ICMSVAL,;
											Round((cAlB15Rs)->VALCONT/(cAlB15Rs)->QUANT,2)})
			ELSE
				aBrw15Rs[nPos,05] += (cAlB15Rs)->QUANT
				aBrw15Rs[nPos,06] += (cAlB15Rs)->VALCONT
				aBrw15Rs[nPos,07] += (cAlB15Rs)->ICMSVAL
				aBrw15Rs[nPos,08] += Round(aBrw15Rs[nPos,06]/aBrw15Rs[nPos,05],2)
			ENDIF
			IF (cAlB15Rs)->CFOP > '5000'
				nA15T01 += (cAlB15Rs)->QUANT
				nA15T02 += (cAlB15Rs)->VALCONT
				nA15T03 += (cAlB15Rs)->ICMSVAL
			ELSE
				nA15T04 += (cAlB15Rs)->QUANT
				nA15T05 += (cAlB15Rs)->VALCONT
				// nA15T06 += (cAlB15Rs)->ICMSVAL
			ENDIF
			aAdd(aBrw15Dt,{	(cAlB15Rs)->FILIAL,;
											(cAlB15Rs)->DTENTRADA,;
											(cAlB15Rs)->SERIE,;
											(cAlB15Rs)->NFISCAL,;
											(cAlB15Rs)->ITEM,;
											(cAlB15Rs)->CLIEFOR,;
											(cAlB15Rs)->LOJA,;
											(cAlB15Rs)->NOME,;
											(cAlB15Rs)->CGC,;
											(cAlB15Rs)->SIMPLESNAC,;
											(cAlB15Rs)->CODPROD,;
											(cAlB15Rs)->PRODUTO,;
											(cAlB15Rs)->QUANT,;
											(cAlB15Rs)->PRCUNIT,;
											(cAlB15Rs)->TOTAL,;
											(cAlB15Rs)->VALCONT,;
											(cAlB15Rs)->ICMSBASE,;
											(cAlB15Rs)->ICMSALIQ,;
											(cAlB15Rs)->ICMSVAL,;
											(cAlB15Rs)->ICMSRET,;
											(cAlB15Rs)->ICMSOUTR,;
											(cAlB15Rs)->DESCONT,;
											(cAlB15Rs)->SEGURO,;
											(cAlB15Rs)->DESPESA,;
											(cAlB15Rs)->FRETE,;
											(cAlB15Rs)->DTCANC,;
											(cAlB15Rs)->OBSERV,;
											(cAlB15Rs)->TES,;
											(cAlB15Rs)->CFOP,;
											(cAlB15Rs)->TIPO,;
											(cAlB15Rs)->ESPECIE,;
											(cAlB15Rs)->CCUSTO})
		// ENDIF
		(cAlB15Rs)->(DbSkip())
	EndDo

	nA15T06 := Round(nA15T05*0.18,2)

	(cAlB15Rs)->(dbCloseArea())
	SysRefresh()
Return

/*/{Protheus.doc} Static Function xRelBr15
	Gera Relatório Ref. Compra de Lenha
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function xRelBr15()
	Local aSays			:= {}
	Local aButtons		:= {}
	Local nOpca			:= 0
	//+-----------------------------------------------+
	//|Monta Form Batch - Interface com o Usuario     |
	//+-----------------------------------------------+
	AADD(aSays,"Este programa tem a finalidade de Gerar um arquivo Excel " )
	AADD(aSays,"Relatorio de Compra de Lenha" )

	AADD(aButtons, { 1,.T.,{|o| nOpca:=1, o:oWnd:End(), Processa({||xRelBr15b()},"Gerando arquivo","Aguarde...")    }})
	AADD(aButtons, { 2,.T.,{|o| nOpca:=2, o:oWnd:End() }})
	FormBatch( cCadastr, aSays, aButtons )

	MsgInfo("Arquivo Excel gerado!")

Return

/*/{Protheus.doc} Static Function xRelBr15b
	Gera Relatório Ref. Compra de Lenha
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function xRelBr15b()
	Private oExcel     := FWMSEXCELEX():New()
	//Private cArquivo	:= cGetFile("Arquivo XML", "Selecione o diretório para salvar o relatório",,'C:\',.T.,GETF_RETDIRECTORY + GETF_LOCALHARD + GETF_NETWORKDRIVE)
	Private oMsExcel   := NIL

	cArquivo := cPathRel +  'RLENHA_' + DTOS(DATE()) + STRTRAN(TIME(),':','') + '.XML'
	BEGIN SEQUENCE

		//IF .NOT.( ApOleClient("MsExcel") )   // se nao existir o excel sai fora..
		//	Alert("Nao Existe Excel Instalado")
		//	BREAK
		//EndIF

		//Planilha1 - Resumo
		Cab15P1()
		GEx15P1()

		//Planilha2 - Detalhe
		Cab15P2()
		GEx15P2()

		SalvaXml()
		CriaExcel()

	END SEQUENCE

Return

/*/{Protheus.doc} Static Function Cab15P1
	Gera Relatório Ref. Compra de Lenha
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function Cab15P1()
	oExcel:AddworkSheet(cFld151)
	oExcel:AddTable(cFld151,cFld15t1)
	oExcel:AddColumn(cFld151,cFld15t1,"Filial",1,1)
	oExcel:AddColumn(cFld151,cFld15t1,"CFOP",1,1)
	oExcel:AddColumn(cFld151,cFld15t1,"Produto",1,1)
	oExcel:AddColumn(cFld151,cFld15t1,"Quantidade",2,3,.t.)
	oExcel:AddColumn(cFld151,cFld15t1,"Vl. Contábil",2,3,.t.)
	oExcel:AddColumn(cFld151,cFld15t1,"Vl. ICMS",2,3,.t.)
	oExcel:AddColumn(cFld151,cFld15t1,"Média Preço Unit.",2,3)
RETURN(NIL)

/*/{Protheus.doc} Static Function GEx15P1
	Gera Relatório Ref. Compra de Lenha
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function GEx15P1()
	Local i
	For i:=1 to Len(aBrw15Rs)
		oExcel:AddRow(cFld151,cFld15t1,{	aBrw15Rs[i,2],;
																			aBrw15Rs[i,3],;
																			aBrw15Rs[i,4],;
																			aBrw15Rs[i,5],;
																			aBrw15Rs[i,6],;
																			aBrw15Rs[i,7],;
																			aBrw15Rs[i,8]})
	Next i

	oExcel:AddRow(cFld151,cFld15t1,{"","","","","","",""})
	//
Return

/*/{Protheus.doc} Static Function Cab15P2
	Gera Relatório Ref. Compra de Lenha
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function Cab15P2()
	oExcel:AddworkSheet(cFld152)
	oExcel:AddTable(cFld152,cFld15t2)
	oExcel:AddColumn(cFld152,cFld15t2,"Filial"		,1,1)
	oExcel:AddColumn(cFld152,cFld15t2,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld152,cFld15t2,"Série"		,1,1)
	oExcel:AddColumn(cFld152,cFld15t2,"NF"			,1,1)
	oExcel:AddColumn(cFld152,cFld15t2,"Item"		,1,1)
	oExcel:AddColumn(cFld152,cFld15t2,"Cod.Forn."	,1,1)
	oExcel:AddColumn(cFld152,cFld15t2,"Loja.Forn."	,1,1)
	oExcel:AddColumn(cFld152,cFld15t2,"Fornecedor"	,1,1)
	oExcel:AddColumn(cFld152,cFld15t2,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld152,cFld15t2,"Opt.Simples"	,1,1)
	oExcel:AddColumn(cFld152,cFld15t2,"Cod.Prod."	,1,1)
	oExcel:AddColumn(cFld152,cFld15t2,"Produto"		,1,1)
	oExcel:AddColumn(cFld152,cFld15t2,"Quant."		,2,2,.T.)
	oExcel:AddColumn(cFld152,cFld15t2,"Prc.Unit"	,2,3)
	oExcel:AddColumn(cFld152,cFld15t2,"Total"		,2,3,.T.)
	oExcel:AddColumn(cFld152,cFld15t2,"Vl.Cont."	,2,3,.T.)
	oExcel:AddColumn(cFld152,cFld15t2,"Base ICMS"	,2,3,.T.)
	oExcel:AddColumn(cFld152,cFld15t2,"Aliq.ICMS"	,2,3)
	oExcel:AddColumn(cFld152,cFld15t2,"Vl.ICMS"		,2,3,.T.)
	oExcel:AddColumn(cFld152,cFld15t2,"Vl.ICMS Ret.",2,3,.T.)
	oExcel:AddColumn(cFld152,cFld15t2,"Vl.ICMS Out.",2,3,.T.)
	oExcel:AddColumn(cFld152,cFld15t2,"Desconto"	,2,3,.T.)
	oExcel:AddColumn(cFld152,cFld15t2,"Seguro"		,2,3,.T.)
	oExcel:AddColumn(cFld152,cFld15t2,"Despesa"		,2,3,.T.)
	oExcel:AddColumn(cFld152,cFld15t2,"Frete"		,2,3,.T.)
	oExcel:AddColumn(cFld152,cFld15t2,"Dt.Canc."	,1,1)
	oExcel:AddColumn(cFld152,cFld15t2,"Observações"	,1,1)
	oExcel:AddColumn(cFld152,cFld15t2,"TES"			,1,1)
	oExcel:AddColumn(cFld152,cFld15t2,"CFOP"		,1,1)
	oExcel:AddColumn(cFld152,cFld15t2,"Tipo"		,1,1)
	oExcel:AddColumn(cFld152,cFld15t2,"Espécie"		,1,1)
	oExcel:AddColumn(cFld152,cFld15t2,"Centro Custo",1,1)

RETURN(NIL)

/*/{Protheus.doc} Static Function GEx15P2
	Gera Relatório Ref. Compra de Lenha
	@type  Static Function
	@author Abel Babini Filho
	@since 28/10/2019
	@version version
	/*/
Static Function GEx15P2()
	Local nExcel1
	FOR nExcel1 := 1 TO Len(aBrw15Dt)
		oExcel:AddRow(cFld152,cFld15t2,{aBrw15Dt[nExcel1,01],;
			aBrw15Dt[nExcel1,02],;
			aBrw15Dt[nExcel1,03],;
			aBrw15Dt[nExcel1,04],;
			aBrw15Dt[nExcel1,05],;
			aBrw15Dt[nExcel1,06],;
			aBrw15Dt[nExcel1,07],;
			aBrw15Dt[nExcel1,08],;
			aBrw15Dt[nExcel1,09],;
			aBrw15Dt[nExcel1,10],;
			aBrw15Dt[nExcel1,11],;
			aBrw15Dt[nExcel1,12],;
			aBrw15Dt[nExcel1,13],;
			aBrw15Dt[nExcel1,14],;
			aBrw15Dt[nExcel1,15],;
			aBrw15Dt[nExcel1,15],;
			aBrw15Dt[nExcel1,17],;
			aBrw15Dt[nExcel1,18],;
			aBrw15Dt[nExcel1,19],;
			aBrw15Dt[nExcel1,20],;
			aBrw15Dt[nExcel1,21],;
			aBrw15Dt[nExcel1,22],;
			aBrw15Dt[nExcel1,23],;
			aBrw15Dt[nExcel1,24],;
			aBrw15Dt[nExcel1,25],;
			aBrw15Dt[nExcel1,26],;
			aBrw15Dt[nExcel1,27],;
			aBrw15Dt[nExcel1,28],;
			aBrw15Dt[nExcel1,29],;
			aBrw15Dt[nExcel1,30],;
			aBrw15Dt[nExcel1,31],;
			aBrw15Dt[nExcel1,32]})
	Next nExcel1
	//Linha Em branco
	oExcel:AddRow(cFld152,cFld15t2,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
RETURN
// FIM Chamado n.050629 - OS n.054354 - Relatorio Compra Lenha - Abel Babini - 08/11/2019

// INICIO Chamado n. - OS n. - Relatorio Celulares - Abel Babini - 11/11/2019
/*/{Protheus.doc} Static Function xABrw25
	Carrega da dados Ref. Crédito de ICMS CELULARES
	@type  Static Function
	@author Abel Babini Filho
	@since 11/11/2019
	@version 01
	/*/
	Static Function xABrw25()
	Local aDocEntr 	:= {}
	Local aDocSaid	:= {}
	IF _dCelPn <= _mvpr01
		If Select(cAlsB25Cr) > 0
			(cAlsB25Cr)->(dbCloseArea())
		Endif
		cAlsB25Cr:=GetNextAlias()

		BeginSQL  Alias cAlsB25Cr
			//SELECIONA AS NFS DE COMPRAS DE CELULAR QUE CALCULARAM ICMS DENTRO DO MÊS, PERMITINDO CRÉDITO
			column DTDIGIT as Date
			column EMISSAO as Date
			SELECT
				'E' 			AS TPOPE,
				SD1.D1_FILIAL	AS FILIAL, 
				SD1.D1_DTDIGIT	AS DTDIGIT,
				SD1.D1_EMISSAO	AS EMISSAO, 
				SD1.D1_DOC		AS DOC, 
				SD1.D1_SERIE 	AS SERIE, 
				SD1.D1_FORNECE	AS FORNECE, 
				SD1.D1_LOJA		AS LOJA, 
				SD1.D1_COD		AS COD, 
				SB1.B1_DESC		AS DESCR,
				SB1.B1_POSIPI	AS POSIPI,
				SD1.D1_QUANT	AS QUANT, 
				SD1.D1_VUNIT	AS VUNIT, 
				SD1.D1_TOTAL	AS TOTAL, 
				SD1.D1_VALIPI	AS VALIPI, 
				SD1.D1_VALICM	AS VALICMS, 
				SD1.D1_TES		AS TES, 
				SD1.D1_CF		AS CFOP
			FROM %TABLE:SD1%  SD1 (NOLOCK) 
			LEFT JOIN %TABLE:SB1%  SB1 (NOLOCK) ON 
					SB1.%notDel% 
			AND SB1.B1_COD = SD1.D1_COD 
			AND SB1.B1_FILIAL = %xFilial:SB1%
			WHERE
				SD1.%notDel% AND
				SD1.D1_FILIAL=%xFilial:SFT% AND 
				(SD1.D1_DTDIGIT>=%Exp:DToS(_dCelula)% AND SD1.D1_DTDIGIT<=%Exp:DToS(_mvpr02)% ) AND 
				SD1.D1_VALICM > 0 AND
				SUBSTRING(SD1.D1_CF,2,3) = '556' AND
				SB1.B1_POSIPI IN  %Exp:_cCelula% 
				
		UNION

			SELECT
				'S' 			AS TPOPE,
				SFT.FT_FILIAL	AS FILIAL, 
				SFT.FT_ENTRADA	AS DTDIGIT,
				SFT.FT_EMISSAO	AS EMISSAO, 
				SFT.FT_NFISCAL	AS DOC, 
				SFT.FT_SERIE 	AS SERIE, 
				SFT.FT_CLIEFOR	AS FORNECE, 
				SFT.FT_LOJA		AS LOJA, 
				SFT.FT_PRODUTO	AS COD, 
				SB1.B1_DESC		AS DESCR,
				SB1.B1_POSIPI	AS POSIPI,
				-SFT.FT_QUANT	AS QUANT, 
				SFT.FT_PRCUNIT	AS VUNIT, 
				-SFT.FT_TOTAL	AS TOTAL, 
				-SFT.FT_VALIPI	AS VALIPI, 
				-SFT.FT_VALICM	AS VALICMS, 
				SFT.FT_TES		AS TES, 
				SFT.FT_CFOP		AS CFOP
				FROM %TABLE:SFT%  SFT (NOLOCK) 
			LEFT JOIN %TABLE:SB1%  SB1 (NOLOCK) ON 
					SB1.%notDel% 
			AND SB1.B1_COD = SFT.FT_PRODUTO 
			AND SB1.B1_FILIAL = %xFilial:SB1%
			WHERE
				SFT.%notDel% AND
				SFT.FT_FILIAL=%xFilial:SFT% AND 
				(SFT.FT_ENTRADA>=%Exp:DToS(_dCelula)% AND SFT.FT_ENTRADA<=%Exp:DToS(_mvpr02)% ) AND 
				SUBSTRING(SFT.FT_CFOP,2,3) = '102' AND
				SFT.FT_CFOP > '5000' AND
				SFT.FT_DTCANC='' AND
				SFT.FT_POSIPI IN  %Exp:_cCelula% 	
			
				ORDER BY FILIAL, COD, DTDIGIT, TPOPE, DOC, FORNECE
		EndSQL
		
		aBrw25Rs	:= {}
		aBrw25Cr	:= {}
		aBrw25Db	:= {}
		aSdPr25		:= {}
		DbSelectArea(cAlsB25Cr)
		(cAlsB25Cr)->(DbGoTop())
		_cFlAnt		:= ""
		_cCodAnt	:= ""
		_cDesAnt	:= ""
		_nSldQtd	:= 0
		_nSldICM	:= 0
		_nTtVlCr	:= 0
		_nTtQtCr	:= 0	
		nTtCel		:= 0
		
		While !(cAlsB25Cr)->(Eof())
			AADD(aBrw25Rs,{})
			nPos := Len(aBrw25Rs)		
			AADD(aBrw25Rs[nPos],(cAlsB25Cr)->FILIAL)//FILIAL
			AADD(aBrw25Rs[nPos],(cAlsB25Cr)->COD)//Produto
			AADD(aBrw25Rs[nPos],(cAlsB25Cr)->DESCR)//Descrição
			AADD(aBrw25Rs[nPos],(cAlsB25Cr)->TPOPE)//Tipo Operação
			AADD(aBrw25Rs[nPos],(cAlsB25Cr)->DTDIGIT)//Dt.Entrada
			AADD(aBrw25Rs[nPos],(cAlsB25Cr)->EMISSAO)//Dt.Emissão
			AADD(aBrw25Rs[nPos],(cAlsB25Cr)->DOC)//Documento
			AADD(aBrw25Rs[nPos],(cAlsB25Cr)->SERIE)//Serie
			AADD(aBrw25Rs[nPos],(cAlsB25Cr)->FORNECE)//Fornecedor
			AADD(aBrw25Rs[nPos],(cAlsB25Cr)->LOJA)//Loja
			AADD(aBrw25Rs[nPos],(cAlsB25Cr)->QUANT)//11-Quant
			AADD(aBrw25Rs[nPos],(cAlsB25Cr)->VUNIT)//Vl.Unit
			AADD(aBrw25Rs[nPos],(cAlsB25Cr)->TOTAL)//Total
			AADD(aBrw25Rs[nPos],(cAlsB25Cr)->VALICMS)//ICMS
			AADD(aBrw25Rs[nPos],'')//Documento
			AADD(aBrw25Rs[nPos],'')//Serie
			AADD(aBrw25Rs[nPos],'')//Fornecedor
			AADD(aBrw25Rs[nPos],'')//Loja
			
			//nPBx	:= 0
			nPBx	:= ASCAN(aSdPr25,{|X| Alltrim(X[7]) == AllTrim((cAlsB25Cr)->COD) })
			cTxBx := ""
			IF (cAlsB25Cr)->TPOPE == 'S'
				/*IF len(aSdPr18) > 0 
					nPBx	:= ASCAN(aSdPr18,{|X| Alltrim(X[7]) == AllTrim((cAlsB18Cr)->COD) })
				Endif*/
				If nPBx > 0
					cTxBx	:= " Filial: "+aSdPr25[nPBx,1]+;
									" NF: "+aSdPr25[nPBx,2]+;
									" Serie: "+aSdPr25[nPBx,3]+;
									" Fornecedor: "+aSdPr25[nPBx,4]+;
									" Loja: "+aSdPr25[nPBx,5]+;
									" Dt.Entrada: "+DTOC(aSdPr25[nPBx,6])
				Else
							cTxBx	:= ""
				Endif
			ENDIF
					
			_nVlCred	:= 0
			IF (cAlsB25Cr)->COD = _cCodAnt
				IF (cAlsB25Cr)->TPOPE == 'S' .AND. (_nSldQtd + (cAlsB25Cr)->QUANT) >= 0 //Operacao de Saida e Saldo do Credito menos Qtd maior que zero
					//IF (cAlsB25Cr)->TPOPE == 'S' .AND. nPBx > 0 //Operacao de Saida e Saldo do Credito menos Qtd maior que zero 
					nSldQtUn	:= (cAlsB25Cr)->QUANT
					WHILE nSldQtUn < 0
						//IF -(cAlsB25Cr)->VALICMS/-(cAlsB25Cr)->QUANT < _nSldICM/_nSldQtd 
						IF Round((-(cAlsB25Cr)->VALICMS/-(cAlsB25Cr)->QUANT),2) < Round((aSdPr25[nPBx,9]/aSdPr25[nPBx,10]),2)
							_nVlCred	+= Round(-(cAlsB25Cr)->VALICMS,2) * ABS((cAlsB25Cr)->QUANT)
						ELSE
							_nVlCred	+= Round((aSdPr25[nPBx,9]/aSdPr25[nPBx,10]),2) * ABS((cAlsB25Cr)->QUANT)
						ENDIF
							nSldQtUn -= (cAlsB25Cr)->QUANT
					ENDdO
							
					//Cria Array Totalizado por Produto
					IF aBrw25Rs[nPos,05] >= _mvpr01 .AND. aBrw25Rs[nPos,05] <= _mvpr02 //Data dentro do intervalo
						_nTtVlCr	+= -(cAlsB25Cr)->VALICMS
						_nTtQtCr	+= -(cAlsB25Cr)->QUANT
					ENDIF

					_nSldQtd	+= (cAlsB25Cr)->QUANT
					IF _nSldQtd = 0
						_nSldICM 	:= 0
					ELSE
						_nSldICM	+= (cAlsB25Cr)->VALICMS
					ENDIF
				ELSEIF (cAlsB25Cr)->TPOPE == 'S' .AND. (_nSldQtd + (cAlsB25Cr)->QUANT) < 0 //Operacao de Saida e Saldo do Credito menos Qtd menor que zero
					IF nPBx > 0
						//IF -(cAlsB25Cr)->VALICMS/-(cAlsB25Cr)->QUANT < _nSldICM/_nSldQtd 
						IF Round((-(cAlsB25Cr)->VALICMS/-(cAlsB25Cr)->QUANT),2) < Round((aSdPr25[nPBx,9]/aSdPr25[nPBx,10]),2)
							_nVlCred	:= Round( Round(-(cAlsB25Cr)->VALICMS/-(cAlsB25Cr)->QUANT,2) * Round(aSdPr25[nPBx,9]/aSdPr25[nPBx,10],2),2)
						ELSE
							_nVlCred	:= Round(_nSldICM/_nSldQtd,2)
						ENDIF
		
						//Cria Array Totalizado por Produto
						IF aBrw25Rs[nPos,05] >= _mvpr01 .AND. aBrw25Rs[nPos,05] <= _mvpr02 //Data dentro do intervalo
							_nTtVlCr	+= _nVlCred
							_nTtQtCr	+= _nSldQtd
						ENDIF
					ENDIF
					_nSldQtd	:= 0
					_nSldICM	:= 0
				ELSEIF (cAlsB25Cr)->TPOPE == 'E'
					AADD(aSdPr25,{	(cAlsB25Cr)->FILIAL,;
													(cAlsB25Cr)->DOC,;
													(cAlsB25Cr)->SERIE,;
													(cAlsB25Cr)->FORNECE,;
													(cAlsB25Cr)->LOJA,;
													(cAlsB25Cr)->DTDIGIT,;
													(cAlsB25Cr)->COD,;
													(cAlsB25Cr)->QUANT,;
													(cAlsB25Cr)->VALICMS,;
													(cAlsB25Cr)->QUANT;
												})
					_nSldQtd	+= (cAlsB25Cr)->QUANT
					_nSldICM	+= (cAlsB25Cr)->VALICMS
				ENDIF
						
				AADD(aBrw25Rs[nPos],_nVlCred)//ICMS Cr.
				AADD(aBrw25Rs[nPos],_nSldQtd)//Saldo Qtd do Produto 
				AADD(aBrw25Rs[nPos],_nSldICM)//Saldo ICMS do Produto                
				AADD(aBrw25Rs[nPos],cTxBx)//NF BAIXADA
				AADD(aBrw25Rs[nPos],(cAlsB25Cr)->POSIPI)
			ELSE
				//Cria Array Totalizado por Produto
				IF _cCodAnt != "" .And. _nTtQtCr > 0
					AADD(aBrw25Cr,{})
					nPos2 := Len(aBrw25Cr)		
					AADD(aBrw25Cr[nPos2], _cFlAnt)//FILIAL
					AADD(aBrw25Cr[nPos2], _cCodAnt)//Produto
					AADD(aBrw25Cr[nPos2], _cDesAnt)//Descrição
					AADD(aBrw25Cr[nPos2], _nTtQtCr)//11-Quant
					AADD(aBrw25Cr[nPos2], _nTtVlCr)//ICMS
					nTtCel += _nTtVlCr
				ENDIF
				_nTtQtCr	:= 0
				_nTtVlCr	:= 0
				//Reinicializa as Variáveis de Saldo por Produto
				_nSldQtd	:= 0
				_nSldICM	:= 0
				
				IF (cAlsB25Cr)->TPOPE == 'E'
					_nSldQtd	:= (cAlsB25Cr)->QUANT
					_nSldICM	:= (cAlsB25Cr)->VALICMS
					//Cria Array com as entradas por produto
					nPEn	:= ASCAN(aSdPr25,{|X| Alltrim(X[7]) == AllTrim((cAlsB25Cr)->COD) })
					If nPEn > 0
						IF Month(aSdPr25[nPEn,6]) <> Month((cAlsB25Cr)->DTDIGIT)
							ADEL(aSdPr25,nPEn)
							ASIZE(aSdPr25,Len(aSdPr25)-1)
						Else
							AADD(aSdPr25,{	(cAlsB25Cr)->FILIAL,;
															(cAlsB25Cr)->DOC,;
															(cAlsB25Cr)->SERIE,;
															(cAlsB25Cr)->FORNECE,;
															(cAlsB25Cr)->LOJA,;
															(cAlsB25Cr)->DTDIGIT,;
															(cAlsB25Cr)->COD,;
															(cAlsB25Cr)->QUANT,;
															(cAlsB25Cr)->VALICMS,;
															(cAlsB25Cr)->QUANT;
														})
						ENDIF
					Else
						AADD(aSdPr25,{	(cAlsB25Cr)->FILIAL,;
														(cAlsB25Cr)->DOC,;
														(cAlsB25Cr)->SERIE,;
														(cAlsB25Cr)->FORNECE,;
														(cAlsB25Cr)->LOJA,;
														(cAlsB25Cr)->DTDIGIT,;
														(cAlsB25Cr)->COD,;
														(cAlsB25Cr)->QUANT,;
														(cAlsB25Cr)->VALICMS,;
														(cAlsB25Cr)->QUANT;
													})
					ENDIF
				ENDIF
				AADD(aBrw25Rs[nPos],0)//ICMS Cr.
				AADD(aBrw25Rs[nPos],_nSldQtd)//Saldo Qtd do Produto 
				AADD(aBrw25Rs[nPos],_nSldICM)//Saldo ICMS do Produto
				AADD(aBrw25Rs[nPos],cTxBx)//NF BAIXADA
				AADD(aBrw25Rs[nPos],(cAlsB25Cr)->POSIPI)
			ENDIF
			_cFlAnt		:= (cAlsB25Cr)->FILIAL
			_cCodAnt 	:= (cAlsB25Cr)->COD
			_cDesAnt	:= (cAlsB25Cr)->DESCR    
			nQtPBx		:= -(cAlsB25Cr)->QUANT 
			IF nPBx > 0
				WHILE nQtPBx > 0
					IF aSdPr25[nPBx,8] > -(cAlsB25Cr)->QUANT
						aSdPr25[nPBx,8] += (cAlsB25Cr)->QUANT 
					ELSE //ELSEIF aSdPr25[nPBx,8] = -(cAlsB25Cr)->QUANT
						ADEL(aSdPr25,nPBx)
						ASIZE(aSdPr25,Len(aSdPr25)-1)
					ENDIF
						
					nQtPBx	+= (cAlsB25Cr)->QUANT 
				ENDDO
			ENDIF
			(cAlsB25Cr)->(DbSkip())
		EndDo

		IF _nTtQtCr > 0
			AADD(aBrw25Cr,{})
			nPos2 := Len(aBrw25Cr)		
			AADD(aBrw25Cr[nPos2], _cFlAnt)//FILIAL
			AADD(aBrw25Cr[nPos2], _cCodAnt)//Produto
			AADD(aBrw25Cr[nPos2], _cDesAnt)//Descrição
			AADD(aBrw25Cr[nPos2], _nTtQtCr)//11-Quant
			AADD(aBrw25Cr[nPos2], _nTtVlCr)//ICMS
			nTtCel += _nTtVlCr
		ENDIF
		
		aBrw25Tr	:= aBrw25Rs 

		(cAlsB25Cr)->(dbCloseArea())
	ENDIF	
	SysRefresh()
Return

/*/{Protheus.doc} Static Function xRelBr25
	Gera o arquivo Excel Ref. Crédito ICMS sobre Celulares
	@type  Static Function
	@author Abel Babini Filho
	@since 11/11/2019
	@version 01
	/*/
Static Function xRelBr25()
	Local aSays			:= {}
	Local aButtons		:= {}
	Local nOpca			:= 0
	//+-----------------------------------------------+
	//|Monta Form Batch - Interface com o Usuario     |
	//+-----------------------------------------------+
	AADD(aSays,"Este programa tem a finalidade de Gerar um arquivo Excel " )
	AADD(aSays,"Relatorio de Crédito de ICMS sobre Celulares" )
    
	AADD(aButtons, { 1,.T.,{|o| nOpca:=1, o:oWnd:End(), Processa({||xRelBr25b()},"Gerando arquivo","Aguarde...")    }})
	AADD(aButtons, { 2,.T.,{|o| nOpca:=2, o:oWnd:End() }})	
	FormBatch( cCadastr, aSays, aButtons )
	MsgInfo("Arquivo Excel gerado!")
Return

/*/{Protheus.doc} Static Function xRelBr25b
	Gera o arquivo Excel Ref. Crédito ICMS sobre Celulares
	@type  Static Function
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function xRelBr25b()
	Private oExcel     := FWMSEXCELEX():New()
	//Private cArquivo	:= cGetFile("Arquivo XML", "Selecione o diretório para salvar o relatório",,'C:\',.T.,GETF_RETDIRECTORY + GETF_LOCALHARD + GETF_NETWORKDRIVE)	
	Private oMsExcel   := NIL
	
	cArquivo := cPathRel +  'RCELULAR_' + DTOS(DATE()) + STRTRAN(TIME(),':','') + '.XML'
	BEGIN SEQUENCE
		
		//IF .NOT.( ApOleClient("MsExcel") )   // se nao existir o excel sai fora..
		//    Alert("Nao Existe Excel Instalado")
    //        BREAK
		//EndIF
        	
    	//Planilha1 - Resumo
    	Cab25P1()             
        GEx25P1()
        
        //Planilha2 - Detalhe
    	Cab25P2()
        GEx25P2()

        //Planilha3 - Detalhe Mes
    	Cab25P3()
        GEx25P3()

        SalvaXml()
		CriaExcel()
	
	END SEQUENCE

Return

/*/{Protheus.doc} Static Function Cab25P1
	Gera o arquivo Excel Ref. Crédito ICMS sobre Celulares
	@type  Static Function
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function Cab25P1()
	//PLANILHA 1 - RESUMO
    oExcel:AddworkSheet(cFld25)
	oExcel:AddTable(cFld25,cFld25t1)
	oExcel:AddColumn(cFld25,cFld25t1,"Filial"	,1,1)
	oExcel:AddColumn(cFld25,cFld25t1,"Cod.Prod"	,1,1)
	oExcel:AddColumn(cFld25,cFld25t1,"Descricao",1,1)
	oExcel:AddColumn(cFld25,cFld25t1,"Quant."	,2,2)
	oExcel:AddColumn(cFld25,cFld25t1,"Vl.Cred"	,2,2)

RETURN(NIL)  

/*/{Protheus.doc} Static Function Cab25P2
	Gera o arquivo Excel Ref. Crédito ICMS sobre Celulares
	@type  Static Function
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function Cab25P2()
	//PLANILHA 2 - DETALHE CELULARES
    oExcel:AddworkSheet(cFld252)
	oExcel:AddTable(cFld252,cFld25t2)
	oExcel:AddColumn(cFld252,cFld25t2,"Filial"  	,1,1)
	oExcel:AddColumn(cFld252,cFld25t2,"Cod.Produto"	,1,1)
	oExcel:AddColumn(cFld252,cFld25t2,"Descrição"	,1,1)
	oExcel:AddColumn(cFld252,cFld25t2,"Tipo Oper."	,1,1)
	oExcel:AddColumn(cFld252,cFld25t2,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld252,cFld25t2,"Dt.Emissao"	,1,1)
	oExcel:AddColumn(cFld252,cFld25t2,"Nota Fiscal"	,1,1)
	oExcel:AddColumn(cFld252,cFld25t2,"Serie NF"	,1,1)
	oExcel:AddColumn(cFld252,cFld25t2,"Fornecedor"	,1,1)
	oExcel:AddColumn(cFld252,cFld25t2,"Loja"		,1,1)
	oExcel:AddColumn(cFld252,cFld25t2,"Quant."		,2,2)
	oExcel:AddColumn(cFld252,cFld25t2,"Vl.Unit"		,2,3)
	oExcel:AddColumn(cFld252,cFld25t2,"Vl.Total"	,2,3)
	oExcel:AddColumn(cFld252,cFld25t2,"Vl. ICMS"	,2,3)
	oExcel:AddColumn(cFld252,cFld25t2,"Vl.ICMS Cred",2,3)	
	oExcel:AddColumn(cFld252,cFld25t2,"Sld. Quant"	,2,2)
	oExcel:AddColumn(cFld252,cFld25t2,"Sld. ICMS"	,2,3)
	oExcel:AddColumn(cFld252,cFld25t2,"Doc. Baixa"	,1,1)
	
Return(NIL)

/*/{Protheus.doc} Static Function Cab25P3
	Gera o arquivo Excel Ref. Crédito ICMS sobre Celulares
	@type  Static Function
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function Cab25P3()
	//PLANILHA 2 - DETALHE CELULARES
    oExcel:AddworkSheet(cFld253)
	oExcel:AddTable(cFld253,cFld25t3)
	oExcel:AddColumn(cFld253,cFld25t3,"Filial"  	,1,1)
	oExcel:AddColumn(cFld253,cFld25t3,"Cod.Produto"	,1,1)
	oExcel:AddColumn(cFld253,cFld25t3,"Descrição"	,1,1)
	oExcel:AddColumn(cFld253,cFld25t3,"Tipo Oper."	,1,1)
	oExcel:AddColumn(cFld253,cFld25t3,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld253,cFld25t3,"Dt.Emissao"	,1,1)
	oExcel:AddColumn(cFld253,cFld25t3,"Nota Fiscal"	,1,1)
	oExcel:AddColumn(cFld253,cFld25t3,"Serie NF"	,1,1)
	oExcel:AddColumn(cFld253,cFld25t3,"Fornecedor"	,1,1)
	oExcel:AddColumn(cFld253,cFld25t3,"Loja"		,1,1)
	oExcel:AddColumn(cFld253,cFld25t3,"Quant."		,2,2)
	oExcel:AddColumn(cFld253,cFld25t3,"Vl.Unit"		,2,3)
	oExcel:AddColumn(cFld253,cFld25t3,"Vl.Total"	,2,3)
	oExcel:AddColumn(cFld253,cFld25t3,"Vl. ICMS"	,2,3)
	oExcel:AddColumn(cFld253,cFld25t3,"Vl.ICMS Cred",2,3)	
	oExcel:AddColumn(cFld253,cFld25t3,"Sld. Quant"	,2,2)
	oExcel:AddColumn(cFld253,cFld25t3,"Sld. ICMS"	,2,3)
	oExcel:AddColumn(cFld253,cFld25t3,"Doc. Baixa"	,1,1)
	
Return(NIL)

/*/{Protheus.doc} Static Function GEx25P1
	Gera o arquivo Excel Ref. Crédito ICMS sobre Celulares
	@type  Static Function
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function GEx25P1()
	Local _nTtQtd	:= 0
	Local _nTtVlCr	:= 0
	Local nExcel1
	
	FOR nExcel1 := 1 TO Len(aBrw25Cr)
		oExcel:AddRow(cFld25,cFld25t1,;
				   {aBrw25Cr[nExcel1][01],; //Filial
					aBrw25Cr[nExcel1][02],; //Produto
					aBrw25Cr[nExcel1][03],; //Descricao
					aBrw25Cr[nExcel1][04],; //Qtd
					aBrw25Cr[nExcel1][05]; //VlCred.ICMS
					})
					
		_nTtQtd		+= aBrw25Cr[nExcel1][04]
		_nTtVlCr	+= aBrw25Cr[nExcel1][05]
	NEXT nExcel1
	
	//Linha em Branco
	oExcel:AddRow(cFld25,cFld25t1,;
			   {"",; //Filial
				"",; //Produto
				"",; //Descricao
				"",; //Qtd
				""; //VlCred.ICMS
				})
	//TOTAL
	oExcel:AddRow(cFld25,cFld25t1,;
			   {"",; //Filial
				"TOTAL",; //Produto
				"",; //Descricao
				_nTtQtd,; //Qtd
				_nTtVlCr; //VlCred.ICMS
				})
Return

/*/{Protheus.doc} Static Function GEx25P2
	Gera o arquivo Excel Ref. Crédito ICMS sobre Celulares
	@type  Static Function
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function GEx25P2()
	Local _cProd	:= ""
	Local nExcel1
	//PLANILHA 2 - MERCADO INTERNO			
	FOR nExcel1 := 1 TO Len(aBrw25Rs)
		IF _cProd != aBrw25Rs[nExcel1][02] .AND. nExcel1 > 1
			//LINHA DE TOTAL
			oExcel:AddRow(cFld252,cFld25t2,;
						   {aBrw25Rs[nExcel1-1][01],; //Filial
							aBrw25Rs[nExcel1-1][02],; //Produto
							aBrw25Rs[nExcel1-1][03],; //Descricao
							'',; //Tipo Ope
							'',; //Dt.Entrada
							'',; //Dt.Emissao
							'',; //Documento
							'',; //Serie
							'',; //Fornecedor
							'',; //Loja
							'',; //Quant
							'',; //Vl.Unit
							'',; //Vl. Total
							'',; //Vl.ICMS
							'',; //Saldo Qtd
							aBrw25Rs[nExcel1-1][20],; //Saldo Qtd
							aBrw25Rs[nExcel1-1][21],;  //Vl.ICMS Cr 
							'';  //Doc. Baixa 
							})
			//LINHA EM BRANCO
			oExcel:AddRow(cFld252,cFld25t2,;
						   {'',; //Filial
							'',; //Produto
							'',; //Descricao
							'',; //Tipo Ope
							'',; //Dt.Entrada
							'',; //Dt.Emissao
							'',; //Documento
							'',; //Serie
							'',; //Fornecedor
							'',; //Loja
							'',; //Quant
							'',; //Vl.Unit
							'',; //Vl. Total
							'',; //Vl.ICMS
							'',; //Saldo Qtd
							'',; //Saldo Qtd
							'',; //Vl.ICMS Cr 
							'';  //Doc.Baixa 
							})
			
		ENDIF
		oExcel:AddRow(cFld252,cFld25t2,;
					   {aBrw25Rs[nExcel1][01],; //Filial
						aBrw25Rs[nExcel1][02],; //Produto
						aBrw25Rs[nExcel1][03],; //Descricao
						aBrw25Rs[nExcel1][04],; //Tipo Ope
						aBrw25Rs[nExcel1][05],; //Dt.Entrada
						aBrw25Rs[nExcel1][06],; //Dt.Emissao
						aBrw25Rs[nExcel1][07],; //Documento
						aBrw25Rs[nExcel1][08],; //Serie
						aBrw25Rs[nExcel1][09],; //Fornecedor
						aBrw25Rs[nExcel1][10],; //Loja
						aBrw25Rs[nExcel1][11],; //Quant
						aBrw25Rs[nExcel1][12],; //Vl.Unit
						aBrw25Rs[nExcel1][13],; //Vl. Total
						aBrw25Rs[nExcel1][14],; //Vl.ICMS
						aBrw25Rs[nExcel1][19],; //Vl.ICMS Cr 
						aBrw25Rs[nExcel1][20],; //Saldo Qtd
						aBrw25Rs[nExcel1][21],; //Saldo ICMS
						aBrw25Rs[nExcel1][22];  //Doc.Baixa
						})
		_cProd := aBrw25Rs[nExcel1][02]
	NEXT nExcel1
*/
	IF Len(aBrw25Rs) > 0
		//LINHA DE TOTAL
		oExcel:AddRow(cFld252,cFld25t2,;
			{aBrw25Rs[nExcel1-1][01],; //Filial
		aBrw25Rs[nExcel1-1][02],; //Produto
		aBrw25Rs[nExcel1-1][03],; //Descricao
		'',; //Tipo Ope
		'',; //Dt.Entrada
		'',; //Dt.Emissao
		'',; //Documento
		'',; //Serie
		'',; //Fornecedor
		'',; //Loja
		'',; //Quant
		'',; //Vl.Unit
		'',; //Vl. Total
		'',; //Vl.ICMS
		'',; //Saldo Qtd
		aBrw25Rs[nExcel1-1][20],; //Saldo Qtd
		aBrw25Rs[nExcel1-1][21],;  //Vl.ICMS Cr
		'';  //Doc. Baixa
		})
	ENDIF
Return

/*/{Protheus.doc} Static Function GEx25P3
	Gera o arquivo Excel Ref. Crédito ICMS sobre Celulares
	@type  Static Function
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function GEx25P3()
	Local nExcel1
	//PLANILHA 2 - CELULARES NO MÊS			
	FOR nExcel1 := 1 TO Len(aBrw25Rs)
		IF aBrw25Rs[nExcel1][05] >= _mvpr01 .AND. aBrw25Rs[nExcel1][05] <= _mvpr02  .AND. aBrw25Rs[nExcel1][19] > 0
			oExcel:AddRow(cFld253,cFld25t3,;
					   {aBrw25Rs[nExcel1][01],; //Filial
						aBrw25Rs[nExcel1][02],; //Produto
						aBrw25Rs[nExcel1][03],; //Descricao
						aBrw25Rs[nExcel1][04],; //Tipo Ope
						aBrw25Rs[nExcel1][05],; //Dt.Entrada
						aBrw25Rs[nExcel1][06],; //Dt.Emissao
						aBrw25Rs[nExcel1][07],; //Documento
						aBrw25Rs[nExcel1][08],; //Serie
						aBrw25Rs[nExcel1][09],; //Fornecedor
						aBrw25Rs[nExcel1][10],; //Loja
						aBrw25Rs[nExcel1][11],; //Quant
						aBrw25Rs[nExcel1][12],; //Vl.Unit
						aBrw25Rs[nExcel1][13],; //Vl. Total
						aBrw25Rs[nExcel1][14],; //Vl.ICMS
						aBrw25Rs[nExcel1][19],;  //Vl.ICMS Cr 
						aBrw25Rs[nExcel1][20],; //Saldo Qtd
						aBrw25Rs[nExcel1][21],; //Saldo ICMS
						aBrw25Rs[nExcel1][22]; //Doc. Baixa
						})
		ENDIF
	NEXT nExcel1
			//LINHA EM BRANCO
			oExcel:AddRow(cFld253,cFld25t3,;
						   {'',; //Filial
							'',; //Produto
							'',; //Descricao
							'',; //Tipo Ope
							'',; //Dt.Entrada
							'',; //Dt.Emissao
							'',; //Documento
							'',; //Serie
							'',; //Fornecedor
							'',; //Loja
							'',; //Quant
							'',; //Vl.Unit
							'',; //Vl. Total
							'',; //Vl.ICMS
							'',; //Saldo Qtd
							'',; //Saldo Qtd
							'',; //Vl.ICMS Cr 
							'';  //Doc.Baixa 
							})
Return

/*/{Protheus.doc} Static Function xABrTr25
	Carrega da dados Ref. Crédito de ICMS celulares
	@type  Static Function
	@author Abel Babini Filho
	@since 11/11/2019
	@version 01
	/*/
	Static Function xABrTr25()
	Local cItem := Alltrim(oTrF25p1:GetCargo())
	Local i
	If !oTrF25p1:IsEmpty()
		If oTrF25p1:Nivel() = 1
			aBrw25Tr := aBrw25Rs
		Else
			aBrw25Tr := {}
			For i := 1 to Len(aBrw25Rs)
				If Alltrim(aBrw25Rs[i,2])== cItem
					aAdd(aBrw25Tr,aBrw25Rs[i])
				Endif
			Next i
		Endif
	Endif
	oBrw25Rs:SetArray(aBrw25Tr)
	SysRefresh()
Return

// INICIO Chamado n.050629 - OS n. 054356 - Relatorio Nao Comestiveis - Abel Babini - 11/11/2019
/*/{Protheus.doc} Static Function xABrw19
	Carrega da dados Ref. Produtos não comestíveis
	@type  Static Function
	@author Abel Babini Filho
	@since 11/11/2019
	@version 01
	/*/
Static Function xABrw19()
	Local cTipoOp := ''
	If Select(cAlB19Rs) > 0
		(cAlB19Rs)->(dbCloseArea())
	Endif
	cAlB19Rs:=GetNextAlias()

	//Inicializa Variáveis
	aBrw19Rs	:= {}
	aBrw19MI	:= {}
	aBrw19ME	:= {}
	aBrw19Dv	:= {}

	BeginSQL  Alias cAlB19Rs
		column DTENTRADA as Date
		SELECT
			SFT.FT_FILIAL		AS FILIAL,
			SFT.FT_ENTRADA	AS DTENTRADA,
			SFT.FT_SERIE		AS SERIE,
			SFT.FT_NFISCAL	AS NFISCAL,
			SFT.FT_ITEM			AS ITEM,
			SFT.FT_CLIEFOR	AS CLIEFOR,
			SFT.FT_LOJA			AS LOJA,
			CASE WHEN (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) THEN SA2.A2_NOME ELSE SA1.A1_NOME END AS NOME,
			CASE WHEN (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) THEN SA2.A2_CGC ELSE SA1.A1_CGC END AS CGC,
			CASE WHEN (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) THEN (CASE WHEN SA2.A2_SIMPNAC = '1' THEN 'SIM' ELSE 'NÃO' END) ELSE (CASE WHEN SA1.A1_SIMPNAC = '1' THEN 'SIM' ELSE 'NÃO' END) END AS SIMPLESNAC,
			SFT.FT_PRODUTO		AS CODPROD,
			SB1.B1_DESC			AS PRODUTO,
			SFT.FT_POSIPI		AS POSIPI,
			SFT.FT_QUANT		AS QUANT,
			SFT.FT_PRCUNIT		AS PRCUNIT,
			SFT.FT_TOTAL		AS TOTAL,
			SFT.FT_VALCONT		AS VALCONT,
			SFT.FT_BASEICM		AS ICMSBASE,
			SFT.FT_ALIQICM		AS ICMSALIQ,
			SFT.FT_VALICM		AS ICMSVAL,
			SFT.FT_ICMSRET		AS ICMSRET,
			SFT.FT_OUTRICM		AS ICMSOUTR,
			SFT.FT_DESCONT		AS DESCONT,
			SFT.FT_SEGURO		AS SEGURO,
			SFT.FT_DESPESA		AS DESPESA,
			SFT.FT_FRETE		AS FRETE,
			SFT.FT_DTCANC		AS DTCANC,
			SFT.FT_OBSERV		AS OBSERV,
			SFT.FT_TES			AS TES,
			SFT.FT_CFOP			AS CFOP,
			SFT.FT_TIPO			AS TIPO,
			SFT.FT_ESPECIE		AS ESPECIE,
			SD1.D1_CC			AS CCUSTO
		FROM %TABLE:SFT% SFT (NOLOCK) 
		LEFT JOIN %TABLE:SB1% SB1 (NOLOCK) ON
			SB1.B1_FILIAL = %xFilial:SB1%
			AND SB1.B1_COD = SFT.FT_PRODUTO
			AND SB1.%notDel%
		LEFT JOIN %TABLE:SA2% SA2 (NOLOCK) ON
			SA2.A2_FILIAL = %xFilial:SA2%
			AND SA2.A2_COD = SFT.FT_CLIEFOR
			AND SA2.A2_LOJA = SFT.FT_LOJA
			AND ( (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) )
			AND SA2.%notDel%
		LEFT JOIN %TABLE:SA1% SA1 (NOLOCK) ON
			SA1.A1_FILIAL = %xFilial:SA1%
			AND SA1.A1_COD = SFT.FT_CLIEFOR
			AND SA1.A1_LOJA = SFT.FT_LOJA
			AND ( (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO IN ('D','B') ) )
			AND SA1.%notDel%
		LEFT JOIN %TABLE:SD1% SD1 (NOLOCK) ON
			SD1.D1_FILIAL = SFT.FT_FILIAL
			AND SD1.D1_SERIE = SFT.FT_SERIE
			AND SD1.D1_DOC = SFT.FT_NFISCAL
			AND SD1.D1_FORNECE = SFT.FT_CLIEFOR
			AND SD1.D1_LOJA = SFT.FT_LOJA
			AND SD1.D1_ITEM = SFT.FT_ITEM
			AND SD1.%notDel%
		WHERE SFT.FT_FILIAL = %xFilial:SFT%
			AND SFT.FT_ENTRADA BETWEEN %Exp:DToS(_mvpr01)% AND %Exp:DToS(_mvpr02)%
			AND SFT.FT_POSIPI IN %Exp:_cNaoCom%
			AND SFT.FT_CFOP IN %Exp:_cNComCF%
			AND SFT.FT_DTCANC = ''
			AND SFT.%notDel%
		ORDER BY SFT.FT_FILIAL, SFT.FT_CFOP
	EndSQL

	DbSelectArea(cAlB19Rs)
	(cAlB19Rs)->(DbGoTop())
	While !(cAlB19Rs)->(eof())
		cTipoOp := ''

		IF Alltrim((cAlB19Rs)->CFOP) >= '5000' .AND. Alltrim((cAlB19Rs)->CFOP) <= '6999'
			cTipoOp := 'Mercado Interno'
			aAdd(aBrw19MI,{	(cAlB19Rs)->FILIAL,;
											(cAlB19Rs)->DTENTRADA,;
											(cAlB19Rs)->SERIE,;
											(cAlB19Rs)->NFISCAL,;
											(cAlB19Rs)->ITEM,;
											(cAlB19Rs)->CLIEFOR,;
											(cAlB19Rs)->LOJA,;
											(cAlB19Rs)->NOME,;
											(cAlB19Rs)->CGC,;
											(cAlB19Rs)->SIMPLESNAC,;
											(cAlB19Rs)->CODPROD,;
											(cAlB19Rs)->PRODUTO,;
											(cAlB19Rs)->QUANT,;
											(cAlB19Rs)->PRCUNIT,;
											(cAlB19Rs)->TOTAL,;
											(cAlB19Rs)->VALCONT,;
											(cAlB19Rs)->ICMSBASE,;
											(cAlB19Rs)->ICMSALIQ,;
											(cAlB19Rs)->ICMSVAL,;
											(cAlB19Rs)->ICMSRET,;
											(cAlB19Rs)->ICMSOUTR,;
											(cAlB19Rs)->DESCONT,;
											(cAlB19Rs)->SEGURO,;
											(cAlB19Rs)->DESPESA,;
											(cAlB19Rs)->FRETE,;
											(cAlB19Rs)->DTCANC,;
											(cAlB19Rs)->OBSERV,;
											(cAlB19Rs)->TES,;
											(cAlB19Rs)->CFOP,;
											(cAlB19Rs)->TIPO,;
											(cAlB19Rs)->ESPECIE,;
											(cAlB19Rs)->CCUSTO,;
											(cAlB19Rs)->POSIPI})
		ELSEIF Alltrim((cAlB19Rs)->CFOP) >= '7000'
			cTipoOp := 'Mercado Externo'
			aAdd(aBrw19ME,{	(cAlB19Rs)->FILIAL,;
											(cAlB19Rs)->DTENTRADA,;
											(cAlB19Rs)->SERIE,;
											(cAlB19Rs)->NFISCAL,;
											(cAlB19Rs)->ITEM,;
											(cAlB19Rs)->CLIEFOR,;
											(cAlB19Rs)->LOJA,;
											(cAlB19Rs)->NOME,;
											(cAlB19Rs)->CGC,;
											(cAlB19Rs)->SIMPLESNAC,;
											(cAlB19Rs)->CODPROD,;
											(cAlB19Rs)->PRODUTO,;
											(cAlB19Rs)->QUANT,;
											(cAlB19Rs)->PRCUNIT,;
											(cAlB19Rs)->TOTAL,;
											(cAlB19Rs)->VALCONT,;
											(cAlB19Rs)->ICMSBASE,;
											(cAlB19Rs)->ICMSALIQ,;
											(cAlB19Rs)->ICMSVAL,;
											(cAlB19Rs)->ICMSRET,;
											(cAlB19Rs)->ICMSOUTR,;
											(cAlB19Rs)->DESCONT,;
											(cAlB19Rs)->SEGURO,;
											(cAlB19Rs)->DESPESA,;
											(cAlB19Rs)->FRETE,;
											(cAlB19Rs)->DTCANC,;
											(cAlB19Rs)->OBSERV,;
											(cAlB19Rs)->TES,;
											(cAlB19Rs)->CFOP,;
											(cAlB19Rs)->TIPO,;
											(cAlB19Rs)->ESPECIE,;
											(cAlB19Rs)->CCUSTO,;
											(cAlB19Rs)->POSIPI})
		ELSE
			cTipoOp := 'Devolução'
			aAdd(aBrw19Dv,{	(cAlB19Rs)->FILIAL,;
											(cAlB19Rs)->DTENTRADA,;
											(cAlB19Rs)->SERIE,;
											(cAlB19Rs)->NFISCAL,;
											(cAlB19Rs)->ITEM,;
											(cAlB19Rs)->CLIEFOR,;
											(cAlB19Rs)->LOJA,;
											(cAlB19Rs)->NOME,;
											(cAlB19Rs)->CGC,;
											(cAlB19Rs)->SIMPLESNAC,;
											(cAlB19Rs)->CODPROD,;
											(cAlB19Rs)->PRODUTO,;
											(cAlB19Rs)->QUANT,;
											(cAlB19Rs)->PRCUNIT,;
											(cAlB19Rs)->TOTAL,;
											(cAlB19Rs)->VALCONT,;
											(cAlB19Rs)->ICMSBASE,;
											(cAlB19Rs)->ICMSALIQ,;
											(cAlB19Rs)->ICMSVAL,;
											(cAlB19Rs)->ICMSRET,;
											(cAlB19Rs)->ICMSOUTR,;
											(cAlB19Rs)->DESCONT,;
											(cAlB19Rs)->SEGURO,;
											(cAlB19Rs)->DESPESA,;
											(cAlB19Rs)->FRETE,;
											(cAlB19Rs)->DTCANC,;
											(cAlB19Rs)->OBSERV,;
											(cAlB19Rs)->TES,;
											(cAlB19Rs)->CFOP,;
											(cAlB19Rs)->TIPO,;
											(cAlB19Rs)->ESPECIE,;
											(cAlB19Rs)->CCUSTO,;
											(cAlB19Rs)->POSIPI})
		ENDIF

		nPos := ASCAN(aBrw19Rs, {|X| X[1] == cTipoOp+Alltrim((cAlB19Rs)->CFOP)})
		IF nPos == 0
			aAdd(aBrw19Rs,{cTipoOp+Alltrim((cAlB19Rs)->CFOP),;
										(cAlB19Rs)->FILIAL,;			
										cTipoOp,;				
										(cAlB19Rs)->CFOP,;
										(cAlB19Rs)->QUANT,;
										(cAlB19Rs)->VALCONT,;
										(cAlB19Rs)->ICMSVAL})
		ELSE
			aBrw19Rs[nPos,05] += (cAlB19Rs)->QUANT
			aBrw19Rs[nPos,06] += (cAlB19Rs)->VALCONT
			aBrw19Rs[nPos,07] += (cAlB19Rs)->ICMSVAL
		ENDIF

		(cAlB19Rs)->(DbSkip())
	EndDo

	(cAlB19Rs)->(dbCloseArea())
	SysRefresh()
Return

/*/{Protheus.doc} Static Function xRelBr19
	Gera Relatório Ref. Produtos Não Comestíveis
	@type  Static Function
	@author Abel Babini Filho
	@since 11/11/2019
	@version version
	/*/
Static Function xRelBr19()
	Local aSays			:= {}
	Local aButtons		:= {}
	Local nOpca			:= 0
	//+-----------------------------------------------+
	//|Monta Form Batch - Interface com o Usuario     |
	//+-----------------------------------------------+
	AADD(aSays,"Este programa tem a finalidade de Gerar um arquivo Excel " )
	AADD(aSays,"Relatorio de Produtos Não Comestíveis" )

	AADD(aButtons, { 1,.T.,{|o| nOpca:=1, o:oWnd:End(), Processa({||xRelBr19b()},"Gerando arquivo","Aguarde...")    }})
	AADD(aButtons, { 2,.T.,{|o| nOpca:=2, o:oWnd:End() }})
	FormBatch( cCadastr, aSays, aButtons )

	MsgInfo("Arquivo Excel gerado!")

Return

/*/{Protheus.doc} Static Function xRelBr19b
	Gera Relatório Ref. Produtos Não Comestíveis
	@type  Static Function
	@author Abel Babini Filho
	@since 11/11/2019
	@version version
	/*/
Static Function xRelBr19b()
	Private oExcel     := FWMSEXCELEX():New()
	//Private cArquivo	:= cGetFile("Arquivo XML", "Selecione o diretório para salvar o relatório",,'C:\',.T.,GETF_RETDIRECTORY + GETF_LOCALHARD + GETF_NETWORKDRIVE)
	Private oMsExcel   := NIL

	cArquivo := cPathRel +  'RNAOCOMEST_' + DTOS(DATE()) + STRTRAN(TIME(),':','') + '.XML'
	BEGIN SEQUENCE

		//IF .NOT.( ApOleClient("MsExcel") )   // se nao existir o excel sai fora..
		//	Alert("Nao Existe Excel Instalado")
		//	BREAK
		//EndIF

		//Planilha1 - Resumo
		Cab19P1()
		GEx19P1()

		//Planilha2 - Mercado Interno
		Cab19P2()
		GEx19P2()

		//Planilha2 - Mercado Externo
		//Cab19P3()
		//GEx19P3()

		//Planilha2 - Devoluções
		//Cab19P4()
		//GEx19P4()

		SalvaXml()
		CriaExcel()

	END SEQUENCE

Return

/*/{Protheus.doc} Static Function Cab19P1
	Gera Relatório Ref. Produtos Não Comestíveis
	@type  Static Function
	@author Abel Babini Filho
	@since 11/11/2019
	@version version
	/*/
Static Function Cab19P1()
	oExcel:AddworkSheet(cFld191)
	oExcel:AddTable(cFld191,cFld19t1)
	oExcel:AddColumn(cFld191,cFld19t1,"Filial",1,1)
	oExcel:AddColumn(cFld191,cFld19t1,"Tipo",1,1)
	oExcel:AddColumn(cFld191,cFld19t1,"CFOP",1,1)
	oExcel:AddColumn(cFld191,cFld19t1,"Quantidade",2,3,.t.)
	oExcel:AddColumn(cFld191,cFld19t1,"Vl. Contábil",2,3,.t.)
	oExcel:AddColumn(cFld191,cFld19t1,"Vl. ICMS",2,3,.t.)
RETURN(NIL)

/*/{Protheus.doc} Static Function GEx19P1
	Gera Relatório Ref. Produtos Não Comestíveis
	@type  Static Function
	@author Abel Babini Filho
	@since 11/11/2019
	@version version
	/*/
Static Function GEx19P1()
	Local i
	For i:=1 to Len(aBrw19Rs)
		oExcel:AddRow(cFld191,cFld19t1,{	aBrw19Rs[i,2],;
																			aBrw19Rs[i,3],;
																			aBrw19Rs[i,4],;
																			aBrw19Rs[i,5],;
																			aBrw19Rs[i,6],;
																			aBrw19Rs[i,7]})
	Next i

	oExcel:AddRow(cFld191,cFld19t1,{"","","","","",""})
	//
Return

/*/{Protheus.doc} Static Function Cab19P2
	Gera Relatório Ref. Produtos Não Comestíveis
	@type  Static Function
	@author Abel Babini Filho
	@since 11/11/2019
	@version version
	/*/
Static Function Cab19P2()
	oExcel:AddworkSheet(cFld192)
	oExcel:AddTable(cFld192,cFld19t2)
	oExcel:AddColumn(cFld192,cFld19t2,"Filial"		,1,1)
	oExcel:AddColumn(cFld192,cFld19t2,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld192,cFld19t2,"Série"		,1,1)
	oExcel:AddColumn(cFld192,cFld19t2,"NF"			,1,1)
	oExcel:AddColumn(cFld192,cFld19t2,"Item"		,1,1)
	oExcel:AddColumn(cFld192,cFld19t2,"Cod.Forn."	,1,1)
	oExcel:AddColumn(cFld192,cFld19t2,"Loja.Forn."	,1,1)
	oExcel:AddColumn(cFld192,cFld19t2,"Fornecedor"	,1,1)
	oExcel:AddColumn(cFld192,cFld19t2,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld192,cFld19t2,"Opt.Simples"	,1,1)
	oExcel:AddColumn(cFld192,cFld19t2,"Cod.Prod."	,1,1)
	oExcel:AddColumn(cFld192,cFld19t2,"Produto"		,1,1)
	oExcel:AddColumn(cFld192,cFld19t2,"NCM",1,1)
	oExcel:AddColumn(cFld192,cFld19t2,"Quant."		,2,2)
	oExcel:AddColumn(cFld192,cFld19t2,"Prc.Unit"	,2,3)
	oExcel:AddColumn(cFld192,cFld19t2,"Total"		,2,3)
	oExcel:AddColumn(cFld192,cFld19t2,"Vl.Cont."	,2,3)
	oExcel:AddColumn(cFld192,cFld19t2,"Base ICMS"	,2,3)
	oExcel:AddColumn(cFld192,cFld19t2,"Aliq.ICMS"	,2,3)
	oExcel:AddColumn(cFld192,cFld19t2,"Vl.ICMS"		,2,3)
	oExcel:AddColumn(cFld192,cFld19t2,"Vl.ICMS Ret.",2,3)
	oExcel:AddColumn(cFld192,cFld19t2,"Vl.ICMS Out.",2,3)
	oExcel:AddColumn(cFld192,cFld19t2,"Desconto"	,2,3)
	oExcel:AddColumn(cFld192,cFld19t2,"Seguro"		,2,3)
	oExcel:AddColumn(cFld192,cFld19t2,"Despesa"		,2,3)
	oExcel:AddColumn(cFld192,cFld19t2,"Frete"		,2,3)
	oExcel:AddColumn(cFld192,cFld19t2,"Dt.Canc."	,1,1)
	oExcel:AddColumn(cFld192,cFld19t2,"Observações"	,1,1)
	oExcel:AddColumn(cFld192,cFld19t2,"TES"			,1,1)
	oExcel:AddColumn(cFld192,cFld19t2,"CFOP"		,1,1)
	oExcel:AddColumn(cFld192,cFld19t2,"Tipo"		,1,1)
	oExcel:AddColumn(cFld192,cFld19t2,"Espécie"		,1,1)
	oExcel:AddColumn(cFld192,cFld19t2,"Centro Custo",1,1)
RETURN(NIL)

/*/{Protheus.doc} Static Function GEx19P2
	Gera Relatório Ref. Produtos Não Comestíveis
	@type  Static Function
	@author Abel Babini Filho
	@since 11/11/2019
	@version version
	/*/
Static Function GEx19P2()
	Local nExcel1
	Local nQtd	:= 0
	Local nTot	:= 0
	Local nCtb	:= 0

	oExcel:AddRow(cFld192,cFld19t2,{"MERCADO INTERNO","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
	FOR nExcel1 := 1 TO Len(aBrw19MI)
		oExcel:AddRow(cFld192,cFld19t2,{aBrw19MI[nExcel1,01],;
			aBrw19MI[nExcel1,02],;
			aBrw19MI[nExcel1,03],;
			aBrw19MI[nExcel1,04],;
			aBrw19MI[nExcel1,05],;
			aBrw19MI[nExcel1,06],;
			aBrw19MI[nExcel1,07],;
			aBrw19MI[nExcel1,08],;
			aBrw19MI[nExcel1,09],;
			aBrw19MI[nExcel1,10],;
			aBrw19MI[nExcel1,11],;
			aBrw19MI[nExcel1,12],;
			aBrw19MI[nExcel1,33],;
			aBrw19MI[nExcel1,13],;
			aBrw19MI[nExcel1,14],;
			aBrw19MI[nExcel1,15],;
			aBrw19MI[nExcel1,16],;
			aBrw19MI[nExcel1,17],;
			aBrw19MI[nExcel1,18],;
			aBrw19MI[nExcel1,19],;
			aBrw19MI[nExcel1,20],;
			aBrw19MI[nExcel1,21],;
			aBrw19MI[nExcel1,22],;
			aBrw19MI[nExcel1,23],;
			aBrw19MI[nExcel1,24],;
			aBrw19MI[nExcel1,25],;
			aBrw19MI[nExcel1,26],;
			aBrw19MI[nExcel1,27],;
			aBrw19MI[nExcel1,28],;
			aBrw19MI[nExcel1,29],;
			aBrw19MI[nExcel1,30],;
			aBrw19MI[nExcel1,31],;
			aBrw19MI[nExcel1,32]})
		nQtd	+= aBrw19MI[nExcel1,13]
		nTot	+= aBrw19MI[nExcel1,15]
		nCtb	+= aBrw19MI[nExcel1,16]
	Next nExcel1
	//Linha Em branco
	oExcel:AddRow(cFld192,cFld19t2,{"","","","","","","","","","","","TOTAL","",nQtd,"",nTot,nCtb,"","","","","","","","","","","","","","","",""})
	oExcel:AddRow(cFld192,cFld19t2,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
	oExcel:AddRow(cFld192,cFld19t2,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})

	nQtd	:= 0
	nTot	:= 0
	nCtb	:= 0	
	oExcel:AddRow(cFld192,cFld19t2,{"MERCADO EXTERNO","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
	FOR nExcel1 := 1 TO Len(aBrw19ME)
		oExcel:AddRow(cFld192,cFld19t2,{aBrw19ME[nExcel1,01],;
			aBrw19ME[nExcel1,02],;
			aBrw19ME[nExcel1,03],;
			aBrw19ME[nExcel1,04],;
			aBrw19ME[nExcel1,05],;
			aBrw19ME[nExcel1,06],;
			aBrw19ME[nExcel1,07],;
			aBrw19ME[nExcel1,08],;
			aBrw19ME[nExcel1,09],;
			aBrw19ME[nExcel1,10],;
			aBrw19ME[nExcel1,11],;
			aBrw19ME[nExcel1,12],;
			aBrw19ME[nExcel1,33],;
			aBrw19ME[nExcel1,13],;
			aBrw19ME[nExcel1,14],;
			aBrw19ME[nExcel1,15],;
			aBrw19ME[nExcel1,16],;
			aBrw19ME[nExcel1,17],;
			aBrw19ME[nExcel1,18],;
			aBrw19ME[nExcel1,19],;
			aBrw19ME[nExcel1,20],;
			aBrw19ME[nExcel1,21],;
			aBrw19ME[nExcel1,22],;
			aBrw19ME[nExcel1,23],;
			aBrw19ME[nExcel1,24],;
			aBrw19ME[nExcel1,25],;
			aBrw19ME[nExcel1,26],;
			aBrw19ME[nExcel1,27],;
			aBrw19ME[nExcel1,28],;
			aBrw19ME[nExcel1,29],;
			aBrw19ME[nExcel1,30],;
			aBrw19ME[nExcel1,31],;
			aBrw19ME[nExcel1,32]})
		nQtd	+= aBrw19ME[nExcel1,13]
		nTot	+= aBrw19ME[nExcel1,15]
		nCtb	+= aBrw19ME[nExcel1,16]
	Next nExcel1
	//Linha Em branco
	oExcel:AddRow(cFld192,cFld19t2,{"","","","","","","","","","","","TOTAL","",nQtd,"",nTot,nCtb,"","","","","","","","","","","","","","","",""})
	oExcel:AddRow(cFld192,cFld19t2,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
	oExcel:AddRow(cFld192,cFld19t2,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})

	nQtd	:= 0
	nTot	:= 0
	nCtb	:= 0	
	oExcel:AddRow(cFld192,cFld19t2,{"DEVOLUÇÕES","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
	FOR nExcel1 := 1 TO Len(aBrw19Dv)
		oExcel:AddRow(cFld192,cFld19t2,{aBrw19Dv[nExcel1,01],;
			aBrw19Dv[nExcel1,02],;
			aBrw19Dv[nExcel1,03],;
			aBrw19Dv[nExcel1,04],;
			aBrw19Dv[nExcel1,05],;
			aBrw19Dv[nExcel1,06],;
			aBrw19Dv[nExcel1,07],;
			aBrw19Dv[nExcel1,08],;
			aBrw19Dv[nExcel1,09],;
			aBrw19Dv[nExcel1,10],;
			aBrw19Dv[nExcel1,11],;
			aBrw19Dv[nExcel1,12],;
			aBrw19Dv[nExcel1,33],;
			aBrw19Dv[nExcel1,13],;
			aBrw19Dv[nExcel1,14],;
			aBrw19Dv[nExcel1,15],;
			aBrw19Dv[nExcel1,16],;
			aBrw19Dv[nExcel1,17],;
			aBrw19Dv[nExcel1,18],;
			aBrw19Dv[nExcel1,19],;
			aBrw19Dv[nExcel1,20],;
			aBrw19Dv[nExcel1,21],;
			aBrw19Dv[nExcel1,22],;
			aBrw19Dv[nExcel1,23],;
			aBrw19Dv[nExcel1,24],;
			aBrw19Dv[nExcel1,25],;
			aBrw19Dv[nExcel1,26],;
			aBrw19Dv[nExcel1,27],;
			aBrw19Dv[nExcel1,28],;
			aBrw19Dv[nExcel1,29],;
			aBrw19Dv[nExcel1,30],;
			aBrw19Dv[nExcel1,31],;
			aBrw19Dv[nExcel1,32]})
		nQtd	+= aBrw19Dv[nExcel1,13]
		nTot	+= aBrw19Dv[nExcel1,15]
		nCtb	+= aBrw19Dv[nExcel1,16]
	Next nExcel1
	//Linha Em branco
	oExcel:AddRow(cFld192,cFld19t2,{"","","","","","","","","","","","TOTAL","",nQtd,"",nTot,nCtb,"","","","","","","","","","","","","","","",""})
	oExcel:AddRow(cFld192,cFld19t2,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
	oExcel:AddRow(cFld192,cFld19t2,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
	
RETURN

/*/{Protheus.doc} Static Function Cab19P3
	Gera Relatório Ref. Produtos Não Comestíveis
	@type  Static Function
	@author Abel Babini Filho
	@since 11/11/2019
	@version version
	/*/
/*
	Static Function Cab19P3()
	oExcel:AddworkSheet(cFld193)
	oExcel:AddTable(cFld193,cFld19t3)
	oExcel:AddColumn(cFld193,cFld19t3,"Filial"		,1,1)
	oExcel:AddColumn(cFld193,cFld19t3,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld193,cFld19t3,"Série"		,1,1)
	oExcel:AddColumn(cFld193,cFld19t3,"NF"			,1,1)
	oExcel:AddColumn(cFld193,cFld19t3,"Item"		,1,1)
	oExcel:AddColumn(cFld193,cFld19t3,"Cod.Forn."	,1,1)
	oExcel:AddColumn(cFld193,cFld19t3,"Loja.Forn."	,1,1)
	oExcel:AddColumn(cFld193,cFld19t3,"Fornecedor"	,1,1)
	oExcel:AddColumn(cFld193,cFld19t3,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld193,cFld19t3,"Opt.Simples"	,1,1)
	oExcel:AddColumn(cFld193,cFld19t3,"Cod.Prod."	,1,1)
	oExcel:AddColumn(cFld193,cFld19t3,"Produto"		,1,1)
	oExcel:AddColumn(cFld193,cFld19t3,"NCM"		,1,1)
	oExcel:AddColumn(cFld193,cFld19t3,"Quant."		,2,2,.T.)
	oExcel:AddColumn(cFld193,cFld19t3,"Prc.Unit"	,2,3)
	oExcel:AddColumn(cFld193,cFld19t3,"Total"		,2,3,.T.)
	oExcel:AddColumn(cFld193,cFld19t3,"Vl.Cont."	,2,3,.T.)
	oExcel:AddColumn(cFld193,cFld19t3,"Base ICMS"	,2,3,.T.)
	oExcel:AddColumn(cFld193,cFld19t3,"Aliq.ICMS"	,2,3)
	oExcel:AddColumn(cFld193,cFld19t3,"Vl.ICMS"		,2,3,.T.)
	oExcel:AddColumn(cFld193,cFld19t3,"Vl.ICMS Ret.",2,3,.T.)
	oExcel:AddColumn(cFld193,cFld19t3,"Vl.ICMS Out.",2,3,.T.)
	oExcel:AddColumn(cFld193,cFld19t3,"Desconto"	,2,3,.T.)
	oExcel:AddColumn(cFld193,cFld19t3,"Seguro"		,2,3,.T.)
	oExcel:AddColumn(cFld193,cFld19t3,"Despesa"		,2,3,.T.)
	oExcel:AddColumn(cFld193,cFld19t3,"Frete"		,2,3,.T.)
	oExcel:AddColumn(cFld193,cFld19t3,"Dt.Canc."	,1,1)
	oExcel:AddColumn(cFld193,cFld19t3,"Observações"	,1,1)
	oExcel:AddColumn(cFld193,cFld19t3,"TES"			,1,1)
	oExcel:AddColumn(cFld193,cFld19t3,"CFOP"		,1,1)
	oExcel:AddColumn(cFld193,cFld19t3,"Tipo"		,1,1)
	oExcel:AddColumn(cFld193,cFld19t3,"Espécie"		,1,1)
	oExcel:AddColumn(cFld193,cFld19t3,"Centro Custo",1,1)

RETURN(NIL)
*/
/*/{Protheus.doc} Static Function GEx19P3
	Gera Relatório Ref. Produtos Não Comestíveis
	@type  Static Function
	@author Abel Babini Filho
	@since 11/11/2019
	@version version
	/*/
/*
Static Function GEx19P3()
	Local nExcel1
	FOR nExcel1 := 1 TO Len(aBrw19ME)
		oExcel:AddRow(cFld193,cFld19t3,{aBrw19ME[nExcel1,01],;
			aBrw19ME[nExcel1,02],;
			aBrw19ME[nExcel1,03],;
			aBrw19ME[nExcel1,04],;
			aBrw19ME[nExcel1,05],;
			aBrw19ME[nExcel1,06],;
			aBrw19ME[nExcel1,07],;
			aBrw19ME[nExcel1,08],;
			aBrw19ME[nExcel1,09],;
			aBrw19ME[nExcel1,10],;
			aBrw19ME[nExcel1,11],;
			aBrw19ME[nExcel1,12],;
			aBrw19ME[nExcel1,33],;
			aBrw19ME[nExcel1,13],;
			aBrw19ME[nExcel1,14],;
			aBrw19ME[nExcel1,15],;
			aBrw19ME[nExcel1,16],;
			aBrw19ME[nExcel1,17],;
			aBrw19ME[nExcel1,18],;
			aBrw19ME[nExcel1,19],;
			aBrw19ME[nExcel1,20],;
			aBrw19ME[nExcel1,21],;
			aBrw19ME[nExcel1,22],;
			aBrw19ME[nExcel1,23],;
			aBrw19ME[nExcel1,24],;
			aBrw19ME[nExcel1,25],;
			aBrw19ME[nExcel1,26],;
			aBrw19ME[nExcel1,27],;
			aBrw19ME[nExcel1,28],;
			aBrw19ME[nExcel1,29],;
			aBrw19ME[nExcel1,30],;
			aBrw19ME[nExcel1,31],;
			aBrw19ME[nExcel1,32]})
	Next nExcel1
	//Linha Em branco
	oExcel:AddRow(cFld193,cFld19t3,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
RETURN
*/
/*/{Protheus.doc} Static Function Cab19P4
	Gera Relatório Ref. Produtos Não Comestíveis
	@type  Static Function
	@author Abel Babini Filho
	@since 11/11/2019
	@version version
	/*/
/*
	Static Function Cab19P4()
	oExcel:AddworkSheet(cFld194)
	oExcel:AddTable(cFld194,cFld19t4)
	oExcel:AddColumn(cFld194,cFld19t4,"Filial"		,1,1)
	oExcel:AddColumn(cFld194,cFld19t4,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld194,cFld19t4,"Série"		,1,1)
	oExcel:AddColumn(cFld194,cFld19t4,"NF"			,1,1)
	oExcel:AddColumn(cFld194,cFld19t4,"Item"		,1,1)
	oExcel:AddColumn(cFld194,cFld19t4,"Cod.Forn."	,1,1)
	oExcel:AddColumn(cFld194,cFld19t4,"Loja.Forn."	,1,1)
	oExcel:AddColumn(cFld194,cFld19t4,"Fornecedor"	,1,1)
	oExcel:AddColumn(cFld194,cFld19t4,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld194,cFld19t4,"Opt.Simples"	,1,1)
	oExcel:AddColumn(cFld194,cFld19t4,"Cod.Prod."	,1,1)
	oExcel:AddColumn(cFld194,cFld19t4,"Produto"		,1,1)
	oExcel:AddColumn(cFld194,cFld19t4,"NCM"		,1,1)
	oExcel:AddColumn(cFld194,cFld19t4,"Quant."		,2,2,.T.)
	oExcel:AddColumn(cFld194,cFld19t4,"Prc.Unit"	,2,3)
	oExcel:AddColumn(cFld194,cFld19t4,"Total"		,2,3,.T.)
	oExcel:AddColumn(cFld194,cFld19t4,"Vl.Cont."	,2,3,.T.)
	oExcel:AddColumn(cFld194,cFld19t4,"Base ICMS"	,2,3,.T.)
	oExcel:AddColumn(cFld194,cFld19t4,"Aliq.ICMS"	,2,3)
	oExcel:AddColumn(cFld194,cFld19t4,"Vl.ICMS"		,2,3,.T.)
	oExcel:AddColumn(cFld194,cFld19t4,"Vl.ICMS Ret.",2,3,.T.)
	oExcel:AddColumn(cFld194,cFld19t4,"Vl.ICMS Out.",2,3,.T.)
	oExcel:AddColumn(cFld194,cFld19t4,"Desconto"	,2,3,.T.)
	oExcel:AddColumn(cFld194,cFld19t4,"Seguro"		,2,3,.T.)
	oExcel:AddColumn(cFld194,cFld19t4,"Despesa"		,2,3,.T.)
	oExcel:AddColumn(cFld194,cFld19t4,"Frete"		,2,3,.T.)
	oExcel:AddColumn(cFld194,cFld19t4,"Dt.Canc."	,1,1)
	oExcel:AddColumn(cFld194,cFld19t4,"Observações"	,1,1)
	oExcel:AddColumn(cFld194,cFld19t4,"TES"			,1,1)
	oExcel:AddColumn(cFld194,cFld19t4,"CFOP"		,1,1)
	oExcel:AddColumn(cFld194,cFld19t4,"Tipo"		,1,1)
	oExcel:AddColumn(cFld194,cFld19t4,"Espécie"		,1,1)
	oExcel:AddColumn(cFld194,cFld19t4,"Centro Custo",1,1)

RETURN(NIL)
*/
/*/{Protheus.doc} Static Function GEx19P4
	Gera Relatório Ref. Produtos Não Comestíveis
	@type  Static Function
	@author Abel Babini Filho
	@since 11/11/2019
	@version version
	/*/
/*
Static Function GEx19P4()
	Local nExcel1
	FOR nExcel1 := 1 TO Len(aBrw19Dv)
		oExcel:AddRow(cFld194,cFld19t4,{aBrw19Dv[nExcel1,01],;
			aBrw19Dv[nExcel1,02],;
			aBrw19Dv[nExcel1,03],;
			aBrw19Dv[nExcel1,04],;
			aBrw19Dv[nExcel1,05],;
			aBrw19Dv[nExcel1,06],;
			aBrw19Dv[nExcel1,07],;
			aBrw19Dv[nExcel1,08],;
			aBrw19Dv[nExcel1,09],;
			aBrw19Dv[nExcel1,10],;
			aBrw19Dv[nExcel1,11],;
			aBrw19Dv[nExcel1,12],;
			aBrw19Dv[nExcel1,33],;
			aBrw19Dv[nExcel1,13],;
			aBrw19Dv[nExcel1,14],;
			aBrw19Dv[nExcel1,15],;
			aBrw19Dv[nExcel1,16],;
			aBrw19Dv[nExcel1,17],;
			aBrw19Dv[nExcel1,18],;
			aBrw19Dv[nExcel1,19],;
			aBrw19Dv[nExcel1,20],;
			aBrw19Dv[nExcel1,21],;
			aBrw19Dv[nExcel1,22],;
			aBrw19Dv[nExcel1,23],;
			aBrw19Dv[nExcel1,24],;
			aBrw19Dv[nExcel1,25],;
			aBrw19Dv[nExcel1,26],;
			aBrw19Dv[nExcel1,27],;
			aBrw19Dv[nExcel1,28],;
			aBrw19Dv[nExcel1,29],;
			aBrw19Dv[nExcel1,30],;
			aBrw19Dv[nExcel1,31],;
			aBrw19Dv[nExcel1,32]})
	Next nExcel1
	//Linha Em branco
	oExcel:AddRow(cFld194,cFld19t4,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
RETURN
*/
// FIM Chamado n.050629 - OS n. 054356 - Relatorio Nao Comestiveis - Abel Babini - 11/11/2019

// INICIO Chamado n.040929 - OS n.042022 - Relatorio Legumes - Abel Babini - 12/11/2019
/*/{Protheus.doc} Static Function xABrw17
	Carrega da dados Ref. Legumes
	@type  Static Function
	@author Abel Babini Filho
	@since 12/11/2019
	@version 01
	/*/
Static Function xABrw17()
	Local nPos := 0
	If Select(cAlB17Rs) > 0
		(cAlB17Rs)->(dbCloseArea())
	Endif
	cAlB17Rs:=GetNextAlias()

	//Inicializa Variáveis
	aBrw17Cp	:= {} //Compra para revenda
	aBrw17Dc	:= {} //Devolução de compra
	aBrw17Rv	:= {} //Revenda
	aBrw17Dr	:= {} //Devolução Revenda
	aBrw17Dt	:= {} //Detalhamento

	BeginSQL  Alias cAlB17Rs
		column DTENTRADA as Date
		SELECT
			SFT.FT_FILIAL		AS FILIAL,
			SFT.FT_ENTRADA	AS DTENTRADA,
			SFT.FT_SERIE		AS SERIE,
			SFT.FT_NFISCAL	AS NFISCAL,
			SFT.FT_ITEM			AS ITEM,
			SFT.FT_CLIEFOR	AS CLIEFOR,
			SFT.FT_LOJA			AS LOJA,
			CASE WHEN (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) THEN SA2.A2_NOME ELSE SA1.A1_NOME END AS NOME,
			CASE WHEN (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) THEN SA2.A2_CGC ELSE SA1.A1_CGC END AS CGC,
			CASE WHEN (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) THEN (CASE WHEN SA2.A2_SIMPNAC = '1' THEN 'SIM' ELSE 'NÃO' END) ELSE (CASE WHEN SA1.A1_SIMPNAC = '1' THEN 'SIM' ELSE 'NÃO' END) END AS SIMPLESNAC,
			SFT.FT_PRODUTO		AS CODPROD,
			SB1.B1_DESC			AS PRODUTO,
			SFT.FT_QUANT		AS QUANT,
			SFT.FT_PRCUNIT		AS PRCUNIT,
			SFT.FT_TOTAL		AS TOTAL,
			SFT.FT_VALCONT		AS VALCONT,
			SFT.FT_BASEICM		AS ICMSBASE,
			SFT.FT_ALIQICM		AS ICMSALIQ,
			SFT.FT_VALICM		AS ICMSVAL,
			SFT.FT_ICMSRET		AS ICMSRET,
			SFT.FT_OUTRICM		AS ICMSOUTR,
			SFT.FT_DESCONT		AS DESCONT,
			SFT.FT_SEGURO		AS SEGURO,
			SFT.FT_DESPESA		AS DESPESA,
			SFT.FT_FRETE		AS FRETE,
			SFT.FT_DTCANC		AS DTCANC,
			SFT.FT_OBSERV		AS OBSERV,
			SFT.FT_TES			AS TES,
			SFT.FT_CFOP			AS CFOP,
			SFT.FT_TIPO			AS TIPO,
			SFT.FT_ESPECIE		AS ESPECIE,
			SD1.D1_CC			AS CCUSTO
		FROM %TABLE:SFT% SFT (NOLOCK) 
		LEFT JOIN %TABLE:SB1% SB1 (NOLOCK) ON
			SB1.B1_FILIAL = %xFilial:SB1%
			AND SB1.B1_COD = SFT.FT_PRODUTO
			AND SB1.%notDel%
		LEFT JOIN %TABLE:SA2% SA2 (NOLOCK) ON
			SA2.A2_FILIAL = %xFilial:SA2%
			AND SA2.A2_COD = SFT.FT_CLIEFOR
			AND SA2.A2_LOJA = SFT.FT_LOJA
			AND ( (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) )
			AND SA2.%notDel%
		LEFT JOIN %TABLE:SA1% SA1 (NOLOCK) ON
			SA1.A1_FILIAL = %xFilial:SA1%
			AND SA1.A1_COD = SFT.FT_CLIEFOR
			AND SA1.A1_LOJA = SFT.FT_LOJA
			AND ( (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO IN ('D','B') ) )
			AND SA1.%notDel%
		LEFT JOIN %TABLE:SD1% SD1 (NOLOCK) ON
			SD1.D1_FILIAL = SFT.FT_FILIAL
			AND SD1.D1_SERIE = SFT.FT_SERIE
			AND SD1.D1_DOC = SFT.FT_NFISCAL
			AND SD1.D1_FORNECE = SFT.FT_CLIEFOR
			AND SD1.D1_LOJA = SFT.FT_LOJA
			AND SD1.D1_ITEM = SFT.FT_ITEM
			AND SD1.%notDel%
		WHERE SFT.FT_FILIAL = %xFilial:SFT%
			AND SFT.FT_ENTRADA BETWEEN %Exp:DToS(_mvpr01)% AND %Exp:DToS(_mvpr02)%
			AND SFT.FT_PRODUTO IN %Exp:_cInLegu%
			AND SFT.FT_CFOP IN %Exp:_cInCfLg%
			AND SFT.FT_DTCANC = ''
			AND SFT.%notDel%
		ORDER BY SFT.FT_FILIAL, SFT.FT_CFOP
	EndSQL
	
	DbSelectArea(cAlB17Rs)
	(cAlB17Rs)->(DbGoTop())
	While !(cAlB17Rs)->(eof())

		IF Substr(Alltrim((cAlB17Rs)->CFOP),1,1) < '5' .AND. Substr(Alltrim((cAlB17Rs)->CFOP),2,3) >= '200' .AND. Substr(Alltrim((cAlB17Rs)->CFOP),2,3) <= '299'
			//Devolução de Revenda
			nPos := ASCAN(aBrw17Dr, {|X| X[1] == Alltrim((cAlB17Rs)->PRODUTO)+Alltrim((cAlB17Rs)->CFOP)})
			IF nPos == 0
			aAdd(aBrw17Dr,{Alltrim((cAlB17Rs)->PRODUTO)+Alltrim((cAlB17Rs)->CFOP),;
										(cAlB17Rs)->FILIAL,;			
										Alltrim((cAlB17Rs)->PRODUTO),;				
										(cAlB17Rs)->CFOP,;
										(cAlB17Rs)->QUANT,;
										(cAlB17Rs)->VALCONT,;
										(cAlB17Rs)->ICMSVAL})
			ELSE
				aBrw17Dr[nPos,05] += (cAlB17Rs)->QUANT
				aBrw17Dr[nPos,06] += (cAlB17Rs)->VALCONT
				aBrw17Dr[nPos,07] += (cAlB17Rs)->ICMSVAL
			ENDIF
			nA17T31+= (cAlB17Rs)->QUANT
			nA17T32+= (cAlB17Rs)->VALCONT
			nA17T33+= (cAlB17Rs)->ICMSVAL
		ELSEIF Substr(Alltrim((cAlB17Rs)->CFOP),1,1) >= '5' .AND. Substr(Alltrim((cAlB17Rs)->CFOP),2,3) >= '200' .AND. Substr(Alltrim((cAlB17Rs)->CFOP),2,3) <= '299'
			//Devolução de Compra
			nPos := ASCAN(aBrw17Dc, {|X| X[1] == Alltrim((cAlB17Rs)->PRODUTO)+Alltrim((cAlB17Rs)->CFOP)})
			IF nPos == 0
			aAdd(aBrw17Dc,{Alltrim((cAlB17Rs)->PRODUTO)+Alltrim((cAlB17Rs)->CFOP),;
										(cAlB17Rs)->FILIAL,;			
										Alltrim((cAlB17Rs)->PRODUTO),;				
										(cAlB17Rs)->CFOP,;
										(cAlB17Rs)->QUANT,;
										(cAlB17Rs)->VALCONT,;
										(cAlB17Rs)->ICMSVAL})
			ELSE
				aBrw17Dc[nPos,05] += (cAlB17Rs)->QUANT
				aBrw17Dc[nPos,06] += (cAlB17Rs)->VALCONT
				aBrw17Dc[nPos,07] += (cAlB17Rs)->ICMSVAL
			ENDIF
			nA17T11+= (cAlB17Rs)->QUANT
			nA17T12+= (cAlB17Rs)->VALCONT
			nA17T13+= (cAlB17Rs)->ICMSVAL
		ELSEIF Substr(Alltrim((cAlB17Rs)->CFOP),1,1) < '5' .AND. (Substr(Alltrim((cAlB17Rs)->CFOP),2,3) < '200' .OR. Substr(Alltrim((cAlB17Rs)->CFOP),2,3) > '299')
			//Compra
			nPos := ASCAN(aBrw17Cp, {|X| X[1] == Alltrim((cAlB17Rs)->PRODUTO)+Alltrim((cAlB17Rs)->CFOP)})
			IF nPos == 0
			aAdd(aBrw17Cp,{Alltrim((cAlB17Rs)->PRODUTO)+Alltrim((cAlB17Rs)->CFOP),;
										(cAlB17Rs)->FILIAL,;			
										Alltrim((cAlB17Rs)->PRODUTO),;				
										(cAlB17Rs)->CFOP,;
										(cAlB17Rs)->QUANT,;
										(cAlB17Rs)->VALCONT,;
										(cAlB17Rs)->ICMSVAL})
			ELSE
				aBrw17Cp[nPos,05] += (cAlB17Rs)->QUANT
				aBrw17Cp[nPos,06] += (cAlB17Rs)->VALCONT
				aBrw17Cp[nPos,07] += (cAlB17Rs)->ICMSVAL
			ENDIF
			nA17T01+= (cAlB17Rs)->QUANT
			nA17T02+= (cAlB17Rs)->VALCONT
			nA17T03+= (cAlB17Rs)->ICMSVAL
		ELSE
			//Revenda
			nPos := ASCAN(aBrw17Rv, {|X| X[1] == Alltrim((cAlB17Rs)->PRODUTO)+Alltrim((cAlB17Rs)->CFOP)})
			IF nPos == 0
			aAdd(aBrw17Rv,{Alltrim((cAlB17Rs)->PRODUTO)+Alltrim((cAlB17Rs)->CFOP),;
										(cAlB17Rs)->FILIAL,;			
										Alltrim((cAlB17Rs)->PRODUTO),;				
										(cAlB17Rs)->CFOP,;
										(cAlB17Rs)->QUANT,;
										(cAlB17Rs)->VALCONT,;
										(cAlB17Rs)->ICMSVAL})
			ELSE
				aBrw17Rv[nPos,05] += (cAlB17Rs)->QUANT
				aBrw17Rv[nPos,06] += (cAlB17Rs)->VALCONT
				aBrw17Rv[nPos,07] += (cAlB17Rs)->ICMSVAL
			ENDIF
			nA17T21+= (cAlB17Rs)->QUANT
			nA17T22+= (cAlB17Rs)->VALCONT
			nA17T23+= (cAlB17Rs)->ICMSVAL
		ENDIF

		aAdd(aBrw17Dt,{	(cAlB17Rs)->FILIAL,;
										(cAlB17Rs)->DTENTRADA,;
										(cAlB17Rs)->SERIE,;
										(cAlB17Rs)->NFISCAL,;
										(cAlB17Rs)->ITEM,;
										(cAlB17Rs)->CLIEFOR,;
										(cAlB17Rs)->LOJA,;
										(cAlB17Rs)->NOME,;
										(cAlB17Rs)->CGC,;
										(cAlB17Rs)->SIMPLESNAC,;
										(cAlB17Rs)->CODPROD,;
										(cAlB17Rs)->PRODUTO,;
										(cAlB17Rs)->QUANT,;
										(cAlB17Rs)->PRCUNIT,;
										(cAlB17Rs)->TOTAL,;
										(cAlB17Rs)->VALCONT,;
										(cAlB17Rs)->ICMSBASE,;
										(cAlB17Rs)->ICMSALIQ,;
										(cAlB17Rs)->ICMSVAL,;
										(cAlB17Rs)->ICMSRET,;
										(cAlB17Rs)->ICMSOUTR,;
										(cAlB17Rs)->DESCONT,;
										(cAlB17Rs)->SEGURO,;
										(cAlB17Rs)->DESPESA,;
										(cAlB17Rs)->FRETE,;
										(cAlB17Rs)->DTCANC,;
										(cAlB17Rs)->OBSERV,;
										(cAlB17Rs)->TES,;
										(cAlB17Rs)->CFOP,;
										(cAlB17Rs)->TIPO,;
										(cAlB17Rs)->ESPECIE,;
										(cAlB17Rs)->CCUSTO})
		(cAlB17Rs)->(DbSkip())
	EndDo

	(cAlB17Rs)->(dbCloseArea())

	nA17T91 := -nA17T01 + nA17T11 + nA17T21 - nA17T31
	nA17T92 := -nA17T02 + nA17T12 + nA17T22 - nA17T32
	nA17T93 := -nA17T03 + nA17T13 + nA17T23 - nA17T33
	SysRefresh()
Return

/*/{Protheus.doc} Static Function xRelBr17
	Gera Relatório Ref. Legumes
	@type  Static Function
	@author Abel Babini Filho
	@since 12/11/2019
	@version version
	/*/
	Static Function xRelBr17()
	Local aSays			:= {}
	Local aButtons		:= {}
	Local nOpca			:= 0
	//+-----------------------------------------------+
	//|Monta Form Batch - Interface com o Usuario     |
	//+-----------------------------------------------+
	AADD(aSays,"Este programa tem a finalidade de Gerar um arquivo Excel " )
	AADD(aSays,"Relatorio de Legumes" )

	AADD(aButtons, { 1,.T.,{|o| nOpca:=1, o:oWnd:End(), Processa({||xRelBr17b()},"Gerando arquivo","Aguarde...")    }})
	AADD(aButtons, { 2,.T.,{|o| nOpca:=2, o:oWnd:End() }})
	FormBatch( cCadastr, aSays, aButtons )

	MsgInfo("Arquivo Excel gerado!")
Return

/*/{Protheus.doc} Static Function xRelBr17b
	Gera Relatório Ref. Legumes
	@type  Static Function
	@author Abel Babini Filho
	@since 12/11/2019
	@version version
	/*/
Static Function xRelBr17b()
	Private oExcel     := FWMSEXCELEX():New()
	//Private cArquivo	:= cGetFile("Arquivo XML", "Selecione o diretório para salvar o relatório",,'C:\',.T.,GETF_RETDIRECTORY + GETF_LOCALHARD + GETF_NETWORKDRIVE)
	Private oMsExcel   := NIL

	cArquivo := cPathRel +  'RLEGUMES_' + DTOS(DATE()) + STRTRAN(TIME(),':','') + '.XML'
	BEGIN SEQUENCE

		//IF .NOT.( ApOleClient("MsExcel") )   // se nao existir o excel sai fora..
		//	Alert("Nao Existe Excel Instalado")
		//	BREAK
		//EndIF

		//Planilha1 - Resumo
		Cab17P1()
		GEx17P1()

		//Planilha2 - Compras
		Cab17P2()
		GEx17P2()

		//Planilha2 - Devolução de Revendas
		Cab17P3()
		GEx17P3()

		//Planilha2 - Revendas
		Cab17P4()
		GEx17P4()

		//Planilha2 - Devolção de Compras
		Cab17P5()
		GEx17P5()

		//Planilha2 - Devolção de Compras
		Cab17P6()
		GEx17P6()

		SalvaXml()
		CriaExcel()

	END SEQUENCE

Return

/*/{Protheus.doc} Static Function Cab17P1
	Gera Relatório Ref. Legumes
	@type  Static Function
	@author Abel Babini Filho
	@since 12/11/2019
	@version version
	/*/
	Static Function Cab17P1()
	oExcel:AddworkSheet(cFld171)
	oExcel:AddTable(cFld171,cFld17t1)
	oExcel:AddColumn(cFld171,cFld17t1,"Descrição",1,1)
	oExcel:AddColumn(cFld171,cFld17t1,"Quantidade",2,3)
	oExcel:AddColumn(cFld171,cFld17t1,"Vl. Contábil",2,3)
	oExcel:AddColumn(cFld171,cFld17t1,"Vl. ICMS",2,3)
RETURN(NIL)

/*/{Protheus.doc} Static Function GEx17P1
	Gera Relatório Ref. Legumes
	@type  Static Function
	@author Abel Babini Filho
	@since 12/11/2019
	@version version
	/*/
Static Function GEx17P1()
	Local i
	oExcel:AddRow(cFld171,cFld17t1,{	"Crédito de Impostos","","",""})
	oExcel:AddRow(cFld171,cFld17t1,{	"Compra para revenda","","",""})
	For i:=1 to Len(aBrw17Cp)
		oExcel:AddRow(cFld171,cFld17t1,{	Alltrim(aBrw17Cp[i,4]) +' - '+ Alltrim(aBrw17Cp[i,2]) +' '+aBrw17Cp[i,3],;
																			aBrw17Cp[i,5],;
																			aBrw17Cp[i,6],;
																			aBrw17Cp[i,7]})
	Next i
	oExcel:AddRow(cFld171,cFld17t1,{	"Total Compras",nA17T01,nA17T02,nA17T03})
	oExcel:AddRow(cFld171,cFld17t1,{	"","","",""})

	oExcel:AddRow(cFld171,cFld17t1,{	"Devolução revenda","","",""})
	For i:=1 to Len(aBrw17Dr)
		oExcel:AddRow(cFld171,cFld17t1,{	Alltrim(aBrw17Dr[i,4]) +' - '+ Alltrim(aBrw17Dr[i,2]) +' '+aBrw17Dr[i,3],;
																			aBrw17Dr[i,5],;
																			aBrw17Dr[i,6],;
																			aBrw17Dr[i,7]})
	Next i
	oExcel:AddRow(cFld171,cFld17t1,{	"Total Devolução Revendas",nA17T31,nA17T32,nA17T33})
	
	oExcel:AddRow(cFld171,cFld17t1,{  "Sub Total (Créditos)",nA17T01+nA17T31,nA17T02+nA17T32,nA17T03+nA17T33})

	oExcel:AddRow(cFld171,cFld17t1,{"","","",""})
	oExcel:AddRow(cFld171,cFld17t1,{"","","",""})

	oExcel:AddRow(cFld171,cFld17t1,{	"Débito de Impostos","","",""})
	oExcel:AddRow(cFld171,cFld17t1,{	"Revendas","","",""})
	For i:=1 to Len(aBrw17Rv)
		oExcel:AddRow(cFld171,cFld17t1,{	Alltrim(aBrw17Rv[i,4]) +' - '+ Alltrim(aBrw17Rv[i,2]) +' '+aBrw17Rv[i,3],;
																			aBrw17Rv[i,5],;
																			aBrw17Rv[i,6],;
																			aBrw17Rv[i,7]})
	Next i
	oExcel:AddRow(cFld171,cFld17t1,{	"Total Revendas",nA17T21,nA17T22,nA17T23})
	oExcel:AddRow(cFld171,cFld17t1,{"","","",""})
	oExcel:AddRow(cFld171,cFld17t1,{	"Devolução Compras","","",""})
	For i:=1 to Len(aBrw17Dc)
		oExcel:AddRow(cFld171,cFld17t1,{	Alltrim(aBrw17Dc[i,4]) +' - '+ Alltrim(aBrw17Dc[i,2]) +' '+aBrw17Dc[i,3],;
																			aBrw17Dc[i,5],;
																			aBrw17Dc[i,6],;
																			aBrw17Dc[i,7]})
	Next i
	oExcel:AddRow(cFld171,cFld17t1,{	"Devolução Compras",nA17T11,nA17T12,nA17T13})
	oExcel:AddRow(cFld171,cFld17t1,{  "Sub Total (Débitos)",nA17T21+nA17T11,nA17T22+nA17T12,nA17T23+nA17T13})
	oExcel:AddRow(cFld171,cFld17t1,{"","","",""})
	//
	oExcel:AddRow(cFld171,cFld17t1,{	"TOTAL",nA17T91,nA17T92,nA17T93})
Return

/*/{Protheus.doc} Static Function Cab17P2
	Gera Relatório Ref. Legumes
	@type  Static Function
	@author Abel Babini Filho
	@since 12/11/2019
	@version version
	/*/
Static Function Cab17P2()
	oExcel:AddworkSheet(cFld172)
	oExcel:AddTable(cFld172,cFld17t2)
	oExcel:AddColumn(cFld172,cFld17t2,"Filial",1,1)
	oExcel:AddColumn(cFld172,cFld17t2,"Produto",1,1)
	oExcel:AddColumn(cFld172,cFld17t2,"CFOP",1,1)
	oExcel:AddColumn(cFld172,cFld17t2,"Quantidade",2,3,.t.)
	oExcel:AddColumn(cFld172,cFld17t2,"Vl. Contábil",2,3,.t.)
	oExcel:AddColumn(cFld172,cFld17t2,"Vl. ICMS",2,3,.t.)
RETURN(NIL)

/*/{Protheus.doc} Static Function GEx17P2
	Gera Relatório Ref. Legumes
	@type  Static Function
	@author Abel Babini Filho
	@since 12/11/2019
	@version version
	/*/
Static Function GEx17P2()
	Local i
	For i:=1 to Len(aBrw17Cp)
		oExcel:AddRow(cFld172,cFld17t2,{	aBrw17Cp[i,2],;
																			aBrw17Cp[i,3],;
																			aBrw17Cp[i,4],;
																			aBrw17Cp[i,5],;
																			aBrw17Cp[i,6],;
																			aBrw17Cp[i,7]})
	Next i

	oExcel:AddRow(cFld172,cFld17t2,{"","","","","",""})
	//
Return

/*/{Protheus.doc} Static Function Cab17P3
	Gera Relatório Ref. Legumes
	@type  Static Function
	@author Abel Babini Filho
	@since 12/11/2019
	@version version
	/*/
	Static Function Cab17P3()
	oExcel:AddworkSheet(cFld173)
	oExcel:AddTable(cFld173,cFld17t3)
	oExcel:AddColumn(cFld173,cFld17t3,"Filial",1,1)
	oExcel:AddColumn(cFld173,cFld17t3,"Produto",1,1)
	oExcel:AddColumn(cFld173,cFld17t3,"CFOP",1,1)
	oExcel:AddColumn(cFld173,cFld17t3,"Quantidade",2,3,.t.)
	oExcel:AddColumn(cFld173,cFld17t3,"Vl. Contábil",2,3,.t.)
	oExcel:AddColumn(cFld173,cFld17t3,"Vl. ICMS",2,3,.t.)
RETURN(NIL)

/*/{Protheus.doc} Static Function GEx17P3
	Gera Relatório Ref. Legumes
	@type  Static Function
	@author Abel Babini Filho
	@since 12/11/2019
	@version version
	/*/
Static Function GEx17P3()
	Local i
	For i:=1 to Len(aBrw17Dr)
		oExcel:AddRow(cFld173,cFld17t3,{	aBrw17Dr[i,2],;
																			aBrw17Dr[i,3],;
																			aBrw17Dr[i,4],;
																			aBrw17Dr[i,5],;
																			aBrw17Dr[i,6],;
																			aBrw17Dr[i,7]})
	Next i

	oExcel:AddRow(cFld173,cFld17t3,{"","","","","",""})
	//
Return

/*/{Protheus.doc} Static Function Cab17P4
	Gera Relatório Ref. Legumes
	@type  Static Function
	@author Abel Babini Filho
	@since 12/11/2019
	@version version
	/*/
	Static Function Cab17P4()
	oExcel:AddworkSheet(cFld174)
	oExcel:AddTable(cFld174,cFld17t4)
	oExcel:AddColumn(cFld174,cFld17t4,"Filial",1,1)
	oExcel:AddColumn(cFld174,cFld17t4,"Produto",1,1)
	oExcel:AddColumn(cFld174,cFld17t4,"CFOP",1,1)
	oExcel:AddColumn(cFld174,cFld17t4,"Quantidade",2,3,.t.)
	oExcel:AddColumn(cFld174,cFld17t4,"Vl. Contábil",2,3,.t.)
	oExcel:AddColumn(cFld174,cFld17t4,"Vl. ICMS",2,3,.t.)
RETURN(NIL)

/*/{Protheus.doc} Static Function GEx17P4
	Gera Relatório Ref. Legumes
	@type  Static Function
	@author Abel Babini Filho
	@since 12/11/2019
	@version version
	/*/
Static Function GEx17P4()
	Local i
	For i:=1 to Len(aBrw17Rv)
		oExcel:AddRow(cFld174,cFld17t4,{	aBrw17Rv[i,2],;
																			aBrw17Rv[i,3],;
																			aBrw17Rv[i,4],;
																			aBrw17Rv[i,5],;
																			aBrw17Rv[i,6],;
																			aBrw17Rv[i,7]})
	Next i

	oExcel:AddRow(cFld174,cFld17t4,{"","","","","",""})
	//
Return

/*/{Protheus.doc} Static Function Cab17P5
	Gera Relatório Ref. Legumes
	@type  Static Function
	@author Abel Babini Filho
	@since 12/11/2019
	@version version
	/*/
	Static Function Cab17P5()
	oExcel:AddworkSheet(cFld175)
	oExcel:AddTable(cFld175,cFld17t5)
	oExcel:AddColumn(cFld175,cFld17t5,"Filial",1,1)
	oExcel:AddColumn(cFld175,cFld17t5,"Produto",1,1)
	oExcel:AddColumn(cFld175,cFld17t5,"CFOP",1,1)
	oExcel:AddColumn(cFld175,cFld17t5,"Quantidade",2,3,.t.)
	oExcel:AddColumn(cFld175,cFld17t5,"Vl. Contábil",2,3,.t.)
	oExcel:AddColumn(cFld175,cFld17t5,"Vl. ICMS",2,3,.t.)
RETURN(NIL)

/*/{Protheus.doc} Static Function GEx17P5
	Gera Relatório Ref. Legumes
	@type  Static Function
	@author Abel Babini Filho
	@since 12/11/2019
	@version version
	/*/
Static Function GEx17P5()
	Local i
	For i:=1 to Len(aBrw17Dc)
		oExcel:AddRow(cFld175,cFld17t5,{	aBrw17Dc[i,2],;
																			aBrw17Dc[i,3],;
																			aBrw17Dc[i,4],;
																			aBrw17Dc[i,5],;
																			aBrw17Dc[i,6],;
																			aBrw17Dc[i,7]})
	Next i

	oExcel:AddRow(cFld175,cFld17t5,{"","","","","",""})
	//
Return

/*/{Protheus.doc} Static Function Cab17P6
	Gera Relatório Ref. Legumes
	@type  Static Function
	@author Abel Babini Filho
	@since 12/11/2019
	@version version
	/*/
Static Function Cab17P6()
	oExcel:AddworkSheet(cFld176)
	oExcel:AddTable(cFld176,cFld17t6)
	oExcel:AddColumn(cFld176,cFld17t6,"Filial"		,1,1)
	oExcel:AddColumn(cFld176,cFld17t6,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld176,cFld17t6,"Série"		,1,1)
	oExcel:AddColumn(cFld176,cFld17t6,"NF"			,1,1)
	oExcel:AddColumn(cFld176,cFld17t6,"Item"		,1,1)
	oExcel:AddColumn(cFld176,cFld17t6,"Cod.Forn."	,1,1)
	oExcel:AddColumn(cFld176,cFld17t6,"Loja.Forn."	,1,1)
	oExcel:AddColumn(cFld176,cFld17t6,"Fornecedor"	,1,1)
	oExcel:AddColumn(cFld176,cFld17t6,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld176,cFld17t6,"Opt.Simples"	,1,1)
	oExcel:AddColumn(cFld176,cFld17t6,"Cod.Prod."	,1,1)
	oExcel:AddColumn(cFld176,cFld17t6,"Produto"		,1,1)
	oExcel:AddColumn(cFld176,cFld17t6,"Quant."		,2,2,.T.)
	oExcel:AddColumn(cFld176,cFld17t6,"Prc.Unit"	,2,3)
	oExcel:AddColumn(cFld176,cFld17t6,"Total"		,2,3,.T.)
	oExcel:AddColumn(cFld176,cFld17t6,"Vl.Cont."	,2,3,.T.)
	oExcel:AddColumn(cFld176,cFld17t6,"Base ICMS"	,2,3,.T.)
	oExcel:AddColumn(cFld176,cFld17t6,"Aliq.ICMS"	,2,3)
	oExcel:AddColumn(cFld176,cFld17t6,"Vl.ICMS"		,2,3,.T.)
	oExcel:AddColumn(cFld176,cFld17t6,"Vl.ICMS Ret.",2,3,.T.)
	oExcel:AddColumn(cFld176,cFld17t6,"Vl.ICMS Out.",2,3,.T.)
	oExcel:AddColumn(cFld176,cFld17t6,"Desconto"	,2,3,.T.)
	oExcel:AddColumn(cFld176,cFld17t6,"Seguro"		,2,3,.T.)
	oExcel:AddColumn(cFld176,cFld17t6,"Despesa"		,2,3,.T.)
	oExcel:AddColumn(cFld176,cFld17t6,"Frete"		,2,3,.T.)
	oExcel:AddColumn(cFld176,cFld17t6,"Dt.Canc."	,1,1)
	oExcel:AddColumn(cFld176,cFld17t6,"Observações"	,1,1)
	oExcel:AddColumn(cFld176,cFld17t6,"TES"			,1,1)
	oExcel:AddColumn(cFld176,cFld17t6,"CFOP"		,1,1)
	oExcel:AddColumn(cFld176,cFld17t6,"Tipo"		,1,1)
	oExcel:AddColumn(cFld176,cFld17t6,"Espécie"		,1,1)
	oExcel:AddColumn(cFld176,cFld17t6,"Centro Custo",1,1)

RETURN(NIL)

/*/{Protheus.doc} Static Function GEx17P6
	Gera Relatório Ref. Legumes
	@type  Static Function
	@author Abel Babini Filho
	@since 12/11/2019
	@version version
	/*/
Static Function GEx17P6()
	Local nExcel1
	FOR nExcel1 := 1 TO Len(aBrw17Dt)
		oExcel:AddRow(cFld176,cFld17t6,{aBrw17Dt[nExcel1,01],;
			aBrw17Dt[nExcel1,02],;
			aBrw17Dt[nExcel1,03],;
			aBrw17Dt[nExcel1,04],;
			aBrw17Dt[nExcel1,05],;
			aBrw17Dt[nExcel1,06],;
			aBrw17Dt[nExcel1,07],;
			aBrw17Dt[nExcel1,08],;
			aBrw17Dt[nExcel1,09],;
			aBrw17Dt[nExcel1,10],;
			aBrw17Dt[nExcel1,11],;
			aBrw17Dt[nExcel1,12],;
			aBrw17Dt[nExcel1,13],;
			aBrw17Dt[nExcel1,14],;
			aBrw17Dt[nExcel1,15],;
			aBrw17Dt[nExcel1,19],;
			aBrw17Dt[nExcel1,17],;
			aBrw17Dt[nExcel1,18],;
			aBrw17Dt[nExcel1,19],;
			aBrw17Dt[nExcel1,20],;
			aBrw17Dt[nExcel1,21],;
			aBrw17Dt[nExcel1,22],;
			aBrw17Dt[nExcel1,23],;
			aBrw17Dt[nExcel1,24],;
			aBrw17Dt[nExcel1,25],;
			aBrw17Dt[nExcel1,26],;
			aBrw17Dt[nExcel1,27],;
			aBrw17Dt[nExcel1,28],;
			aBrw17Dt[nExcel1,29],;
			aBrw17Dt[nExcel1,30],;
			aBrw17Dt[nExcel1,31],;
			aBrw17Dt[nExcel1,32]})
	Next nExcel1
	//Linha Em branco
	oExcel:AddRow(cFld176,cFld17t6,{"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""})
RETURN

// FIM Chamado n.040929 - OS n.042022 - Relatorio Legumes - Abel Babini - 12/11/2019

// INICIO Chamado n.050629 - OS n. 054821 - Relatório Demonstrativo - Abel Babini  - 18/11/2019
/*/{Protheus.doc} Static Function CriaExtr
	Cria Array com a extrutura para criação da Tabela Temporária no Banco de Dados.
	@type  Static Function
	@author Abel Babini Filho
	@since 18/11/2019
	@version 1
	/*/
Static Function CriaExtr(_table)
	Local _aFields := {}
	Local aSFil := {}
	aSFil := FWTamSX3("FT_FILIAL")

	IF _table == T00PARAM
		aadd(_aFields,{"LINHA","N",6,0})
		aadd(_aFields,{"FILIAL",aSFil[3],aSFil[1],aSFil[2]})
		aadd(_aFields,{"RELATORI","C",40,0})
		aadd(_aFields,{"PARAMETR","C",10,0})
		aadd(_aFields,{"CONTEUDO","C",255,0})
		aadd(_aFields,{"DESCR","C",255,0})
	ELSEIF _table == T01GIA
		aadd(_aFields,{"LINHA","N",6,0})
		aadd(_aFields,{"FILIAL",aSFil[3],aSFil[1],aSFil[2]})
		aadd(_aFields,{"LNGIA","C",10,0})
		aadd(_aFields,{"DESCR","C",100,0})
		aadd(_aFields,{"VALOR","N",16,2})
		aadd(_aFields,{"TPLIN","C",3,0})
	ELSEIF _table == T02GIAST
		aadd(_aFields,{"LINHA","N",6,0})
		aadd(_aFields,{"FILIAL",aSFil[3],aSFil[1],aSFil[2]})
		aadd(_aFields,{"DESCR","C",100,0})
		aadd(_aFields,{"VALOR","N",16,2})
	ELSEIF _table == T05DEMON
		aadd(_aFields,{"CHAVE","C",20,0})
		aadd(_aFields,{"LINHA","C",10,0})
		aadd(_aFields,{"DESCR1","C",100,0})
		aadd(_aFields,{"DESCR2","C",100,0})
		aadd(_aFields,{"DESCR3","C",100,0})
		aadd(_aFields,{"DESCR4","C",100,0})
		aadd(_aFields,{"DESCR5","C",100,0})
		aadd(_aFields,{"VALOR1","N",16,2})
		aadd(_aFields,{"VALOR2","N",16,2})
		aadd(_aFields,{"VALOR3","N",16,2})
		aadd(_aFields,{"VALOR4","N",16,2})
		aadd(_aFields,{"VALOR5","N",16,2})
	ELSEIF _table == T06DIFNA
		aSDtEnt := FWTamSX3("FT_ENTRADA")
		aSDtEnt := FWTamSX3("FT_EMISSAO")
		aSNFSer := FWTamSX3("FT_SERIE")
		aSNF		:= FWTamSX3("FT_NFISCAL")
		aSNFIte := FWTamSX3("FT_ITEM")
		aSCliFo := FWTamSX3("FT_CLIEFOR")
		aSLoja	:= FWTamSX3("FT_LOJA")
		aSNome	:= FWTamSX3("A1_NOME")
		aSEsta	:= FWTamSX3("FT_ESTADO")
		aSCNPJ	:= FWTamSX3("A1_CGC")		
		aSCfo 	:= FWTamSX3("FT_CFOP")
		aSPrd 	:= FWTamSX3("FT_PRODUTO")
		aSDPr		:= FWTamSX3("B1_DESC")
		aSQtd 	:= FWTamSX3("FT_QUANT")
		aSPrcUn := FWTamSX3("FT_PRCUNIT")
		aSVCt 	:= FWTamSX3("FT_VALCONT")
		aSVlICM := FWTamSX3("FT_VALICM")
		aSBsICM := FWTamSX3("FT_BASEICM")
		aSAlqICM:= FWTamSX3("FT_ALIQICM")
		//aSVlICRe:= FWTamSX3("FT_ICMSRET")
		//aSVlICOu:= FWTamSX3("FT_OUTRICM")
		aadd(_aFields,{"FILIAL",aSFil[3],aSFil[1],aSFil[2]})
		aadd(_aFields,{"DTENTRADA",aSDtEnt[3],aSDtEnt[1],aSDtEnt[2]})
		aadd(_aFields,{"DTEMISSAO",aSDtEnt[3],aSDtEnt[1],aSDtEnt[2]})
		aadd(_aFields,{"NFSERIE",aSNFSer[3],aSNFSer[1],aSNFSer[2]})
		aadd(_aFields,{"NF",aSNF[3],aSNF[1],aSNF[2]})
		aadd(_aFields,{"NFITEM",aSNFIte[3],aSNFIte[1],aSNFIte[2]})
		aadd(_aFields,{"CLIEFOR",aSCliFo[3],aSCliFo[1],aSCliFo[2]})
		aadd(_aFields,{"LOJA",aSLoja[3],aSLoja[1],aSLoja[2]})
		aadd(_aFields,{"NOME",aSNome[3],aSNome[1],aSNome[2]})
		aadd(_aFields,{"ESTADO",aSEsta[3],aSEsta[1],aSEsta[2]})
		aadd(_aFields,{"CNPJ",aSCNPJ[3],aSCNPJ[1],aSCNPJ[2]})
		aadd(_aFields,{"CODPROD",aSPrd[3],aSPrd[1],aSPrd[2]})
		aadd(_aFields,{"DESCPROD",aSDPr[3],aSDPr[1],aSDPr[2]})
		aadd(_aFields,{"CFOP",aSCfo[3],aSCfo[1],aSCfo[2]})
		aadd(_aFields,{"QUANT",aSQtd[3],aSQtd[1],aSQtd[2]})
		aadd(_aFields,{"PRCUNIT",aSPrcUn[3],aSPrcUn[1],aSPrcUn[2]})
		aadd(_aFields,{"VLCONT",aSVCt[3],aSVCt[1],aSVCt[2]})
		aadd(_aFields,{"BSICMS",aSBsICM[3],aSBsICM[1],aSBsICM[2]})
		aadd(_aFields,{"VLICMS",aSVlICM[3],aSVlICM[1],aSVlICM[2]})
		aadd(_aFields,{"ALIQINT",aSAlqICM[3],aSAlqICM[1],aSAlqICM[2]})
		aadd(_aFields,{"ALIQDEST",aSAlqICM[3],aSAlqICM[1],aSAlqICM[2]})
		aadd(_aFields,{"DIFAL",aSVlICM[3],aSVlICM[1],aSVlICM[2]})
		aadd(_aFields,{"UFDEST",aSVlICM[3],aSVlICM[1],aSVlICM[2]})
		aadd(_aFields,{"UFORIG",aSVlICM[3],aSVlICM[1],aSVlICM[2]})
		//aadd(_aFields,{"ICMSRET",aSVlICRe[3],aSVlICRe[1],aSVlICRe[2]})
		//aadd(_aFields,{"ICMSOUTR",aSVlICOu[3],aSVlICOu[1],aSVlICOu[2]})
	ELSEIF _table == T06CFNCT
		aSDtEnt := FWTamSX3("FT_ENTRADA")
		aSDtEnt := FWTamSX3("FT_EMISSAO")
		aSNFSer := FWTamSX3("FT_SERIE")
		aSNF		:= FWTamSX3("FT_NFISCAL")
		aSNFIte := FWTamSX3("FT_ITEM")
		aSCliFo := FWTamSX3("FT_CLIEFOR")
		aSLoja	:= FWTamSX3("FT_LOJA")
		aSNome	:= FWTamSX3("A1_NOME")
		aSEsta	:= FWTamSX3("FT_ESTADO")
		aSCNPJ	:= FWTamSX3("A1_CGC")		
		aSCfo 	:= FWTamSX3("FT_CFOP")
		aSPrd 	:= FWTamSX3("FT_PRODUTO")
		aSDPr		:= FWTamSX3("B1_DESC")
		aSQtd 	:= FWTamSX3("FT_QUANT")
		aSPrcUn := FWTamSX3("FT_PRCUNIT")
		aSVCt 	:= FWTamSX3("FT_VALCONT")
		aSVlICM := FWTamSX3("FT_VALICM")
		aSBsICM := FWTamSX3("FT_BASEICM")
		aSAlqICM:= FWTamSX3("FT_ALIQICM")
		//aSVlICRe:= FWTamSX3("FT_ICMSRET")
		//aSVlICOu:= FWTamSX3("FT_OUTRICM")
		aadd(_aFields,{"FILIAL",aSFil[3],aSFil[1],aSFil[2]})
		aadd(_aFields,{"DTENTRADA",aSDtEnt[3],aSDtEnt[1],aSDtEnt[2]})
		aadd(_aFields,{"DTEMISSAO",aSDtEnt[3],aSDtEnt[1],aSDtEnt[2]})
		aadd(_aFields,{"NFSERIE",aSNFSer[3],aSNFSer[1],aSNFSer[2]})
		aadd(_aFields,{"NF",aSNF[3],aSNF[1],aSNF[2]})
		aadd(_aFields,{"NFITEM",aSNFIte[3],aSNFIte[1],aSNFIte[2]})
		aadd(_aFields,{"CLIEFOR",aSCliFo[3],aSCliFo[1],aSCliFo[2]})
		aadd(_aFields,{"LOJA",aSLoja[3],aSLoja[1],aSLoja[2]})
		aadd(_aFields,{"NOME",aSNome[3],aSNome[1],aSNome[2]})
		aadd(_aFields,{"ESTADO",aSEsta[3],aSEsta[1],aSEsta[2]})
		aadd(_aFields,{"CNPJ",aSCNPJ[3],aSCNPJ[1],aSCNPJ[2]})
		aadd(_aFields,{"CODPROD",aSPrd[3],aSPrd[1],aSPrd[2]})
		aadd(_aFields,{"DESCPROD",aSDPr[3],aSDPr[1],aSDPr[2]})
		aadd(_aFields,{"CFOP",aSCfo[3],aSCfo[1],aSCfo[2]})
		aadd(_aFields,{"QUANT",aSQtd[3],aSQtd[1],aSQtd[2]})
		aadd(_aFields,{"PRCUNIT",aSPrcUn[3],aSPrcUn[1],aSPrcUn[2]})
		aadd(_aFields,{"VLCONT",aSVCt[3],aSVCt[1],aSVCt[2]})
		aadd(_aFields,{"BSICMS",aSBsICM[3],aSBsICM[1],aSBsICM[2]})
	//OUTRAS SAÍDAS
	ELSEIF _table == T09OUT01
		aSDtEnt := FWTamSX3("FT_ENTRADA")
		aSNFSer := FWTamSX3("FT_SERIE")
		aSNF		:= FWTamSX3("FT_NFISCAL")
		aSNFIte := FWTamSX3("FT_ITEM")
		aSCliFo := FWTamSX3("FT_CLIEFOR")
		aSNome	:= FWTamSX3("A2_NOME")
		aSCNPJ	:= FWTamSX3("A2_CGC")
		aSLoja	:= FWTamSX3("FT_LOJA")
		aSCfo 	:= FWTamSX3("FT_CFOP")
		aSPrd 	:= FWTamSX3("FT_PRODUTO")
		aSDPr		:= FWTamSX3("B1_DESC")
		aSQtd 	:= FWTamSX3("FT_QUANT")
		aSPrcUn := FWTamSX3("FT_PRCUNIT")
		aSVTot	:= FWTamSX3("FT_TOTAL")
		aSVCt 	:= FWTamSX3("FT_VALCONT")
		aSBsICM := FWTamSX3("FT_BASEICM")
		aSAlqICM:= FWTamSX3("FT_ALIQICM")
		aSVlICM := FWTamSX3("FT_VALICM")
		aSVlICRe:= FWTamSX3("FT_ICMSRET")
		aSVlICOu:= FWTamSX3("FT_OUTRICM")
		aSVDesc := FWTamSX3("FT_DESCONT")
		aSVSegur:= FWTamSX3("FT_SEGURO")
		aSVDespe:= FWTamSX3("FT_DESPESA")
		aSVFrete:= FWTamSX3("FT_FRETE")
		aSDtCanc:= FWTamSX3("FT_DTCANC")
		aSObserv:= FWTamSX3("FT_OBSERV")
		aSCConta:= FWTamSX3("FT_CONTA")
		aSTes 	:= FWTamSX3("FT_TES")
		aSTpMov := FWTamSX3("FT_TIPOMOV")
		aSTpDoc := FWTamSX3("FT_TIPO")
		aSEspeci:= FWTamSX3("FT_ESPECIE")
		aSClcICM:= FWTamSX3("F4_ICM")
		aSClcPis:= FWTamSX3("F4_PISCOF")
		aSVPis 	:= FWTamSX3("FT_VALPIS")
		aSVCof 	:= FWTamSX3("FT_VALCOF")
		aadd(_aFields,{"OMARK","C",2,0})
		aadd(_aFields,{"CLASSIF","C",2,0})
		aadd(_aFields,{"FILIAL",aSFil[3],aSFil[1],aSFil[2]})
		aadd(_aFields,{"DTENTRADA",aSDtEnt[3],aSDtEnt[1],aSDtEnt[2]})
		aadd(_aFields,{"NFSERIE",aSNFSer[3],aSNFSer[1],aSNFSer[2]})
		aadd(_aFields,{"NF",aSNF[3],aSNF[1],aSNF[2]})
		aadd(_aFields,{"NFITEM",aSNFIte[3],aSNFIte[1],aSNFIte[2]})
		aadd(_aFields,{"CLIEFOR",aSCliFo[3],aSCliFo[1],aSCliFo[2]})
		aadd(_aFields,{"LOJA",aSLoja[3],aSLoja[1],aSLoja[2]})
		aadd(_aFields,{"NOME",aSNome[3],aSNome[1],aSNome[2]})
		aadd(_aFields,{"CNPJ",aSCNPJ[3],aSCNPJ[1],aSCNPJ[2]})
		aadd(_aFields,{"CODPROD",aSPrd[3],aSPrd[1],aSPrd[2]})
		aadd(_aFields,{"DESCPROD",aSDPr[3],aSDPr[1],aSDPr[2]})
		aadd(_aFields,{"CFOP",aSCfo[3],aSCfo[1],aSCfo[2]})
		aadd(_aFields,{"QUANT",aSQtd[3],aSQtd[1],aSQtd[2]})
		aadd(_aFields,{"PRCUNIT",aSPrcUn[3],aSPrcUn[1],aSPrcUn[2]})
		aadd(_aFields,{"TOTAL",aSVTot[3],aSVTot[1],aSVTot[2]})
		aadd(_aFields,{"VLCONT",aSVCt[3],aSVCt[1],aSVCt[2]})
		aadd(_aFields,{"ICMSBASE",aSBsICM[3],aSBsICM[1],aSBsICM[2]})
		aadd(_aFields,{"ICMSALIQ",aSAlqICM[3],aSAlqICM[1],aSAlqICM[2]})
		aadd(_aFields,{"ICMSVAL",aSVlICM[3],aSVlICM[1],aSVlICM[2]})
		aadd(_aFields,{"ICMSRET",aSVlICRe[3],aSVlICRe[1],aSVlICRe[2]})
		aadd(_aFields,{"ICMSOUTR",aSVlICOu[3],aSVlICOu[1],aSVlICOu[2]})
		aadd(_aFields,{"DESCONT",aSVDesc[3],aSVDesc[1],aSVDesc[2]})
		aadd(_aFields,{"SEGURO",aSVSegur[3],aSVSegur[1],aSVSegur[2]})
		aadd(_aFields,{"DESPESA",aSVDespe[3],aSVDespe[1],aSVDespe[2]})
		aadd(_aFields,{"FRETE",aSVFrete[3],aSVFrete[1],aSVFrete[2]})
		aadd(_aFields,{"DTCANC",aSDtCanc[3],aSDtCanc[1],aSDtCanc[2]})
		aadd(_aFields,{"OBSERV",aSObserv[3],aSObserv[1],aSObserv[2]})
		aadd(_aFields,{"CONTACONT",aSCConta[3],aSCConta[1],aSCConta[2]})
		aadd(_aFields,{"TES",aSTes[3],aSTes[1],aSTes[2]})
		aadd(_aFields,{"TIPOMOV",aSTpMov[3],aSTpMov[1],aSTpMov[2]})
		aadd(_aFields,{"TIPO",aSTpDoc[3],aSTpDoc[1],aSTpDoc[2]})
		aadd(_aFields,{"ESPECIE",aSEspeci[3],aSEspeci[1],aSEspeci[2]})
		aadd(_aFields,{"CALCICMS",aSClcICM[3],aSClcICM[1],aSClcICM[2]})
		aadd(_aFields,{"CREDICMS","C",3,0})
		aadd(_aFields,{"CALCPIS",aSClcPis[3],aSClcPis[1],aSClcPis[2]})
		aadd(_aFields,{"CREDPIS","C",3,0})
		aadd(_aFields,{"VALPIS",aSVPis[3],aSVPis[1],aSVPis[2]})
		aadd(_aFields,{"VALCOF",aSVCof[3],aSVCof[1],aSVCof[2]})
	ELSEIF _table == T09OUT02
		aSQtd 	:= FWTamSX3("FT_QUANT")
		aSVCt 	:= FWTamSX3("FT_VALCONT")
		aSVlICM := FWTamSX3("FT_VALICM")
		aadd(_aFields,{"FILIAL",aSFil[3],aSFil[1],aSFil[2]})
		aadd(_aFields,{"CLASSIF","C",100,0})
		aadd(_aFields,{"QUANT",aSQtd[3],aSQtd[1],aSQtd[2]})
		aadd(_aFields,{"VLCONT",aSVCt[3],aSVCt[1],aSVCt[2]})
		aadd(_aFields,{"ICMSVAL",aSVlICM[3],aSVlICM[1],aSVlICM[2]})
	ELSEIF _table == T14GRAXA
		aSQtd := FWTamSX3("FT_QUANT")
		aSVCt := FWTamSX3("FT_VALCONT")
		aSVIC := FWTamSX3("FT_VALICM")
		aadd(_aFields,{"INDICE","C",aSFil[1]+150,0})
		aadd(_aFields,{"FILIAL",aSFil[3],aSFil[1],aSFil[2]})
		aadd(_aFields,{"DESCR","C",50,0})
		aadd(_aFields,{"PRODUTO","C",100,0})
		aadd(_aFields,{"QUANT",aSQtd[3],aSQtd[1],aSQtd[2]})
		aadd(_aFields,{"VLCONT",aSVCt[3],aSVCt[1],aSVCt[2]})
		aadd(_aFields,{"VLICMS",aSVIC[3],aSVIC[1],aSVIC[2]})
	ELSEIF _table == T20NFCAN	
		aSDtEnt := FWTamSX3("F3_ENTRADA")
		aSDtEmi := FWTamSX3("F3_EMISSAO")
		aSNFSer := FWTamSX3("F3_SERIE")
		aSNF		:= FWTamSX3("F3_NFISCAL")
		aSCfop	:= FWTamSX3("F3_CFO")
		aSUF		:= FWTamSX3("F3_ESTADO")
		aSVlCont:= FWTamSX3("F3_VALCONT")
		aSDtCan	:= FWTamSX3("F3_DTCANC")
		aSObser	:= FWTamSX3("F3_OBSERV")
		aadd(_aFields,{"FILIAL",aSFil[3],aSFil[1],aSFil[2]})	
		aadd(_aFields,{"DTENTRADA",aSDtEnt[3],aSDtEnt[1],aSDtEnt[2]})
		aadd(_aFields,{"DTEMISSAO",aSDtEmi[3],aSDtEmi[1],aSDtEmi[2]})
		aadd(_aFields,{"NFSERIE",aSNFSer[3],aSNFSer[1],aSNFSer[2]})
		aadd(_aFields,{"NFISCAL",aSNF[3],aSNF[1],aSNF[2]})
		aadd(_aFields,{"CFOP",aSCfop[3],aSCfop[1],aSCfop[2]})
		aadd(_aFields,{"UF",aSUF[3],aSUF[1],aSUF[2]})
		aadd(_aFields,{"VALCONT",aSVlCont[3],aSVlCont[1],aSVlCont[2]})
		aadd(_aFields,{"DTCANC",aSDtCan[3],aSDtCan[1],aSDtCan[2]})
		aadd(_aFields,{"OBSERV",aSObser[3],aSObser[1],aSObser[2]})
	ELSEIF _table == T22REVTR
		aSDtEnt := FWTamSX3("FT_ENTRADA")
		aSDtEmi := FWTamSX3("FT_EMISSAO")
		aSNFSer := FWTamSX3("FT_SERIE")
		aSNF		:= FWTamSX3("FT_NFISCAL")
		aSNFIte := FWTamSX3("FT_ITEM")
		aSCliFo := FWTamSX3("FT_CLIEFOR")
		aSNome	:= FWTamSX3("A2_NOME")
		aSCNPJ	:= FWTamSX3("A2_CGC")
		aSLoja	:= FWTamSX3("FT_LOJA")
		aSCfo 	:= FWTamSX3("FT_CFOP")
		aSPrd 	:= FWTamSX3("FT_PRODUTO")
		aSDPr		:= FWTamSX3("B1_DESC")
		aSQtd 	:= FWTamSX3("FT_QUANT")
		aSPrcUn := FWTamSX3("FT_PRCUNIT")
		aSVCt 	:= FWTamSX3("FT_VALCONT")
		aSVIC 	:= FWTamSX3("FT_VALICM")
		aadd(_aFields,{"FILIAL",aSFil[3],aSFil[1],aSFil[2]})
		aadd(_aFields,{"DTENTRADA",aSDtEnt[3],aSDtEnt[1],aSDtEnt[2]})
		aadd(_aFields,{"DTEMISSAO",aSDtEmi[3],aSDtEmi[1],aSDtEmi[2]})
		aadd(_aFields,{"NFSERIE",aSNFSer[3],aSNFSer[1],aSNFSer[2]})
		aadd(_aFields,{"NF",aSNF[3],aSNF[1],aSNF[2]})
		aadd(_aFields,{"NFITEM",aSNFIte[3],aSNFIte[1],aSNFIte[2]})
		aadd(_aFields,{"CLIEFOR",aSCliFo[3],aSCliFo[1],aSCliFo[2]})
		aadd(_aFields,{"LOJA",aSLoja[3],aSLoja[1],aSLoja[2]})
		aadd(_aFields,{"NOME",aSNome[3],aSNome[1],aSNome[2]})
		aadd(_aFields,{"CNPJ",aSCNPJ[3],aSCNPJ[1],aSCNPJ[2]})
		aadd(_aFields,{"CFOP",aSCfo[3],aSCfo[1],aSCfo[2]})
		aadd(_aFields,{"CODPROD",aSPrd[3],aSPrd[1],aSPrd[2]})
		aadd(_aFields,{"DESCPROD",aSDPr[3],aSDPr[1],aSDPr[2]})
		aadd(_aFields,{"QUANT",aSQtd[3],aSQtd[1],aSQtd[2]})
		aadd(_aFields,{"PRCUNIT",aSPrcUn[3],aSPrcUn[1],aSPrcUn[2]})
		aadd(_aFields,{"VLCONT",aSVCt[3],aSVCt[1],aSVCt[2]})
		aadd(_aFields,{"VLICMS",aSVIC[3],aSVIC[1],aSVIC[2]})
	ELSEIF _table == T22RVTRR
		aSPrd 	:= FWTamSX3("FT_PRODUTO")
		aSDPr		:= FWTamSX3("B1_DESC")
		aSQtd 	:= FWTamSX3("FT_QUANT")
		aSVCt 	:= FWTamSX3("FT_VALCONT")
		aSVIC 	:= FWTamSX3("FT_VALICM")
		aadd(_aFields,{"FILIAL",aSFil[3],aSFil[1],aSFil[2]})
		aadd(_aFields,{"CODPROD",aSPrd[3],aSPrd[1],aSPrd[2]})
		aadd(_aFields,{"DESCPROD",aSDPr[3],aSDPr[1],aSDPr[2]})
		aadd(_aFields,{"QUANT",aSQtd[3],aSQtd[1],aSQtd[2]})
		aadd(_aFields,{"VLCONT",aSVCt[3],aSVCt[1],aSVCt[2]})
		aadd(_aFields,{"VLICMS",aSVIC[3],aSVIC[1],aSVIC[2]})
	ELSEIF _table == T27IVA
		aSCfo 	:= FWTamSX3("FT_CFOP")
		aSAlqICM:= FWTamSX3("FT_ALIQICM")
		aSVCt 	:= FWTamSX3("FT_VALCONT")
		aSBsICM := FWTamSX3("FT_BASEICM")
		aSVlICM := FWTamSX3("FT_VALICM")
		aSVlICIs:= FWTamSX3("FT_ISENICM")
		aSVlICOu:= FWTamSX3("FT_OUTRICM")
		aSVDesc := FWTamSX3("FT_DESCONT")
		aSVlIPI	:= FWTamSX3("FT_VALIPI")

		aadd(_aFields,{"FILIAL",aSFil[3],aSFil[1],aSFil[2]})
		aadd(_aFields,{"CFOP",aSCfo[3],aSCfo[1],aSCfo[2]})
		aadd(_aFields,{"ALIQUOTA",aSAlqICM[3],aSAlqICM[1],aSAlqICM[2]})
		aadd(_aFields,{"VALCONT",aSVCt[3],aSVCt[1],aSVCt[2]})
		aadd(_aFields,{"BASEICMS",aSBsICM[3],aSBsICM[1],aSBsICM[2]})
		aadd(_aFields,{"VALICMS",aSVlICM[3],aSVlICM[1],aSVlICM[2]})
		aadd(_aFields,{"ISENTO",aSVlICIs[3],aSVlICIs[1],aSVlICIs[2]})
		aadd(_aFields,{"OUTRAS",aSVlICOu[3],aSVlICOu[1],aSVlICOu[2]})
		aadd(_aFields,{"DESCONT",aSVDesc[3],aSVDesc[1],aSVDesc[2]})
		aadd(_aFields,{"VALIPI",aSVlIPI[3],aSVlIPI[1],aSVlIPI[2]})
	ELSEIF _table == T28CIAP
		aSDtEnt := FWTamSX3("F3_ENTRADA")
		aSDtEmi := FWTamSX3("F3_EMISSAO")
		aSNFSer := FWTamSX3("F3_SERIE")
		aSNF		:= FWTamSX3("F3_NFISCAL")
		aSCfop	:= FWTamSX3("F3_CFO")
		aSUF		:= FWTamSX3("F3_ESTADO")
		aSVlCont:= FWTamSX3("F3_VALCONT")
		aSVlICMS:= FWTamSX3("F3_VALICM")
		aSObser	:= FWTamSX3("F3_OBSERV")
		aadd(_aFields,{"FILIAL",aSFil[3],aSFil[1],aSFil[2]})	
		aadd(_aFields,{"DTENTRADA",aSDtEnt[3],aSDtEnt[1],aSDtEnt[2]})
		aadd(_aFields,{"DTEMISSAO",aSDtEmi[3],aSDtEmi[1],aSDtEmi[2]})
		aadd(_aFields,{"NFSERIE",aSNFSer[3],aSNFSer[1],aSNFSer[2]})
		aadd(_aFields,{"NFISCAL",aSNF[3],aSNF[1],aSNF[2]})
		aadd(_aFields,{"CFOP",aSCfop[3],aSCfop[1],aSCfop[2]})
		aadd(_aFields,{"UF",aSUF[3],aSUF[1],aSUF[2]})
		aadd(_aFields,{"VALCONT",aSVlCont[3],aSVlCont[1],aSVlCont[2]})
		aadd(_aFields,{"VALICMS",aSVlICMS[3],aSVlICMS[1],aSVlICMS[2]})
		aadd(_aFields,{"OBSERV",aSObser[3],aSObser[1],aSObser[2]})
	ELSEIF _table == T27DETMP
		aSDtEnt := FWTamSX3("F3_ENTRADA")
		aSDtEmi := FWTamSX3("F3_EMISSAO")
		aSNFSer := FWTamSX3("F3_SERIE")
		aSNF		:= FWTamSX3("F3_NFISCAL")
		aSCliFo := FWTamSX3("F3_CLIEFOR")
		aSLoja	:= FWTamSX3("F3_LOJA")
		aSNome	:= FWTamSX3("A2_NOME")
		aSCfo 	:= FWTamSX3("F3_CFO")
		aSUF 		:= FWTamSX3("F3_ESTADO")
		aSCdRS	:= FWTamSX3("F3_CODRSEF")
		aSForm 	:= FWTamSX3("F3_FORMUL")
		aSVCt 	:= FWTamSX3("F3_VALCONT")
		aSVBI		:= FWTamSX3("F3_BASEICM")
		aSVAI		:= FWTamSX3("F3_ALIQICM")
		aSVIC 	:= FWTamSX3("F3_VALICM")
		aSVII		:= FWTamSX3("F3_ISENICM")
		aSVIO		:= FWTamSX3("F3_OUTRICM")
		aSVIP		:= FWTamSX3("F3_IPIOBS")
		aSVIRt	:= FWTamSX3("F3_ICMSRET")
		aSVICm	:= FWTamSX3("F3_ICMSCOM")
		aadd(_aFields,{"FILIAL",aSFil[3],aSFil[1],aSFil[2]})
		aadd(_aFields,{"DTENTRADA",aSDtEnt[3],aSDtEnt[1],aSDtEnt[2]})
		aadd(_aFields,{"DTEMISSAO",aSDtEmi[3],aSDtEmi[1],aSDtEmi[2]})
		aadd(_aFields,{"NFSERIE",aSNFSer[3],aSNFSer[1],aSNFSer[2]})
		aadd(_aFields,{"NFISCAL",aSNF[3],aSNF[1],aSNF[2]})
		aadd(_aFields,{"CLIEFOR",aSCliFo[3],aSCliFo[1],aSCliFo[2]})
		aadd(_aFields,{"LOJA",aSLoja[3],aSLoja[1],aSLoja[2]})
		aadd(_aFields,{"NOME",aSNome[3],aSNome[1],aSNome[2]})
		aadd(_aFields,{"CFOP",aSCfo[3],aSCfo[1],aSCfo[2]})
		aadd(_aFields,{"ESTADO",aSUF[3],aSUF[1],aSUF[2]})
		aadd(_aFields,{"CODRSEF",aSCdRS[3],aSCdRS[1],aSCdRS[2]})
		aadd(_aFields,{"FORMUL",aSForm[3],aSForm[1],aSForm[2]})
		aadd(_aFields,{"VALCONT",aSVCt[3],aSVCt[1],aSVCt[2]})
		aadd(_aFields,{"BASEICMS",aSVBI[3],aSVBI[1],aSVBI[2]})
		aadd(_aFields,{"ALIQICM",aSVAI[3],aSVAI[1],aSVAI[2]})
		aadd(_aFields,{"VALICMS",aSVIC[3],aSVIC[1],aSVIC[2]})		
		aadd(_aFields,{"ISENTO",aSVII[3],aSVII[1],aSVII[2]})
		aadd(_aFields,{"OUTRAS",aSVIO[3],aSVIO[1],aSVIO[2]})
		aadd(_aFields,{"VALIPI",aSVIP[3],aSVIP[1],aSVIP[2]})
		aadd(_aFields,{"ICMSRET",aSVIRt[3],aSVIRt[1],aSVIRt[2]})
		aadd(_aFields,{"ICMSCOM",aSVICm[3],aSVICm[1],aSVICm[2]})
		aadd(_aFields,{"VERIFIC",aSVICm[3],aSVICm[1],aSVICm[2]})
	ELSEIF _table == T30VENFV
		aSDtEnt := FWTamSX3("FT_ENTRADA")
		aSDtEmi := FWTamSX3("FT_EMISSAO")
		aSNFSer := FWTamSX3("FT_SERIE")
		aSNF		:= FWTamSX3("FT_NFISCAL")
		aSNFIte := FWTamSX3("FT_ITEM")
		aSCliFo := FWTamSX3("FT_CLIEFOR")
		aSNome	:= FWTamSX3("A2_NOME")
		aSCNPJ	:= FWTamSX3("A2_CGC")
		aSLoja	:= FWTamSX3("FT_LOJA")
		aSCfo 	:= FWTamSX3("FT_CFOP")
		aSPrd 	:= FWTamSX3("FT_PRODUTO")
		aSNCM 	:= FWTamSX3("FT_POSIPI")
		aSDPr		:= FWTamSX3("B1_DESC")
		aSQtd 	:= FWTamSX3("FT_QUANT")
		aSPrcUn := FWTamSX3("FT_PRCUNIT")
		aSVCt 	:= FWTamSX3("FT_VALCONT")
		aSVIC 	:= FWTamSX3("FT_VALICM")
		aSCSPis := FWTamSX3("FT_CSTPIS")
		aadd(_aFields,{"FILIAL",aSFil[3],aSFil[1],aSFil[2]})
		aadd(_aFields,{"DTENTRADA",aSDtEnt[3],aSDtEnt[1],aSDtEnt[2]})
		aadd(_aFields,{"DTEMISSAO",aSDtEmi[3],aSDtEmi[1],aSDtEmi[2]})
		aadd(_aFields,{"NFSERIE",aSNFSer[3],aSNFSer[1],aSNFSer[2]})
		aadd(_aFields,{"NF",aSNF[3],aSNF[1],aSNF[2]})
		aadd(_aFields,{"NFITEM",aSNFIte[3],aSNFIte[1],aSNFIte[2]})
		aadd(_aFields,{"CLIEFOR",aSCliFo[3],aSCliFo[1],aSCliFo[2]})
		aadd(_aFields,{"LOJA",aSLoja[3],aSLoja[1],aSLoja[2]})
		aadd(_aFields,{"NOME",aSNome[3],aSNome[1],aSNome[2]})
		aadd(_aFields,{"CNPJ",aSCNPJ[3],aSCNPJ[1],aSCNPJ[2]})
		aadd(_aFields,{"CFOP",aSCfo[3],aSCfo[1],aSCfo[2]})
		aadd(_aFields,{"CODPROD",aSPrd[3],aSPrd[1],aSPrd[2]})
		aadd(_aFields,{"DESCPROD",aSDPr[3],aSDPr[1],aSDPr[2]})
		aadd(_aFields,{"NCM",aSNCM[3],aSNCM[1],aSNCM[2]})
		aadd(_aFields,{"QUANT",aSQtd[3],aSQtd[1],aSQtd[2]})
		aadd(_aFields,{"PRCUNIT",aSPrcUn[3],aSPrcUn[1],aSPrcUn[2]})
		aadd(_aFields,{"VLCONT",aSVCt[3],aSVCt[1],aSVCt[2]})
		aadd(_aFields,{"VLICMS",aSVIC[3],aSVIC[1],aSVIC[2]})
		aadd(_aFields,{"CSTPIS",aSCSPis[3],aSCSPis[1],aSCSPis[2]})
	ELSEIF _table == T33ENTSA
		aSCfo 	:= FWTamSX3("FT_CFOP")
		aSPrd 	:= FWTamSX3("FT_PRODUTO")
		aSNCM 	:= FWTamSX3("FT_POSIPI")
		aSDPr		:= FWTamSX3("B1_DESC")
		aSQtd 	:= FWTamSX3("FT_QUANT")
		aSVCt 	:= FWTamSX3("FT_VALCONT")
		aSVIC 	:= FWTamSX3("FT_VALICM")
		aadd(_aFields,{"FILIAL",aSFil[3],aSFil[1],aSFil[2]})
		aadd(_aFields,{"CFOP",aSCfo[3],aSCfo[1],aSCfo[2]})
		aadd(_aFields,{"CODPROD",aSPrd[3],aSPrd[1],aSPrd[2]})
		aadd(_aFields,{"DESCPROD",aSDPr[3],aSDPr[1],aSDPr[2]})
		aadd(_aFields,{"NCM",aSNCM[3],aSNCM[1],aSNCM[2]})
		aadd(_aFields,{"QUANT",aSQtd[3],aSQtd[1],aSQtd[2]})
		aadd(_aFields,{"VLCONT",aSVCt[3],aSVCt[1],aSVCt[2]})
		aadd(_aFields,{"VLICMS",aSVIC[3],aSVIC[1],aSVIC[2]})
	ELSEIF _table == T36DETAL
		aSDtEnt := FWTamSX3("FT_ENTRADA")
		aSDtEmi := FWTamSX3("FT_EMISSAO")
		aSNFSer := FWTamSX3("FT_SERIE")
		aSNF		:= FWTamSX3("FT_NFISCAL")
		aSNFIte := FWTamSX3("FT_ITEM")
		aSCliFo := FWTamSX3("FT_CLIEFOR")
		aSLoja	:= FWTamSX3("FT_LOJA")
		aSNome	:= FWTamSX3("A2_NOME")
		aSCNPJ	:= FWTamSX3("A2_CGC")
		aSEst		:= FwTamSX3("A1_EST")
		aSSNC		:= FwTamSX3("A1_SIMPNAC")
		aSTipCli:= FwTamSX3("A1_TIPO")
		aSGrTrCl:= FwTamSX3("A1_GRPTRIB")
		aSPrd 	:= FWTamSX3("FT_PRODUTO")
		aSDPr		:= FWTamSX3("B1_DESC")
		aSPIcR	:= FWTamSX3("B1_PICMRET")
		aSPIcm	:= FWTamSX3("B1_PICM")
		aSGrpTrb:= FWTamSX3("B1_GRTRIB")
		aSTESPad:= FWTamSX3("B1_TS")
		aSXD6525:= FWTamSX3("B1_XD65255")
		aSNCM 	:= FWTamSX3("FT_POSIPI")
		aSCfo 	:= FWTamSX3("FT_CFOP")
		aSQtd 	:= FWTamSX3("FT_QUANT")
		aSPrcUn := FWTamSX3("FT_PRCUNIT")
		aSVTot	:= FWTamSX3("FT_TOTAL")
		aSVCt 	:= FWTamSX3("FT_VALCONT")
		aSBsICM := FWTamSX3("FT_BASEICM")
		aSAlqICM:= FWTamSX3("FT_ALIQICM")
		aSVlICM := FWTamSX3("FT_VALICM")
		aSVlICRe:= FWTamSX3("FT_ICMSRET")
		aSVlICOu:= FWTamSX3("FT_OUTRICM")
		aSVDesc := FWTamSX3("FT_DESCONT")
		aSVSegur:= FWTamSX3("FT_SEGURO")
		aSVDespe:= FWTamSX3("FT_DESPESA")
		aSVFrete:= FWTamSX3("FT_FRETE")
		aSDtCanc:= FWTamSX3("FT_DTCANC")
		aSObserv:= FWTamSX3("FT_OBSERV")
		aSTes 	:= FWTamSX3("FT_TES")
		aSTpDoc := FWTamSX3("FT_TIPO")
		aSEspeci:= FWTamSX3("FT_ESPECIE")

		aadd(_aFields,{"FILIAL",aSFil[3],aSFil[1],aSFil[2]})
		aadd(_aFields,{"DTENTRADA",aSDtEnt[3],aSDtEnt[1],aSDtEnt[2]})
		aadd(_aFields,{"DTEMISSAO",aSDtEmi[3],aSDtEmi[1],aSDtEmi[2]})
		aadd(_aFields,{"NFSERIE",aSNFSer[3],aSNFSer[1],aSNFSer[2]})
		aadd(_aFields,{"NF",aSNF[3],aSNF[1],aSNF[2]})
		aadd(_aFields,{"NFITEM",aSNFIte[3],aSNFIte[1],aSNFIte[2]})
		aadd(_aFields,{"CLIEFOR",aSCliFo[3],aSCliFo[1],aSCliFo[2]})
		aadd(_aFields,{"LOJA",aSLoja[3],aSLoja[1],aSLoja[2]})
		aadd(_aFields,{"NOME",aSNome[3],aSNome[1],aSNome[2]})
		aadd(_aFields,{"CNPJ",aSCNPJ[3],aSCNPJ[1],aSCNPJ[2]})
		aadd(_aFields,{"EST",aSEst[3],aSEst[1],aSEst[2]})
		aadd(_aFields,{"SIMPLESNAC",aSSNC[3],aSSNC[1],aSSNC[2]})
		aadd(_aFields,{"TIPOCLI",aSTipCli[3],aSTipCli[1],aSTipCli[2]})
		aadd(_aFields,{"GRPTRCLI",aSGrTrCl[3],aSGrTrCl[1],aSGrTrCl[2]})
		aadd(_aFields,{"CODPROD",aSPrd[3],aSPrd[1],aSPrd[2]})
		aadd(_aFields,{"DESCPROD",aSDPr[3],aSDPr[1],aSDPr[2]})
		aadd(_aFields,{"PICMRET",aSPIcR[3],aSPIcR[1],aSPIcR[2]})
		aadd(_aFields,{"PICM",aSPIcm[3],aSPIcm[1],aSPIcm[2]})
		aadd(_aFields,{"GRTRIB",aSGrpTrb[3],aSGrpTrb[1],aSGrpTrb[2]})
		aadd(_aFields,{"TESPADRAO",aSTESPad[3],aSTESPad[1],aSTESPad[2]})
		aadd(_aFields,{"XD65255",aSXD6525[3],aSXD6525[1],aSXD6525[2]})
		aadd(_aFields,{"NCM",aSNCM[3],aSNCM[1],aSNCM[2]})
		aadd(_aFields,{"QUANT",aSQtd[3],aSQtd[1],aSQtd[2]})
		aadd(_aFields,{"PRCUNIT",aSPrcUn[3],aSPrcUn[1],aSPrcUn[2]})
		aadd(_aFields,{"TOTAL",aSVTot[3],aSVTot[1],aSVTot[2]})
		aadd(_aFields,{"VLCONT",aSVCt[3],aSVCt[1],aSVCt[2]})
		aadd(_aFields,{"ICMSBASE",aSBsICM[3],aSBsICM[1],aSBsICM[2]})
		aadd(_aFields,{"ICMSALIQ",aSAlqICM[3],aSAlqICM[1],aSAlqICM[2]})
		aadd(_aFields,{"ICMSVAL",aSVlICM[3],aSVlICM[1],aSVlICM[2]})
		aadd(_aFields,{"CARGATRI",aSVlICM[3],aSVlICM[1],aSVlICM[2]})
		aadd(_aFields,{"CONFALQ",aSAlqICM[3],aSAlqICM[1],aSAlqICM[2]})
		aadd(_aFields,{"CONFBASC",aSBsICM[3],aSBsICM[1],aSBsICM[2]})
		aadd(_aFields,{"ICMSRET",aSVlICRe[3],aSVlICRe[1],aSVlICRe[2]})
		aadd(_aFields,{"ICMSOUTR",aSVlICOu[3],aSVlICOu[1],aSVlICOu[2]})
		aadd(_aFields,{"DESCONT",aSVDesc[3],aSVDesc[1],aSVDesc[2]})
		aadd(_aFields,{"SEGURO",aSVSegur[3],aSVSegur[1],aSVSegur[2]})
		aadd(_aFields,{"DESPESA",aSVDespe[3],aSVDespe[1],aSVDespe[2]})
		aadd(_aFields,{"FRETE",aSVFrete[3],aSVFrete[1],aSVFrete[2]})
		// aadd(_aFields,{"DTCANC",aSDtCanc[3],aSDtCanc[1],aSDtCanc[2]})
		aadd(_aFields,{"OBSERV",aSObserv[3],aSObserv[1],aSObserv[2]})
		aadd(_aFields,{"TES",aSTes[3],aSTes[1],aSTes[2]})
		aadd(_aFields,{"CFOP",aSCfo[3],aSCfo[1],aSCfo[2]})
		aadd(_aFields,{"TIPO",aSTpDoc[3],aSTpDoc[1],aSTpDoc[2]})
		aadd(_aFields,{"ESPECIE",aSEspeci[3],aSEspeci[1],aSEspeci[2]})
		
	ENDIF

Return _aFields

/*/{Protheus.doc} Static Function CriaInd
	Cria Array com a extrutura para criação da Tabela Temporária no Banco de Dados.
	@type  Static Function
	@author Abel Babini Filho
	@since 18/11/2019
	@version 1
	/*/
Static Function CriaInd(_table)
		Local _aIndex := {}

	IF _table == T00PARAM
		AADD(_aIndex,{'01',{'RELATORI','LINHA'}})
	ELSEIF _table == T01GIA
		AADD(_aIndex,{'01',{'LINHA'}})
	ELSEIF _table == T02GIAST
		AADD(_aIndex,{'01',{'LINHA'}})
	ELSEIF _table == T05DEMON
		AADD(_aIndex,{'01',{'LINHA'}})
	ELSEIF _table == T06DIFNA
		AADD(_aIndex,{'01',{'FILIAL', 'DTENTRADA', 'NFSERIE', 'NF', 'NFITEM', 'CLIEFOR', 'LOJA'}})
	ELSEIF _table == T06CFNCT
		AADD(_aIndex,{'01',{'FILIAL', 'DTENTRADA', 'NFSERIE', 'NF', 'NFITEM', 'CLIEFOR', 'LOJA'}})
	//OUTRAS SAÍDAS
	ELSEIF _table == T09OUT01
		AADD(_aIndex,{'01',{'FILIAL', 'CLIEFOR', 'LOJA', 'DTENTRADA', 'NFSERIE', 'NF', 'NFITEM'}})
		AADD(_aIndex,{'02',{'FILIAL', 'DTENTRADA', 'NFSERIE', 'NF', 'NFITEM', 'CLIEFOR', 'LOJA'}})
	ELSEIF _table == T09OUT02
		AADD(_aIndex,{'01',{'FILIAL', 'CLASSIF'}})
	ELSEIF _table == T14GRAXA
		AADD(_aIndex,{'01',{'INDICE'}})
	ELSEIF _table == T20NFCAN	
		AADD(_aIndex,{'01',{'FILIAL', 'DTENTRADA', 'DTEMISSAO', 'NFSERIE', 'NFISCAL' }})
	ELSEIF _table == T22REVTR
		AADD(_aIndex,{'01',{'FILIAL', 'CODPROD', 'DTENTRADA', 'NOME'}})
	ELSEIF _table == T22RVTRR
		AADD(_aIndex,{'01',{'CODPROD'}})
	ELSEIF _table == T27IVA
		AADD(_aIndex,{'01',{'FILIAL', 'CFOP', 'ALIQUOTA'}})
	ELSEIF _table == T27DETMP
		AADD(_aIndex,{'01',{'FILIAL', 'NFSERIE', 'NFISCAL', 'CLIEFOR', 'LOJA'}})
	ELSEIF _table == T30VENFV
		AADD(_aIndex,{'01',{'FILIAL', 'CODPROD', 'DTENTRADA', 'NOME'}})
		AADD(_aIndex,{'02',{'FILIAL', 'CSTPIS', 'CODPROD', 'CFOP'}})
	ELSEIF _table == T33ENTSA
		AADD(_aIndex,{'01',{'FILIAL', 'CFOP', 'CODPROD'}})
	// ELSEIF _table == T36RESUM
	ELSEIF _table == T36DETAL
		AADD(_aIndex,{'01',{'FILIAL', 'DTEMISSAO', 'NFSERIE', 'NF', 'NFITEM'}})
	ENDIF
	
Return _aIndex

/*/{Protheus.doc} Static Function CriaTmpT
	Cria Tabela Temporária no Banco de Dados.
	@type  Static Function
	@author Abel Babini Filho
	@since 18/11/2019
	@version 1
	/*/
Static Function CriaTmpT(_oTable, _aFields, _aIndex)
	Local oTempTable
	Local i
	oTempTable := FWTemporaryTable():New(_oTable)

	oTemptable:SetFields( _aFields )
	For i:=1 to Len(_aIndex)
		oTempTable:AddIndex(_aIndex[i,1], _aIndex[i,2] )
		//oTempTable:AddIndex("indice2", {"CONTR", "ALIAS"} )
	Next i
	oTempTable:Create()

Return oTempTable

/*/{Protheus.doc} Static Function xABrw05
	Cria Relatório Demonstrativo
	@type  Static Function
	@author Abel Babini Filho
	@since 17/12/2019
	@version 1
	/*/
Static Function xABrw05()
	//Local cChave05	:= ''
	Local cNewVers := StrZero(Val(IIF(cMV05T01=='','001',cMV05T01))+1,3)
	//Local nSeq1:=nSeq2:=nSeq3:=nSeq4:=nSeq5:=0
	//INICIO Ticket 3035                    - Abel Babini - 16/09/2020 - Painel Fiscal VP - Acerto na declaração de variáveis e somatória do CFOP 6108
	Local nV5102 := 0
	Local nV5252 := 0
	Local nV5401 := 0
	Local nV5501 := 0
	Local nV5551 := 0
	Local nV1202 := 0
	Local nV1410 := 0
	Local nV1503 := 0
	Local nV2201 := 0
	Local nV2202 := 0
	Local nV2203 := 0
	Local nV2410 := 0
	Local nV2503 := 0
	Local nV6107 := 0
	Local nV6401 := 0
	Local nV6102 := 0
	Local nV6109 := 0
	Local nV6551 := 0
	Local nV6122 := 0
	Local nV6108 := 0
	Local nV7105 := 0
	
	Local nDC5101 := 0
	Local nDC5102 := 0
	Local nDC5105 := 0
	Local nDC5116 := 0
	Local nDC5118 := 0
	Local nDC5201 := 0
	Local nDC5151 := 0
	Local nDC5401 := 0
	Local nDC5551 := 0
	Local nDC5252 := 0
	Local nDC5901 := 0
	Local nDC5556 := 0
	Local nDC5557 := 0
	Local nDC5553 := 0
	Local nDC5918 := 0
	Local nDC5910 := 0
	Local nDC5911 := 0
	Local nDC5913 := 0
	Local nDC6101 := 0
	Local nDC6102 := 0
	Local nDC6105 := 0
	Local nDC6107 := 0
	Local nDC6108 := 0
	Local nDC6116 := 0
	Local nDC6118 := 0
	Local nDC6201 := 0
	Local nDC6551 := 0
	Local nDC6553 := 0
	Local nDC6556 := 0
	Local nDC6901 := 0
	Local nDC6910 := 0
	Local nDC6911 := 0
	Local nDC6918 := 0
	Local nDC6913 := 0
	Local nDC6401 := 0
	Local nDC6557 := 0
	Local nDC6105 := 0
	Local nDC6909 := 0
	Local nDC7556 := 0
	Local nCC1208 := 0
	Local nCC1903 := 0
	Local nCC1907 := 0
	Local nCC1201 := 0
	Local nCC1152 := 0
	Local nCC1202 := 0
	Local nCC2201 := 0
	Local nCC2202 := 0
	Local nCC1410 := 0
	Local nCC2410 := 0
	Local nCC1101 := 0
	Local nCC2101 := 0
	Local nCC1122 := 0
	Local nCC2122 := 0
	Local nCC1910 := 0
	Local nCC2910 := 0
	Local nVCmp51 := 0
	Local nVCmp52 := 0
	Local nVCmp57 := 0
	Local nVCmp61 := 0
	Local nVCmp62 := 0
	Local nVCmpIns := 0
	Local nVCalcIm := 0
	Local nVAprAcu := 0
	Local nVSldTrp := 0
	Local nVSoDGCA := 0
	Local nCC1949 := 0
	Local nLC2352 := 0
	Local nDC5201B := 0
	Local nDC6201B := 0
	//FIM Ticket 3035                    - Abel Babini - 16/09/2020 - Painel Fiscal VP - Acerto na declaração de variáveis e somatória do CFOP 6108

	//INICIO Ticket 12090										- Abel Babini - 09/04/2021 - Acrescentar CFOPs 6905 e 2906 como Outros Débitos e Outros Créditos respectivamente nas abas Demonstrativo e Abertura da Gia
	Local nDC6905 := 0
	Local nCC2906 := 0
	Local aBrw5NM := {}
	Local cCfMap := _cCfNM01+'/'+_cCfNM02+'/'+_cCfNM03+'/'+_cCfNM04+'/'+_cCfNM05+'/'+_cCfNM06

	//CRIA TABELA TEMPORÁRIA
	If Select(cAlB05Dt) > 0
		(cAlB05Dt)->(dbCloseArea())
		oAlB05Dt:Delete()
	Endif
	//cAlB05Dt:=GetNextAlias()

	_aFields	:= CriaExtr(T05DEMON)
	_aIndex		:= CriaInd(T05DEMON)
	oAlB05Dt	:= CriaTmpT(cAlB05Dt, _aFields, _aIndex)
	
	If Select(cAlB05DQ) > 0
		(cAlB05DQ)->(dbCloseArea())
	Endif
	cAlB05DQ:=GetNextAlias()
	
	BeginSQL Alias cAlB05DQ
		SELECT
			SFT.FT_CFOP 	AS CFOP,
			SUM(SFT.FT_VALCONT)	AS VLCONT,
			SUM(SFT.FT_VALICM)	AS VALICMS
		FROM %TABLE:SFT% SFT (NOLOCK) 
		WHERE SFT.FT_FILIAL = %xFilial:SFT%
			AND SFT.FT_ENTRADA BETWEEN %Exp:DToS(_mvpr01)% AND %Exp:DToS(_mvpr02)%
			AND SFT.FT_DTCANC = ''
			AND SFT.%notDel%			
		GROUP BY SFT.FT_CFOP
		ORDER BY SFT.FT_CFOP
	EndSQL
	
	DbSelectArea(cAlB05DQ)
	(cAlB05DQ)->(dbGoTop())
	while !(cAlB05DQ)->(eof())
		IF Alltrim((cAlB05DQ)->CFOP) == '5102'
			nV5102 := (cAlB05DQ)->VLCONT
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '5252'
			nV5252 := (cAlB05DQ)->VLCONT
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '5401'
			nV5401 := (cAlB05DQ)->VLCONT
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '5501'
			nV5501 := (cAlB05DQ)->VLCONT
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '5551'
			nV5551 := (cAlB05DQ)->VLCONT
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '1202'
			nV1202 := (cAlB05DQ)->VLCONT
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '1410'
			nV1410 := (cAlB05DQ)->VLCONT
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '1503'
			nV1503 := (cAlB05DQ)->VLCONT
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '2201'
			nV2201 := (cAlB05DQ)->VLCONT
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '2202'
			nV2202 := (cAlB05DQ)->VLCONT
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '2203'
			nV2203 := (cAlB05DQ)->VLCONT
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '2410'
			nV2410 := (cAlB05DQ)->VLCONT
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '2503'
			nV2503 := (cAlB05DQ)->VLCONT
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '6107'
			nV6107 := (cAlB05DQ)->VLCONT
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '6108'
			nV6108 := (cAlB05DQ)->VLCONT
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '6401'
			nV6401 := (cAlB05DQ)->VLCONT
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '6102'
			nV6102 := (cAlB05DQ)->VLCONT
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '6109'
			nV6109 := (cAlB05DQ)->VLCONT
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '6551'
			nV6551 := (cAlB05DQ)->VLCONT
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '6122'
			nV6122 := (cAlB05DQ)->VLCONT
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '7105'
			nV7105 := (cAlB05DQ)->VLCONT
		ENDIF

		(cAlB05DQ)->(dbSkip())
	EndDo
	(cAlB05DQ)->(dbCloseArea())

	//Calcula variáveis totalizadoras
	nVSaiEst	:= (abrw08p2[01,3]+abrw35p2[01,3]+abrw08p2[11,3]+abrw35p2[11,3]+nV5102+abrw08p2[08,3]+abrw35p2[08,3]+nV5252+nV5551+nV5401+nV5501)
	nVDevEst	:= (abrw08p2[20,3]+abrw35p2[20,3]+nV1410+nV1202+nV1503)

	nVSaiFor	:= (aBrw08p1[01,3]+aBrw35p1[01,3]+aBrw08p1[03,3]+aBrw35p1[03,3]+nV6107+nV6108+nV6401+nV6102+nV6109+aBrw08p1[05,3]+aBrw35p1[05,3]+nV6551+nV6122+aBrw08p1[04,3]+aBrw35p1[04,3])
	nVDevFor	:= (nV2201+nV2202+nV2203+nV2410+nV2503)

	nVSaiExp	:= (abrw08p2[13,3]+abrw35p2[13,3]) //Ticket 4679                    - Abel Babini - 06/11/2020 - Painel Fiscal VP - Relatório Abertura da GIA - Correção no valor das exportações
	nVDevExp	:= (abrw08p2[29,3]+abrw35p2[29,3])

	nVSaidas	:= nVSaiEst+nVSaiFor+nVSaiExp
	nVDevol		:= nVDevEst+nVDevFor+nVDevExp
	nVPerExp	:= Round((nVSaiExp / nVSaidas)*100,2)

	//GrvTmp05(cChvTmp5, cLinTmp5, cDsc1T5,cDsc2T5,cDsc3T5,cDsc4T5,cDsc5T5, nVlr1T5, nVlr2T5, nVlr3T5, nVlr4T5, nVlr5T5)
	//Linha 1
	GrvTmp05('TIT', '000010', 'FATURAMENTO DO MÊS (SAÍDAS - ENTRADAS)','','','','',0,0,nVSaidas-nVDevol,0,0)
	GrvTmp05('TIT', '000020', '','','','','',0,0,0,0,0)
	GrvTmp05('TIT', '000030', 'QUADRO 1','QUADRO 2','Q1 (-) Q2','','',0,0,0,0,0)
	GrvTmp05('TIT', '000040', 'SAÍDAS'	,'ENTRADAS','','','',0,0,0,0,0)
	GrvTmp05(''		, '000060', '5.101'		,'1.201'	,'','','', abrw08p2[01,3]+abrw35p2[01,3], abrw08p2[20,3]+abrw35p2[20,3],0,0,0)
	GrvTmp05(''		, '000070', '5.118'		,'1.410'	,'','','', abrw08p2[11,3]+abrw35p2[11,3],nV1410,0,0,0)
	GrvTmp05(''		, '000080', '5.102'		,'1.202'	,'','','', nV5102,nV1202,0,0,0)
	GrvTmp05(''		, '000085', '5.105'		,''				,'','','', abrw08p2[08,3]+abrw35p2[08,3],0,0,0,0)
	GrvTmp05(''		, '000090', '5.252'		,''				,'','','', nV5252,0,0,0,0)
	GrvTmp05(''		, '000100', '5.551'		,''				,'','','', nV5551,0,0,0,0)
	GrvTmp05(''		, '000110', '5.122'		,''				,'','','', 0,0,0,0,0)
	GrvTmp05(''		, '000120', '5.922'		,''				,'','','', 0,0,0,0,0)
	GrvTmp05(''		, '000130', '5.401'		,''				,'','','', nV5401,0,0,0,0)
	GrvTmp05(''		, '000140', '5.501'		,'1.503'	,'','','', nV5501,nV1503,0,0,0)
	GrvTmp05('SUB', '000300', 'SAIDA NO ESTADO'	,'DEVOLUÇÃO NO ESTADO','SAÍDAS (-) ENTRADAS','','', nVSaiEst, nVDevEst, nVSaiEst-nVDevEst,0,0)


	GrvTmp05(''		, '000350', '6.101'		,'2.201'	,'','','', aBrw08p1[01,3]+aBrw35p1[01,3], nV2201,0,0,0)
	GrvTmp05(''		, '000360', '6.105'		,'2.202'	,'','','', aBrw08p1[03,3]+aBrw35p1[03,3], nV2202,0,0,0)
	GrvTmp05(''		, '000370', '6.107'		,'2.203'	,'','','', nV6107, nV2203,0,0,0)
	GrvTmp05(''		, '000375', '6.108'		,''				,'','','', nV6108, 0,0,0,0)
	GrvTmp05(''		, '000380', '6.401'		,'2.410'	,'','','', nV6401, nV2410,0,0,0)
	GrvTmp05(''		, '000390', '6.102'		,''				,'','','', nV6102, 0,0,0,0)
	GrvTmp05(''		, '000393', '6.109'		,''				,'','','', nV6109, 0,0,0,0)
	GrvTmp05(''		, '000400', '6.118'		,''				,'','','', aBrw08p1[05,3]+aBrw35p1[05,3], 0,0,0,0)
	GrvTmp05(''		, '000410', '6.551'		,''				,'','','', nV6551, 0,0,0,0)
	GrvTmp05(''		, '000420', '6.122'		,''				,'','','', nV6122, 0,0,0,0)
	GrvTmp05(''		, '000430', '6.922'		,'2.503'	,'','','', aBrw08p1[04,3]+aBrw35p1[04,3], nV2503,0,0,0)
	GrvTmp05('SUB', '000500', 'SAIDA FORA DO ESTADO'	,'DEVOLUÇÃO FORA DO ESTADO','SAÍDAS (-) ENTRADAS','','', nVSaiFor,nVDevFor,nVSaiFor-nVDevFor,0,0)


	GrvTmp05(''		, '000550', '7.101'		,'3.201'	,'','','', abrw08p2[13,3]+abrw35p2[13,3]-nV7105, abrw08p2[29,3]+abrw35p2[29,3],0,0,0) //Ticket 4679                    - Abel Babini - 06/11/2020 - Painel Fiscal VP - Relatório Abertura da GIA - Correção no valor das exportações
	GrvTmp05(''		, '000560', '7.105'		,''				,'','','', nV7105, 0,0,0,0)
	GrvTmp05('SUB', '000700', 'SAIDA EXPORTAÇÃO'	,'DEVOLUÇÃO EXPORTAÇÃO','SAÍDAS (-) ENTRADAS','','', nVSaiExp,nVDevExp,nVSaiExp-nVDevExp,0,0)


	GrvTmp05(''		, '000750', '','','','','',0,0,0,0,0)
	GrvTmp05('TOT', '000800', 'TOTAL DAS SAÍDAS','TOTAL DAS DEVOLUÇÕES','','','', nVSaidas,nVDevol,nVSaidas-NVDevol,0,0)
	GrvTmp05(''		, '000810', '','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '000820', '% Percentual Exportação sobre Receita Total','','','','', nVPerExp,0,0,0,0)
	GrvTmp05(''		, '000830', '','','','','',0,0,0,0,0)
	GrvTmp05('TOT', '000840', 'FATURAMENTO BRUTO','','','','',nVSaidas,0,0,0,0,0)
	GrvTmp05(''		, '000850', '','','','','',0,0,0,0,0)
	GrvTmp05('TOT', '000860', '(-) DEVOLUÇÕES','','','','',nVDevol,0,0,0,0,0)
	GrvTmp05(''		, '000870', '','','','','',0,0,0,0,0)
	GrvTmp05('TTG', '000880', 'FATURAMENTO LÍQUIDO','','','','',nVSaidas-nVDevol,0,0,0,0,0)
	GrvTmp05(''		, '000890', '','','','','',0,0,0,0,0)
	GrvTmp05(''		, '000900', '','','','','',0,0,0,0,0)
	
	//GrvTmp05('TIT', '002000', 'CRÉDITO OUTORGADO','','','','',0,0,0,0,0)
	GrvTmp05('TIT', '001050', '','','','','',0,0,0,0,0)
	GrvTmp05('TIT', '001100', 'CRÉDITO OUTORGADO INTERESTADUAL - Alíquota 7% - Art. 27 Anexo III','','','','',0,0,0,0,0)

	GrvTmp05(''		, '001150', 'CFOP 6.101 - Venda Interestadual','','','','',aBrw08p1[01,3],0,0,0,0)
	GrvTmp05(''		, '001160', '6.122','','','','',aBrw08p1[02,3],0,0,0,0)
	GrvTmp05(''		, '001170', '6.105','','','','',aBrw08p1[03,3],0,0,0,0)
	GrvTmp05(''		, '001180', '6.922','','','','',aBrw08p1[04,3],0,0,0,0)
	GrvTmp05(''		, '001190', '6.118','','','','',aBrw08p1[05,3],0,0,0,0)
	GrvTmp05(''		, '001195', '6.109','','','','',aBrw08p1[06,3],0,0,0,0) //Ticket 6216                    - Abel Babini - 07/12/2020 - Painel Fiscal - Acrescentar CFOP 6109 no relatório Credito Outorgado 7% Interestadual
	GrvTmp05('SUB', '001200', 'Total','','','','',aBrw08p1[07,3],0,0,0,0) //Ticket 6216                    - Abel Babini - 07/12/2020 - Painel Fiscal - Acrescentar CFOP 6109 no relatório Credito Outorgado 7% Interestadual
	GrvTmp05(''		, '001210','','','','','',0,0,0,0,0)
	GrvTmp05(''		, '001220', '(-) Exclusão Venda Interestadual Embutidos ( 6.101, 6.105)','','','','',aBrw08p1[08,3],0,0,0,0)
	GrvTmp05(''		, '001230', '(-) Exclusão Venda Interestadual Graxaria ( 6.101)','','','','',aBrw08p1[09,3],0,0,0,0)
	GrvTmp05('SUB', '001240', 'Total de Vendas', '','','','',aBrw08p1[10,3],0,0,0,0)
	GrvTmp05(''		, '001250','','','','','',0,0,0,0,0)
	GrvTmp05(''		, '001260','(-) Devolução de Venda Interestadual 2.201, 2.202, 2.203','','','','',aBrw08p1[12,3],0,0,0,0)
	GrvTmp05(''		, '001270','','','','','',0,0,0,0,0)
	GrvTmp05(''		, '001280', '(-) Exclusão Devolução Interestadual Embutidos ( 2.201)','','','','',aBrw08p1[14,3],0,0,0,0)
	GrvTmp05(''		, '001290', '(-) Exclusão Devolução Graxaria ( 2.201)', '','','','',aBrw08p1[15,3],0,0,0,0)
	GrvTmp05(''		, '001300', '(-) Exclusão Devolução Revenda - Paletes ( 2.202)','','','','',aBrw08p1[16,3],0,0,0,0)
	GrvTmp05('SUB', '001310', 'Total de Devolução de Venda Interestadual','','','','',aBrw08p1[17,3],0,0,0,0)
	GrvTmp05(''		, '001320','','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '001330', 'Base de Cálculo', '','','','',aBrw08p1[19,3],0,0,0,0)
	GrvTmp05(''		, '001340', '', '','','','',0,0,0,0,0)
	GrvTmp05('TOT', '001350', 'Valor do Crédito Outorgado - 7%', '','','','',aBrw08p1[21,3],0,0,0,0)


	GrvTmp05('TIT', '001480', '','','','','',0,0,0,0,0)
	GrvTmp05('TIT', '001490', 'CRÉDITO OUTORGADO STADUAL - Alíquota 5% - Art 35 anexo III','','','','',0,0,0,0,0)
	GrvTmp05(''		, '001500','5101 - venda interna','','','','',abrw08p2[01,3],0,0,0,0)
	GrvTmp05(''		, '001510','(-) venda embutidos','','','','',abrw08p2[02,3],0,0,0,0)
	GrvTmp05(''		, '001520','(-) venda produto não comestível','','','','',abrw08p2[03,3],0,0,0,0)
	GrvTmp05(''		, '001530','(-) venda graxaria','','','','',abrw08p2[04,3],0,0,0,0)
	GrvTmp05(''		, '001540','','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '001550','5101 - venda interna de frango e cortes','','','','',abrw08p2[06,3],0,0,0,0)
	GrvTmp05(''		, '001560','','','','','',0,0,0,0,0)
	GrvTmp05(''		, '001570','5105 - venda interna - saída armazem','','','','',abrw08p2[08,3],0,0,0,0)
	GrvTmp05(''		, '001580','5118/ 5122 - venda a ordem','','','','',abrw08p2[09,3],0,0,0,0)
	GrvTmp05(''		, '001590','(-) venda produto não comestível','','','','',abrw08p2[10,3],0,0,0,0)
	GrvTmp05('SUB', '001600','5118 / 5122- venda ordem de frango e cortes','','','','',abrw08p2[11,3],0,0,0,0)
	GrvTmp05(''		, '001610','','','','','',0,0,0,0,0)
	GrvTmp05(''		, '001620','7101 - venda exportação','','','','',abrw08p2[13,3],0,0,0,0)
	GrvTmp05(''		, '001630','(-) venda produto não comestível','','','','',abrw08p2[14,3],0,0,0,0)
	GrvTmp05(''		, '001640','','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '001650','7101 - venda exportação de frangos e cortes','','','','',abrw08p2[16,3],0,0,0,0)
	GrvTmp05(''		, '001660','','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '001670','Total Saída','','','','',abrw08p2[18,3],0,0,0,0)
	GrvTmp05(''		, '001680','','','','','',0,0,0,0,0)
	GrvTmp05(''		, '001690','1201 - Devolução Interna','','','','',abrw08p2[20,3],0,0,0,0)
	GrvTmp05(''		, '001700','(-) Devolução Graxaria e Não Comestível','','','','',abrw08p2[21,3],0,0,0,0)
	GrvTmp05(''		, '001710','(-) devolução embutidos','','','','',abrw08p2[22,3],0,0,0,0)
	GrvTmp05(''		, '001720','','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '001730','1201 devolução frango e cortes','','','','',abrw08p2[24,3],0,0,0,0)
	GrvTmp05(''		, '001740','','','','','',0,0,0,0,0)
	GrvTmp05(''		, '001750','3201 devolução exportação frango e cortes','','','','',abrw08p2[26,3],0,0,0,0)
	GrvTmp05(''		, '001760','(-) devolução exportação não comestível','','','','',abrw08p2[27,3],0,0,0,0)
	GrvTmp05(''		, '001770','','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '001780','3201 devolução frango e cortes','','','','',abrw08p2[29,3],0,0,0,0)
	GrvTmp05(''		, '001790','','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '001800','(-) total de devolução de venda estadual','','','','',abrw08p2[31,3],0,0,0,0)
	GrvTmp05(''		, '001810','','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '001820','Base de Cálculo','','','','',abrw08p2[33,3],0,0,0,0)
	GrvTmp05(''		, '001830','','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '001840','1151 - entrada de aves - internas','','','','',abrw08p2[35,3],0,0,0,0)
	GrvTmp05(''		, '001850','','','','','',0,0,0,0,0)
	GrvTmp05('TOT', '001860','valor do crédito outorgado - 5% - venda','','','','',abrw08p2[37,3],0,0,0,0)
	GrvTmp05(''		, '001870','','','','','',0,0,0,0,0)
	GrvTmp05(''		, '001880','','','','','',0,0,0,0,0)
	GrvTmp05(''		, '001890','5151 - transferencia','','','','',abrw08p2[40,3],0,0,0,0)
	GrvTmp05(''		, '001900','(-) transferencia graxaria - SC','','','','',abrw08p2[41,3],0,0,0,0)
	GrvTmp05(''		, '001910','(-) transferencia embutidos','','','','',abrw08p2[42,3],0,0,0,0)
	GrvTmp05(''		, '001920','(-) transferencia produto não comestivel','','','','',abrw08p2[43,3],0,0,0,0)
	GrvTmp05(''		, '001930','','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '001940','5151 - transferencia de frango e corte','','','','',abrw08p2[45,3],0,0,0,0)
	GrvTmp05(''		, '001950','','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '001960','Total Transferencia','','','','',abrw08p2[47,3],0,0,0,0)
	GrvTmp05(''		, '001970','','','','','',0,0,0,0,0)
	GrvTmp05(''		, '001980','1152 -entrada de transferencia','','','','',abrw08p2[49,3],0,0,0,0)
	GrvTmp05(''		, '001990','(-) produto não comestivel','','','','',abrw08p2[50,3],0,0,0,0)
	GrvTmp05(''		, '002000','(-) embutidos','','','','',abrw08p2[51,3],0,0,0,0)
	GrvTmp05(''		, '002010','(-) insumos de embutidos','','','','',abrw08p2[52,3],0,0,0,0)
	GrvTmp05(''		, '002020','','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '002030','1152 - entrada de transferencia','','','','',abrw08p2[54,3],0,0,0,0)
	GrvTmp05(''		, '002040','','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '002050','Base de Cálculo','','','','',abrw08p2[56,3],0,0,0,0)
	GrvTmp05(''		, '002060','','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '002070','valor do crédito outorgado - 5%','','','','',abrw08p2[58,3],0,0,0,0)
	GrvTmp05(''		, '002080','','','','','',0,0,0,0,0)
	GrvTmp05(''		, '002090','','','','','',0,0,0,0,0)
	GrvTmp05('TOT', '002100','Total do Crédito gerado no mês','','','','',abrw08p2[61,3],0,0,0,0)


	GrvTmp05('TIT', '002980', '','','','','',0,0,0,0,0)
	GrvTmp05('TIT', '002990', 'CRÉDITO OUTORGADO ESTADUAL - Alíq 7% - Art 40 Anexo III','','','','',0,0,0,0,0)
	GrvTmp05(''		, '003000','5101 - Venda Interna','','','','',aBrw08p3[01,3],0,0,0,0)
	GrvTmp05(''		, '003010','(-) Venda Embutidos','','','','',aBrw08p3[02,3],0,0,0,0)
	GrvTmp05(''		, '003020','(-) Venda Produto Não Comestível','','','','',aBrw08p3[03,3],0,0,0,0)
	GrvTmp05(''		, '003030','(-) Venda Graxaria','','','','',aBrw08p3[04,3],0,0,0,0)
	GrvTmp05(''		, '003040','','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '003050','5101 - Venda Interna de Frango e Cortes','','','','',aBrw08p3[06,3],0,0,0,0)
	GrvTmp05(''		, '003060','','','','','',0,0,0,0,0)
	GrvTmp05(''		, '003070','5105 - Venda Interna - Saída Armazem','','','','',aBrw08p3[08,3],0,0,0,0)
	GrvTmp05(''		, '003080','5118/ 5122 - Venda a Ordem','','','','',aBrw08p3[09,3],0,0,0,0)
	GrvTmp05(''		, '003090','(-) Venda Produto Não Comestível','','','','',aBrw08p3[10,3],0,0,0,0)
	GrvTmp05('SUB', '003100','5118 / 5122- Venda Ordem de Frango e Cortes','','','','',aBrw08p3[11,3],0,0,0,0)
	GrvTmp05(''		, '003110','','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '003120','TOTAL SAÍDA','','','','',aBrw08p3[13,3],0,0,0,0)
	GrvTmp05(''		, '003130','','','','','',0,0,0,0,0)
	GrvTmp05(''		, '003140','1201 - Devolução Interna','','','','',aBrw08p3[15,3],0,0,0,0)
	GrvTmp05(''		, '003150','(-) Devolução Graxaria e Não Comestível','','','','',aBrw08p3[16,3],0,0,0,0)
	GrvTmp05(''		, '003160','(-) Devolução Embutidos','','','','',aBrw08p3[17,3],0,0,0,0)
	GrvTmp05(''		, '003170','','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '003180','(-) Total de Devolução de Venda Estadual','','','','',aBrw08p3[19,3],0,0,0,0)
	GrvTmp05(''		, '003190','','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '003200','Base de Cálculo','','','','',aBrw08p3[21,3],0,0,0,0)
	GrvTmp05(''		, '003210','','','','','',0,0,0,0,0)
	GrvTmp05('TOT', '003220','Valor do Crédito Outorgado - 7% - Venda','','','','',aBrw08p3[23,3],0,0,0,0)

	//
	//INICIO Ticket 8050                    - Abel Babini - 18/01/2020 - Alteração de alíquotas nos relatórios de crédito outorgado
	//
	GrvTmp05('TIT', '004050', '','','','','',0,0,0,0,0)
	GrvTmp05('TIT', '004100', 'CRÉDITO OUTORGADO INTERESTADUAL - Alíquota '+Alltrim(_cMVCON2)+'% - Art. 27 Anexo III','','','','',0,0,0,0,0)

	GrvTmp05(''		, '004150', 'CFOP 6.101 - Venda Interestadual','','','','',aBrw35p1[01,3],0,0,0,0)
	GrvTmp05(''		, '004160', '6.122','','','','',aBrw35p1[02,3],0,0,0,0)
	GrvTmp05(''		, '004170', '6.105','','','','',aBrw35p1[03,3],0,0,0,0)
	GrvTmp05(''		, '004180', '6.922','','','','',aBrw35p1[04,3],0,0,0,0)
	GrvTmp05(''		, '004190', '6.118','','','','',aBrw35p1[05,3],0,0,0,0)
	GrvTmp05(''		, '004195', '6.109','','','','',aBrw35p1[06,3],0,0,0,0) //Ticket 6216                    - Abel Babini - 07/12/2020 - Painel Fiscal - Acrescentar CFOP 6109 no relatório Credito Outorgado 7% Interestadual
	GrvTmp05('SUB', '004200', 'Total','','','','',aBrw35p1[07,3],0,0,0,0) //Ticket 6216                    - Abel Babini - 07/12/2020 - Painel Fiscal - Acrescentar CFOP 6109 no relatório Credito Outorgado 7% Interestadual
	GrvTmp05(''		, '004210','','','','','',0,0,0,0,0)
	GrvTmp05(''		, '004220', '(-) Exclusão Venda Interestadual Embutidos ( 6.101, 6.105)','','','','',aBrw35p1[08,3],0,0,0,0)
	GrvTmp05(''		, '004230', '(-) Exclusão Venda Interestadual Graxaria ( 6.101)','','','','',aBrw35p1[09,3],0,0,0,0)
	GrvTmp05('SUB', '004240', 'Total de Vendas', '','','','',aBrw35p1[10,3],0,0,0,0)
	GrvTmp05(''		, '004250','','','','','',0,0,0,0,0)
	GrvTmp05(''		, '004260','(-) Devolução de Venda Interestadual 2.201, 2.202, 2.203','','','','',aBrw35p1[12,3],0,0,0,0)
	GrvTmp05(''		, '004270','','','','','',0,0,0,0,0)
	GrvTmp05(''		, '004280', '(-) Exclusão Devolução Interestadual Embutidos ( 2.201)','','','','',aBrw35p1[14,3],0,0,0,0)
	GrvTmp05(''		, '004290', '(-) Exclusão Devolução Graxaria ( 2.201)', '','','','',aBrw35p1[15,3],0,0,0,0)
	GrvTmp05(''		, '004300', '(-) Exclusão Devolução Revenda - Paletes ( 2.202)','','','','',aBrw35p1[16,3],0,0,0,0)
	GrvTmp05('SUB', '004310', 'Total de Devolução de Venda Interestadual','','','','',aBrw35p1[17,3],0,0,0,0)
	GrvTmp05(''		, '004320','','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '004330', 'Base de Cálculo', '','','','',aBrw35p1[19,3],0,0,0,0)
	GrvTmp05(''		, '004340', '', '','','','',0,0,0,0,0)
	GrvTmp05('TOT', '004350', 'Valor do Crédito Outorgado - '+Alltrim(_cMVCON2)+'%', '','','','',aBrw35p1[21,3],0,0,0,0)

	GrvTmp05('TIT', '004480', '','','','','',0,0,0,0,0)
	GrvTmp05('TIT', '004490', 'CRÉDITO OUTORGADO ESTADUAL - Alíquota '+Alltrim(_cMVCON3)+'% - Art 35 anexo III','','','','',0,0,0,0,0)
	GrvTmp05(''		, '004500','5101 - venda interna','','','','',abrw35p2[01,3],0,0,0,0)
	GrvTmp05(''		, '004510','(-) venda embutidos','','','','',abrw35p2[02,3],0,0,0,0)
	GrvTmp05(''		, '004520','(-) venda produto não comestível','','','','',abrw35p2[03,3],0,0,0,0)
	GrvTmp05(''		, '004530','(-) venda graxaria','','','','',abrw35p2[04,3],0,0,0,0)
	GrvTmp05(''		, '004540','','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '004550','5101 - venda interna de frango e cortes','','','','',abrw35p2[06,3],0,0,0,0)
	GrvTmp05(''		, '004560','','','','','',0,0,0,0,0)
	GrvTmp05(''		, '004570','5105 - venda interna - saída armazem','','','','',abrw35p2[08,3],0,0,0,0)
	GrvTmp05(''		, '004580','5118/ 5122 - venda a ordem','','','','',abrw35p2[09,3],0,0,0,0)
	GrvTmp05(''		, '004590','(-) venda produto não comestível','','','','',abrw35p2[10,3],0,0,0,0)
	GrvTmp05('SUB', '004600','5118 / 5122- venda ordem de frango e cortes','','','','',abrw35p2[11,3],0,0,0,0)
	GrvTmp05(''		, '004610','','','','','',0,0,0,0,0)
	GrvTmp05(''		, '004620','7101 - venda exportação','','','','',abrw35p2[13,3],0,0,0,0)
	GrvTmp05(''		, '004630','(-) venda produto não comestível','','','','',abrw35p2[14,3],0,0,0,0)
	GrvTmp05(''		, '004640','','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '004650','7101 - venda exportação de frangos e cortes','','','','',abrw35p2[16,3],0,0,0,0)
	GrvTmp05(''		, '004660','','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '004670','Total Saída','','','','',abrw35p2[18,3],0,0,0,0)
	GrvTmp05(''		, '004680','','','','','',0,0,0,0,0)
	GrvTmp05(''		, '004690','1201 - Devolução Interna','','','','',abrw35p2[20,3],0,0,0,0)
	GrvTmp05(''		, '004700','(-) Devolução Graxaria e Não Comestível','','','','',abrw35p2[21,3],0,0,0,0)
	GrvTmp05(''		, '004710','(-) devolução embutidos','','','','',abrw35p2[22,3],0,0,0,0)
	GrvTmp05(''		, '004720','','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '004730','1201 devolução frango e cortes','','','','',abrw35p2[24,3],0,0,0,0)
	GrvTmp05(''		, '004740','','','','','',0,0,0,0,0)
	GrvTmp05(''		, '004750','3201 devolução exportação frango e cortes','','','','',abrw35p2[26,3],0,0,0,0)
	GrvTmp05(''		, '004760','(-) devolução exportação não comestível','','','','',abrw35p2[27,3],0,0,0,0)
	GrvTmp05(''		, '004770','','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '004780','3201 devolução frango e cortes','','','','',abrw35p2[29,3],0,0,0,0)
	GrvTmp05(''		, '004790','','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '004800','(-) total de devolução de venda estadual','','','','',abrw35p2[31,3],0,0,0,0)
	GrvTmp05(''		, '004810','','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '004820','Base de Cálculo','','','','',abrw35p2[33,3],0,0,0,0)
	GrvTmp05(''		, '004830','','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '004840','1151 - entrada de aves - internas','','','','',abrw35p2[35,3],0,0,0,0)
	GrvTmp05(''		, '004850','','','','','',0,0,0,0,0)
	GrvTmp05('TOT', '004860','valor do crédito outorgado - '+Alltrim(_cMVCON3)+'% - venda','','','','',abrw35p2[37,3],0,0,0,0)
	GrvTmp05(''		, '004870','','','','','',0,0,0,0,0)
	GrvTmp05(''		, '004880','','','','','',0,0,0,0,0)
	GrvTmp05(''		, '004890','5151 - transferencia','','','','',abrw35p2[40,3],0,0,0,0)
	GrvTmp05(''		, '004900','(-) transferencia graxaria - SC','','','','',abrw35p2[41,3],0,0,0,0)
	GrvTmp05(''		, '004910','(-) transferencia embutidos','','','','',abrw35p2[42,3],0,0,0,0)
	GrvTmp05(''		, '004920','(-) transferencia produto não comestivel','','','','',abrw35p2[43,3],0,0,0,0)
	GrvTmp05(''		, '004930','','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '004940','5151 - transferencia de frango e corte','','','','',abrw35p2[45,3],0,0,0,0)
	GrvTmp05(''		, '004950','','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '004960','Total Transferencia','','','','',abrw35p2[47,3],0,0,0,0)
	GrvTmp05(''		, '004970','','','','','',0,0,0,0,0)
	GrvTmp05(''		, '004980','1152 -entrada de transferencia','','','','',abrw35p2[49,3],0,0,0,0)
	GrvTmp05(''		, '004990','(-) produto não comestivel','','','','',abrw35p2[50,3],0,0,0,0)
	GrvTmp05(''		, '005000','(-) embutidos','','','','',abrw35p2[51,3],0,0,0,0)
	GrvTmp05(''		, '005010','(-) insumos de embutidos','','','','',abrw35p2[52,3],0,0,0,0)
	GrvTmp05(''		, '005020','','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '005030','1152 - entrada de transferencia','','','','',abrw35p2[54,3],0,0,0,0)
	GrvTmp05(''		, '005040','','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '005050','Base de Cálculo','','','','',abrw35p2[56,3],0,0,0,0)
	GrvTmp05(''		, '005060','','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '005070','valor do crédito outorgado - '+Alltrim(_cMVCON3)+'%','','','','',abrw35p2[58,3],0,0,0,0)
	GrvTmp05(''		, '005080','','','','','',0,0,0,0,0)
	GrvTmp05(''		, '005090','','','','','',0,0,0,0,0)
	GrvTmp05('TOT', '005100','Total do Crédito gerado no mês','','','','',abrw35p2[61,3],0,0,0,0)

	GrvTmp05('TIT', '005980', '','','','','',0,0,0,0,0)
	GrvTmp05('TIT', '005990', 'CRÉDITO OUTORGADO ESTADUAL - Alíq '+Alltrim(_cMVCON4)+'% - Art 40 Anexo III','','','','',0,0,0,0,0)
	GrvTmp05(''		, '006000','5101 - Venda Interna','','','','',aBrw35p3[01,3],0,0,0,0)
	GrvTmp05(''		, '006010','(-) Venda Embutidos','','','','',aBrw35p3[02,3],0,0,0,0)
	GrvTmp05(''		, '006020','(-) Venda Produto Não Comestível','','','','',aBrw35p3[03,3],0,0,0,0)
	GrvTmp05(''		, '006030','(-) Venda Graxaria','','','','',aBrw35p3[04,3],0,0,0,0)
	GrvTmp05(''		, '006040','','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '006050','5101 - Venda Interna de Frango e Cortes','','','','',aBrw35p3[06,3],0,0,0,0)
	GrvTmp05(''		, '006060','','','','','',0,0,0,0,0)
	GrvTmp05(''		, '006070','5105 - Venda Interna - Saída Armazem','','','','',aBrw35p3[08,3],0,0,0,0)
	GrvTmp05(''		, '006080','5118/ 5122 - Venda a Ordem','','','','',aBrw35p3[09,3],0,0,0,0)
	GrvTmp05(''		, '006090','(-) Venda Produto Não Comestível','','','','',aBrw35p3[10,3],0,0,0,0)
	GrvTmp05('SUB', '006100','5118 / 5122- Venda Ordem de Frango e Cortes','','','','',aBrw35p3[11,3],0,0,0,0)
	GrvTmp05(''		, '006110','','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '006120','TOTAL SAÍDA','','','','',aBrw35p3[13,3],0,0,0,0)
	GrvTmp05(''		, '006130','','','','','',0,0,0,0,0)
	GrvTmp05(''		, '006140','1201 - Devolução Interna','','','','',aBrw35p3[15,3],0,0,0,0)
	GrvTmp05(''		, '006150','(-) Devolução Graxaria e Não Comestível','','','','',aBrw35p3[16,3],0,0,0,0)
	GrvTmp05(''		, '006160','(-) Devolução Embutidos','','','','',aBrw35p3[17,3],0,0,0,0)
	GrvTmp05(''		, '006170','','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '006180','(-) Total de Devolução de Venda Estadual','','','','',aBrw35p3[19,3],0,0,0,0)
	GrvTmp05(''		, '006190','','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '006200','Base de Cálculo','','','','',aBrw35p3[21,3],0,0,0,0)
	GrvTmp05(''		, '006210','','','','','',0,0,0,0,0)
	GrvTmp05('TOT', '006220','Valor do Crédito Outorgado - '+Alltrim(_cMVCON4)+'% - Venda','','','','',aBrw35p3[23,3],0,0,0,0)

	//FIM Ticket 8050                    - Abel Babini - 18/01/2020 - Alteração de alíquotas nos relatórios de crédito outorgado

	//
	//Consulta Operações com Débito ou Crédito de Imposto
	//
	If Select(cAlB05DQ) > 0
		(cAlB05DQ)->(dbCloseArea())
	Endif
	cAlB05DQ:=GetNextAlias()
	
	BeginSQL Alias cAlB05DQ
		SELECT
			SFT.FT_CFOP 	AS CFOP,
			SUM(SFT.FT_VALICM)	AS VALICM
		FROM %TABLE:SFT% SFT (NOLOCK) 
		WHERE SFT.FT_FILIAL = %xFilial:SFT%
			AND SFT.FT_ENTRADA BETWEEN %Exp:DToS(_mvpr01)% AND %Exp:DToS(_mvpr02)%
			AND SFT.FT_DTCANC = ''
			AND SFT.FT_VALICM > 0
			AND SFT.%notDel%			
		GROUP BY SFT.FT_CFOP
		ORDER BY SFT.FT_CFOP
	EndSQL
	
	DbSelectArea(cAlB05DQ)
	(cAlB05DQ)->(dbGoTop())
	while !(cAlB05DQ)->(eof())

		IF Alltrim((cAlB05DQ)->CFOP) == '1101'
			nCC1101 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '1122'
			nCC1122 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '2122'
			nCC2122 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '1949'
			nCC1949 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '1903'
			nCC1903 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '1907'
			nCC1907 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '1910'
			nCC1910 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '2910'
			nCC2910 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '2101'
			nCC2101 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '1201'
			nCC1201 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '1202'
			nCC1202 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '1208'
			nCC1208 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '1410'
			nCC1410 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '1152'
			nCC1152 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '2201'
			nCC2201 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '2202'
			nCC2202 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '2410'
			nCC2410 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '5101'
			nDC5101 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '5102'
			nDC5102 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '5105'
			nDC5105 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '5116'
			nDC5116 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '5118'
			nDC5118 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '5201'
			nDC5201 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '5151'
			nDC5151 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '5401'
			nDC5401 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '5551'
			nDC5551 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '5252'
			nDC5252 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '5901'
			nDC5901 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '5556'
			nDC5556 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '5557'
			nDC5557 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '5553'
			nDC5553 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '5918'
			nDC5918 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '5910'
			nDC5910 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '5911'
			nDC5911 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '5913'
			nDC5913 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '6101'
			nDC6101 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '6102'
			nDC6102 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '6105'
			nDC6105 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '6107'
			nDC6107 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '6108' //INICIO Ticket 3035                    - Abel Babini - 16/09/2020 - Painel Fiscal VP - Acerto na declaração de variáveis e somatória do CFOP 6108
			nDC6108 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '6116'
			nDC6116 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '6118'
			nDC6118 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '6201'
			nDC6201 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '6551'
			nDC6551 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '6553'
			nDC6553 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '6556'
			nDC6556 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '6901'
			nDC6901 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '6910'
			nDC6910 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '6911'
			nDC6911 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '6918'
			nDC6918 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '6913'
			nDC6913 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '6401'
			nDC6401 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '6557'
			nDC6557 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '6909'
			nDC6909 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '7556'
			nDC7556 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '6905' //INICIO Ticket 12090										- Abel Babini - 09/04/2021 - Acrescentar CFOPs 6905 e 2906 como Outros Débitos e Outros Créditos respectivamente nas abas Demonstrativo e Abertura da Gia
			nDC6905 := (cAlB05DQ)->VALICM
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '2906' //INICIO Ticket 12090										- Abel Babini - 09/04/2021 - Acrescentar CFOPs 6905 e 2906 como Outros Débitos e Outros Créditos respectivamente nas abas Demonstrativo e Abertura da Gia
			nCC2906 := (cAlB05DQ)->VALICM
		ENDIF

		//INICIO Ticket 12090										- Abel Babini - 09/04/2021 - Acrescentar CFOPs 6905 e 2906 como Outros Débitos e Outros Créditos respectivamente nas abas Demonstrativo e Abertura da Gia
		IF ! (Alltrim((cAlB05DQ)->CFOP) $ cCfMap)
			nPos := ASCAN(aBrw5NM, {|X| X[1] == Alltrim((cAlB05DQ)->CFOP)})
			If nPos == 0
				AADD(aBrw5NM,{	Alltrim((cAlB05DQ)->CFOP),;
												Alltrim((cAlB05DQ)->CFOP) + ' - ' + Alltrim(Posicione("SX5",1,xFilial("SX5")+"13"+Alltrim((cAlB05DQ)->CFOP),"X5_DESCRI")),;
												(cAlB05DQ)->VALICM})
			Else
				aBrw5NM[nPos,3] += (cAlB05DQ)->VALICMS
			Endif
		ENDIF
		//FIM Ticket 12090										- Abel Babini - 09/04/2021 - Acrescentar CFOPs 6905 e 2906 como Outros Débitos e Outros Créditos respectivamente nas abas Demonstrativo e Abertura da Gia
		(cAlB05DQ)->(dbSkip())
	EndDo
	(cAlB05DQ)->(dbCloseArea())


	//
	//Consulta Operações de Devolução que tiveram crédito na entrada e na devolução
	//
	If Select(cAlB05DQ) > 0
		(cAlB05DQ)->(dbCloseArea())
	Endif
	cAlB05DQ:=GetNextAlias()
	
	BeginSQL Alias cAlB05DQ
		SELECT
			SFT.FT_CFOP AS CFOP,
			SFT.FT_VALICM AS VALICMS_SAIDA,
			SFT2.FT_VALICM AS VALICMS_ENTRADA
		FROM %TABLE:SFT% SFT (NOLOCK) 
		LEFT JOIN %TABLE:SFT% SFT2 (NOLOCK) ON
			SFT2.FT_FILIAL = SFT.FT_FILIAL
		AND SFT2.FT_SERIE = SFT.FT_SERORI
		AND SFT2.FT_NFISCAL = SFT.FT_NFORI
		AND SFT2.FT_ITEM = SFT.FT_ITEMORI
		AND SFT2.FT_CLIEFOR = SFT.FT_CLIEFOR
		AND SFT2.FT_LOJA = SFT.FT_LOJA
		AND SFT2.%notDel%	
		WHERE SFT.FT_FILIAL = %xFilial:SFT%
			AND SFT.FT_ENTRADA BETWEEN %Exp:DToS(_mvpr01)% AND %Exp:DToS(_mvpr02)%
			AND SFT.FT_DTCANC = ''
			AND SFT.FT_CFOP IN ('5201','6201')
			AND SFT.%notDel%
		ORDER BY SFT.FT_CFOP
	EndSQL
	
	nDC5201B	:= 0
	nDC6201B	:= 0
	DbSelectArea(cAlB05DQ)
	(cAlB05DQ)->(dbGoTop())
	while !(cAlB05DQ)->(eof())

		IF Alltrim((cAlB05DQ)->CFOP) == '5201' .AND. (cAlB05DQ)->VALICMS_ENTRADA = 0
			nDC5201B += (cAlB05DQ)->VALICMS_SAIDA
		ELSEIF Alltrim((cAlB05DQ)->CFOP) == '6201' .AND. (cAlB05DQ)->VALICMS_ENTRADA = 0
			nDC6201B += (cAlB05DQ)->VALICMS_SAIDA
		ENDIF
		(cAlB05DQ)->(dbSkip())
	EndDo
	(cAlB05DQ)->(dbCloseArea())

	//VENDA ARMAZEM
	//nDC5105 := 0
	//nDC6105	:= 0

	nVMan02	:= nA05T03
	nVMan04	:= nA05T07
	nVDCEst	:= round(nDC5101+nDC5102+nDC5105+nDC5116+nDC5118+nDC5201+nDC5151+nDC5401+nDC5551+nDC5252+nDC5901+nDC5556+nDC5557+nDC5553+nDC5918+nDC5910+nDC5911+nDC5913+nA09T032+nA09T022+nA09T042+nA09T052+nA09T072+nA09T102+nA09T112+nA09T122+nA09T132+nA09T142+nA09T152,2)
	nVDCFor	:= round(nDC6101+nDC6102+nDC6105+nDC6107+nDC6108+nDC6116+nDC6118+nDC6201+nDC6551+nDC6553+nDC6556+nDC6901+nDC6910+nDC6911+nDC6918+nDC6913+nA09T082+nDC6401+nDC6557+nA09T062+nDC6909+nDC7556+nDC6905,2)//Ticket 3035                    - Abel Babini - 16/09/2020 - Painel Fiscal VP - Acerto na declaração de variáveis e somatória do CFOP 6108
	nVCmp51 := nVDCEst+nVDCFor
	nVCmp52	:= nA24T02+nA06T04+nA07T91+nVMan02+nVMan04+(nA15T06 - nA15T03)+(nA37T06 - nA37T03)//Chamado n.060037 - OS n.061528 - Abel Babini - 27/07/2020 - Excluir filtro de Formulário próprio do relatório de Lenha e incluir informação no Demonstrativo e Abertura da Gia

	nVDvCEst	:= (nCC1201+nCC1410+nCC1202)
	nVDvCFor	:= (nCC2201+nCC2410+nCC2202)

	GrvTmp05('TIT', '007990', '','','','','',0,0,0,0,0)
	GrvTmp05('TIT', '008000', '','','','','',0,0,0,0,0)
	GrvTmp05('TIT', '008010', 'DEMONSTRATIVO AUXILIAR A APURAÇÃO DO ICMS','','','','',0,0,0,0,0)
	GrvTmp05('TIT', '008020', 'DÉBITO DO IMPOSTO','','','','',0,0,0,0,0)
	GrvTmp05('TIT', '008030', '001-POR SAIDAS COM DÉBITO DO IMPOSTO','','','','',0,0,0,0,0)
	GrvTmp05('TIT', '008040', '','','CAMPO 051','','',0,0,nVCmp51,0,0)
	GrvTmp05('TIT', '008050', 'RESUMO P/ NAT OPERAÇÃO:','RESUMO P/ NAT OPERAÇÃO:','','','',0,0,0,0,0)

	GrvTmp05(''		, '008060', '5.101-VENDA PRODUÇÃO','6.101-VENDA PRODUÇÃO','','','',nDC5101,nDC6101,0,0,0)
	GrvTmp05(''		, '008070', '5.102 REVENDA','6.102/6108 - REVENDA','','','',nDC5102,nDC6102+nDC6108,0,0,0)//Ticket 3035                    - Abel Babini - 16/09/2020 - Painel Fiscal VP - Acerto na declaração de variáveis e somatória do CFOP 6108
	GrvTmp05(''		, '008080', '5.105 VENDA ARMAZEM','6.105 VENDA ARMAZEM','','','',nDC5105,nDC6105,0,0,0)
	GrvTmp05(''		, '008090', '5.116 REM.VENDA ENT.FUTURA','6.107-VENDA Ñ CONTRIBUINTE','','','',nDC5116,nDC6107,0,0,0)
	GrvTmp05(''		, '008100', '5.118/ 5122 - VENDA A ORDEM','6.116-REM.VENDA ENT.FUTURA','','','',nDC5118,nDC6116,0,0,0)
	GrvTmp05(''		, '008110', '5.201 DEV. MAT. PRIMA','6.118/ 6122- VENDA À ORDEM','','','',nDC5201,nDC6118,0,0,0)
	GrvTmp05(''		, '008120', '5.151 - TRANSFERENCIA TRIBUTADA','6.201 -DEV.MATL.P/INDL','','','',nDC5151,nDC6201,0,0,0)
	GrvTmp05(''		, '008130', '5.401 VENDA SUBSTITUIÇÃO TRIBUTARIA','6.551-VENDA ATIVO.','','','',nDC5401,nDC6551,0,0,0)
	GrvTmp05(''		, '008140', '5.551 - VENDA ATIVO','6.553 - DEVOLUCAO IMOBILIZADO','','','',nDC5551,nDC6553,0,0,0)
	GrvTmp05(''		, '008150', '5252 - VENDA ENERGIA ELETRICA','','','','',nDC5252,0,0,0,0)
	GrvTmp05(''		, '008160', '5.901 REMESSA INDUSTR.','6.556 - DEV. MAT. CONSUMO','','','',nDC5901,nDC6556,0,0,0)
	GrvTmp05(''		, '008170', '5.556 - DEV. MAT. CONSUMO','6.910/ 6911-BONIFICAÇÃO/ AMOSTRA','','','',nDC5556,nDC6910+nDC6911,0,0,0)
	GrvTmp05(''		, '008180', '5.557 - TRANSF. MAT. CONSUMO','6.901-REM. INDUSTRUALIZAÇÃO','','','',nDC5557,nDC6901,0,0,0)
	GrvTmp05(''		, '008190', '5.553- DEVOLUÇÃO DE ATIVO','6.918- RET CONSIGNAÇÃO','','','',nDC5553,nDC6918,0,0,0)
	GrvTmp05(''		, '008200', '5.918- RET CONSIGNAÇÃO','6.913- RET. DEMONSTRAÇÃO','','','',nDC5918,nDC6913,0,0,0)
	GrvTmp05(''		, '008210', '5.910-BONIFICAÇÃO','6.949- OUTRAS SAÍDA - GARANTIA','','','',nDC5910,nA09T082,0,0,0)
	GrvTmp05(''		, '008220', '5.911-AMOSTRA','','','','',nDC5911,0,0,0,0)
	GrvTmp05(''		, '008230', '5.913- RET. DEMONSTRAÇÃO','6. 401 - VENDA SUBSTITUIÇÃO TRIBUTÁRIA','','','',nDC5913,nDC6401,0,0,0)
	GrvTmp05(''		, '008240', '5.949- OUTRAS SAÍDA - REMESSA DEGUSTAÇÃO','','','','',nA09T102,0,0,0,0)
	GrvTmp05(''		, '008250', '5.949- FRANGO CESTA BASICA','6.557 - TRANSF. MAT. CONSUMO','','','',nA09T032,nDC6557,0,0,0)
	GrvTmp05(''		, '008260', '5.949- CESTA BASICA / CESTA DE NATAL(Tributada)','6105 - VENDA (SAIDA ARMAZEM)','','','',nA09T022,0,0,0,0)
	GrvTmp05(''		, '008270', '5.949- Dev. CESTA BASICA','6.949- OUTRAS SAÍDAS (Tributada) - ANALISE','','','',nA09T042,nA09T062,0,0,0)
	GrvTmp05(''		, '008280', '5.949- OUTRAS SAÍDAS (Tributada) - Remessa Analise','6.909 - RET DE COMODATO','','','',nA09T052,nDC6909,0,0,0)
	GrvTmp05(''		, '008290', '5.949- OUTRAS SAÍDAS (Tributada) - Garantia','7.556 - DEVOLUÇÃO IMOBILIZADO','','','',nA09T072,nDC7556,0,0,0)
	GrvTmp05(''		, '008292', '5.949- OUTRAS SAÍDAS (Tributada) - Premiação','','','','',nA09T112,,0,0,0)
	GrvTmp05(''		, '008293', '5.949- OUTRAS SAÍDAS (Tributada)','','','','',nA09T122+nA09T132+nA09T142+nA09T152,,0,0,0)
	GrvTmp05(''		, '008293', '','6.905- Remessa Armazenagem Interestadual','','','',,nDC6905,0,0,0) //INICIO Ticket 12090										- Abel Babini - 09/04/2021 - Acrescentar CFOPs 6905 e 2906 como Outros Débitos e Outros Créditos respectivamente nas abas Demonstrativo e Abertura da Gia
	
	GrvTmp05('TOT', '008300', 'TOTAL OP. NO ESTADO','TOTAL OP. FORA DO ESTADO','','','',nVDCEst,nVDCFor,nVDCEst+nVDCFor,0,0)
	GrvTmp05('TIT', '008310', '','','','','',0,0,0,0,0)
	GrvTmp05('TOT', '008350', '','','CAMPO 052','','',0,0,nVCmp52,0,0)
	GrvTmp05(''		, '008360', '','','','','',0,0,0,0,0)
	GrvTmp05('TOT', '008400', 'AQUISIÇÃO DE TRANSPORTE - ICMS SOBRE FRETE/SUBSTITUIÇÃO TRIBUTARIA','','','','',0,nA24T02,0,0,0)
	//Chamado n.060037 - OS n.061528 - Abel Babini - 27/07/2020 - Excluir filtro de Formulário próprio do relatório de Lenha e incluir informação no Demonstrativo e Abertura da Gia
	GrvTmp05('TOT', '008405', 'OUTROS DÉBITOS - LENHA','','','','',0,nA15T06 - nA15T03,0,0,0)
	GrvTmp05('TOT', '008407', 'OUTROS DÉBITOS - DÉB SERV. INDUSTR.','','','','',0,nA37T06 - nA37T03,0,0,0)
	
	GrvTmp05('MAN', '008410', 'OUTROS DÉBITOS - ***MANUAL*** - '+Alltrim(cA05T04),'','','','',0,nVMan04,0,0,0)
	GrvTmp05('MAN', '008415', 'Estorno de Crédito - ***MANUAL*** - '+Alltrim(cA05T03),'','','','',0,nVMan02,0,0,0)
	GrvTmp05('TOT', '008420', 'DIFERENCIAL DE ALIQUOTA INTERESTADUAL - NÃO CONTRIBUINTE','','','','',0,nA06T04,0,0,0)
	GrvTmp05('TOT', '008430', 'DIFERENCIAL ALIQUOTA 18%','','','','',0,nA07T91,0,0,0)
	GrvTmp05(''		, '008440', '','','','','',0,0,0,0,0)
	GrvTmp05('TIT', '008450', '(COMPRA DE MATL CONSUMO FORA DO ESTADO)','','','','',0,0,0,0,0)
	GrvTmp05('TOT', '008460', 'TOTAL','','','','',nA07T03,nA07T92,0,0,0)
	GrvTmp05('SUB', '008470', 'VALOR DO ICMS A 12% e 4%','','','','',0,nA07T92,0,0,0)
	GrvTmp05('SUB', '008480', 'VALOR DO ICMS A 18%','','','','',0,nA07T91,0,0,0)
	GrvTmp05(''		, '008490', '','','','','',0,0,0,0,0)
	GrvTmp05('TOT', '008500', '005-TOTAL DOS DÉBITOS','','','','',0,0,nVCmp51+nVCmp52,0,0)

	nVTDev := nVDvCEst+nVDvCFor
	GrvTmp05(''		, '008990', '','','','','',0,0,0,0,0)
	GrvTmp05('TIT', '009000', '','','','','',0,0,0,0,0)
	GrvTmp05('TIT', '009010', 'CRÉDITO DO IMPOSTO','','','','',0,0,0,0,0)
	GrvTmp05('TIT', '009020', '','','','','',0,0,0,0,0)
	GrvTmp05('TIT', '009030', '(DEVOLUÇÕES DE VENDAS','','','','',0,0,0,0,0)
	GrvTmp05(''		, '009040', '1.201','2.201','','','',nCC1201,nCC2201,0,0,0)
	GrvTmp05(''		, '009050', '1.410','2.410','','','',nCC1410,nCC2410,0,0,0)
	GrvTmp05(''		, '009060', '1.202','2.202','','','',nCC1202,nCC2202,0,0,0)
	GrvTmp05(''		, '009070', '','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '009080', 'DEVOLUÇÕES NO ESTADO','DEVOLUÇÕES FORA DO ESTADO','','','',nVDvCEst,nVDvCFor,0,0,0)
	GrvTmp05('SUB', '009090', 'TOTAL DAS DEVOLUÇÕES','','','','',nVTDev,0,nVTDev,0,0)
	GrvTmp05(''		, '009100', '','','','','',0,0,0,0,0)
	GrvTmp05(''		, '009110', '','','','','',0,0,0,0,0)
	//Frete Compra de Legumes
	nLC2352		:= 0
	//Compra de Insumos (Exportação)
	//
	If Select(cAlB05DQ) > 0
		(cAlB05DQ)->(dbCloseArea())
	Endif
	cAlB05DQ:=GetNextAlias()
	
	BeginSQL Alias cAlB05DQ
		SELECT
			SFT.FT_CFOP 	AS CFOP,
			SUM(SFT.FT_VALICM)	AS VALICM
		FROM %TABLE:SFT% SFT (NOLOCK) 
		WHERE SFT.FT_FILIAL = %xFilial:SFT%
			AND SFT.FT_ENTRADA BETWEEN %Exp:DToS(_mvpr01)% AND %Exp:DToS(_mvpr02)%
			AND (SFT.FT_PRODUTO IN %Exp:_cPRCmE1% OR SFT.FT_PRODUTO IN %Exp:_cPRCmE2% )
			AND SFT.FT_CFOP IN %Exp:_cCFCmEx%
			AND SFT.FT_DTCANC = ''
			AND SFT.%notDel%			
		GROUP BY SFT.FT_CFOP
		ORDER BY SFT.FT_CFOP
	EndSQL

	nVCmpInE	:= 0
	DbSelectArea(cAlB05DQ)
	(cAlB05DQ)->(dbGoTop())
	while !(cAlB05DQ)->(eof())
		nVCmpInE := nVCmpInE + (cAlB05DQ)->VALICM
		(cAlB05DQ)->(dbSkip())
	EndDo
	(cAlB05DQ)->(dbCloseArea())

	nVTICOE	:= nA26T042  + nA26T052 + nA26T062 + nA26T072 + nA26T082 + nA26T092 + nA26T102 + nA26T112 + nA26T122 + nA26T132 + nA26T142 + nA26T152

	nVCmpIns	:= (nCC1101+nCC2101+nCC1122+nCC2122+nCC2910)-nVCmpInE
	nVTCred		:= nVCmpIns+nVCmpInE+nA17T02+nVCTCb13+nCC1910+nCC1208+nCC1903+nCC1907+nLC2352+nA26T022+nA26T032+nVTICOE+nCC2906//INICIO Ticket 12090										- Abel Babini - 09/04/2021 - Acrescentar CFOPs 6905 e 2906 como Outros Débitos e Outros Créditos respectivamente nas abas Demonstrativo e Abertura da Gia
	GrvTmp05(''		, '009150', '1101/2101/1122/2122/2910 - Compra de Insumos (Industrialização)','','','','',0,nVCmpIns,0,0,0)
	GrvTmp05(''		, '009160', '1101/2101 - Compra de Insumos (Exportação)','','','','',0,nVCmpInE,0,0,0)
	GrvTmp05(''		, '009170', '1102/2102 - Compra de Legumes e Almondegas','','','','',0,nA17T02+nVCTCb13,0,0,0)
	GrvTmp05(''		, '009180', '1910/2910 - Devolução de Bonificação','','','','',0,nCC1910,0,0,0)
	GrvTmp05(''		, '009190', '1208/1903/1907 - Devolução de Transferencia / Retorno Industrialização','','','','',0,nCC1208+nCC1903+nCC1907,0,0,0)
	GrvTmp05(''		, '009200', '2352 - Frete - Compra de Legumes','','','','',0,nLC2352,0,0,0)
	GrvTmp05(''		, '009210', '1949 - Outras Entradas - Remessa para Teste de Insumos Embutidos','','','','',0,nA26T032,0,0,0)
	GrvTmp05(''		, '009220', '1116/1118/1949 - Entrada de Cesta Básica','','','','',0,nA26T022,0,0,0) //nA09T051 >> Subtrair o valor pois está destacado na linha anterior
	GrvTmp05(''		, '009225', '1949 - Outras Entradas','','','','',0,nVTICOE,0,0,0) //nA09T051 >> Subtrair o valor pois está destacado na linha anterior
	GrvTmp05(''		, '009226', '2906 - Retorno Armazenagem Interestadual','','','','',0,nCC2906,0,0,0) //INICIO Ticket 12090										- Abel Babini - 09/04/2021 - Acrescentar CFOPs 6905 e 2906 como Outros Débitos e Outros Créditos respectivamente nas abas Demonstrativo e Abertura da Gia
	GrvTmp05(''		, '009230', '','','','','',0,0,0,0,0)
	GrvTmp05('TOT', '009240', 'TOTAL DOS CRÉDITOS','','','','',0,0,nVTCred,0,0)
	GrvTmp05(''		, '009250', '','','','','',0,0,0,0,0)
	GrvTmp05(''		, '009260', '','','','','',0,0,0,0,0)
	//Estorno Diferencial de Aliquota
	nVEstDiF	:= nA07T25
	nVMan01	:= nA05T02
	nVMan03	:= nA05T08
	nVCmp57	:= ROUND(nDC5918+nDC6918+nTtUnf+nTtCel+nDC5913+nDC6913+nDC5556+nDC6556+nDC7556+nVEstDiF+nVMan01;
									+nVMan03+nDC5551+nDC5553+nDC6553+nCC1152+nR21ICMS+nDC5201B+nDC6201B+nA09T072+nA09T082+nA07T92+;
									aBrw08p1[21,3]+abrw08p2[61,3]+aBrw08p3[23,3]+aBrw35p1[21,3]+abrw35p2[61,3]+aBrw35p3[23,3],2)
	nVCmp62	:= ROUND(nVCmp57 + nVTCred + nVTDev,2)
	GrvTmp05(''		, '009270', '5918/6918 - Retorno de CONSIGNAÇÃO','','','','',0,nDC5918+nDC6918,0,0,0)
	GrvTmp05(''		, '009280', 'Outros Créditos - Uniformes','','','','',0,nTtUnf,0,0,0)
	GrvTmp05(''		, '009285', 'Outros Créditos - Celulares','','','','',0,nTtCel,0,0,0)
	GrvTmp05(''		, '009290', 'Outros Créditos - Insumos Utilizados para MI e ME (Proporcional Exportação)','','','','',0,0,0,0,0)
	GrvTmp05(''		, '009300', 'OUTROS CRÉDITOS - CRÉDITO OUTORGADO - AJUSTADO','','','','',0,0,0,0,0)
	GrvTmp05(''		, '009310', 'OUTROS CRÉDITOS - PORTARIA CAT 221-2009','','','','',0,0,0,0,0)
	GrvTmp05(''		, '009320', 'OUTROS CRÉDITOS - TRANSF. INTERFILIAIS DE EMBUTIDOS','','','','',0,0,0,0,0)
	GrvTmp05(''		, '009330', '5913/6913 - Retorno de Demonstração','','','','',0,nDC5913+nDC6913,0,0,0)
	GrvTmp05(''		, '009340', '5556/6556/7556 - Devolução de Material Consumo','','','','',0,nDC5556+nDC6556+nDC7556,0,0,0)
	GrvTmp05(''		, '009350', 'Estorno Diferencial de Alíquota','','','','',0,nVEstDiF,0,0,0)
	GrvTmp05('MAN', '009360', 'Estorno de Débito - ***MANUAL*** - '+Alltrim(cA05T02),'','','','',0,nVMan01,0,0,0)
	GrvTmp05('MAN', '009360', 'Outros Créditos - ***MANUAL*** - '+Alltrim(cA05T05),'','','','',0,nVMan03,0,0,0)
	GrvTmp05(''		, '009370', '5551 - Venda de Imobilizado','','','','',0,nDC5551,0,0,0)
	GrvTmp05(''		, '009380', '5553/6553 - Dev. Imobilizado','','','','',0,nDC5553+nDC6553,0,0,0)
	GrvTmp05(''		, '009390', '1152 - Transferencia Interfiliais Tributada','','','','',0,nCC1152,0,0,0)
	GrvTmp05(''		, '009400', '5901/6901 - Remessa de Industrialização','','','','',0,nR21ICMS,0,0,0)
	GrvTmp05(''		, '009410', '5201/6201 - Devolução de Materia Prima','','','','',0,nDC5201B+nDC6201B,0,0,0)
	GrvTmp05(''		, '009420', '5949/6949 - Outras Saídas Tributada - Garantia e aluguel','','','','',0,nA09T072+nA09T082,0,0,0)
	GrvTmp05(''		, '009430', '2556/2251 - Diferencial de Alíquota','','','','',0,nA07T92,0,0,0)
	GrvTmp05(''		, '009440', 'Crédito Presumido - (Venda Interestadual 7%) e (Venda Interna 5%)','','','','',0,aBrw08p1[21,3]+abrw08p2[61,3]+aBrw08p3[23,3],0,0,0)
	GrvTmp05(''		, '009440', 'Crédito Presumido - (Venda Interestadual '+Alltrim(_cMVCON3)+'%) e (Venda Interna '+Alltrim(_cMVCON4)+'%)','','','','',0,aBrw35p1[21,3]+abrw35p2[61,3]+aBrw35p3[23,3],0,0,0)
	GrvTmp05(''		, '009450', '','','','','',0,0,0,0,0)
	GrvTmp05('TOT', '009460', '007-OUTROS CRÉDITOS','','CAMPO 057','','',0,0,nVCmp57,0,0)
	GrvTmp05(''		, '009470', '','','','','',0,0,0,0,0)
	GrvTmp05('TOT', '009480', '012-TOTAL','','CAMPO 062','','',0,0,nVCmp62,0,0)
	GrvTmp05(''		, '009490', '','','','','',0,0,0,0,0)
	
	
	//Recupera informações salvas da versão anterior se existir, caso contrário inicializa os valores de Sld Mes Anterior com 0
	//Return ({cVerAnt,nSldMAnt,nVEstDeb,cDEstDev,nVEstCre,cDEstCre,nAprCrAc,nSldMAtu})
	//Apenas recupera as informações e valores salves se for o Usuário Master ou se o Período já foi fechado.
	If _lMsUser	.or. _lPerFch
		aRecSd05	:= xRecSd05()
		cMV05T01	:= aRecSd05[1] //Max Versao
		nA05T01		:= aRecSd05[2] //Vl. Saldo Credor Mês Anterior
		nA05T02		:= aRecSd05[3] //Vl. Estorno de Débitos
		cA05T02		:= aRecSd05[4] 
		nA05T03		:= aRecSd05[5] //Vl. Estorno de Créditos
		cA05T03		:= aRecSd05[6] 
		nA05T04		:= aRecSd05[7] //Apropriação de Crédito Acumulado
		nA05T05		:= aRecSd05[8] //Vl. Saldo Credor Mês Atual
		nA05T06		:= aRecSd05[9] //Solicitação DGCA
		nA05T07		:= aRecSd05[10] //Outros Débitos
		cA05T04		:= aRecSd05[11] 
		nA05T08		:= aRecSd05[12] //Outros Créditos
		cA05T05		:= aRecSd05[13] 
		nA05T09		:= aRecSd05[14] //Outros Créditos
		nA05T10		:= aRecSd05[15] //Outros Créditos
	Endif
	nVCmp61		:= nA05T01
	nVCalcIm	:= nVCmp62-(nVCmp51+nVCmp52)

	//Apropriação Acumulada
	nVAprAcu	:= nA05T04

	//Saldo a transportar mês seguinte
	nA05T05		:= (nVCmp61+nVCalcIm-nVAprAcu)
	nVSldTrp	:= nA05T05
	GrvTmp05('SUB', '009500', '011-SALDO CREDOR DO MÊS ANTERIOR','','CAMPO 061','','',0,0,nVCmp61,0,0)
	GrvTmp05(''		, '009510', '','','','','',0,0,0,0,0)
	GrvTmp05('SUB', '009520', '016-IMPOSTO (DÉBITO MENOS CRÉDITO) - SALDO CREDOR','','','','',0,0,nVCalcIm,0,0)
	GrvTmp05(''		, '009530', '','','','','',0,0,0,0,0)
	GrvTmp05('MAN', '009540', '02.21-APROPRIAÇÃO DE CREDITO ACUMULADO','','','','',0,0,nVAprAcu,0,0)
	GrvTmp05(''		, '009550', '','','','','',0,0,0,0,0)
	GrvTmp05('TOT', '009560', 'SALDO CREDOR A TRANSPORTAR P/ MÊS SEGUINTE','','','','',0,0,nVSldTrp,0,0)

	IF Len(aBrw5NM) > 0
		GrvTmp05('TIT', '015000', '','','','','',0,0,0,0,0)
		GrvTmp05('TIT', '015010', 'OPERAÇÕES NÃO MAPEADAS','','','','',0,0,0,0,0)
		GrvTmp05('TIT', '015020', '','','','','',0,0,0,0,0)
		For _i := 1 to Len(aBrw5NM)
				GrvTmp05('MAN', '0155'+Alltrim(StrZero(_i,2)), Alltrim(aBrw5NM[_i,2]),'','','','',0,0,aBrw5NM[_i,3],0,0)
		Next _i
	ENDIF

	(cAlB05Dt)->(dbGoTop())

	//PREENCHE ARRAY DA ABA 03 - ABERTURA GIA
	aBrw03Rs := {} //Linha;Descrição;Valor
	nVSub001	:=	nDC5101+nDC6101+nDC5105+nDC5401+nDC6401+nDC5118+nDC6118+nDC6105+nDC5102+nDC6102+nDC6108+nDC5252+nDC5201+nDC6201+nDC5556+;
								nDC6556+nDC7556+nDC6553+nDC5913+nDC6913+nA09T042+nDC5901+nDC6901+nDC5557+nDC6557+nDC5918+nDC6918+nDC5116+;
								nDC6116+nDC5910+nDC6910+nDC5911+nDC6911+nDC5553+nDC5551+nDC6551+nDC5151+nA09T032+nA09T022+nA09T102+nA09T052+;
								nA09T062+nA09T072+nA09T082+nA09T092+nA09T112+nA09T122+nA09T132+nA09T142+nA09T152+nDC6905

	AADD(aBrw03Rs,{'TIT',"","DÉBITO DO IMPOSTO",""} )
	AADD(aBrw03Rs,{'TIT',"001","POR SAÍDA COM DÉBITOS",""} )
	//AADD(aBrw03Rs,{"","","",""}  )
	AADD(aBrw03Rs,{''		,"001.01","VENDAS DE MERCADORIAS",nDC5101+nDC6101} )
	AADD(aBrw03Rs,{''		,"001.02","VENDAS (SUBSTITUIÇÃO TRIBUTÁRIA)",nDC5401+nDC6401} )
	AADD(aBrw03Rs,{''		,"001.03","VENDAS À ORDEM",nDC5118+nDC6118}  )
	AADD(aBrw03Rs,{''		,"001.04","VENDAS DE PRODUÇÃO ( Armazem)",nDC5105+nDC6105} )
	AADD(aBrw03Rs,{''		,"001.05","REVENDAS ",nDC5102+nDC6102+nDC6108}  )
	AADD(aBrw03Rs,{''		,"001.06","VENDAS ENERGIA ELETRICA",nDC5252} )
	AADD(aBrw03Rs,{''		,"001.07","DEVOLUÇAO MAT. INDUSTRIAL.",nDC5201+nDC6201} )
	AADD(aBrw03Rs,{''		,"001.08","DEVOLUÇAO MAT. CONSUMO",nDC5556+nDC6556+nDC7556}  )
	AADD(aBrw03Rs,{''		,"001.09","DEVOLUÇAO IMOBILIZADO",nDC6553}  )
	AADD(aBrw03Rs,{''		,"001.10","RET. DEMONSTRAÇÃO",nDC5913+nDC6913}  )
	AADD(aBrw03Rs,{''		,"001.11","DEV. CESTA BASICA",nA09T042}  )
	AADD(aBrw03Rs,{''		,"001.12","REMESSA INDUSTRIALIZAÇÃO",nDC5901+nDC6901} )
	AADD(aBrw03Rs,{''		,"001.13","TRANSFERENCIA MAT. CONSUMO",nDC5557+nDC6557} )
	AADD(aBrw03Rs,{''		,"001.14","RETORNO DE CONSIGNAÇÃO",nDC5918+nDC6918}  )
	AADD(aBrw03Rs,{''		,"001.15","REM. VENDA PARA ENTREGA FUTURA",nDC5116+nDC6116} )
	AADD(aBrw03Rs,{''		,"001.16","BONIFICAÇÃO",nDC5910+nDC6910}  )
	AADD(aBrw03Rs,{''		,"001.17","AMOSTRA",nDC5911+nDC6911}  )
	AADD(aBrw03Rs,{''		,"001.18","DEVOLUÇÃO ATIVO",nDC5553} )
	AADD(aBrw03Rs,{''		,"001.19","VENDA IMOBILIZADO",nDC5551+nDC6551} )
	AADD(aBrw03Rs,{''		,"001.20","TRANSFERENCIA TRIBUTADA",nDC5151} )
	AADD(aBrw03Rs,{''		,"001.21","FRANGO CESTA BASICA",nA09T032}  )
	AADD(aBrw03Rs,{''		,"001.22","CESTA BASICA",nA09T022}  )
	AADD(aBrw03Rs,{''		,"001.23","OUTRAS SAIDAS (TRIBUTADA) - REMESSA DEGUSTAÇÃO",nA09T102} )
	AADD(aBrw03Rs,{''		,"001.24","OUTRAS SAIDAS (TRIBUTADA) - REMESSA DE FRANGO PARA ANALISE",nA09T052+nA09T062} )
	AADD(aBrw03Rs,{''		,"001.25","OUTRAS SAIDAS (TRIBUTADA) - GARANTIA E ALUGUEL",nA09T072+nA09T082} )
	AADD(aBrw03Rs,{''		,"001.26","OUTRAS SAIDAS (TRIBUTADA) ",nA09T092+nA09T112+nA09T122+nA09T132+nA09T142+nA09T152} )
	AADD(aBrw03Rs,{''		,"001.27","REMESSA ARMAZENAGEM INTERESTADUAL",nDC6905} )//INICIO Ticket 12090										- Abel Babini - 09/04/2021 - Acrescentar CFOPs 6905 e 2906 como Outros Débitos e Outros Créditos respectivamente nas abas Demonstrativo e Abertura da Gia
	AADD(aBrw03Rs,{"","","",""}  )
	AADD(aBrw03Rs,{'SUB',"001.99","SUB-TOTAL",nVSub001} )
	AADD(aBrw03Rs,{"","","",""}  )

	
	nVSub002	:= nVAprAcu+nA24T02+nVMan04+(nA15T06 - nA15T03)+(nA37T06 - nA37T03) //Chamado n.060037 - OS n.061528 - Abel Babini - 27/07/2020 - Excluir filtro de Formulário próprio do relatório de Lenha e incluir informação no Demonstrativo e Abertura da Gia
	AADD(aBrw03Rs,{'TIT',"002","OUTROS DÉBITOS",""}  )
	AADD(aBrw03Rs,{''		,"002.21","APROPRIAÇÃO DE CRÉDITO ACUMULADO",nVAprAcu} )
	AADD(aBrw03Rs,{'MAN',"002.99","OUTROS DEBITOS ",nVMan04}  )
	AADD(aBrw03Rs,{''		,"002.06","FRETES (SUBSTITUIÇÃO TRIBUTÁRIA)",nA24T02} )
	
	//Chamado n.060037 - OS n.061528 - Abel Babini - 27/07/2020 - Excluir filtro de Formulário próprio do relatório de Lenha e incluir informação no Demonstrativo e Abertura da Gia
	AADD(aBrw03Rs,{''		,"002.99","LENHA",nA15T06 - nA15T03} )
	//Ticket 18004                   - Abel Babini - 17/08/2021 - Alterações no Painel Fiscal - Apuração de Frete e criação do relatório Débito Serv. Industrialização
	AADD(aBrw03Rs,{''		,"002.99","DÉBITO SERV. INDUSTR.",nA37T06 - nA37T03} )

	AADD(aBrw03Rs,{''		,"","",""}  )
	AADD(aBrw03Rs,{'SUB',"002.A","SUB-TOTAL",nVSub002} )
	AADD(aBrw03Rs,{"","","",""}  )

	nVSub003	:= nA07T91+nA06T04
	AADD(aBrw03Rs,{''		,"002.07","DIFERENCIAL DE ALIQUOTA",nA07T91} )
	AADD(aBrw03Rs,{''		,"002.87","DIFERENCIAL DE ALIQUOTA INTERESTADUAL NÃO CONTRIBUINTE",nA06T04} )
	AADD(aBrw03Rs,{"","","",""} )
	AADD(aBrw03Rs,{'SUB',"002.B","SUB-TOTAL",nVSub003}  )
	AADD(aBrw03Rs,{"","","",""}  )

	nVTot002	:= nVSub002+nVSub003
	AADD(aBrw03Rs,{'TOT',"","TOTAL",nVTot002} )

	nvTot003	:= nVMan02+nVTot002+nVSub001
	AADD(aBrw03Rs,{"","","",""}  )
	AADD(aBrw03Rs,{'MAN',"","OUTROS DÉBITOS",nVMan02} )
	AADD(aBrw03Rs,{'MAN',"","ESTORNO DE CRÉDITOS",nVMan02} )
	AADD(aBrw03Rs,{'TOT',"","TOTAL DE DÉBITOS",nvTot003} )
	AADD(aBrw03Rs,{"","","",""}  )
	AADD(aBrw03Rs,{"","","",""}  )
	AADD(aBrw03Rs,{'TIT',"","CRÉDITO DO IMPOSTO",""}  )
	AADD(aBrw03Rs,{'TIT',"006","POR ENTRADAS COM CRÉDITOS",""} )
	AADD(aBrw03Rs,{"","","",""}  )

	nVSub006	:= nVTDev-(nCC1410+nCC2410)+nCC1910+nCC1410+nCC2410+nA26T022+nVCmpIns+nVCmpInE+nA17T02+nVCTCb13+nCC1208+nCC1903+nCC1907+nLC2352+nVTICOE+nCC2906
	AADD(aBrw03Rs,{''		,"006.01","DEVOLUÇÃO VENDAS ",nVTDev-(nCC1410+nCC2410)}  )
	AADD(aBrw03Rs,{''		,"006.02","DEVOLUÇAO BONIFICAÇÃO",nCC1910}  )
	AADD(aBrw03Rs,{''		,"006.03","DEVOLUÇÃO (SUBSTITUIÇÃO TRIBUTÁRIA)",nCC1410+nCC2410} )
	AADD(aBrw03Rs,{''		,"006.04","ENTRADA CESTA BÁSICA",nA26T022} )
	AADD(aBrw03Rs,{''		,"006.05","OUTRAS ENTRADAS",nVTICOE}  )
	AADD(aBrw03Rs,{''		,"006.06","COMPRA INSUMOS (Embutidos)",nVCmpIns}  )
	AADD(aBrw03Rs,{''		,"006.07","COMPRA INSUMOS (Exportação)",nVCmpInE} )
	AADD(aBrw03Rs,{''		,"006.08","COMPRA DE LEGUMES",nA17T02+nVCTCb13}  )
	AADD(aBrw03Rs,{''		,"006.10","DEVOLUÇÃO DE TRANSFERENCIA",nCC1208+nCC1903+nCC1907} )
	AADD(aBrw03Rs,{''		,"006.12","FRETE COMPRA DE LEGUMES",nLC2352} )
	AADD(aBrw03Rs,{''		,"006.13","RETORNO ARMAZENAGEM INTERESTADUAL",nCC2906} )//INICIO Ticket 12090										- Abel Babini - 09/04/2021 - Acrescentar CFOPs 6905 e 2906 como Outros Débitos e Outros Créditos respectivamente nas abas Demonstrativo e Abertura da Gia
	AADD(aBrw03Rs,{"","","",""}  )
	AADD(aBrw03Rs,{'SUB',"006.A","SUB-TOTAL",nVSub006}  )
	AADD(aBrw03Rs,{'TIT',"007","OUTROS CRÉDITOS",""} )
	AADD(aBrw03Rs,{"","","",""} )

	nVSub007	:=	nA07T92+aBrw08p1[21,3]+aBrw08p2[61,3]+aBrw08p3[23,3]+nDC5556+nDC6556+;
								nDC7556+nR21ICMS+nDC5201B+nDC6201B+nTtUnf+nTtCel+nDC5553+nDC6553+nDC5551+;
								nDC6551+nVMan01+nVMan03+nVEstDiF+nA09T072+nA09T082+nDC5918+nDC6918+nDC5913+nDC6913+;
								aBrw35p1[21,3]+aBrw35p2[61,3]+aBrw35p3[23,3]
	AADD(aBrw03Rs,{''		,"007.18","DIFERENCIAL DE ALIQUOTA",nA07T92}  )
	AADD(aBrw03Rs,{''		,"007.99","CRÉDITO OUTORGADO (Decreto 54.897-09/10/09) Art. 27 Anexo III do RICMS/SP", aBrw08p1[21,3]}  )
	AADD(aBrw03Rs,{''		,"007.99","CRÉDITO OUTORGADO (Decreto 58.188 - 02/07/12) Art. 35 anexo III do RICMS/SP", aBrw08p2[61,3]}  )
	AADD(aBrw03Rs,{''		,"007.99","CRÉDITO OUTORGADO - ESTADUAL (Decreto 62.401 - 29/12/16) Art. 40 Anexo III do RICMS/SP",aBrw08p3[23,3]} )
	AADD(aBrw03Rs,{''		,"007.99","CRÉDITO OUTORGADO (Decreto 65.255/20) Art. 27 Anexo III do RICMS/SP", aBrw35p1[21,3]}  )
	AADD(aBrw03Rs,{''		,"007.99","CRÉDITO OUTORGADO (Decreto 65.255/20) Art. 35 anexo III do RICMS/SP", aBrw35p2[61,3]}  )
	AADD(aBrw03Rs,{''		,"007.99","CRÉDITO OUTORGADO - ESTADUAL (Decreto 65.255/20) Art. 40 Anexo III do RICMS/SP",aBrw35p3[23,3]} )
	AADD(aBrw03Rs,{''		,"007.99","DEV. MATERIAL CONSUMO",nDC5556+nDC6556+nDC7556}  )
	AADD(aBrw03Rs,{''		,"007.99","REM DE INDUSTRIALIZAÇÃO",nR21ICMS}  )
	AADD(aBrw03Rs,{''		,"007.99","DEVOLUCAO MAT. INDUSTRIAL.",nDC5201B+nDC6201B}  )
	AADD(aBrw03Rs,{''		,"007.99","OUTROS CRÉDITOS UNIFORMES",nTtUnf}  )
	AADD(aBrw03Rs,{''		,"007.99","OUTROS CRÉDITOS CELULARES",nTtCel}  )
	AADD(aBrw03Rs,{''		,"007.99","TRANSFERENCIA EMBUTIDOS ",""} )
	AADD(aBrw03Rs,{''		,"007.99","DEVOLUÇÃO ATIVO",nDC5553+nDC6553}  )
	AADD(aBrw03Rs,{''		,"007.10","VENDA DE ATIVO",nDC5551+nDC6551} )
	AADD(aBrw03Rs,{''		,"007.10","ESCRITURAÇÃO COM DESTAQUE ICMS INDEVIDO",nVMan01} )
	AADD(aBrw03Rs,{''		,"007.99","ESTORNO DE DEBITO",""}  )
	AADD(aBrw03Rs,{'MAN',"008.01","ESTORNO DE DEBITO - DIFERENCIAL DE ALIQUOTA (DEVOLUÇÃO)",nVEstDiF} )
	AADD(aBrw03Rs,{''		,"007.99","OUTRAS SAIDAS - GARANTIA E ALUGUEL",nA09T072+nA09T082} )
	AADD(aBrw03Rs,{''		,"007.99","RET. CONSIGNAÇÃO",nDC5918+nDC6918}  )
	AADD(aBrw03Rs,{''		,"007.99","OUTROS CRÉDITOS - Portaria CAT-221/09",""} )
	AADD(aBrw03Rs,{''		,"007.99","RETORNO DE DEMONSTRAÇÃO",nDC5913+nDC6913}  )
	AADD(aBrw03Rs,{''		,"007.99","OUTROS CRÉDITOS - PROPORCIONAL EXPORTAÇÃO",""} )
	AADD(aBrw03Rs,{'MAN',"007.99","OUTROS CRÉDITOS - "+Alltrim(cA05T05),nVMan03} )
	AADD(aBrw03Rs,{"","","",""}  )
	AADD(aBrw03Rs,{'SUB',"007.A","SUB-TOTAL",nVSub007}  )

	nTotCred	:= nVSub007 + nVSub006
	nVSoDGCA	:= nA05T06
	AADD(aBrw03Rs,{'TOT',"","TOTAL DE CRÉDITOS",nTotCred} )
	AADD(aBrw03Rs,{"","","",""}  )
	AADD(aBrw03Rs,{'TOT',"","SALDO CREDOR DO PERÍODO ANTERIOR",nVCmp61} )
	AADD(aBrw03Rs,{'TOT',"","SALDO CREDITO ACUMULADO",nVCmp61+nTotCred-nvTot003}  )
	AADD(aBrw03Rs,{'TOT',"","TOTAL DE CRÉDITO OUTORGADO",aBrw08p2[61,3]+aBrw35p2[61,3]} )
	AADD(aBrw03Rs,{'TOT',"","SOLICITAÇÃO DGCA",nVSoDGCA}  )
Return

/*/{Protheus.doc} Static Function xPrcMn05
	Processa Valores Manuais no Relatório Demonstrativo
	@author Abel Babini Filho
	@since 09/12/2019
	@version 01
/*/
Static Function xPrcMn05
	Local cNewVers := StrZero(Val(IIF(cMV05T01=='','001',cMV05T01))+1,3)
	Local cVerAnt := xRecVer('05')

	//Verifica se Período já está fechado. Se estive, não permite processar.
	If !_lPerFch
		//
		//aRecSd05	:= xRecSd05()
		//IF 	cMV05T01 <> aRecSd05[1] .OR. ; //Max Versao
		//		nA05T01 <> aRecSd05[2] .OR. ; //Vl. Saldo Credor Mês Anterior
		//		nA05T02 <> aRecSd05[3] .OR. ; //Vl. Estorno de Débitos
		//		cA05T02 <> aRecSd05[4] .OR. ; 
		//		nA05T03 <> aRecSd05[5] .OR. ; //Vl. Estorno de Créditos
		//		cA05T03 <> aRecSd05[6] .OR. ; 
		//		nA05T04 <> aRecSd05[7] .OR. ; //Apropriação de Crédito Acumulado
		//		nA05T05 <> aRecSd05[8] .OR. ; //Vl. Saldo Credor Mês Atual
		//		nA05T06 <> aRecSd05[9] .OR. ; //Solicitação DGCA
		//		nA05T07 <> aRecSd05[10] .OR. ; //Vl. Outros Débitos
		//		cA05T04 <> aRecSd05[11] .OR. ; //
		//		nA05T08 <> aRecSd05[12] .OR. ; //Vl. Outros Créditos
		//		cA05T05 <> aRecSd05[13]
			
			//Houve alteração. Necessário Recalcular Demonstrativo e Gravar nova versão
			//Gravação de cada registro
			//GravaZFU
			IF MessageBox('Deseja gravar as informações digitadas manualmente?','Salva Dados Manuais',4) == 6
				//Alert('Grava ZFU')
				//GravaZFU(cFilZFU, zPeriZFU, cVerZFU, dDtZFU, cTabZFU, cChavZFU, cUserZFU, cStatZFU, nValZFU,cKeyDZFU, cSDOCZFU)
				//ZFU->ZFU_STATUS	:= '1' //1-Aberto | 2-Fechado e Exportado | 3-Cancelado
				GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cNewVers, dDATABASE, '05', C05100, _cNomUse, '1', nA05T01,'', '')
				GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cNewVers, dDATABASE, '05', C05200, _cNomUse, '1', nA05T02,cA05T02, '')
				GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cNewVers, dDATABASE, '05', C05250, _cNomUse, '1', nA05T07,cA05T04, '')
				GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cNewVers, dDATABASE, '05', C05300, _cNomUse, '1', nA05T03,cA05T03, '')
				GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cNewVers, dDATABASE, '05', C05350, _cNomUse, '1', nA05T08,cA05T05, '')
				GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cNewVers, dDATABASE, '05', C05351, _cNomUse, '1', nA05T09,'', '')
				GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cNewVers, dDATABASE, '05', C05352, _cNomUse, '1', nA05T10,'', '')
				GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cNewVers, dDATABASE, '05', C05500, _cNomUse, '1', nA05T04,'', '')
				GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cNewVers, dDATABASE, '05', C05600, _cNomUse, '1', nA05T06,'', '')
				IF nOpMdl == 1
					xABrw05()
				ELSEIF nOpMdl == 2 .or. nOpMdl == 4
					//Static Call(ADFIS038R,xABrw27)
					//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
					u_FIS038B0()
				ENDIF
				GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cNewVers, dDATABASE, '05', C05999, _cNomUse, '1', nA05T05,'', '')
				//Static Call(ADFIS038R,xABrw03)
				//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
				u_FIS038A2()
				//Altera o status dos registros da versão anterior para 3 - Cancelado
				If ZFU->(dbSeek(xFilial('ZFU')+_cAnoI+_cMesI+cVerAnt+'05'))
					While !ZFU->(eof()) .AND. ;
								ZFU->ZFU_FILIAL == xFilial('ZFU') .AND. ;
								ZFU->ZFU_PERIOD == _cAnoI+_cMesI .AND. ;
								ZFU->ZFU_VERSAO == cVerAnt .AND. ;
								ZFU->ZFU_TABELA == '05'
						
						IF ZFU->ZFU_STATUS <> '3'
							RECLOCK('ZFU',.F.)
								ZFU->ZFU_STATUS := '3'
							MSUNLOCK()
						ENDIF
						ZFU->(dbSkip())
					EndDo
				Endif
			ELSE
				IF nOpMdl == 1
					xABrw05()
				ELSEIF nOpMdl == 2 .or. nOpMdl == 4
					//Static Call(ADFIS038R,xABrw27)
					//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
					u_FIS038B0()
				ENDIF
				//Static Call(ADFIS038R,xABrw03)
				//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
				u_FIS038A2()
			ENDIF
			//Reprocessa Demonstrativo
			
		//ENDIF
	ELSE
		Aviso(	"PAINEL FISCAL",;
			"Período já foi fechado. Execute o Painel Fiscal" + Chr(13) + Chr(10) +;
			"novamente, ou solicite a reabertura do período.",;
			{ "&Retorna" },,;
			"Conteúdo em Branco" )
		aSldFcht	:= xSldFcht()
		_lPerFch	:= IIF(aSldFcht[16],.T.,.F.)
	ENDIF

Return

/*/{Protheus.doc} Static Function GravaZFU
	Grava Registros na Tabela ZFU
	@author Abel Babini Filho
	@since 27/12/2019
	@version 01
/*/
Static Function GravaZFU(cFilZFU, zPeriZFU, cVerZFU, dDtZFU, cTabZFU, cChavZFU, cUserZFU, cStatZFU, nValZFU,cKeyDZFU, cSDOCZFU)
	dbSelectArea('ZFU')
	RECLOCK('ZFU',.T.)
		ZFU->ZFU_FILIAL	:= cFilZFU
		ZFU->ZFU_PERIOD	:= zPeriZFU
		ZFU->ZFU_VERSAO	:= cVerZFU
		ZFU->ZFU_DTGRV	:= dDtZFU
		ZFU->ZFU_TABELA	:= cTabZFU
		ZFU->ZFU_CHAVE	:= cChavZFU
		ZFU->ZFU_USUARI	:= cUserZFU
		ZFU->ZFU_STATUS	:= cStatZFU
		ZFU->ZFU_VALOR	:= nValZFU
		ZFU->ZFU_KEYDOC	:= cKeyDZFU
		ZFU->ZFU_STSDOC	:= cSDOCZFU
	MSUNLOCK()
Return

/*/{Protheus.doc} Static Function xRecSd05
	Recupera Saldo da Apuração do Mês Anterior
	@author Abel Babini Filho
	@since 23/12/2019
	@version 01
/*/
Static Function xRecSd05
	Local cVerAnt		:= ''
	Local nSldMAnt	:= 0
	Local nSldMAtu	:= 0
	Local nAprCrAc	:= 0
	Local nVEstDeb	:= 0
	Local cDEstDev	:= space(80)
	Local nVOutDeb	:= 0
	Local cDOutDev	:= space(80)
	Local nVEstCre	:= 0
	Local cDEstCre	:= space(80)
	Local nVOutCre	:= 0
	Local cDOutCre	:= space(80)
	Local nSolDGCA	:= 0
	Local nAprAcOD	:= 0
	Local nAprAcOC	:= 0
	//Verifica a última versão do período atual
	cVerAnt := xRecVer('05')

	IF cVerAnt == ''
		cVerAnt := '001'
	ELSE
		If Select(cAlB00Fc) > 0
			(cAlB00Fc)->(dbCloseArea())
		Endif
		cAlB00Fc:=GetNextAlias()
		
		BeginSQL Alias cAlB00Fc
			SELECT
				ZFU.ZFU_FILIAL	AS FILIAL,
				ZFU.ZFU_TABELA	AS TABELA,
				ZFU.ZFU_CHAVE		AS CHAVE,
				ZFU.ZFU_PERIOD	AS PERIODO,
				ZFU.ZFU_VERSAO	AS VERSAO,
				ZFU.ZFU_USUARI	AS USUARIO,
				ZFU.ZFU_DTGRV	AS DATAGRV,
				ZFU.ZFU_STATUS	AS STATUS,
				ZFU.ZFU_KEYDOC	AS KEYDOC,
				ZFU.ZFU_VALOR		AS VALOR
			FROM %TABLE:ZFU% ZFU (NOLOCK) 
			WHERE ZFU.ZFU_FILIAL = %xFilial:ZFU%
				AND ZFU.ZFU_PERIOD = %Exp:_cAnoI+_cMesI%
				AND ZFU.ZFU_TABELA = '05'
				AND ZFU.ZFU_VERSAO = %Exp:cVerAnt%
				AND ZFU.%notDel%			
		EndSQL
	
		DbSelectArea(cAlB00Fc)
		(cAlB00Fc)->(dbGoTop())
		while !(cAlB00Fc)->(eof())
	
			//ABA 05 - 
			//#DEFINE C05100		'005000100' //SALDO MES ANTERIOR
			IF (cAlB00Fc)->TABELA == '05'
				IF (cAlB00Fc)->CHAVE == C05100 //Saldo Mês Anterior
					nSldMAnt := (cAlB00Fc)->VALOR
				ELSEIF (cAlB00Fc)->CHAVE == C05200 //Estorno Débito
					nVEstDeb	:= (cAlB00Fc)->VALOR
					cDEstDev	:= (cAlB00Fc)->KEYDOC
				ELSEIF (cAlB00Fc)->CHAVE == C05250 //Outros Débitos
					nVOutDeb	:= (cAlB00Fc)->VALOR
					cDOutDev	:= (cAlB00Fc)->KEYDOC
				ELSEIF (cAlB00Fc)->CHAVE == C05300 //Estorno Crédito
					nVEstCre	:= (cAlB00Fc)->VALOR
					cDEstCre	:= (cAlB00Fc)->KEYDOC
				ELSEIF (cAlB00Fc)->CHAVE == C05350 //Outros Créditos
					nVOutCre	:= (cAlB00Fc)->VALOR
					cDOutCre	:= (cAlB00Fc)->KEYDOC
				ELSEIF (cAlB00Fc)->CHAVE == C05351 //Apropriação Créd Acumulado Outros Débitos
					nAprAcOD := (cAlB00Fc)->VALOR
				ELSEIF (cAlB00Fc)->CHAVE == C05352 //Apropriação Créd Acumulado Outros Créditos
					nAprAcOC := (cAlB00Fc)->VALOR
				ELSEIF (cAlB00Fc)->CHAVE == C05500 //Apropriação Créd Acumulado
					nAprCrAc := (cAlB00Fc)->VALOR
				ELSEIF (cAlB00Fc)->CHAVE == C05600 //Solicitação DGCA
					nSolDGCA := (cAlB00Fc)->VALOR
				ELSEIF (cAlB00Fc)->CHAVE == C05999 //Saldo Mês Atual
					nSldMAtu := (cAlB00Fc)->VALOR
				ENDIF
			ENDIF
	
			(cAlB00Fc)->(dbSkip())
		EndDo
	
		(cAlB00Fc)->(dbCloseArea())
	ENDIF

	//Se nSldMAnt = 0 então, verifica se existe nSldMAtu > 0 no mês anterior
	IF nSldMAnt == 0
		If Select(cAlB00Fc) > 0
			(cAlB00Fc)->(dbCloseArea())
		Endif
		cAlB00Fc:=GetNextAlias()
		
		BeginSQL Alias cAlB00Fc
			SELECT
				ZFU.ZFU_FILIAL	AS FILIAL,
				ZFU.ZFU_TABELA	AS TABELA,
				ZFU.ZFU_CHAVE		AS CHAVE,
				ZFU.ZFU_PERIOD	AS PERIODO,
				ZFU.ZFU_VERSAO	AS VERSAO,
				ZFU.ZFU_USUARI	AS USUARIO,
				ZFU.ZFU_DTGRV	AS DATAGRV,
				ZFU.ZFU_STATUS	AS STATUS,
				ZFU.ZFU_KEYDOC	AS KEYDOC,
				ZFU.ZFU_VALOR		AS VALOR
			FROM %TABLE:ZFU% ZFU (NOLOCK) 
			WHERE ZFU.ZFU_FILIAL = %xFilial:ZFU%
				AND ZFU.ZFU_PERIOD = %Exp:_cAnoAnt+_cMesAnt%
				AND ZFU.ZFU_TABELA = '05'
				AND ZFU.ZFU_CHAVE = '005000999'
				AND ZFU.ZFU_STATUS != '3'
				AND ZFU.%notDel%			
		EndSQL
		
		DbSelectArea(cAlB00Fc)
		(cAlB00Fc)->(dbGoTop())
		IF !(cAlB00Fc)->(eof()) .AND. (cAlB00Fc)->VALOR > 0
			nSldMAnt := (cAlB00Fc)->VALOR
		ENDIF
		(cAlB00Fc)->(dbCloseArea())
	ENDIF

Return ({cVerAnt,nSldMAnt,nVEstDeb,cDEstDev,nVEstCre,cDEstCre,nAprCrAc,nSldMAtu,nSolDGCA,nVOutDeb,cDOutDev,nVOutCre,cDOutCre,nAprAcOD,nAprAcOC})

/*/{Protheus.doc} Static Function GrvTmp05
	Relatório Demonstrativo - Adiciona Registro na Tabela Temporária conforme parâmetros informados
	@type  Static Function
	@author Abel Babini Filho
	@since 17/12/2019
	@version 1
	/*/
Static Function GrvTmp05(cChvTmp5, cLinTmp5, cDsc1T5,cDsc2T5,cDsc3T5,cDsc4T5,cDsc5T5, nVlr1T5, nVlr2T5, nVlr3T5, nVlr4T5, nVlr5T5)
	Default nVlr1T5 := 0
	Default nVlr2T5 := 0
	Default nVlr3T5 := 0
	Default nVlr4T5 := 0
	Default nVlr5T5 := 0
	RECLOCK(cAlB05Dt,.T.)
		(cAlB05Dt)->CHAVE := cChvTMp5
		(cAlB05Dt)->LINHA := cLinTmp5
		IF Alltrim(cDsc1T5) <> ''
			(cAlB05Dt)->DESCR1 := cDsc1T5
		ENDIF
		IF Alltrim(cDsc2T5) <> ''
			(cAlB05Dt)->DESCR2 := cDsc2T5
		ENDIF
		IF Alltrim(cDsc3T5) <> ''
			(cAlB05Dt)->DESCR3 := cDsc3T5
		ENDIF
		IF Alltrim(cDsc4T5) <> ''
			(cAlB05Dt)->DESCR4 := cDsc4T5
		ENDIF
		IF Alltrim(cDsc5T5) <> ''
			(cAlB05Dt)->DESCR5 := cDsc5T5
		ENDIF
		If nVlr1T5 > 0
			(cAlB05Dt)->VALOR1 := nVlr1T5
		ENDIF
		If nVlr2T5 > 0
			(cAlB05Dt)->VALOR2 := nVlr2T5
		ENDIF
		If nVlr3T5 > 0
			(cAlB05Dt)->VALOR3 := nVlr3T5
		ENDIF
		If nVlr4T5 > 0
			(cAlB05Dt)->VALOR4 := nVlr4T5
		ENDIF
		If nVlr5T5 > 0
			(cAlB05Dt)->VALOR5 := nVlr5T5
		ENDIF
	MSUNLOCK()
Return

/*/{Protheus.doc} Static Function xRelBr05
	Gera Relatório Ref. Demonstrativo
	@author Abel Babini Filho
	@since 19/11/2019
	@version 01
	/*/
	Static Function xRelBr05()
		Local aSays			:= {}
		Local aButtons		:= {}
		Local nOpca			:= 0
		//+-----------------------------------------------+
		//|Monta Form Batch - Interface com o Usuario     |
		//+-----------------------------------------------+
		AADD(aSays,"Este programa tem a finalidade de Gerar um arquivo Excel " )
		AADD(aSays,"Relatorio Demonstrativo" )
			
		AADD(aButtons, { 1,.T.,{|o| nOpca:=1, o:oWnd:End(), Processa({||xRelBr05b()},"Gerando arquivo","Aguarde...")    }})
		AADD(aButtons, { 2,.T.,{|o| nOpca:=2, o:oWnd:End() }})	
		FormBatch( cCadastr, aSays, aButtons )
		
		MsgInfo("Arquivo Excel gerado!")        
		
	Return
	
	/*/{Protheus.doc} Static Function xRelBr05b  
		Gera Relatório Ref. Demonstrativo
		@author Abel Babini Filho
		@since 19/11/2019
		@version 01
		/*/
	Static Function xRelBr05b()
		Private oExcel     := FWMSEXCELEX():New()
		//Private cArquivo	:= cGetFile("Arquivo XML", "Selecione o diretório para salvar o relatório",,'C:\',.T.,GETF_RETDIRECTORY + GETF_LOCALHARD + GETF_NETWORKDRIVE)	
		Private oMsExcel   := NIL
		
		cArquivo := cPathRel +  'DEMONSTRATIVO_' + DTOS(DATE()) + STRTRAN(TIME(),':','') + '.XML'
		BEGIN SEQUENCE
			
			//IF .NOT.( ApOleClient("MsExcel") )   // se nao existir o excel sai fora..
			//		Alert("Nao Existe Excel Instalado")
			//				BREAK
			//EndIF
						
			//Planilha1 - Detalhamento
			Cab05P1()             
			GEx05P1()					
	
			SalvaXml()
			CriaExcel()
		
		END SEQUENCE
	
	Return
	
	/*/{Protheus.doc} Static Function Cab05P1  
		Gera Relatório Ref. Demonstrativo
		@author Abel Babini Filho
		@since 19/11/2019
		@version 01
		/*/
	Static Function Cab05P1()
		oExcel:AddworkSheet(cFld051)
		oExcel:AddTable(cFld051,cFld05t1)
		oExcel:AddColumn(cFld051,cFld05t1,"Filial",1,1)
		oExcel:AddColumn(cFld051,cFld05t1,"Linha",1,1)
		oExcel:AddColumn(cFld051,cFld05t1,"Descrição 1",1,1)
		oExcel:AddColumn(cFld051,cFld05t1,"Valor 1",2,2)
		oExcel:AddColumn(cFld051,cFld05t1,"Descrição 1",1,1)
		oExcel:AddColumn(cFld051,cFld05t1,"Valor 2",2,2)
		oExcel:AddColumn(cFld051,cFld05t1,"Descrição 1",1,1)
		oExcel:AddColumn(cFld051,cFld05t1,"Valor 3",2,2)
		
	RETURN(NIL)  
	
	/*/{Protheus.doc} Static Function GEx05P1
		Gera Relatório Ref. Demonstrativo
		@author Abel Babini Filho
		@since 19/11/2019
		@version 01
		/*/
Static Function GEx05P1()
	//
	(cAlB05Dt)->(dbGoTop())
	While !(cAlB05Dt)->(Eof())
		oExcel:AddRow(cFld051,cFld05t1,{cFilAnt,;
																		(cAlB05Dt)->LINHA,;
																		(cAlB05Dt)->DESCR1,;
																		(cAlB05Dt)->VALOR1,;
																		(cAlB05Dt)->DESCR2,;
																		(cAlB05Dt)->VALOR2,;
																		(cAlB05Dt)->DESCR3,;
																		(cAlB05Dt)->VALOR3})

		(cAlB05Dt)->(dbSkip())
	ENDDO
	oExcel:AddRow(cFld051,cFld05t1,{"","","","","","","",""})
Return

// FIM Chamado n.050629 - OS n. 054821 - Relatório Demonstrativo - Abel Babini  - 18/11/2019


//INICIO Chamado n.050629 - OS n. 054855 - Relatório Revenda Tributada - Abel Babini  - 19/11/2019
/*/{Protheus.doc} Static Function xABrw22
	Relatório Revenda Tributada
	@type  Static Function
	@author Abel Babini Filho
	@since 19/11/2019
	@version 1
	/*/
Static Function xABrw22()
	Local _aFields := {}
	Local i := 0

	nR22ICMS := 0

	//GERA INFORMAÇÕES DETALHADAS
	If Select(cAlB22Dt) > 0
		(cAlB22Dt)->(dbCloseArea())
	Endif
	cAlB22Dt:=GetNextAlias()

	_aFields	:= CriaExtr(T22REVTR)
	_aIndex		:= CriaInd(T22REVTR)
	oAlB22Dt	:= CriaTmpT(cAlB22Dt, _aFields, _aIndex)

	If Select(cAlB22DQ) > 0
		(cAlB22DQ)->(dbCloseArea())
	Endif
	cAlB22DQ:=GetNextAlias()
	
	BeginSQL Alias cAlB22DQ
		column DTENTRADA as Date
		column DTEMISSAO as Date
		SELECT
			SFT.FT_FILIAL		AS FILIAL,
			SFT.FT_ENTRADA	AS DTENTRADA,
			SFT.FT_EMISSAO	AS DTEMISSAO,
			SFT.FT_SERIE		AS NFSERIE,
			SFT.FT_NFISCAL	AS NF,
			SFT.FT_ITEM			AS NFITEM,
			SFT.FT_CLIEFOR	AS CLIEFOR,
			SFT.FT_LOJA			AS LOJA,
			CASE WHEN (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) THEN SA2.A2_NOME ELSE SA1.A1_NOME END AS NOME,
			CASE WHEN (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) THEN SA2.A2_CGC ELSE SA1.A1_CGC END AS CNPJ,
			SFT.FT_PRODUTO	AS CODPROD,
			SB1.B1_DESC		AS DESCPROD,
			SFT.FT_CFOP 	AS CFOP,
			SFT.FT_QUANT		AS QUANT,
			SFT.FT_PRCUNIT	AS PRCUNIT,
			SFT.FT_VALCONT	AS VLCONT,
			SFT.FT_VALICM		AS VLICMS,
			SFT.R_E_C_N_O_ AS R_E_C_N_O_
		FROM %TABLE:SFT% SFT (NOLOCK) 
		LEFT JOIN %TABLE:SB1% SB1 (NOLOCK) ON
			SB1.B1_FILIAL = %xFilial:SB1%
			AND SB1.B1_COD = SFT.FT_PRODUTO
			AND SB1.%notDel%
		LEFT JOIN %TABLE:SA2% SA2 (NOLOCK) ON
			SA2.A2_FILIAL = %xFilial:SA2%
			AND SA2.A2_COD = SFT.FT_CLIEFOR
			AND SA2.A2_LOJA = SFT.FT_LOJA
			AND ( (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO IN ('D','B') ) )
			AND SA2.%notDel%
		LEFT JOIN %TABLE:SA1% SA1 (NOLOCK) ON
			SA1.A1_FILIAL = %xFilial:SA1%
			AND SA1.A1_COD = SFT.FT_CLIEFOR
			AND SA1.A1_LOJA = SFT.FT_LOJA
			AND ( (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO IN ('D','B') ) )
			AND SA1.%notDel%
		WHERE SFT.FT_FILIAL = %xFilial:SFT%
			AND SFT.FT_ENTRADA BETWEEN %Exp:DToS(_mvpr01)% AND %Exp:DToS(_mvpr02)%
			AND SFT.FT_CFOP IN %Exp:_cCFRvTr%
			AND SFT.FT_DTCANC = ''
			AND SFT.%notDel%			
EndSQL
			//AND SFT.FT_CFOP > '5000'
			//AND SFT.FT_VALICM > 0
	
DbSelectArea(cAlB22DQ)
(cAlB22DQ)->(dbGoTop())
while !(cAlB22DQ)->(eof())
	RECLOCK(cAlB22Dt,.T.)
		(cAlB22Dt)->FILIAL := (cAlB22DQ)->FILIAL
		(cAlB22Dt)->DTENTRADA := (cAlB22DQ)->DTENTRADA
		(cAlB22Dt)->DTEMISSAO := (cAlB22DQ)->DTEMISSAO
		(cAlB22Dt)->NFSERIE := (cAlB22DQ)->NFSERIE
		(cAlB22Dt)->NF := (cAlB22DQ)->NF
		(cAlB22Dt)->NFITEM := (cAlB22DQ)->NFITEM
		(cAlB22Dt)->CLIEFOR := (cAlB22DQ)->CLIEFOR
		(cAlB22Dt)->NOME := (cAlB22DQ)->NOME
		(cAlB22Dt)->CNPJ := (cAlB22DQ)->CNPJ
		(cAlB22Dt)->LOJA := (cAlB22DQ)->LOJA
		(cAlB22Dt)->CFOP := (cAlB22DQ)->CFOP
		(cAlB22Dt)->CODPROD := (cAlB22DQ)->CODPROD
		(cAlB22Dt)->DESCPROD := (cAlB22DQ)->DESCPROD
		(cAlB22Dt)->QUANT := (cAlB22DQ)->QUANT
		(cAlB22Dt)->PRCUNIT := (cAlB22DQ)->PRCUNIT
		(cAlB22Dt)->VLCONT := (cAlB22DQ)->VLCONT
		(cAlB22Dt)->VLICMS := (cAlB22DQ)->VLICMS
	MSUNLOCK()	

	(cAlB22DQ)->(dbSkip())
EndDo
(cAlB22DQ)->(dbCloseArea())

//GERA INFORMAÇÕES RESUMIDAS
If Select(cAlB22Rs) > 0
	(cAlB22Rs)->(dbCloseArea())
Endif
cAlB22Rs:=GetNextAlias()

_aFields	:= CriaExtr(T22RVTRR)
_aIndex		:= CriaInd(T22RVTRR)
oAlB22Rs		:= CriaTmpT(cAlB22Rs, _aFields, _aIndex)

If Select(cAlB22RQ) > 0
	(cAlB22RQ)->(dbCloseArea())
Endif
cAlB22RQ:=GetNextAlias()

BeginSQL  Alias cAlB22RQ
	SELECT
		SFT.FT_FILIAL		AS FILIAL,
		SFT.FT_PRODUTO	AS CODPROD,
		SB1.B1_DESC		AS DESCPROD,
		SUM(SFT.FT_QUANT)		AS QUANT,
		SUM(SFT.FT_VALCONT)	AS VALCONT,
		SUM(SFT.FT_VALICM)	AS ICMSVAL
	FROM %TABLE:SFT% SFT (NOLOCK)
	LEFT JOIN %TABLE:SB1% SB1 (NOLOCK) ON
		SB1.B1_FILIAL = %xFilial:SB1%
		AND SB1.B1_COD = SFT.FT_PRODUTO
		AND SB1.%notDel%
	WHERE SFT.FT_FILIAL = %xFilial:SFT%
		AND SFT.FT_ENTRADA BETWEEN %Exp:DToS(_mvpr01)% AND %Exp:DToS(_mvpr02)%
		AND SFT.FT_CFOP IN %Exp:_cCFRvTr%
		AND SFT.FT_DTCANC = ''
		AND SFT.%notDel%
	GROUP BY SFT.FT_FILIAL, SFT.FT_PRODUTO, SB1.B1_DESC
EndSQL

DbSelectArea(cAlB22RQ)
(cAlB22RQ)->(dbGoTop())
while !(cAlB22RQ)->(eof())
	RECLOCK(cAlB22Rs,.T.)
		(cAlB22Rs)->FILIAL := (cAlB22RQ)->FILIAL
		(cAlB22Rs)->CODPROD := (cAlB22RQ)->CODPROD
		(cAlB22Rs)->DESCPROD := (cAlB22RQ)->DESCPROD
		(cAlB22Rs)->QUANT := (cAlB22RQ)->QUANT
		(cAlB22Rs)->VLCONT := (cAlB22RQ)->VALCONT
		(cAlB22Rs)->VLICMS := (cAlB22RQ)->ICMSVAL
	MSUNLOCK()	
	nR22ICMS += (cAlB22RQ)->ICMSVAL
	(cAlB22RQ)->(dbSkip())
EndDo
(cAlB22RQ)->(dbCloseArea())
(cAlB22Rs)->(dbGoTop())
//FreeObj(aBrw22Rs)
SysRefresh()

/*
	DbSelectArea(cAlB15Rs)
*/
Return

/*/{Protheus.doc} Static Function xRelBr22
	Gera Relatório Ref. Revenda Tributada
	@author Abel Babini Filho
	@since 19/11/2019
	@version 01
	/*/
	Static Function xRelBr22()
		Local aSays			:= {}
		Local aButtons		:= {}
		Local nOpca			:= 0
		//+-----------------------------------------------+
		//|Monta Form Batch - Interface com o Usuario     |
		//+-----------------------------------------------+
		AADD(aSays,"Este programa tem a finalidade de Gerar um arquivo Excel " )
		AADD(aSays,"Relatorio de Revenda Tributada" )
			
		AADD(aButtons, { 1,.T.,{|o| nOpca:=1, o:oWnd:End(), Processa({||xRelBr22b()},"Gerando arquivo","Aguarde...")    }})
		AADD(aButtons, { 2,.T.,{|o| nOpca:=2, o:oWnd:End() }})	
		FormBatch( cCadastr, aSays, aButtons )
		
		MsgInfo("Arquivo Excel gerado!")        
		
	Return
	
	/*/{Protheus.doc} Static Function xRelBr22b  
		Gera Relatório Ref. Revenda Tributada
		@author Abel Babini Filho
		@since 19/11/2019
		@version 01
		/*/
	Static Function xRelBr22b()
		Private oExcel     := FWMSEXCELEX():New()
		//Private cArquivo	:= cGetFile("Arquivo XML", "Selecione o diretório para salvar o relatório",,'C:\',.T.,GETF_RETDIRECTORY + GETF_LOCALHARD + GETF_NETWORKDRIVE)	
		Private oMsExcel   := NIL
		
		cArquivo := cPathRel +  'RREVTRIB_' + DTOS(DATE()) + STRTRAN(TIME(),':','') + '.XML'
		BEGIN SEQUENCE
			
			//IF .NOT.( ApOleClient("MsExcel") )   // se nao existir o excel sai fora..
			//		Alert("Nao Existe Excel Instalado")
			//				BREAK
			//EndIF
						
			//Planilha2 - Resumo
			Cab22P2()
			GEx22P2()

			//Planilha1 - Detalhamento
			Cab22P1()             
			GEx22P1()					
	
			SalvaXml()
			CriaExcel()
		
		END SEQUENCE
	
	Return
	
	/*/{Protheus.doc} Static Function Cab22P1  
		Gera Relatório Ref. Revenda Tributada
		@author Abel Babini Filho
		@since 19/11/2019
		@version 01
		/*/
	Static Function Cab22P1()
		oExcel:AddworkSheet(cFld221)
		oExcel:AddTable(cFld221,cFld22t1)
		oExcel:AddColumn(cFld221,cFld22t1,"Filial",1,1)
		oExcel:AddColumn(cFld221,cFld22t1,"Dt.Entrada",1,1)
		oExcel:AddColumn(cFld221,cFld22t1,"Dt.Emissão",1,1)
		oExcel:AddColumn(cFld221,cFld22t1,"Série",1,1)
		oExcel:AddColumn(cFld221,cFld22t1,"Nota Fiscal",1,1)
		oExcel:AddColumn(cFld221,cFld22t1,"Item",1,1)
		oExcel:AddColumn(cFld221,cFld22t1,"Cod.Cliente",1,1)
		oExcel:AddColumn(cFld221,cFld22t1,"Loja Cliente",1,1)
		oExcel:AddColumn(cFld221,cFld22t1,"Cliente",1,1)
		oExcel:AddColumn(cFld221,cFld22t1,"CNPJ",1,1)
		oExcel:AddColumn(cFld221,cFld22t1,"CFOP",1,1)
		oExcel:AddColumn(cFld221,cFld22t1,"Cod. Produto",1,1)
		oExcel:AddColumn(cFld221,cFld22t1,"Produto",1,1)
		oExcel:AddColumn(cFld221,cFld22t1,"Quant.",2,2)
		oExcel:AddColumn(cFld221,cFld22t1,"Preço Unit.",2,3)
		oExcel:AddColumn(cFld221,cFld22t1,"Vl. Contábil",2,3)
		oExcel:AddColumn(cFld221,cFld22t1,"Vl. ICMS",2,3)
		
	RETURN(NIL)  
	
	/*/{Protheus.doc} Static Function GEx22P1
		Gera Relatório Ref. Revenda Tributada
		@author Abel Babini Filho
		@since 19/11/2019
		@version 01
		/*/
Static Function GEx22P1()
	//
	(cAlB22Dt)->(dbGoTop())
	While !(cAlB22Dt)->(Eof())
		oExcel:AddRow(cFld221,cFld22t1,{(cAlB22Dt)->FILIAL,;
																		(cAlB22Dt)->DTENTRADA,;
																		(cAlB22Dt)->DTEMISSAO,;
																		(cAlB22Dt)->NFSERIE,;
																		(cAlB22Dt)->NF,;
																		(cAlB22Dt)->NFITEM,;
																		(cAlB22Dt)->CLIEFOR,;
																		(cAlB22Dt)->LOJA,;
																		(cAlB22Dt)->NOME,;
																		(cAlB22Dt)->CNPJ,;
																		(cAlB22Dt)->CFOP,;
																		(cAlB22Dt)->CODPROD,;
																		(cAlB22Dt)->DESCPROD,;
																		(cAlB22Dt)->QUANT,;
																		(cAlB22Dt)->PRCUNIT,;
																		(cAlB22Dt)->VLCONT,;
																		(cAlB22Dt)->VLICMS})

		(cAlB22Dt)->(dbSkip())
	ENDDO
	oExcel:AddRow(cFld221,cFld22t1,{"","","","","","","","","","","","","","","","",""})
Return

	/*/{Protheus.doc} Static Function Cab22P2
		Gera Relatório Ref. Revenda Tributada
		@author Abel Babini Filho
		@since 19/11/2019
		@version 01
		/*/
	Static Function Cab22P2()
		oExcel:AddworkSheet(cFld222)
		oExcel:AddTable(cFld222,cFld22t2)
		oExcel:AddColumn(cFld222,cFld22t2,"Produto",1,1)
		oExcel:AddColumn(cFld222,cFld22t2,"Quant.",2,2,.t.)
		oExcel:AddColumn(cFld222,cFld22t2,"Vl. Contábil",2,3,.t.)
		oExcel:AddColumn(cFld222,cFld22t2,"Vl. ICMS",2,3,.t.)
		
	RETURN(NIL)  

	/*/{Protheus.doc} Static Function GEx22P2
		Gera Relatório Ref. Revenda Tributada
		@author Abel Babini Filho
		@since 19/11/2019
		@version 01
		/*/
Static Function GEx22P2()
	Local pAux	:= ''
	Local pTot1	:= 0
	Local pTot2	:= 0
	Local pTot3	:= 0
	(cAlB22Dt)->(dbGoTop())
	While !(cAlB22Dt)->(Eof())
		IF pAux != Alltrim((cAlB22Dt)->CODPROD) .AND. pAux != ''
			oExcel:AddRow(cFld222,cFld22t2,{pAux,;
																			pTot1,;
																			pTot2,;
																			pTot3})
			pTot1	:= 0
			pTot2	:= 0
			pTot3	:= 0																	
		ENDIF
		pTot1	+= (cAlB22Dt)->QUANT
		pTot2	+= (cAlB22Dt)->VLCONT
		pTot3	+= (cAlB22Dt)->VLICMS
		pAux := Alltrim((cAlB22Dt)->CODPROD) +' '+ Alltrim((cAlB22Dt)->DESCPROD)
		(cAlB22Dt)->(dbSkip())
	ENDDO
	IF pAux != ''
		oExcel:AddRow(cFld222,cFld22t2,{pAux,;
																		pTot1,;
																		pTot2,;
																		pTot3})
	ENDIF
	oExcel:AddRow(cFld222,cFld22t2,{"","","",""})
Return

//FIM Chamado n.050629 - OS n. 054855 - Relatório Revenda Tributada - Abel Babini  - 19/11/2019

//INICIO Chamado n.050629 - OS n. 055359 - Relatório Difal Nao Contribuinte - Abel Babini  - 06/01/2020
/*/{Protheus.doc} Static Function xABrw06
	Relatório Difal Não Contribuinte
	@type  Static Function
	@author Abel Babini Filho
	@since 09/12/2019
	@version 1
	/*/
Static Function xABrw06()
	Local nVlICMS 	:= 0
	Local nVlDifal 	:= 0
	Local _aFields 	:= {}
	Local nValOrig	:= 0
	Local nValDest	:= 0
	Local aRecRt06	:= {}
	//Recupera imformações salvas da versão anterior se existir, caso contrário inicializa os valores com de % origem e % destino 1 e 0 respectivamente
	aRecRt06	:= xRecRt06()
	cMV06T01	:= aRecRt06[1]
	nA06T01		:= aRecRt06[2]
	nA06T02		:= aRecRt06[3]
	
	//GERA INFORMAÇÕES DETALHADAS
	If Select(cAlB06Dt) > 0
		(cAlB06Dt)->(dbCloseArea())
	Endif
	cAlB06Dt:=GetNextAlias()

	_aFields	:= CriaExtr(T06DIFNA)
	_aIndex		:= CriaInd(T06DIFNA)
	oAlB22Dt	:= CriaTmpT(cAlB06Dt, _aFields, _aIndex)

	If Select(cAlB06DQ) > 0
		(cAlB06DQ)->(dbCloseArea())
	Endif
	cAlB06DQ:=GetNextAlias()
	
	BeginSQL Alias cAlB06DQ
		column DTENTRADA as Date
		column DTEMISSAO as Date
		SELECT
			SFT.FT_FILIAL		AS FILIAL,
			SFT.FT_ENTRADA	AS DTENTRADA,
			SFT.FT_EMISSAO	AS DTEMISSAO,
			SFT.FT_SERIE		AS NFSERIE,
			SFT.FT_NFISCAL	AS NF,
			SFT.FT_ITEM			AS NFITEM,
			SFT.FT_CLIEFOR	AS CLIEFOR,
			SFT.FT_LOJA			AS LOJA,
			SFT.FT_ESTADO 	AS ESTADO,
			SA1.A1_NOME			AS NOME,
			SA1.A1_CGC 			AS CNPJ,
			SA1.A1_INSCR		AS INSCR,
			SA1.A1_CONTRIB	AS CONTRIB,
			SFT.FT_PRODUTO	AS CODPROD,
			SB1.B1_DESC			AS DESCPROD,
			SFT.FT_CFOP 		AS CFOP,
			SFT.FT_QUANT		AS QUANT,
			SFT.FT_PRCUNIT	AS PRCUNIT,
			SFT.FT_VALCONT	AS VLCONT,
			SFT.FT_BASEICM	AS BSICMS,
			SFT.FT_VALICM		AS VLICMS,
			SFT.FT_ALIQICM  AS ALIQICMS,
			SFT.R_E_C_N_O_ AS R_E_C_N_O_
		FROM %TABLE:SFT% SFT (NOLOCK)
		LEFT JOIN %TABLE:SB1% SB1 (NOLOCK) ON
			SB1.B1_FILIAL = %xFilial:SB1%
			AND SB1.B1_COD = SFT.FT_PRODUTO
			AND SB1.%notDel%
		LEFT JOIN %TABLE:SA1% SA1 (NOLOCK) ON
			SA1.A1_FILIAL = %xFilial:SA1%
			AND SA1.A1_COD = SFT.FT_CLIEFOR
			AND SA1.A1_LOJA = SFT.FT_LOJA
			AND ( (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO IN ('D','B') ) )
			AND SA1.%notDel%
		WHERE SFT.FT_FILIAL = %xFilial:SFT%
			AND SFT.FT_ENTRADA BETWEEN %Exp:DToS(_mvpr01)% AND %Exp:DToS(_mvpr02)%
			AND (SA1.A1_CONTRIB <> '1')
			AND SFT.FT_CFOP >'6000'
			AND SFT.FT_CFOP <'7000'
			AND ( (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO IN ('D','B') ) )
			AND SFT.FT_DTCANC = ''
			AND SFT.FT_CFOP IN %Exp:_cCFDFNC%
			AND SFT.%notDel%			
	EndSQL

	nPerIcm1:=Val(Subs(GetMV("MV_ESTICM"),AT(ALLTRIM(SM0->M0_ESTCOB),GetMV("MV_ESTICM"))+2,2))/100 ////Ticket 3035                    - Abel Babini - 16/09/2020 - Painel Fiscal. Ajuste no calculo Difal não contribuinte.
	DbSelectArea(cAlB06DQ)
	(cAlB06DQ)->(dbGoTop())
	while !(cAlB06DQ)->(eof())
		//Ticket 3035                    - Abel Babini - 16/09/2020 - Painel Fiscal. Ajuste no calculo Difal não contribuinte.
		// nPerIcm2	:=Val(Subs(GetMV("MV_ESTICM"),AT(ALLTRIM((cAlB06DQ)->ESTADO),GetMV("MV_ESTICM"))+2,2))
		nPerIcm2	:=(cAlB06DQ)->ALIQICMS/100 ////Ticket 3035                    - Abel Babini - 16/09/2020 - Painel Fiscal. Ajuste no calculo Difal não contribuinte.
		nVlICMS		:= Round((cAlB06DQ)->BSICMS * nPerIcm2,2)
		nVlDifal 	:= Round((cAlB06DQ)->BSICMS * nPerIcm1,2) - nVlICMS
		nValOrig	:= Round(nVlDifal*nA06T02,2)
		nValDest	:= nVlDifal - nValOrig
		If nVlDifal > 0 
			nA06T04	+= nValOrig		//Ticket 3035                    - Abel Babini - 09/10/2020 - Painel Fiscal - Acerto relatório Difal Não contribuinte
			nA06T03 += nVlDifal
			RECLOCK(cAlB06Dt,.T.)
				(cAlB06Dt)->FILIAL := (cAlB06DQ)->FILIAL
				(cAlB06Dt)->DTENTRADA := (cAlB06DQ)->DTENTRADA
				(cAlB06Dt)->DTEMISSAO := (cAlB06DQ)->DTEMISSAO
				(cAlB06Dt)->NFSERIE := (cAlB06DQ)->NFSERIE
				(cAlB06Dt)->NF := (cAlB06DQ)->NF
				(cAlB06Dt)->NFITEM := (cAlB06DQ)->NFITEM
				(cAlB06Dt)->CLIEFOR := (cAlB06DQ)->CLIEFOR
				(cAlB06Dt)->LOJA := (cAlB06DQ)->LOJA
				(cAlB06Dt)->NOME := (cAlB06DQ)->NOME
				(cAlB06Dt)->ESTADO := (cAlB06DQ)->ESTADO
				(cAlB06Dt)->CNPJ := (cAlB06DQ)->CNPJ
				(cAlB06Dt)->CFOP := (cAlB06DQ)->CFOP
				(cAlB06Dt)->CODPROD := (cAlB06DQ)->CODPROD
				(cAlB06Dt)->DESCPROD := (cAlB06DQ)->DESCPROD
				(cAlB06Dt)->QUANT := (cAlB06DQ)->QUANT
				(cAlB06Dt)->PRCUNIT := (cAlB06DQ)->PRCUNIT
				(cAlB06Dt)->VLCONT := (cAlB06DQ)->VLCONT
				(cAlB06Dt)->BSICMS := (cAlB06DQ)->BSICMS
				(cAlB06Dt)->VLICMS := nVlICMS
				(cAlB06Dt)->ALIQINT := nPerIcm1
				(cAlB06Dt)->ALIQDEST := nPerIcm2	
				(cAlB06Dt)->DIFAL	:= nVlDifal
				(cAlB06Dt)->UFDEST	:= nValDest
				(cAlB06Dt)->UFORIG	:= nValOrig
			MSUNLOCK()
		ENDIF
		(cAlB06DQ)->(dbSkip())
	EndDo
	(cAlB06DQ)->(dbCloseArea())

	(cAlB06Dt)->(dbGoTop())
//*************************************************************************
	//GERA INFORMAÇÕES DE CONFERÊNCIA DOS CLIENTES - CONTRIBUINTE / NAO CONTRIBUINTE
	//GERA INFORMAÇÕES DETALHADAS
	
	If Select(cAlB06Cf) > 0
		(cAlB06Cf)->(dbCloseArea())
	Endif
	cAlB06Cf:=GetNextAlias()

	_aFields	:= CriaExtr(T06CFNCT)
	_aIndex		:= CriaInd(T06CFNCT)
	oAlB22Dt	:= CriaTmpT(cAlB06Cf, _aFields, _aIndex)

	If Select(cAlB06DC) > 0
		(cAlB06DC)->(dbCloseArea())
	Endif
	cAlB06DC:=GetNextAlias()

	BeginSQL Alias cAlB06DC
		column DTENTRADA as Date
		column DTEMISSAO as Date
		SELECT
			SFT.FT_FILIAL		AS FILIAL,
			SFT.FT_ENTRADA	AS DTENTRADA,
			SFT.FT_EMISSAO	AS DTEMISSAO,
			SFT.FT_SERIE		AS NFSERIE,
			SFT.FT_NFISCAL	AS NF,
			SFT.FT_ITEM			AS NFITEM,
			SFT.FT_CLIEFOR	AS CLIEFOR,
			SFT.FT_LOJA			AS LOJA,
			SFT.FT_ESTADO 	AS ESTADO,
			SA1.A1_NOME			AS NOME,
			SA1.A1_CGC 			AS CNPJ,
			SA1.A1_INSCR		AS INSCR,
			SA1.A1_CONTRIB	AS CONTRIB,
			SFT.FT_PRODUTO	AS CODPROD,
			SB1.B1_DESC			AS DESCPROD,
			SFT.FT_CFOP 		AS CFOP,
			SFT.FT_QUANT		AS QUANT,
			SFT.FT_PRCUNIT	AS PRCUNIT,
			SFT.FT_VALCONT	AS VLCONT,
			SFT.FT_BASEICM	AS BSICMS,
			SFT.FT_VALICM		AS VLICMS
		FROM %TABLE:SFT% SFT (NOLOCK)
		LEFT JOIN %TABLE:SB1% SB1 (NOLOCK) ON
			SB1.B1_FILIAL = %xFilial:SB1%
			AND SB1.B1_COD = SFT.FT_PRODUTO
			AND SB1.%notDel%
		LEFT JOIN %TABLE:SA1% SA1 (NOLOCK) ON
			SA1.A1_FILIAL = %xFilial:SA1%
			AND SA1.A1_COD = SFT.FT_CLIEFOR
			AND SA1.A1_LOJA = SFT.FT_LOJA
			AND ( (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO IN ('D','B') ) )
			AND SA1.%notDel%
		WHERE SFT.FT_FILIAL = %xFilial:SFT%
			AND SFT.FT_ENTRADA BETWEEN %Exp:DToS(_mvpr01)% AND %Exp:DToS(_mvpr02)%
			AND (SA1.A1_CONTRIB <> '1')
			AND SA1.A1_INSCR = 'ISENTO'
			AND ( (SFT.FT_TIPOMOV = 'S' AND SFT.FT_TIPO NOT IN ('D','B') ) OR (SFT.FT_TIPOMOV = 'E' AND SFT.FT_TIPO IN ('D','B') ) )
			AND SFT.FT_DTCANC = ''
			AND SFT.FT_VALICM	> 0
			AND Substring(SFT.FT_CFOP,1,1) = '6'
			AND SFT.FT_CFOP IN %Exp:_cCFDFNC%
			AND SFT.%notDel%
	EndSQL

	DbSelectArea(cAlB06DC)
	(cAlB06DC)->(dbGoTop())
	while !(cAlB06DC)->(eof())
		//If nVlDifal > 0 
			RECLOCK(cAlB06Cf,.T.)
				(cAlB06Cf)->FILIAL := (cAlB06DC)->FILIAL
				(cAlB06Cf)->DTENTRADA := (cAlB06DC)->DTENTRADA
				(cAlB06Cf)->DTEMISSAO := (cAlB06DC)->DTEMISSAO
				(cAlB06Cf)->NFSERIE := (cAlB06DC)->NFSERIE
				(cAlB06Cf)->NF := (cAlB06DC)->NF
				(cAlB06Cf)->NFITEM := (cAlB06DC)->NFITEM
				(cAlB06Cf)->CLIEFOR := (cAlB06DC)->CLIEFOR
				(cAlB06Cf)->LOJA := (cAlB06DC)->LOJA
				(cAlB06Cf)->NOME := (cAlB06DC)->NOME
				(cAlB06Cf)->ESTADO := (cAlB06DC)->ESTADO
				(cAlB06Cf)->CNPJ := (cAlB06DC)->CNPJ
				(cAlB06Cf)->CFOP := (cAlB06DC)->CFOP
				(cAlB06Cf)->CODPROD := (cAlB06DC)->CODPROD
				(cAlB06Cf)->DESCPROD := (cAlB06DC)->DESCPROD
				(cAlB06Cf)->QUANT := (cAlB06DC)->QUANT
				(cAlB06Cf)->PRCUNIT := (cAlB06DC)->PRCUNIT
				(cAlB06Cf)->VLCONT := (cAlB06DC)->VLCONT
				(cAlB06Cf)->BSICMS := (cAlB06DC)->BSICMS
			MSUNLOCK()
		//ENDIF
		(cAlB06DC)->(dbSkip())
	EndDo
	(cAlB06DC)->(dbCloseArea())

	(cAlB06Cf)->(dbGoTop())
//*************************************************************************

	//FreeObj(aBrw22Rs)
	SysRefresh()

Return

/*/{Protheus.doc} Static Function xRelBr06
	Gera Relatório Ref. Difal Não Contribuinte
	@author Abel Babini Filho
	@since 09/12/2019
	@version 01
	/*/
	Static Function xRelBr06()
		Local aSays			:= {}
		Local aButtons		:= {}
		Local nOpca			:= 0
		//+-----------------------------------------------+
		//|Monta Form Batch - Interface com o Usuario     |
		//+-----------------------------------------------+
		AADD(aSays,"Este programa tem a finalidade de Gerar um arquivo Excel " )
		AADD(aSays,"Relatorio Difal Não Contribuinte" )
			
		AADD(aButtons, { 1,.T.,{|o| nOpca:=1, o:oWnd:End(), Processa({||xRelBr06b()},"Gerando arquivo","Aguarde...")    }})
		AADD(aButtons, { 2,.T.,{|o| nOpca:=2, o:oWnd:End() }})	
		FormBatch( cCadastr, aSays, aButtons )
		
		MsgInfo("Arquivo Excel gerado!")        
		
	Return
	
	/*/{Protheus.doc} Static Function xRelBr06b  
		Gera Relatório Ref. Difal Não Contribuinte
		@author Abel Babini Filho
		@since 09/12/2019
		@version 01
		/*/
	Static Function xRelBr06b()
		Private oExcel     := FWMSEXCELEX():New()
		//Private cArquivo	:= cGetFile("Arquivo XML", "Selecione o diretório para salvar o relatório",,'C:\',.T.,GETF_RETDIRECTORY + GETF_LOCALHARD + GETF_NETWORKDRIVE)	
		Private oMsExcel   := NIL
		
		cArquivo := cPathRel +  'RDIFALNAOC_' + DTOS(DATE()) + STRTRAN(TIME(),':','') + '.XML'
		BEGIN SEQUENCE
			
			//IF .NOT.( ApOleClient("MsExcel") )   // se nao existir o excel sai fora..
			//		Alert("Nao Existe Excel Instalado")
			//				BREAK
			//EndIF
						
			//Planilha1 - Resumo
			Cab06P1()             
			GEx06P1()
					
			//Planilha2 - Detalhamento
			Cab06P2()
			GEx06P2()
	
			SalvaXml()
			CriaExcel()
		
		END SEQUENCE
	
	Return
	
	/*/{Protheus.doc} Static Function Cab06P1  
		Gera Relatório Ref. Difal Não Contribuinte
		@author Abel Babini Filho
		@since 09/12/2019
		@version 01
		/*/
	Static Function Cab06P1()
		oExcel:AddworkSheet(cFld061)
		oExcel:AddTable(cFld061,cFld06t1)
		oExcel:AddColumn(cFld061,cFld06t1,"Filial",1,1)
		oExcel:AddColumn(cFld061,cFld06t1,"Dt.Entrada",1,1)
		oExcel:AddColumn(cFld061,cFld06t1,"Dt.Emissão",1,1)
		oExcel:AddColumn(cFld061,cFld06t1,"Série",1,1)
		oExcel:AddColumn(cFld061,cFld06t1,"Nota Fiscal",1,1)
		oExcel:AddColumn(cFld061,cFld06t1,"Item",1,1)
		oExcel:AddColumn(cFld061,cFld06t1,"Cod.Cliente",1,1)
		oExcel:AddColumn(cFld061,cFld06t1,"Loja Cliente",1,1)
		oExcel:AddColumn(cFld061,cFld06t1,"Cliente",1,1)
		oExcel:AddColumn(cFld061,cFld06t1,"Estado",1,1)
		oExcel:AddColumn(cFld061,cFld06t1,"CNPJ",1,1)
		oExcel:AddColumn(cFld061,cFld06t1,"CFOP",1,1)
		oExcel:AddColumn(cFld061,cFld06t1,"Cod. Produto",1,1)
		oExcel:AddColumn(cFld061,cFld06t1,"Produto",1,1)
		oExcel:AddColumn(cFld061,cFld06t1,"Quant.",2,2)
		oExcel:AddColumn(cFld061,cFld06t1,"Preço Unit.",2,3)
		oExcel:AddColumn(cFld061,cFld06t1,"Vl. Contábil",2,3)
		oExcel:AddColumn(cFld061,cFld06t1,"Base ICMS",2,3)
		oExcel:AddColumn(cFld061,cFld06t1,"Vl. ICMS",2,3)
		oExcel:AddColumn(cFld061,cFld06t1,"Alq. Interna",2,3)
		oExcel:AddColumn(cFld061,cFld06t1,"Alq. Destino",2,3)
		oExcel:AddColumn(cFld061,cFld06t1,"Vl. DIFAL",2,3)
		oExcel:AddColumn(cFld061,cFld06t1,"Vl. UF Destino",2,3)
		oExcel:AddColumn(cFld061,cFld06t1,"Vl. UF Origem",2,3)
	RETURN(NIL)  
	
/*/{Protheus.doc} Static Function GEx06P1
	Gera Relatório Ref. Difal Não Contribuinte
	@author Abel Babini Filho
	@since 09/12/2019
	@version 01
/*/
Static Function GEx06P1()
	//
	(cAlB06Dt)->(dbGoTop())
	While !(cAlB06Dt)->(Eof())
		oExcel:AddRow(cFld061,cFld06t1,{(cAlB06Dt)->FILIAL,;
																		(cAlB06Dt)->DTENTRADA,;
																		(cAlB06Dt)->DTEMISSAO,;
																		(cAlB06Dt)->NFSERIE,;
																		(cAlB06Dt)->NF,;
																		(cAlB06Dt)->NFITEM,;
																		(cAlB06Dt)->CLIEFOR,;
																		(cAlB06Dt)->LOJA,;
																		(cAlB06Dt)->NOME,;
																		(cAlB06Dt)->ESTADO,;
																		(cAlB06Dt)->CNPJ,;
																		(cAlB06Dt)->CFOP,;
																		(cAlB06Dt)->CODPROD,;
																		(cAlB06Dt)->DESCPROD,;
																		(cAlB06Dt)->QUANT,;
																		(cAlB06Dt)->PRCUNIT,;
																		(cAlB06Dt)->VLCONT,;
																		(cAlB06Dt)->BSICMS,;
																		(cAlB06Dt)->VLICMS,;
																		(cAlB06Dt)->ALIQINT,;
																		(cAlB06Dt)->ALIQDEST,;
																		(cAlB06Dt)->DIFAL,;
																		(cAlB06Dt)->UFDEST,;
																		(cAlB06Dt)->UFORIG})																
		(cAlB06Dt)->(dbSkip())
	ENDDO
	(cAlB06Dt)->(dbGoTop())
	oExcel:AddRow(cFld061,cFld06t1,{"","","","","","","","","","","","","","","","","","","","","","","",""})
Return

/*/{Protheus.doc} Static Function Cab06P2 
	Gera Relatório Ref. Difal Não Contribuinte
	@author Abel Babini Filho
	@since 06/01/2020
	@version 01
	/*/
Static Function Cab06P2()
	oExcel:AddworkSheet(cFld062)
	oExcel:AddTable(cFld062,cFld06t2)
	oExcel:AddColumn(cFld062,cFld06t2,"Filial",1,1)
	oExcel:AddColumn(cFld062,cFld06t2,"Dt.Entrada",1,1)
	oExcel:AddColumn(cFld062,cFld06t2,"Dt.Emissão",1,1)
	oExcel:AddColumn(cFld062,cFld06t2,"Série",1,1)
	oExcel:AddColumn(cFld062,cFld06t2,"Nota Fiscal",1,1)
	oExcel:AddColumn(cFld062,cFld06t2,"Item",1,1)
	oExcel:AddColumn(cFld062,cFld06t2,"Cod.Cliente",1,1)
	oExcel:AddColumn(cFld062,cFld06t2,"Loja Cliente",1,1)
	oExcel:AddColumn(cFld062,cFld06t2,"Cliente",1,1)
	oExcel:AddColumn(cFld062,cFld06t2,"Estado",1,1)
	oExcel:AddColumn(cFld062,cFld06t2,"CNPJ",1,1)
	oExcel:AddColumn(cFld062,cFld06t2,"CFOP",1,1)
	oExcel:AddColumn(cFld062,cFld06t2,"Cod. Produto",1,1)
	oExcel:AddColumn(cFld062,cFld06t2,"Produto",1,1)
	oExcel:AddColumn(cFld062,cFld06t2,"Quant.",2,2)
	oExcel:AddColumn(cFld062,cFld06t2,"Preço Unit.",2,3)
	oExcel:AddColumn(cFld062,cFld06t2,"Vl. Contábil",2,3)
	oExcel:AddColumn(cFld062,cFld06t2,"Base ICMS",2,3)
RETURN(NIL)  

/*/{Protheus.doc} Static Function GEx06P2
	Gera Relatório Ref. Difal Não Contribuinte
	@author Abel Babini Filho
	@since 06/01/2020
	@version 01
/*/
Static Function GEx06P2()
	//
	(cAlB06Cf)->(dbGoTop())
	While !(cAlB06Cf)->(Eof())
		oExcel:AddRow(cFld062,cFld06t2,{(cAlB06Cf)->FILIAL,;
																		(cAlB06Cf)->DTENTRADA,;
																		(cAlB06Cf)->DTEMISSAO,;
																		(cAlB06Cf)->NFSERIE,;
																		(cAlB06Cf)->NF,;
																		(cAlB06Cf)->NFITEM,;
																		(cAlB06Cf)->CLIEFOR,;
																		(cAlB06Cf)->LOJA,;
																		(cAlB06Cf)->NOME,;
																		(cAlB06Cf)->ESTADO,;
																		(cAlB06Cf)->CNPJ,;
																		(cAlB06Cf)->CFOP,;
																		(cAlB06Cf)->CODPROD,;
																		(cAlB06Cf)->DESCPROD,;
																		(cAlB06Cf)->QUANT,;
																		(cAlB06Cf)->PRCUNIT,;
																		(cAlB06Cf)->VLCONT,;
																		(cAlB06Cf)->BSICMS})
		(cAlB06Cf)->(dbSkip())
	ENDDO
	(cAlB06Cf)->(dbGoTop())
	oExcel:AddRow(cFld062,cFld06t2,{"","","","","","","","","","","","","","","","","",""})
Return
/*/{Protheus.doc} Static Function xRecRt06
	Recupera % Rateio Ref. Difal Não Contribuinte
	@author Abel Babini Filho
	@since 09/12/2019
	@version 01
/*/
Static Function xRecRt06
	Local cVerAnt		:= ''
	Local nPerDest	:= 1
	Local nPerOrig	:= 0
	//Verifica a última versão do período atual
	cVerAnt := xRecVer('06')

	IF cVerAnt == ''
		//cMV06T01 := '001'
		nPerDest	:= 1	//% Destino
		nPerOrig	:= 0	//% Origem
	ELSE
		If Select(cAlB00Fc) > 0
			(cAlB00Fc)->(dbCloseArea())
		Endif
		cAlB00Fc:=GetNextAlias()
		
		BeginSQL Alias cAlB00Fc
			SELECT
				ZFU.ZFU_FILIAL	AS FILIAL,
				ZFU.ZFU_TABELA	AS TABELA,
				ZFU.ZFU_CHAVE		AS CHAVE,
				ZFU.ZFU_PERIOD	AS PERIODO,
				ZFU.ZFU_VERSAO	AS VERSAO,
				ZFU.ZFU_USUARI	AS USUARIO,
				ZFU.ZFU_DTGRV		AS DATAGRV,
				ZFU.ZFU_STATUS	AS STATUS,
				ZFU.ZFU_VALOR		AS VALOR
			FROM %TABLE:ZFU% ZFU (NOLOCK)
			WHERE ZFU.ZFU_FILIAL = %xFilial:ZFU%
				AND ZFU.ZFU_PERIOD = %Exp:_cAnoI+_cMesI%
				AND ZFU.ZFU_VERSAO = %Exp:cVerAnt%
				AND ZFU.%notDel%			
		EndSQL
				//AND ZFU.ZFU_VERSAO = %Exp:cMV06T01%
		DbSelectArea(cAlB00Fc)
		(cAlB00Fc)->(dbGoTop())
		while !(cAlB00Fc)->(eof())
	
			//ABA 06 - 
			IF (cAlB00Fc)->TABELA == '06'
				IF (cAlB00Fc)->CHAVE == '006000100'
					nPerDest := (cAlB00Fc)->VALOR
				ELSEIF (cAlB00Fc)->CHAVE == '006000110'
					nPerOrig := (cAlB00Fc)->VALOR
				ENDIF
			ENDIF
	
			(cAlB00Fc)->(dbSkip())
		EndDo
	
		(cAlB00Fc)->(dbCloseArea())
	ENDIF

Return ({cVerAnt,nPerDest,nPerOrig})

/*/{Protheus.doc} Static Function xPrcRt06
	Processa % Rateio Ref. Difal Não Contribuinte
	@author Abel Babini Filho
	@since 09/12/2019
	@version 01
/*/
Static Function xPrcRt06
	Local cNewVers := StrZero(Val(IIF(cMV06T01=='','001',cMV06T01))+1,3)
	Local nValOrig	:= 0
	Local nValDest	:= 0
	Local aRecRt06	:= {}
	Local cVerAnt
	Local nPerAnD
	Local nPerAnO
	//Recupera imformações salvas da versão anterior se existir, caso contrário inicializa os valores com de % origem e % destino 1 e 0 respectivamente
	aRecRt06	:= xRecRt06()
	cVerAnt		:= aRecRt06[1]
	nPerAnD		:= aRecRt06[2]
	nPerAnO		:= aRecRt06[3]
	//Verifica se os % atuais são diferentes dos % da última versão. Em caso afirmativo, grava uma nova versão, e muda o status da versão anterior
	IF (nA06T01 <> nPerAnD) .OR. (nA06T02 <> nPerAnO)

		//Grava uma nova versão
		dbSelectArea('ZFU')
		RECLOCK('ZFU',.T.)
			ZFU->ZFU_FILIAL	:= xFilial()
			ZFU->ZFU_PERIOD	:= _cAnoI+_cMesI
			ZFU->ZFU_VERSAO	:= cNewVers
			ZFU->ZFU_DTGRV	:= dDATABASE
			ZFU->ZFU_TABELA	:= '06'
			ZFU->ZFU_CHAVE	:= C06100
			ZFU->ZFU_USUARI	:= _cNomUse
			ZFU->ZFU_STATUS	:= '1' //1-Aberto | 2-Fechado e Exportado | 3-Cancelado
			ZFU->ZFU_VALOR	:= nA06T01
		MSUNLOCK()
	
		RECLOCK('ZFU',.T.)
			ZFU->ZFU_FILIAL	:= xFilial()
			ZFU->ZFU_PERIOD	:= _cAnoI+_cMesI
			ZFU->ZFU_VERSAO	:= cNewVers
			ZFU->ZFU_DTGRV	:= dDATABASE
			ZFU->ZFU_TABELA	:= '06'
			ZFU->ZFU_CHAVE	:= C06110
			ZFU->ZFU_USUARI	:= _cNomUse
			ZFU->ZFU_STATUS	:= '1' //1-Aberto | 2-Fechado e Exportado | 3-Cancelado
			ZFU->ZFU_VALOR	:= nA06T02
		MSUNLOCK()
	
		//Muda status da versão anterior
		If ZFU->(dbSeek(xFilial('ZFU')+_cAnoI+_cMesI+cMV06T01+'06')) //+C06100
			While !ZFU->(eof()) .AND. ;
						ZFU->FILIAL == xFilial('ZFU') .AND. ;
						ZFU->ZFU_PERIOD == _cAnoI+_cMesI .AND. ;
						ZFU->ZFU_VERSAO == cMV06T01 .AND. ;
						ZFU->TABELA == '06'
				
				IF ZFU->STATUS <> '3'
					RECLOCK('ZFU',.F.)
						ZFU->STATUS := '3'
					MSUNLOCK()
				ENDIF
				ZFU->(dbSkip())
			EndDo
		Endif

		//Calcula novos valores do Browser / Relatorio
		(cAlB06Dt)->(dbGoTop())
		While !(cAlB06Dt)->(eof())
			nValOrig	:= Round((cAlB06Dt)->DIFAL*nA06T02,2)
			nValDest	:= (cAlB06Dt)->DIFAL - nValOrig
			RECLOCK(cAlB06Dt,.F.)
				(cAlB06Dt)->UFDEST	:= nValDest
				(cAlB06Dt)->UFORIG	:= nValOrig
			MSUNLOCK()

			(cAlB06Dt)->(dbSkip())
		EndDo
		(cAlB06Dt)->(dbGoTop())
	ENDIF

Return
//FIM Chamado n.050629 - OS n. 055359 - Relatório Difal Nao Contribuinte - Abel Babini  - 06/01/2020

/*/{Protheus.doc} Static Function xSldFcht()
	Função que Retorna se o período já foi fechado com as informações do Fechamento
	@type Static Function
	@author Abel Babini
	@since 21/01/2020
	/*/
Static Function xSldFcht()
	Local cVerAnt		:= ''
	Local lFechado	:= .F.
	Local nSldMAnt	:= 0
	Local nSldMAtu	:= 0
	Local nAprCrAc	:= 0
	Local nVEstDeb	:= 0
	Local cDEstDev	:= space(80)
	Local nVOutDeb	:= 0
	Local cDOutDev	:= space(80)
	Local nVEstCre	:= 0
	Local cDEstCre	:= space(80)
	Local nVOutCre	:= 0
	Local cDOutCre	:= space(80)
	Local nSolDGCA	:= 0
	Local nAprAcOD	:= 0
	Local nAprAcOC	:= 0
	//Verifica a última versão do período atual
	cVerAnt := xRecVer('05')

	IF cVerAnt == ''
		cVerAnt := '001'
	ELSE
		If Select(cAlB00Fc) > 0
			(cAlB00Fc)->(dbCloseArea())
		Endif
		cAlB00Fc:=GetNextAlias()
		
		BeginSQL Alias cAlB00Fc
			SELECT
				ZFU.ZFU_FILIAL	AS FILIAL,
				ZFU.ZFU_TABELA	AS TABELA,
				ZFU.ZFU_CHAVE		AS CHAVE,
				ZFU.ZFU_PERIOD	AS PERIODO,
				ZFU.ZFU_VERSAO	AS VERSAO,
				ZFU.ZFU_USUARI	AS USUARIO,
				ZFU.ZFU_DTGRV	AS DATAGRV,
				ZFU.ZFU_STATUS	AS STATUS,
				ZFU.ZFU_KEYDOC	AS KEYDOC,
				ZFU.ZFU_VALOR		AS VALOR
			FROM %TABLE:ZFU% ZFU (NOLOCK)
			WHERE ZFU.ZFU_FILIAL = %xFilial:ZFU%
				AND ZFU.ZFU_PERIOD = %Exp:_cAnoI+_cMesI%
				AND ZFU.ZFU_TABELA = '05'
				AND ZFU.ZFU_VERSAO = %Exp:cVerAnt%
				AND ZFU.ZFU_STATUS = '2'
				AND ZFU.%notDel%			
		EndSQL
	
		DbSelectArea(cAlB00Fc)
		(cAlB00Fc)->(dbGoTop())
		while !(cAlB00Fc)->(eof())
			//ABA 05 - 
			//#DEFINE C05100		'005000100' //SALDO MES ANTERIOR
			IF (cAlB00Fc)->TABELA == '05'
				IF (cAlB00Fc)->CHAVE == C05100 //Saldo Mês Anterior
					nSldMAnt := (cAlB00Fc)->VALOR
				ELSEIF (cAlB00Fc)->CHAVE == C05200 //Estorno Débito
					nVEstDeb	:= (cAlB00Fc)->VALOR
					cDEstDev	:= (cAlB00Fc)->KEYDOC
				ELSEIF (cAlB00Fc)->CHAVE == C05250 //Outros Débitos
					nVOutDeb	:= (cAlB00Fc)->VALOR
					cDOutDev	:= (cAlB00Fc)->KEYDOC
				ELSEIF (cAlB00Fc)->CHAVE == C05300 //Estorno Crédito
					nVEstCre	:= (cAlB00Fc)->VALOR
					cDEstCre	:= (cAlB00Fc)->KEYDOC
				ELSEIF (cAlB00Fc)->CHAVE == C05350 //Outros Créditos
					nVOutCre	:= (cAlB00Fc)->VALOR
					cDOutCre	:= (cAlB00Fc)->KEYDOC
				ELSEIF (cAlB00Fc)->CHAVE == C05351 //Apropriação Créd Acumulado Outros Débitos
					nAprAcOD := (cAlB00Fc)->VALOR
				ELSEIF (cAlB00Fc)->CHAVE == C05352 //Apropriação Créd Acumulado Outros Créditos
					nAprAcOC := (cAlB00Fc)->VALOR
				ELSEIF (cAlB00Fc)->CHAVE == C05500 //Apropriação Créd Acumulado
					nAprCrAc := (cAlB00Fc)->VALOR
				ELSEIF (cAlB00Fc)->CHAVE == C05600 //Solicitação DGCA
					nSolDGCA := (cAlB00Fc)->VALOR
				ELSEIF (cAlB00Fc)->CHAVE == C05999 //Saldo Mês Atual
					nSldMAtu := (cAlB00Fc)->VALOR
				ENDIF
			ENDIF
	
			(cAlB00Fc)->(dbSkip())
		EndDo
	
		(cAlB00Fc)->(dbCloseArea())
	ENDIF

	//Se nSldMAnt = 0 então, verifica se existe nSldMAtu > 0 no mês anterior
	IF nSldMAnt == 0
		If Select(cAlB00Fc) > 0
			(cAlB00Fc)->(dbCloseArea())
		Endif
		cAlB00Fc:=GetNextAlias()
		
		BeginSQL Alias cAlB00Fc
			SELECT
				ZFU.ZFU_FILIAL	AS FILIAL,
				ZFU.ZFU_TABELA	AS TABELA,
				ZFU.ZFU_CHAVE		AS CHAVE,
				ZFU.ZFU_PERIOD	AS PERIODO,
				ZFU.ZFU_VERSAO	AS VERSAO,
				ZFU.ZFU_USUARI	AS USUARIO,
				ZFU.ZFU_DTGRV	AS DATAGRV,
				ZFU.ZFU_STATUS	AS STATUS,
				ZFU.ZFU_KEYDOC	AS KEYDOC,
				ZFU.ZFU_VALOR		AS VALOR
			FROM %TABLE:ZFU% ZFU (NOLOCK)
			WHERE ZFU.ZFU_FILIAL = %xFilial:ZFU%
				AND ZFU.ZFU_PERIOD = %Exp:_cAnoAnt+_cMesAnt%
				AND ZFU.ZFU_TABELA = '05'
				AND ZFU.ZFU_CHAVE = '005000999'
				AND ZFU.ZFU_STATUS = '2'
				AND ZFU.%notDel%			
		EndSQL
		
		DbSelectArea(cAlB00Fc)
		(cAlB00Fc)->(dbGoTop())
		IF !(cAlB00Fc)->(eof()) .AND. (cAlB00Fc)->VALOR > 0
			nSldMAnt := (cAlB00Fc)->VALOR
		ENDIF
		(cAlB00Fc)->(dbCloseArea())
	ENDIF

	ZFU->(dbGoTop())
	If ZFU->(dbSeek(xFilial('ZFU')+_cAnoI+_cMesI+cVerAnt+'01'))
		While !ZFU->(eof()) .AND. ;
					ZFU->ZFU_FILIAL == xFilial('ZFU') .AND. ;
					ZFU->ZFU_PERIOD == _cAnoI+_cMesI .AND. ;
					ZFU->ZFU_VERSAO == cVerAnt .AND. ;
					ZFU->ZFU_TABELA == '01'

			IF ZFU->ZFU_STATUS == '2'
				lFechado := .T.
			ENDIF
			ZFU->(dbSkip())
		EndDo
	ENDIF
Return ({cVerAnt,nSldMAnt,nVEstDeb,cDEstDev,nVEstCre,cDEstCre,nAprCrAc,nSldMAtu,nSolDGCA,nVOutDeb,cDOutDev,nVOutCre,cDOutCre,nAprAcOD,nAprAcOC,lFechado})

/*/{Protheus.doc} Static Function xGrvFcht()
	Função que Grava as informações e fecha o período
	@type Static Function
	@author Abel Babini
	@since 21/01/2020
	/*/
Static Function xGrvFcht()
	//GravaZFU(cFilZFU, zPeriZFU, cVerZFU, dDtZFU, cTabZFU, cChavZFU, cUserZFU, cStatZFU, nValZFU,cKeyDZFU, cSDOCZFU)
	Local lRet := MessageBox('Deseja realmente fechar o período '+' (' + _cMesI +'/'+_cAnoI +')'+'?','Fechamento do Período',4)
	Local i := 0

	IF lRet == 6
		ZFU->(dbGoTop())
		If ZFU->(dbSeek(xFilial('ZFU')+_cAnoI+_cMesI+cMV05T01+'05'))
			While !ZFU->(eof()) .AND. ;
						ZFU->ZFU_FILIAL == xFilial('ZFU') .AND. ;
						ZFU->ZFU_PERIOD == _cAnoI+_cMesI .AND. ;
						ZFU->ZFU_VERSAO == cMV05T01 
				
				IF ZFU->ZFU_TABELA == '05' .OR. ZFU->ZFU_TABELA == '01' .OR. ZFU->ZFU_TABELA == '99'
				
					IF ZFU->ZFU_STATUS == '1'
						RECLOCK('ZFU',.F.)
							ZFU->ZFU_STATUS := '2'
						MSUNLOCK()
					ENDIF
				ENDIF
				ZFU->(dbSkip())
			EndDo
			GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cMV05T01, dDATABASE, '01', C00100, _cNomUse, '2', 0,DToS(_mvpr01), '') //DATA INICIAL
			GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cMV05T01, dDATABASE, '01', C00110, _cNomUse, '2', 0,DToS(_mvpr02), '') //DATA FINAL
			//GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cMV05T01, dDATABASE, '01', C00120, _cNomUse, '2', nA05T05,'', '') //PERIODO
			//GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cMV05T01, dDATABASE, '01', C00130, _cNomUse, '2', nA05T05,'', '') //USUARIO
			GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cMV05T01, dDATABASE, '01', C00140, _cNomUse, '2', 0,DtoS(Date()), '') //DATA FECHAMENTO
			GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cMV05T01, dDATABASE, '01', C00150, _cNomUse, '2', 0,Time(), '') //HORA FECHAMENTO

		else
			GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cMV05T01, dDATABASE, '05', C05100, _cNomUse, '2', nA05T01,'', '')
			GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cMV05T01, dDATABASE, '05', C05200, _cNomUse, '2', nA05T02,cA05T02, '')
			GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cMV05T01, dDATABASE, '05', C05250, _cNomUse, '2', nA05T07,cA05T04, '')
			GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cMV05T01, dDATABASE, '05', C05300, _cNomUse, '2', nA05T03,cA05T03, '')
			GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cMV05T01, dDATABASE, '05', C05350, _cNomUse, '2', nA05T08,cA05T05, '')
			GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cMV05T01, dDATABASE, '05', C05351, _cNomUse, '2', nA05T09,'', '')
			GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cMV05T01, dDATABASE, '05', C05352, _cNomUse, '2', nA05T10,'', '')
			GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cMV05T01, dDATABASE, '05', C05500, _cNomUse, '2', nA05T04,'', '')
			GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cMV05T01, dDATABASE, '05', C05600, _cNomUse, '2', nA05T06,'', '')
			GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cMV05T01, dDATABASE, '05', C05999, _cNomUse, '2', nA05T05,'', '')

			GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cMV05T01, dDATABASE, '01', C00100, _cNomUse, '2', 0,DToS(_mvpr01), '') //DATA INICIAL
			GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cMV05T01, dDATABASE, '01', C00110, _cNomUse, '2', 0,DToS(_mvpr02), '') //DATA FINAL
			//GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cMV05T01, dDATABASE, '01', C00120, _cNomUse, '2', nA05T05,'', '') //PERIODO
			//GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cMV05T01, dDATABASE, '01', C00130, _cNomUse, '2', nA05T05,'', '') //USUARIO
			GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cMV05T01, dDATABASE, '01', C00140, _cNomUse, '2', 0,DtoS(Date()), '') //DATA FECHAMENTO
			GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cMV05T01, dDATABASE, '01', C00150, _cNomUse, '2', 0,Time(), '') //HORA FECHAMENTO
		Endif

		// INICIO Ticket 12473                   - Abel Babini - 19/04/2021 - Alteração de alíquotas nos relatórios de crédito outorgado para o mês de abril/2021
		For i := 1 to Len(aBrw01Pr)
			IF Alltrim(aBrw01Pr[i,1]) $ 'MV_#DTUNIF|MV_#DTREMI|MV_#DTINDT|MV_#DTCELU|MV_#DTCEPN'
				GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cMV05T01, dDATABASE, '99', P90000, _cNomUse, '2', 0,aBrw01Pr[i,1]+'||'+DTOS(aBrw01Pr[i,2]), '') 
			ELSEIF Alltrim(aBrw01Pr[i,1]) $ "MV_#ALFRST"
				GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cMV05T01, dDATABASE, '99', P90000, _cNomUse, '2', 0,aBrw01Pr[i,1]+'||'+Alltrim(Str(aBrw01Pr[i,2])), '') 
			ELSEIF Alltrim(aBrw01Pr[i,1]) $ 'MV_#CRFRT|MV_#APFR'
				GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cMV05T01, dDATABASE, '99', P90000, _cNomUse, '2', 0,aBrw01Pr[i,1]+'||'+IIF(aBrw01Pr[i,2]=='.T.',"T","F"), '') 
			ELSE
				GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cMV05T01, dDATABASE, '99', P90000, _cNomUse, '2', 0,aBrw01Pr[i,1]+'||'+aBrw01Pr[i,2], '') 
			ENDIF
				
		Next i
		// FIM Ticket 12473                   - Abel Babini - 19/04/2021 - Alteração de alíquotas nos relatórios de crédito outorgado para o mês de abril/2021

	Endif
	
	aSldFcht	:= xSldFcht()
	_lPerFch	:= IIF(aSldFcht[16],.T.,.F.)
	IF nOpMdl == 1
		oFLr05p1:Refresh(.T.)
	ELSE
		oFWLr02:Refresh(.T.)
	ENDIF
	SYSREFRESH(.T.)
Return 

/*/{Protheus.doc} Static Function xAbrFcht()
	Função que reabre o período
	@type Static Function
	@author Abel Babini
	@since 27/01/2020
	/*/
Static Function xAbrFcht()
	Local lRet := MessageBox('Deseja realmente reabrir o período '+' (' + _cMesI +'/'+_cAnoI +')'+'?','Reabertura do Período',4)
	IF lRet == 6
		ZFU->(dbGoTop())
		If ZFU->(dbSeek(xFilial('ZFU')+_cAnoI+_cMesI+cMV05T01+'05'))
			While !ZFU->(eof()) .AND. ;
						ZFU->ZFU_FILIAL == xFilial('ZFU') .AND. ;
						ZFU->ZFU_PERIOD == _cAnoI+_cMesI .AND. ;
						ZFU->ZFU_VERSAO == cMV05T01 .AND. ;
						ZFU->ZFU_TABELA == '05'
				IF ZFU->ZFU_STATUS == '2'
					RECLOCK('ZFU',.F.)
						ZFU->ZFU_STATUS := '3'
					MSUNLOCK()
				ENDIF
				ZFU->(dbSkip())
			EndDo
		Endif
		ZFU->(dbGoTop())
		If ZFU->(dbSeek(xFilial('ZFU')+_cAnoI+_cMesI+cMV05T01+'01'))
			While !ZFU->(eof()) .AND. ;
						ZFU->ZFU_FILIAL == xFilial('ZFU') .AND. ;
						ZFU->ZFU_PERIOD == _cAnoI+_cMesI .AND. ;
						ZFU->ZFU_VERSAO == cMV05T01 .AND. ;
						ZFU->ZFU_TABELA == '01'
				IF ZFU->ZFU_STATUS == '2'
					RECLOCK('ZFU',.F.)
						ZFU->ZFU_STATUS := '3'
					MSUNLOCK()
				ENDIF
				ZFU->(dbSkip())
			EndDo
		Endif
		ZFU->(dbGoTop())
		If ZFU->(dbSeek(xFilial('ZFU')+_cAnoI+_cMesI+cMV05T01+'99'))
			While !ZFU->(eof()) .AND. ;
						ZFU->ZFU_FILIAL == xFilial('ZFU') .AND. ;
						ZFU->ZFU_PERIOD == _cAnoI+_cMesI .AND. ;
						ZFU->ZFU_VERSAO == cMV05T01 .AND. ;
						ZFU->ZFU_TABELA == '99'
				IF ZFU->ZFU_STATUS == '2'
					RECLOCK('ZFU',.F.)
						ZFU->ZFU_STATUS := '3'
					MSUNLOCK()
				ENDIF
				ZFU->(dbSkip())
			EndDo
		Endif
		//Registra usuário que reabriu o período
		GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cMV05T01, dDATABASE, '01', C00160, _cNomUse, '3', 0,DtoS(Date()), '') //DATA REABERTURA
		GravaZFU(xFilial('ZFU'), _cAnoI+_cMesI, cMV05T01, dDATABASE, '01', C00170, _cNomUse, '3', 0,Time(), '') //HORA REABERTURA

		nA05T01		:= 0 //Vl. Saldo Credor Mês Anterior
		nA05T02		:= 0 //Vl. Estorno de Débitos
		cA05T02		:= '' 
		nA05T03		:= 0 //Vl. Estorno de Créditos
		cA05T03		:= '' 
		nA05T04		:= 0 //Apropriação de Crédito Acumulado
		nA05T05		:= 0 //Vl. Saldo Credor Mês Atual
		nA05T06		:= 0 //Solicitação DGCA
		nA05T07		:= 0 //Outros Débitos
		cA05T04		:= '' 
		nA05T08		:= 0 //Outros Créditos
		cA05T05		:= '' 
		nA05T09		:= 0 //Aprop Cred Acum Outros Débitos
		nA05T10		:= 0 //Aprop Cred Acum Outros Créditos
		IF nOpMdl == 1
			xABrw05()
		ELSEIF nOpMdl == 2 .or. nOpMdl == 4
			//Static Call(ADFIS038R,xABrw27)
			//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
			u_FIS038B0()
		ENDIF
		//Static Call(ADFIS038R,xABrw03)
		//@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
		u_FIS038A2()
	Endif
	
	aSldFcht	:= xSldFcht()
	_lPerFch	:= IIF(aSldFcht[16],.T.,.F.)
	IF nOpMdl == 1
		oFLr05p1:Refresh(.T.)
	ELSE
		oFWLr02:Refresh(.T.)
	ENDIF
	SYSREFRESH(.T.)
Return

//INICIO Ticket 5252                    - Abel Babini - 17/11/2020 - Painel Fiscal - Alteração de parâmetros pelo usuário		
Static Function fMudaPar()
	Local oDlgPar
	Local cRelName	:= Alltrim((cAlB00Rs)->RELATORI)
	Local cParAtu	:= Alltrim((cAlB00Rs)->PARAMETR)
	Local cValAtu	:= Alltrim((cAlB00Rs)->CONTEUDO)
	Local cValNew	:= Alltrim((cAlB00Rs)->CONTEUDO)+Space(250-Len(Alltrim((cAlB00Rs)->CONTEUDO)))
	Local cParDesc	:= Alltrim((cAlB00Rs)->DESCR)

	DEFINE MSDIALOG oDlgPar TITLE "Análise de Restrições no Título" OF oDlg PIXEL FROM 0/*aSize[7]*/,0 TO 200,550/*aSize[6],aSize[5]	*/
		oDlgPar:lEscClose     := .T. //Permite sair ao se pressionar a tecla ESC.
		@ 003,010 SAY OemToAnsi(cRelName)			FONT oFont003 SIZE 300,15 OF oDlgPar PIXEL		
		@ 015,010 SAY OemToAnsi(cParDesc)			FONT oFont001 SIZE 300,15 OF oDlgPar PIXEL

		@ 035,010 SAY OemToAnsi("Parâmetro")		FONT oFont002 SIZE 200,15 OF oDlgPar PIXEL
		@ 034,070 MSGET cParAtu	SIZE 60,08 OF 		oDlgPar PIXEL PICTURE '@!' When .F. // Vl. Estorno de Débitos
		@ 046,010 SAY OemToAnsi("Valor atual")		FONT oFont002 SIZE 200,15 OF oDlgPar PIXEL
		@ 045,070 MSGET cValAtu	SIZE 200,08 OF 		oDlgPar PIXEL PICTURE '@!' When .F.// Descrição do Estorno
		@ 057,010 SAY OemToAnsi("Novo valor")		FONT oFont002 SIZE 200,15 OF oDlgPar PIXEL
		@ 056,070 MSGET cValNew	SIZE 60,08 OF 		oDlgPar PIXEL PICTURE '@!' When .T.// Vl. Estorno de Débitos

		@ 068,220 BUTTON OemToAnsi('Grava')			SIZE 42,13 FONT oDlg:oFont ACTION { || IIF(Alltrim(cValAtu)==Alltrim(cValNew),Alert('Não houve alteração no conteúdo'),xGrvPar(cParAtu,cValAtu,cValNew)) , oDlgPar:End() } OF oDlgPar PIXEL //"Exportar Excel"
		@ 068,170 BUTTON OemToAnsi('Cancela')		SIZE 42,13 FONT oDlg:oFont ACTION oDlgPar:End() OF oDlgPar PIXEL //"Exportar Excel"

	Activate MsDialog oDlgPar Centered 

Return

Static Function xGrvPar(cParAtu,cValAtu,cValNew)

	If SX6->(DbSeek(xFilial("SX6")+cParAtu))
		// GRAVA LOG DE ALTERAÇÃO
		u_GrLogZBE (Date(),;
		TIME(),;
		cUserName,;
		"PARÂMETRO: "+Alltrim(cParAtu)+" Valor Antigo: " +Alltrim(cValAtu)+ " Valor Novo: " +Alltrim(cValNew),"SIGAFIS","ADFIS028R",;
		"PAINEL FISCAL ICMS ALTERACAO PARAMETROS",;
		ComputerName(),;
		LogUserName())

		//Grava Alterações
		RecLock("SX6",.F.)
			//Conteúdo
			X6_CONTEUD	:= Alltrim(cValNew)
			X6_CONTSPA	:= Alltrim(cValNew)
			X6_CONTENG	:= Alltrim(cValNew)
		SX6->(MsUnlock())

		//Atualiza Tabela Temporária de Parâmetros Alterados
		RecLock(cAlB00Rs,.F.)
			(cAlB00Rs)->CONTEUDO := Alltrim(cValNew)
		(cAlB00Rs)->(MsUnlock())
		Alert('O parâmetro foi atualizado. É necessário recarregar o Painel Fiscal!')
	Else
		Alert('ADFIS028R-001 - O parâmetro '+Alltrim(cParAtu)+' ainda não foi criado. Entre em contato com a TI.')
	EndIf

Return
//FIM Ticket 5252                    - Abel Babini - 17/11/2020 - Painel Fiscal - Alteração de parâmetros pelo usuário		


	//INICIO Ticket 8050                    - Abel Babini - 18/01/2020 - Alteração de alíquotas nos relatórios de crédito outorgado
/*/{Protheus.doc} Static Function xABrw35  
	Carrega da dados Ref. Credito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function xABrw35()
	Local nPCFO := 0
	Local nPNCM 
	Local _PNCM
	Local _PCFO
	Local _iAux
	Local _i
	
	If Select(cAlB35Rs) > 0
		(cAlB35Rs)->(dbCloseArea())
	Endif
	cAlB35Rs:=GetNextAlias()

	aBrw35Rs	:= {}
	aBrw35Nc	:= {}
	aBrw35Cf	:= {}
	aBrw35p1	:= {}
	aBrw35p2	:= {}
	aBrw35p3	:= {}
	aBrw35dm	:= {}
	aBrw35Rl	:= {}
	aBrw35Rk	:= {}
	aBrw35x1	:= {}
	aBrw35x2	:= {}
	aBrw35x3	:= {}
	aBrw35x4	:= {}
	aBrw35x5	:= {}
	aBrw35x6	:= {}
	aBrw35x7	:= {}
	aBrw35x8	:= {}
	nA35T01		:= 0
	nA35T11		:= 0
	nA35T12		:= 0
	nA35T13		:= 0
	nA35T14		:= 0
	nA35T15		:= 0
	nA35T16		:= 0
	nA35T17		:= 0
	//RESUMO
	BeginSQL  Alias cAlB35Rs
		column ENTRADA as Date
		column EMISSAO as Date
		column DTEMBARQUE as Date

		SELECT
			SFT.FT_FILIAL	AS FILIAL, 
			SFT.FT_CFOP		AS CFOP, 
			SFT.FT_POSIPI	AS NCM, 
			SFT.FT_ENTRADA	AS ENTRADA, 
			SFT.FT_EMISSAO	AS EMISSAO,
			SFT.FT_NFISCAL	AS NFISCAL, 
			SFT.FT_SERIE	AS SERIE, 
			SFT.FT_CLIEFOR	AS CLIEFOR,
			SFT.FT_LOJA		AS LOJA,
			CASE WHEN (SFT.FT_TIPO IN ('D','B') AND SFT.FT_CFOP > '5000' ) OR (SFT.FT_TIPO NOT IN ('D','B') AND SFT.FT_CFOP < '5000' ) THEN SA2.A2_NOME	ELSE SA1.A1_NOME  	END AS NOME,
			CASE WHEN (SFT.FT_TIPO IN ('D','B') AND SFT.FT_CFOP > '5000' ) OR (SFT.FT_TIPO NOT IN ('D','B') AND SFT.FT_CFOP < '5000' ) THEN SA2.A2_CGC 	ELSE SA1.A1_CGC 	END AS CNPJ,
			CASE WHEN (SFT.FT_TIPO IN ('D','B') AND SFT.FT_CFOP > '5000' ) OR (SFT.FT_TIPO NOT IN ('D','B') AND SFT.FT_CFOP < '5000' ) THEN SA2.A2_INSCR	ELSE SA1.A1_INSCR	END AS IEST,
			SFT.FT_ESTADO	AS ESTADO, 
			SFT.FT_VALCONT	AS VALCONT, 
			SFT.FT_VALICM	AS VALICM,
			SFT.FT_VALIPI	AS VALIPI, 
			SFT.FT_ICMSRET	AS ICMSRET, 
			SFT.FT_OBSERV	AS OBSERV, 
			SFT.FT_DTCANC	AS DTCANC, 
			SFT.FT_CONTA	AS CONTACTB, 
			SFT.FT_PRODUTO	AS CODPROD, 
			SB1.B1_DESC		AS PRODUTO,
			SFT.FT_QUANT	AS QUANT, 
			SFT.FT_TOTAL	AS VLTOTAL, 
			SFT.FT_ESPECIE	AS ESPECIE,
			SYA.YA_DESCR	AS PAIS,
			EEC.EEC_DTEMBA	AS DTEMBARQUE,
			EEC.EEC_NRODUE	AS NRODUE, 
			EEC.EEC_NRCONH	AS NROCONHEC,
			FT_BASEICM		AS BASEICMS,
			FT_OUTRICM		AS OUTROSICMS,
			FT_ISENICM		AS ISENTOICMS,
			SFT.FT_TIPO		AS TIPO,
			SFT.FT_TIPOMOV	AS TIPOMOV
		FROM %TABLE:SFT% SFT (NOLOCK)
		LEFT JOIN %TABLE:SB1% SB1 (NOLOCK) ON
			SB1.B1_FILIAL = %xFilial:SB1%
		AND SB1.B1_COD = SFT.FT_PRODUTO
		AND SB1.%notDel%
		LEFT JOIN %TABLE:SA2% SA2 (NOLOCK) ON
			SA2.A2_FILIAL = %xFilial:SA2%
		AND SA2.A2_COD = SFT.FT_CLIEFOR
		AND SA2.A2_LOJA = SFT.FT_LOJA
		AND ((SFT.FT_TIPO IN ('D','B') AND SFT.FT_CFOP > '5000') OR (SFT.FT_TIPO NOT IN ('D','B') AND SFT.FT_CFOP < '5000'))
		AND SA2.%notDel%
		LEFT JOIN %TABLE:SA1% SA1 (NOLOCK) ON
			SA1.A1_FILIAL = %xFilial:SA1%
		AND SA1.A1_COD = SFT.FT_CLIEFOR
		AND SA1.A1_LOJA = SFT.FT_LOJA
		AND ((SFT.FT_TIPO IN ('D','B') AND SFT.FT_CFOP < '5000') OR (SFT.FT_TIPO NOT IN ('D','B') AND SFT.FT_CFOP > '5000'))
		AND SA1.%notDel%
		LEFT JOIN %TABLE:EE9% EE9 (NOLOCK) ON
			EE9.EE9_FILIAL=%xFilial:EE9%
		AND EE9.EE9_NF = SFT.FT_NFISCAL
		AND EE9.EE9_SERIE = SFT.FT_SERIE
		AND EE9.EE9_COD_I = SFT.FT_PRODUTO
		AND EE9.%notDel%
		LEFT JOIN %TABLE:EEC% EEC (NOLOCK) ON
			EEC.EEC_FILIAL=%xFilial:EEC%
		AND EEC.EEC_PREEMB = EE9.EE9_PEDIDO
		AND EEC.%notDel%
		LEFT JOIN %TABLE:EE7% EE7 (NOLOCK) ON
			EE7.EE7_FILIAL=%xFilial:EE7%
		AND EE7.EE7_PEDIDO = EE9.EE9_PEDIDO
		AND EE7.%notDel%
		LEFT JOIN %TABLE:SY9% SY9 (NOLOCK) ON
			SY9.Y9_FILIAL=%xFilial:SY9%
		AND SY9.Y9_COD = EE7.EE7_DEST 
		AND SY9.%notDel%
		LEFT JOIN %TABLE:SYA% SYA (NOLOCK) ON
			SYA.YA_FILIAL=%xFilial:SYA%
		AND SYA.YA_CODGI = SY9.Y9_PAIS
		AND SYA.%notDel%
		WHERE
			SFT.%notDel%
		AND SFT.FT_FILIAL=%xFilial:SFT%
		AND (SFT.FT_ENTRADA>=%Exp:DToS(_mvpr01)% AND SFT.FT_ENTRADA<=%Exp:DToS(_mvpr02)%)
		AND SFT.FT_ENTRADA >= %Exp:_cMVCON1%
		AND SFT.FT_DTCANC=''
		AND SFT.FT_CFOP IN %Exp:_cCFCrOu%
		ORDER BY SFT.FT_FILIAL, SFT.FT_POSIPI, SFT.FT_CFOP, SFT.FT_CLIEFOR, SFT.FT_LOJA, SFT.FT_ENTRADA, SFT.FT_NFISCAL, SFT.FT_SERIE

	EndSQL
	
	//Monta Arrays Auxiliares
	DbSelectArea(cAlB35Rs)
	(cAlB35Rs)->(DbGoTop())
	While !(cAlB35Rs)->(eof())
		lNCM := .F.
		For _PNCM = 1 to Len(aBrw35Nc)
			If Alltrim((cAlB35Rs)->NCM) == Alltrim(aBrw35Nc[_PNCM])
				lNCM := .T.
				Exit
			Endif
		Next _PNCM
		If !lNCM
			AADD(aBrw35Nc,Alltrim((cAlB35Rs)->NCM))
			nQNCM35 += 1
		Endif
		
		lCFO := .F.
		For _PCFO = 1 to Len(aBrw35Cf)
			If Alltrim((cAlB35Rs)->CFOP) == Alltrim(aBrw35Cf[_PCFO])
				lCFO := .T.
				Exit
			Endif
		Next _PCFO
		If !lCFO
			AADD(aBrw35Cf,Alltrim((cAlB35Rs)->CFOP))
			nQCFO35 += 1
		Endif
		
		(cAlB35Rs)->(DbSkip())
	EndDo

	ASORT(aBrw35Cf)
	ASORT(aBrw35Nc)
	
	//Monta Arrays para Browser
	aBrw35Rs := Array(nQCFO35,nQNCM35+3) // Cria o Array do tamanho necessário (Linha x Coluna), acrescentando 2 colunas para filial e o próprio CFOP, e mais uma para o total por CFOP
	
	//Inicializa Array
	For nPCFO := 1 to nQCFO35
		//Filial e CFOP inicializa com espaço
		For _iAux = 1 to 2
			aBrw35Rs[nPCFO,_iAux]:= ""
		Next _iAux
		//Campos de Valor Contábil inicializa com zero
		For nPNCM = 3 to nQNCM35+3
			aBrw35Rs[nPCFO,nPNCM]:= 0
		Next nPNCM
	Next nPCFO

	//Inicializa Arrays dos Resumos 5%Estadual, 7%Estadual, 7%Interestadual
	xAB35IVr()
		
	//Preenche os Arrays do Browse e do detalhamento para relatório.
	(cAlB35Rs)->(DbGoTop())	
	While !(cAlB35Rs)->(eof())
	
		nPCFO := ASCAN(aBrw35Cf,Alltrim((cAlB35Rs)->CFOP))
		nPNCM := ASCAN(aBrw35Nc,Alltrim((cAlB35Rs)->NCM))
		If nPCFO == 0 .OR. nPNCM == 0
			Alert('Erro!')
		Else
			aBrw35Rs[nPCFO,1]		:= (cAlB35Rs)->FILIAL
			aBrw35Rs[nPCFO,2]		:= (cAlB35Rs)->CFOP
			aBrw35Rs[nPCFO,nPNCM+2]	+= (cAlB35Rs)->VALCONT
			aBrw35Rs[nPCFO,nQNCM35+3]	+= Round((cAlB35Rs)->VALCONT,2)
		Endif

		AADD(aBrw35Rl,{;
			(cAlB35Rs)->FILIAL+(cAlB35Rs)->TIPOMOV+(cAlB35Rs)->SERIE+(cAlB35Rs)->NFISCAL+(cAlB35Rs)->CLIEFOR+(cAlB35Rs)->LOJA+Alltrim((cAlB35Rs)->CFOP),;
			(cAlB35Rs)->FILIAL,;		//02
			(cAlB35Rs)->ENTRADA,; 		//03
			(cAlB35Rs)->EMISSAO,;		//04
			(cAlB35Rs)->NFISCAL,;		//05
			(cAlB35Rs)->SERIE,;			//06
			(cAlB35Rs)->ESTADO,;		//07
			(cAlB35Rs)->NOME,;			//35
			(cAlB35Rs)->CNPJ,;			//09
			(cAlB35Rs)->IEST,;			//10
			Alltrim((cAlB35Rs)->CFOP),;	//11
			(cAlB35Rs)->VALCONT,;		//12
			(cAlB35Rs)->BASEICMS,;		//13
			(cAlB35Rs)->VALICM,;		//14
			(cAlB35Rs)->ISENTOICMS,;	//15
			(cAlB35Rs)->OUTROSICMS,;	//16
			(cAlB35Rs)->VALIPI,;		//17
			(cAlB35Rs)->PAIS,;			//18
			(cAlB35Rs)->NRODUE,;		//19
			(cAlB35Rs)->DTEMBARQUE,;	//20
			(cAlB35Rs)->NROCONHEC,;		//21
			(cAlB35Rs)->ESPECIE,;		//22
			(cAlB35Rs)->VLTOTAL,;		//23
			(cAlB35Rs)->TIPOMOV,;		//24
			Alltrim((cAlB35Rs)->NCM);	//25
			})
		nA35T01 += (cAlB35Rs)->VALCONT
		(cAlB35Rs)->(DbSkip())
	EndDo
	(cAlB35Rs)->(dbCloseArea())

	///////////////////////////////////////////////////////////////
	//PREPARA ARRAYS DE RELATÓRIOS DETALHADOS
	///////////////////////////////////////////////////////////////
	ASORT(aBrw35Rl,1,Len(aBrw35Rl))
	cXvAux35	:= ""
	nLen35X1	:= 0
	nLen35X2	:= 0
	nLen35X3	:= 0
	nLen35X4	:= 0
	nLen35X5	:= 0
	nLen35X6	:= 0
	nLen35X7	:= 0
	nLen35X8	:= 0

	//////////////////////////////////////////////
	//Novo formato de preenchimento dos Arrays  //
	//////////////////////////////////////////////
	For _i := 1 to Len(aBrw35Rl)
		nPNCM := ASCAN(aBrw35Nc,Alltrim(aBrw35Rl[_i,25]))

		//////////////////////////////////
		//CREDITO OUTORGADO 5% ESTADUAL //
		//////////////////////////////////
		If Alltrim(aBrw35Rl[_i,11]) == '5101'
			aBrw35p2[01,3] += aBrw35Rl[_i,12]
			If ! (Alltrim(aBrw35Rl[_i,25])$_cEmbuti .OR. Alltrim(aBrw35Rl[_i,25])$_cMVGrax .OR. Alltrim(aBrw35Rl[_i,25])$_cMVNCom)
				aBrw35p2[06,3] += aBrw35Rl[_i,12]
				aBrw35dm[01,3] += aBrw35Rl[_i,12]
				xCrOu35(1,_i)
				xCrOu35(3,_i)
			ElseIf Alltrim(aBrw35Rl[_i,25])$_cEmbuti
				aBrw35p2[02,3] += aBrw35Rl[_i,12]
			ElseIf Alltrim(aBrw35Rl[_i,25])$_cMVNCom
				aBrw35p2[03,3] += aBrw35Rl[_i,12]
			ElseIf Alltrim(aBrw35Rl[_i,25])$_cMVGrax
				aBrw35p2[04,3] += aBrw35Rl[_i,12]
			Endif
		Endif
		
		If Alltrim(aBrw35Rl[_i,11]) == '5105'
			xCrOu35(1,_i)
			aBrw35p2[08,3] += aBrw35Rl[_i,12]
			aBrw35dm[02,3] += aBrw35Rl[_i,12]
		Endif
		
		If Alltrim(aBrw35Rl[_i,11]) == '5118' .OR. Alltrim(aBrw35Rl[_i,11]) == '5122'
			aBrw35p2[09,3] += aBrw35Rl[_i,12]
			If ! (Alltrim(aBrw35Rl[_i,25])$_cEmbuti .OR. Alltrim(aBrw35Rl[_i,25])$_cMVGrax .OR. Alltrim(aBrw35Rl[_i,25])$_cMVNCom)
				aBrw35p2[11,3] += aBrw35Rl[_i,12]
				aBrw35dm[3,3] += aBrw35Rl[_i,12]
				xCrOu35(1,_i)
				xCrOu35(3,_i)
			Else
				aBrw35p2[10,3] += aBrw35Rl[_i,12]
			Endif
		Endif
		//Chamado n.058111 - OS n.059575 - Abel Babini - 07/05/2020 - Considerar também o CFOP 7105 no Rel. Cred. Outorgado
		If Alltrim(aBrw35Rl[_i,11]) == '7101' .or. Alltrim(aBrw35Rl[_i,11]) == '7105'
			aBrw35p2[13,3] += aBrw35Rl[_i,12]
			If ! (Alltrim(aBrw35Rl[_i,25])$_cEmbuti .OR. Alltrim(aBrw35Rl[_i,25])$_cMVGrax .OR. Alltrim(aBrw35Rl[_i,25])$_cMVNCom)
				aBrw35p2[16,3] += aBrw35Rl[_i,12]
				aBrw35dm[04,3] += aBrw35Rl[_i,12]
				xCrOu35(1,_i)
			Else
				aBrw35p2[14,3] += aBrw35Rl[_i,12]
			Endif
		Endif

		//Devoluções
		If Alltrim(aBrw35Rl[_i,11]) == '1201'
			aBrw35p2[20,3] += aBrw35Rl[_i,12]
			If ! (Alltrim(aBrw35Rl[_i,25])$_cEmbuti .OR. Alltrim(aBrw35Rl[_i,25])$_cMVGrax .OR. Alltrim(aBrw35Rl[_i,25])$_cMVNCom)
				aBrw35p2[24,3] += aBrw35Rl[_i,12]
				aBrw35dm[08,3] += aBrw35Rl[_i,12]
				xCrOu35(1,_i)
				xCrOu35(3,_i)
			Elseif Alltrim(aBrw35Rl[_i,25])$_cMVGrax .OR. Alltrim(aBrw35Rl[_i,25])$_cMVNCom
				aBrw35p2[21,3] += aBrw35Rl[_i,12]
			Elseif Alltrim(aBrw35Rl[_i,25])$_cEmbuti
				aBrw35p2[22,3] += aBrw35Rl[_i,12]
			Endif
		Endif
		If Alltrim(aBrw35Rl[_i,11]) == '3201'
			aBrw35p2[26,3] += aBrw35Rl[_i,12]
			If ! (Alltrim(aBrw35Rl[_i,25])$_cEmbuti .OR. Alltrim(aBrw35Rl[_i,25])$_cMVGrax .OR. Alltrim(aBrw35Rl[_i,25])$_cMVNCom)
				aBrw35p2[29,3] += aBrw35Rl[_i,12]
				aBrw35dm[09,3] += aBrw35Rl[_i,12]
				xCrOu35(1,_i)
			Else
				aBrw35p2[27,3] += aBrw35Rl[_i,12]
			Endif
		Endif
		If Alltrim(aBrw35Rl[_i,11]) == '1151'
			aBrw35p2[35,3] += aBrw35Rl[_i,12]
			aBrw35dm[15,3] += aBrw35Rl[_i,12]
			xCrOu35(1,_i)
		Endif
		//TRANSFERENCIAS
		If Alltrim(aBrw35Rl[_i,11]) == '5151'
			aBrw35p2[40,3] += aBrw35Rl[_i,12]
			If ! (Alltrim(aBrw35Rl[_i,25])$_cEmbuti .OR. Alltrim(aBrw35Rl[_i,25])$_cMVGrax .OR. Alltrim(aBrw35Rl[_i,25])$_cMVNCom)
				aBrw35p2[45,3] += aBrw35Rl[_i,12]
			ElseIf Alltrim(aBrw35Rl[_i,25])$_cEmbuti
				aBrw35p2[42,3] += aBrw35Rl[_i,12]
			ElseIf Alltrim(aBrw35Rl[_i,25])$_cMVNCom
				aBrw35p2[43,3] += aBrw35Rl[_i,12]
			ElseIf Alltrim(aBrw35Rl[_i,25])$_cMVGrax
				aBrw35p2[41,3] += aBrw35Rl[_i,12]
			Endif
		Endif

		If Alltrim(aBrw35Rl[_i,11]) == '1152'
			aBrw35p2[49,3] += aBrw35Rl[_i,12]
			If ! (Alltrim(aBrw35Rl[_i,25])$_cEmbuti .OR. Alltrim(aBrw35Rl[_i,25])$_cMVGrax .OR. Alltrim(aBrw35Rl[_i,25])$_cMVNCom)
				aBrw35p2[54,3] += aBrw35Rl[_i,12]
			ElseIf Alltrim(aBrw35Rl[_i,25])$_cEmbuti
				aBrw35p2[51,3] += aBrw35Rl[_i,12]
			ElseIf Alltrim(aBrw35Rl[_i,25])$_cMVNCom
				aBrw35p2[50,3] += aBrw35Rl[_i,12]
			ElseIf Alltrim(aBrw35Rl[_i,25])$_cMVGrax
				aBrw35p2[52,3] += aBrw35Rl[_i,12]
			Endif
		Endif

		///////////////////////////////////////
		//CREDITO OUTORGADO 5,6% INTERESTADUAL //
		///////////////////////////////////////
		If Alltrim(aBrw35Rl[_i,11]) == '6101'
			aBrw35p1[01,3] += aBrw35Rl[_i,12]
			aBrw35p1[07,3] += aBrw35Rl[_i,12]
			aBrw35p1[10,3] += aBrw35Rl[_i,12]
			aBrw35p1[19,3] += aBrw35Rl[_i,12]
			//Exclusao da venda de embutidos
			If Alltrim(aBrw35Rl[_i,25])$_cEmbuti
				aBrw35p1[08,3] += aBrw35Rl[_i,12]
				aBrw35p1[10,3] -= aBrw35Rl[_i,12]
				aBrw35p1[19,3] -= aBrw35Rl[_i,12]
			//Exclusao da venda de graxaria
			Elseif Alltrim(aBrw35Rl[_i,25])$_cMVGrax
				aBrw35p1[09,3] -= aBrw35Rl[_i,12]
				aBrw35p1[10,3] -= aBrw35Rl[_i,12]
				aBrw35p1[19,3] -= aBrw35Rl[_i,12]
			Else
				xCrOu35(2,_i)
			Endif
		Endif
		
		If Alltrim(aBrw35Rl[_i,11]) == '6122'
			aBrw35p1[02,3] += aBrw35Rl[_i,12]
			aBrw35p1[07,3] += aBrw35Rl[_i,12]
			aBrw35p1[10,3] += aBrw35Rl[_i,12]
			aBrw35p1[19,3] += aBrw35Rl[_i,12]
		Endif

		If Alltrim(aBrw35Rl[_i,11]) == '6105'
			aBrw35p1[03,3] += aBrw35Rl[_i,12]
			aBrw35p1[07,3] += aBrw35Rl[_i,12]
			aBrw35p1[10,3] += aBrw35Rl[_i,12]
			aBrw35p1[19,3] += aBrw35Rl[_i,12]
			If Alltrim(aBrw35Rl[_i,25])$_cEmbuti
				aBrw35p1[08,3] -= aBrw35Rl[_i,12]
				aBrw35p1[10,3] -= aBrw35Rl[_i,12]
				aBrw35p1[19,3] -= aBrw35Rl[_i,12]
			Endif
		Endif

		If Alltrim(aBrw35Rl[_i,11]) == '6922'
			aBrw35p1[04,3] += aBrw35Rl[_i,12]
			aBrw35p1[07,3] += aBrw35Rl[_i,12]
			aBrw35p1[10,3] += aBrw35Rl[_i,12]
			aBrw35p1[19,3] += aBrw35Rl[_i,12]
		Endif

		If Alltrim(aBrw35Rl[_i,11]) == '6118'
			aBrw35p1[05,3] += aBrw35Rl[_i,12]
			aBrw35p1[07,3] += aBrw35Rl[_i,12]
			aBrw35p1[10,3] += aBrw35Rl[_i,12]
			aBrw35p1[19,3] += aBrw35Rl[_i,12]
		Endif

		//INICIO Ticket 6216                    - Abel Babini - 07/12/2020 - Painel Fiscal - Acrescentar CFOP 6109 no relatório Credito Outorgado 7% Interestadual
		If Alltrim(aBrw35Rl[_i,11]) == '6109'
			aBrw35p1[06,3] += aBrw35Rl[_i,12]
			aBrw35p1[07,3] += aBrw35Rl[_i,12]
			aBrw35p1[10,3] += aBrw35Rl[_i,12]
			aBrw35p1[19,3] += aBrw35Rl[_i,12]
		Endif
		//FIM Ticket 6216                    - Abel Babini - 07/12/2020 - Painel Fiscal - Acrescentar CFOP 6109 no relatório Credito Outorgado 7% Interestadual		
		
		If Alltrim(aBrw35Rl[_i,11]) $ '2201,2202,2203'
			aBrw35p1[12,3] += aBrw35Rl[_i,12]
			aBrw35p1[17,3] += aBrw35Rl[_i,12]
			aBrw35p1[19,3] -= aBrw35Rl[_i,12]
			//Exclusao da devolução de embutidos			
			If Alltrim(aBrw35Rl[_i,25])$_cEmbuti .AND. Alltrim(aBrw35Rl[_i,11])=="2201"
				aBrw35p1[14,3] += aBrw35Rl[_i,12]
				aBrw35p1[17,3] -= aBrw35Rl[_i,12]
				aBrw35p1[19,3] += aBrw35Rl[_i,12]
			//Exclusao da devolução de graxaria
			ElseIf Alltrim(aBrw35Rl[_i,25])$_cMVGrax .AND. Alltrim(aBrw35Rl[_i,11])=="2201"
				aBrw35p1[15,3] += aBrw35Rl[_i,12]
				aBrw35p1[17,3] -= aBrw35Rl[_i,12]
				aBrw35p1[19,3] += aBrw35Rl[_i,12]
			Else
				xCrOu35(2,_i)
			Endif
			
			//Exclusao da devolucao de revenda de paletes
			//PARA IMPLEMENTAR
		Endif
		
		//////////////////////////////////
		//CREDITO OUTORGADO 7% ESTADUAL //
		//////////////////////////////////
		If Alltrim(aBrw35Rl[_i,11]) == '5101'
			aBrw35p3[01,3] += aBrw35Rl[_i,12]
			If ! (Alltrim(aBrw35Rl[_i,25])$_cEmbuti .OR. Alltrim(aBrw35Rl[_i,25])$_cMVGrax .OR. Alltrim(aBrw35Rl[_i,25])$_cMVNCom)
				aBrw35p3[06,3] += aBrw35Rl[_i,12]
			ElseIf Alltrim(aBrw35Rl[_i,25])$_cEmbuti
				aBrw35p3[02,3] += aBrw35Rl[_i,12]
			ElseIf Alltrim(aBrw35Rl[_i,25])$_cMVNCom
				aBrw35p3[03,3] += aBrw35Rl[_i,12]
			ElseIf Alltrim(aBrw35Rl[_i,25])$_cMVGrax
				aBrw35p3[04,3] += aBrw35Rl[_i,12]
			Endif
		Endif
		If Alltrim(aBrw35Rl[_i,11]) == '5105'
			aBrw35p3[08,3] += aBrw35Rl[_i,12]
		Endif
		If Alltrim(aBrw35Rl[_i,11]) == '5118' .OR. Alltrim(aBrw35Rl[_i,11]) == '5122'
			aBrw35p3[09,3] += aBrw35Rl[_i,12]
			If ! (Alltrim(aBrw35Rl[_i,25])$_cEmbuti .OR. Alltrim(aBrw35Rl[_i,25])$_cMVGrax .OR. Alltrim(aBrw35Rl[_i,25])$_cMVNCom)
				aBrw35p3[11,3] += aBrw35Rl[_i,12]
			Else
				aBrw35p3[10,3] += aBrw35Rl[_i,12]
			Endif
		Endif
		
		//Devoluções
		If Alltrim(aBrw35Rl[_i,11]) == '1201'
			aBrw35p3[15,3] += aBrw35Rl[_i,12]
			If ! (Alltrim(aBrw35Rl[_i,25])$_cEmbuti .OR. Alltrim(aBrw35Rl[_i,25])$_cMVGrax .OR. Alltrim(aBrw35Rl[_i,25])$_cMVNCom)
				aBrw35p3[19,3] += aBrw35Rl[_i,12]
			Elseif Alltrim(aBrw35Rl[_i,25])$_cMVGrax .OR. Alltrim(aBrw35Rl[_i,25])$_cMVNCom
				aBrw35p3[16,3] += aBrw35Rl[_i,12]
			Elseif Alltrim(aBrw35Rl[_i,25])$_cEmbuti
				aBrw35p3[17,3] += aBrw35Rl[_i,12]
			Endif
		Endif
		
		cXvAux	:=	aBrw35Rl[_i,02]+DTOS(aBrw35Rl[_i,03])+DTOS(aBrw35Rl[_i,04])+aBrw35Rl[_i,05]+aBrw35Rl[_i,06]+aBrw35Rl[_i,07]+aBrw35Rl[_i,08]+aBrw35Rl[_i,09]
	Next _i
	
	//////////////////////////////////////////////

	//TOTAIS 7% INTERESTADUAL
	aBrw35p1[21,3] := Round(aBrw35p1[19,3]*(Val(Alltrim(_cMVCON2))/100),2)

	//TOTAIS 5% ESTADUAL
	aBrw35p2[18,3] := Round(aBrw35p2[06,3]+aBrw35p2[08,3]+aBrw35p2[11,3]+aBrw35p2[16,3],2)
	aBrw35p2[31,3] := Round(aBrw35p2[24,3]+aBrw35p2[29,3],2)
	aBrw35p2[33,3] := Round(aBrw35p2[18,3]-aBrw35p2[31,3],2)
	aBrw35p2[37,3] := Round(aBrw35p2[33,3]*(Val(Alltrim(_cMVCON3))/100),2)
	aBrw35p2[47,3] := Round(aBrw35p2[45,3],2)
	aBrw35p2[56,3] := Round(aBrw35p2[47,3]-aBrw35p2[54,3],2)
	aBrw35p2[58,3] := Round(aBrw35p2[56,3]*(Val(Alltrim(_cMVCON3))/100),2)
	aBrw35p2[61,3] := Round(aBrw35p2[37,3]+aBrw35p2[58,3],2)

	aBrw35dm[06,3] := Round(aBrw35p2[06,3]+aBrw35p2[08,3]+aBrw35p2[11,3]+aBrw35p2[16,3],2)
	aBrw35dm[11,3] := Round(aBrw35p2[24,3]+aBrw35p2[29,3],2)
	aBrw35dm[13,3] := Round(aBrw35p2[18,3]-aBrw35p2[31,3],2)
	aBrw35dm[17,3] := Round(aBrw35p2[33,3]*(Val(Alltrim(_cMVCON3))/100),2)

	//TOTAIS 7% ESTADUAL
	aBrw35p3[13,3] := Round(aBrw35p3[06,3]+aBrw35p3[08,3]+aBrw35p3[11,3],2)
	aBrw35p3[21,3] := Round(aBrw35p3[13,3]-aBrw35p3[19,3],2)
	aBrw35p3[23,3] := Round(aBrw35p3[21,3]*(Val(Alltrim(_cMVCON4))/100),2)

	//Converte os principais arrays em tabelas temporárias
	//Fim da conversão dos arrays em tabelas temporárias
	//Limpa Array da memória
	aBrw35Rl := nil
	SysRefresh()
Return

/*/{Protheus.doc} Static Function xCrOu35
	Carrega da dados Ref. Credito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function xCrOu35(nOpc,_i)
	/////////////////////////////////
	//CREDITO ESTADUAL 5%
	/////////////////////////////////
	If nOpc == 1
		//Relatório Faturamento Estadual
		If (aBrw35Rl[_i,11] >= '5000' .AND. aBrw35Rl[_i,11] <= '5999') .OR. (aBrw35Rl[_i,11] >= '7000')
			IF cXvAux35	== aBrw35Rl[_i,02]+DTOS(aBrw35Rl[_i,03])+DTOS(aBrw35Rl[_i,04])+aBrw35Rl[_i,05]+aBrw35Rl[_i,06]+aBrw35Rl[_i,07]+aBrw35Rl[_i,08]+aBrw35Rl[_i,09]
				aBrw35x1[nLen35X1,11] += aBrw35Rl[_i,12]
				aBrw35x1[nLen35X1,12] += aBrw35Rl[_i,13]
				aBrw35x1[nLen35X1,13] += aBrw35Rl[_i,14]
				aBrw35x1[nLen35X1,14] += aBrw35Rl[_i,15]
				aBrw35x1[nLen35X1,15] += aBrw35Rl[_i,16]
				aBrw35x1[nLen35X1,16] += aBrw35Rl[_i,17]			
			ELSE
				AADD(aBrw35x1,{;
					aBrw35Rl[_i,02],;
					aBrw35Rl[_i,03],;
					aBrw35Rl[_i,04],;
					aBrw35Rl[_i,05],;
					aBrw35Rl[_i,06],;
					aBrw35Rl[_i,07],;
					aBrw35Rl[_i,08],;
					aBrw35Rl[_i,09],;
					aBrw35Rl[_i,10],;
					aBrw35Rl[_i,11],;
					aBrw35Rl[_i,12],;
					aBrw35Rl[_i,13],;
					aBrw35Rl[_i,14],;
					aBrw35Rl[_i,15],;
					aBrw35Rl[_i,16],;
					aBrw35Rl[_i,17]})
				nLen35X1	:= Len(aBrw35x1)
			endif
		//Relatório Entrada Aves Estadual
		ElseIf aBrw35Rl[_i,11] == '1151'
			IF cXvAux35	== aBrw35Rl[_i,02]+DTOS(aBrw35Rl[_i,03])+DTOS(aBrw35Rl[_i,04])+aBrw35Rl[_i,05]+aBrw35Rl[_i,06]+aBrw35Rl[_i,07]+aBrw35Rl[_i,08]+aBrw35Rl[_i,09]
				aBrw35x2[nLen35X2,11] += aBrw35Rl[_i,12]
				aBrw35x2[nLen35X2,12] += aBrw35Rl[_i,13]
				aBrw35x2[nLen35X2,13] += aBrw35Rl[_i,14]
				aBrw35x2[nLen35X2,14] += aBrw35Rl[_i,15]
				aBrw35x2[nLen35X2,15] += aBrw35Rl[_i,16]
				aBrw35x2[nLen35X2,16] += aBrw35Rl[_i,17]			
			ELSE
				AADD(aBrw35x2,{;
					aBrw35Rl[_i,02],;
					aBrw35Rl[_i,03],;
					aBrw35Rl[_i,04],;
					aBrw35Rl[_i,05],;
					aBrw35Rl[_i,06],;
					aBrw35Rl[_i,07],;
					aBrw35Rl[_i,08],;
					aBrw35Rl[_i,09],;
					aBrw35Rl[_i,10],;
					aBrw35Rl[_i,11],;
					aBrw35Rl[_i,12],;
					aBrw35Rl[_i,13],;
					aBrw35Rl[_i,14],;
					aBrw35Rl[_i,15],;
					aBrw35Rl[_i,16],;
					aBrw35Rl[_i,17]})
				nLen35X2	:= Len(aBrw35x2)
			ENDIF
		//Relatório Devoluções Estadual
		ElseIf aBrw35Rl[_i,11] == '1201' .OR. aBrw35Rl[_i,11] == '3201'
			IF cXvAux35	== aBrw35Rl[_i,02]+DTOS(aBrw35Rl[_i,03])+DTOS(aBrw35Rl[_i,04])+aBrw35Rl[_i,05]+aBrw35Rl[_i,06]+aBrw35Rl[_i,07]+aBrw35Rl[_i,08]+aBrw35Rl[_i,09]
				aBrw35x3[nLen35X3,11] += aBrw35Rl[_i,12]
				aBrw35x3[nLen35X3,12] += aBrw35Rl[_i,13]
				aBrw35x3[nLen35X3,13] += aBrw35Rl[_i,14]
				aBrw35x3[nLen35X3,14] += aBrw35Rl[_i,15]
				aBrw35x3[nLen35X3,15] += aBrw35Rl[_i,16]
				aBrw35x3[nLen35X3,16] += aBrw35Rl[_i,17]			
			ELSE
				AADD(aBrw35x3,{;
					aBrw35Rl[_i,02],;
					aBrw35Rl[_i,03],;
					aBrw35Rl[_i,04],;
					aBrw35Rl[_i,05],;
					aBrw35Rl[_i,06],;
					aBrw35Rl[_i,07],;
					aBrw35Rl[_i,08],;
					aBrw35Rl[_i,09],;
					aBrw35Rl[_i,10],;
					aBrw35Rl[_i,11],;
					aBrw35Rl[_i,12],;
					aBrw35Rl[_i,13],;
					aBrw35Rl[_i,14],;
					aBrw35Rl[_i,15],;
					aBrw35Rl[_i,16],;
					aBrw35Rl[_i,17]})
				nLen35X3	:= Len(aBrw35x3)
			ENDIF
		ENDIF
		//Relatório Exportações
		/*Else*/If aBrw35Rl[_i,11] >= '7000' .AND. aBrw35Rl[_i,11] <= '7999'
			IF cXvAux35	== aBrw35Rl[_i,02]+DTOS(aBrw35Rl[_i,03])+DTOS(aBrw35Rl[_i,04])+aBrw35Rl[_i,05]+aBrw35Rl[_i,06]+aBrw35Rl[_i,07]+aBrw35Rl[_i,08]+aBrw35Rl[_i,09]
					aBrw35x4[nLen35X4,09] += aBrw35Rl[_i,23]
			ELSE
				AADD(aBrw35x4,{;
					aBrw35Rl[_i,02],;
					aBrw35Rl[_i,04],;
					aBrw35Rl[_i,07],;
					aBrw35Rl[_i,22],;
					aBrw35Rl[_i,06],;
					aBrw35Rl[_i,05],;
					aBrw35Rl[_i,11],;
					aBrw35Rl[_i,08],;
					aBrw35Rl[_i,23],;
					IIF(Alltrim(aBrw35Rl[_i,18])=="",,aBrw35Rl[_i,18]),;
					aBrw35Rl[_i,19],;
					IIF(Alltrim(DTOS(aBrw35Rl[_i,20]))=="","*** NÃO OCORREU O EMBARQUE DA MERCADORIA ***",aBrw35Rl[_i,20]),;
					aBrw35Rl[_i,21]})
				nLen35X4	:= Len(aBrw35x4)
			ENDIF
		Endif
	ElseIf nOpc == 2
	
		/////////////////////////////////
		//CREDITO INTERESTADUAL 7%
		/////////////////////////////////
		//Relatório Faturamento Interestadual 7%
		If (aBrw35Rl[_i,11] >= '6000' .AND. aBrw35Rl[_i,11] <= '6999')
			IF cXvAux35	== aBrw35Rl[_i,02]+DTOS(aBrw35Rl[_i,03])+DTOS(aBrw35Rl[_i,04])+aBrw35Rl[_i,05]+aBrw35Rl[_i,06]+aBrw35Rl[_i,07]+aBrw35Rl[_i,08]+aBrw35Rl[_i,09]
					aBrw35x5[nLen35X5,11] += aBrw35Rl[_i,12]
					aBrw35x5[nLen35X5,12] += aBrw35Rl[_i,13]
					aBrw35x5[nLen35X5,13] += aBrw35Rl[_i,14]
					aBrw35x5[nLen35X5,14] += aBrw35Rl[_i,15]
					aBrw35x5[nLen35X5,15] += aBrw35Rl[_i,16]
					aBrw35x5[nLen35X5,16] += aBrw35Rl[_i,17]			
			ELSE
					AADD(aBrw35x5,{;
						aBrw35Rl[_i,02],;
						aBrw35Rl[_i,03],;
						aBrw35Rl[_i,04],;
						aBrw35Rl[_i,05],;
						aBrw35Rl[_i,06],;
						aBrw35Rl[_i,07],;
						aBrw35Rl[_i,08],;
						aBrw35Rl[_i,09],;
						aBrw35Rl[_i,10],;
						aBrw35Rl[_i,11],;
						aBrw35Rl[_i,12],;
						aBrw35Rl[_i,13],;
						aBrw35Rl[_i,14],;
						aBrw35Rl[_i,15],;
						aBrw35Rl[_i,16],;
						aBrw35Rl[_i,17]})
					nLen35X5	:= Len(aBrw35x5)
			ENDIF
		//Relatório Devolução de Vendas Interestadual 7%
		ElseIf (aBrw35Rl[_i,11] >= '2000' .AND. aBrw35Rl[_i,11] <= '2999')
			IF cXvAux35	== aBrw35Rl[_i,02]+DTOS(aBrw35Rl[_i,03])+DTOS(aBrw35Rl[_i,04])+aBrw35Rl[_i,05]+aBrw35Rl[_i,06]+aBrw35Rl[_i,07]+aBrw35Rl[_i,08]+aBrw35Rl[_i,09]
					aBrw35x6[nLen35X6,11] += aBrw35Rl[_i,12]
					aBrw35x6[nLen35X6,12] += aBrw35Rl[_i,13]
					aBrw35x6[nLen35X6,13] += aBrw35Rl[_i,14]
					aBrw35x6[nLen35X6,14] += aBrw35Rl[_i,15]
					aBrw35x6[nLen35X6,15] += aBrw35Rl[_i,16]
					aBrw35x6[nLen35X6,16] += aBrw35Rl[_i,17]			
			ELSE
					AADD(aBrw35x6,{;
						aBrw35Rl[_i,02],;
						aBrw35Rl[_i,03],;
						aBrw35Rl[_i,04],;
						aBrw35Rl[_i,05],;
						aBrw35Rl[_i,06],;
						aBrw35Rl[_i,07],;
						aBrw35Rl[_i,08],;
						aBrw35Rl[_i,09],;
						aBrw35Rl[_i,10],;
						aBrw35Rl[_i,11],;
						aBrw35Rl[_i,12],;
						aBrw35Rl[_i,13],;
						aBrw35Rl[_i,14],;
						aBrw35Rl[_i,15],;
						aBrw35Rl[_i,16],;
						aBrw35Rl[_i,17]})
					nLen35X6	:= Len(aBrw35x6)
			ENDIF
		Endif
	ElseIf nOpc == 3
		If (aBrw35Rl[_i,11] >= '5000' .AND. aBrw35Rl[_i,11] <= '5999')
			IF cXvAux35	== aBrw35Rl[_i,02]+DTOS(aBrw35Rl[_i,03])+DTOS(aBrw35Rl[_i,04])+aBrw35Rl[_i,05]+aBrw35Rl[_i,06]+aBrw35Rl[_i,07]+aBrw35Rl[_i,08]+aBrw35Rl[_i,09]
					aBrw35x7[nLen35X7,11] += aBrw35Rl[_i,12]
					aBrw35x7[nLen35X7,12] += aBrw35Rl[_i,13]
					aBrw35x7[nLen35X7,13] += aBrw35Rl[_i,14]
					aBrw35x7[nLen35X7,14] += aBrw35Rl[_i,15]
					aBrw35x7[nLen35X7,15] += aBrw35Rl[_i,16]
					aBrw35x7[nLen35X7,16] += aBrw35Rl[_i,17]			
			ELSE
					AADD(aBrw35x7,{;
						aBrw35Rl[_i,02],;
						aBrw35Rl[_i,03],;
						aBrw35Rl[_i,04],;
						aBrw35Rl[_i,05],;
						aBrw35Rl[_i,06],;
						aBrw35Rl[_i,07],;
						aBrw35Rl[_i,08],;
						aBrw35Rl[_i,09],;
						aBrw35Rl[_i,10],;
						aBrw35Rl[_i,11],;
						aBrw35Rl[_i,12],;
						aBrw35Rl[_i,13],;
						aBrw35Rl[_i,14],;
						aBrw35Rl[_i,15],;
						aBrw35Rl[_i,16],;
						aBrw35Rl[_i,17]})
					nLen35X7	:= Len(aBrw35x7)
			ENDIF
			//Relatório Devoluções Estadual
		ElseIf aBrw35Rl[_i,11] == '1201'
			IF cXvAux35	== aBrw35Rl[_i,02]+DTOS(aBrw35Rl[_i,03])+DTOS(aBrw35Rl[_i,04])+aBrw35Rl[_i,05]+aBrw35Rl[_i,06]+aBrw35Rl[_i,07]+aBrw35Rl[_i,08]+aBrw35Rl[_i,09]
					aBrw35x8[nLen35X8,11] += aBrw35Rl[_i,12]
					aBrw35x8[nLen35X8,12] += aBrw35Rl[_i,13]
					aBrw35x8[nLen35X8,13] += aBrw35Rl[_i,14]
					aBrw35x8[nLen35X8,14] += aBrw35Rl[_i,15]
					aBrw35x8[nLen35X8,15] += aBrw35Rl[_i,16]
					aBrw35x8[nLen35X8,16] += aBrw35Rl[_i,17]			
			ELSE
					AADD(aBrw35x8,{;
						aBrw35Rl[_i,02],;
						aBrw35Rl[_i,03],;
						aBrw35Rl[_i,04],;
						aBrw35Rl[_i,05],;
						aBrw35Rl[_i,06],;
						aBrw35Rl[_i,07],;
						aBrw35Rl[_i,08],;
						aBrw35Rl[_i,09],;
						aBrw35Rl[_i,10],;
						aBrw35Rl[_i,11],;
						aBrw35Rl[_i,12],;
						aBrw35Rl[_i,13],;
						aBrw35Rl[_i,14],;
						aBrw35Rl[_i,15],;
						aBrw35Rl[_i,16],;
						aBrw35Rl[_i,17]})
					nLen35X8	:= Len(aBrw35x8)
			ENDIF
		Endif
	Endif
Return

/*/{Protheus.doc} Static Function xAB35IVr  
	Carrega da dados Ref. Credito Outorgado 2021
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function xAB35IVr()
	Local _i
	///////////////////////////////////////////////////////////////
	//CREDITO PRESUMIDO INTERESTADUAL 7%
	///////////////////////////////////////////////////////////////
	//Inicializa Array Interestadual 7%
	aBrw35p1	:= Array(21,3)
	For _i := 1 to 21
		aBrw35p1[_i,1]	:= cFilAnt
		aBrw35p1[_i,3]	:= 0
	Next _i
	
	aBrw35p1[01,2]	:= "CFOP 6.101 - Venda Interestadual"
	aBrw35p1[02,2]	:= "6.122"
	aBrw35p1[03,2]	:= "6.105"
	aBrw35p1[04,2]	:= "6.922"
	aBrw35p1[05,2]	:= "6.118"
	aBrw35p1[06,2]	:= "6.109" //Ticket 6216                    - Abel Babini - 07/12/2020 - Painel Fiscal - Acrescentar CFOP 6109 no relatório Credito Outorgado 7% Interestadual
	aBrw35p1[07,2]	:= "Total" //Ticket 6216                    - Abel Babini - 07/12/2020 - Painel Fiscal - Acrescentar CFOP 6109 no relatório Credito Outorgado 7% Interestadual
	//aBrw35p1[07,2]	:= ""
	aBrw35p1[08,2]	:= "(-) Exclusão Venda Interestadual Embutidos ( 6.101, 6.105)"
	aBrw35p1[09,2]	:= "(-) Exclusão Venda Interestadual Graxaria ( 6.101)"
	aBrw35p1[10,2]	:= "Total de Vendas"
	aBrw35p1[11,2]	:= ""
	aBrw35p1[12,2]	:= "(-) Devolução de Venda Interestadual 2.201, 2.202, 2.203" 
	aBrw35p1[13,2]	:= ""
	aBrw35p1[14,2]	:= "(-) Exclusão Devolução Interestadual Embutidos ( 2.201)"
	aBrw35p1[15,2]	:= "(-) Exclusão Devolução Graxaria ( 2.201)"
	aBrw35p1[16,2]	:= "(-) Exclusão Devolução Revenda - Paletes ( 2.202)"
	aBrw35p1[17,2]	:= "Total de Devolução de Venda Interestadual"
	aBrw35p1[18,2]	:= ""
	aBrw35p1[19,2]	:= "Base de Cálculo"
	aBrw35p1[20,2]	:= ""
	aBrw35p1[21,2]	:= "Valor do Crédito Outorgado - "+Alltrim(_cMVCON2)+"%"
	
	///////////////////////////////////////////////////////////////
	//CREDITO PRESUMIDO ESTADUAL 5%                              //
	///////////////////////////////////////////////////////////////
	//Inicializa Array Estadual 2.8%
	aBrw35p2	:= Array(61,3)
	For _i := 1 to 61
		aBrw35p2[_i,1]	:= cFilAnt // IIF(Len(aBrw35Rs) > 0,aBrw35Rs[1,1],0)
		aBrw35p2[_i,3]	:= 0
	Next _i
	
	aBrw35p2[01,2]	:= "5101 - Venda Interna"
	aBrw35p2[02,2]	:= "(-) Venda Embutidos"
	aBrw35p2[03,2]	:= "(-) Venda Produto Não Comestível"
	aBrw35p2[04,2]	:= "(-) Venda Graxaria"
	aBrw35p2[05,2]	:= ""
	aBrw35p2[06,2]	:= "5101 - Venda Interna de Frango e Cortes"
	aBrw35p2[07,2]	:= ""
	aBrw35p2[08,2]	:= "5105 - Venda Interna - Saída Armazem"
	aBrw35p2[09,2]	:= "5118/ 5122 - Venda a Ordem"
	aBrw35p2[10,2]	:= "(-) Venda Produto Não Comestível"
	aBrw35p2[11,2]	:= "5118 / 5122- Venda Ordem de Frango e Cortes"
	aBrw35p2[12,2]	:= ""
	aBrw35p2[13,2]	:= "7101 / 7105 - Venda Exportação"
	aBrw35p2[14,2]	:= "(-) Venda Produto Não Comestível"
	aBrw35p2[15,2]	:= ""
	aBrw35p2[16,2]	:= "7101 / 7105 - Venda Exportação de Frangos e Cortes"
	aBrw35p2[17,2]	:= ""
	aBrw35p2[18,2]	:= "TOTAL SAÍDA"
	aBrw35p2[19,2]	:= ""
	aBrw35p2[20,2]	:= "1201 - Devolução Interna"
	aBrw35p2[21,2]	:= "(-) Devolução Graxaria e Não Comestível"
	aBrw35p2[22,2]	:= "(-) Devolução Embutidos"
	aBrw35p2[23,2]	:= ""
	aBrw35p2[24,2]	:= "1201 Devolução Frango e Cortes" 
	aBrw35p2[25,2]	:= ""
	aBrw35p2[26,2]	:= "3201 Devolução Exportação Frango e Cortes" 
	aBrw35p2[27,2]	:= "(-) Devolução Exportação Não Comestível" 
	aBrw35p2[28,2]	:= ""
	aBrw35p2[29,2]	:= "3201 Devolução Frango e Cortes" 
	aBrw35p2[30,2]	:= ""
	aBrw35p2[31,2]	:= "(-) Total de Devolução de Venda Estadual"
	aBrw35p2[32,2]	:= ""
	aBrw35p2[33,2]	:= "Base de Cálculo"
	aBrw35p2[34,2]	:= ""
	aBrw35p2[35,2]	:= "1151 - Entrada de Aves - Internas"
	aBrw35p2[36,2]	:= ""
	aBrw35p2[37,2]	:= "Valor do Crédito Outorgado - "+Alltrim(_cMVCON3)+"% - Venda"
	aBrw35p2[38,2]	:= ""
	aBrw35p2[39,2]	:= ""
	aBrw35p2[40,2]	:= "5151 - Transferencia"
	aBrw35p2[41,2]	:= "(-) Transferencia Graxaria - SC"
	aBrw35p2[42,2]	:= "(-) Transferencia Embutidos"
	aBrw35p2[43,2]	:= "(-) Transferencia Produto não Comestivel"
	aBrw35p2[44,2]	:= ""
	aBrw35p2[45,2]	:= "5151 - Transferencia de Frango e Corte"
	aBrw35p2[46,2]	:= ""
	aBrw35p2[47,2]	:= "Total Transferencia"
	aBrw35p2[48,2]	:= ""
	aBrw35p2[49,2]	:= "1152 -Entrada de Transferencia"
	aBrw35p2[50,2]	:= "(-) Produto não comestivel"
	aBrw35p2[51,2]	:= "(-) Embutidos"
	aBrw35p2[52,2]	:= "(-) Insumos de Embutidos"
	aBrw35p2[53,2]	:= ""
	aBrw35p2[54,2]	:= "1152 - Entrada de Transferencia"
	aBrw35p2[55,2]	:= ""
	aBrw35p2[56,2]	:= "Base de Calculo"
	aBrw35p2[57,2]	:= ""
	aBrw35p2[58,2]	:= "Valor do Crédito Outorgado - "+Alltrim(_cMVCON3)+"%"
	aBrw35p2[59,2]	:= ""
	aBrw35p2[60,2]	:= ""
	aBrw35p2[61,2]	:= "Valor Total do Crédito Gerado no Mês"
	
	///////////////////////////////////////////////////////////////
	//CREDITO PRESUMIDO ESTADUAL 7%
	///////////////////////////////////////////////////////////////
	//Inicializa Array Estadual 5,6%
	aBrw35p3	:= Array(23,3)
	For _i := 1 to 23
		aBrw35p3[_i,1]	:= cFilAnt // IIF(Len(aBrw35Rs) > 0,aBrw35Rs[1,1],0)
		aBrw35p3[_i,3]	:= 0
	Next _i
	
	aBrw35p3[01,2]	:= "5101 - Venda Interna"
	aBrw35p3[02,2]	:= "(-) Venda Embutidos"
	aBrw35p3[03,2]	:= "(-) Venda Produto Não Comestível"
	aBrw35p3[04,2]	:= "(-) Venda Graxaria"
	aBrw35p3[05,2]	:= ""
	aBrw35p3[06,2]	:= "5101 - Venda Interna de Frango e Cortes"
	aBrw35p3[07,2]	:= ""
	aBrw35p3[08,2]	:= "5105 - Venda Interna - Saída Armazem"
	aBrw35p3[09,2]	:= "5118/ 5122 - Venda a Ordem"
	aBrw35p3[10,2]	:= "(-) Venda Produto Não Comestível"
	aBrw35p3[11,2]	:= "5118 / 5122- Venda Ordem de Frango e Cortes"
	aBrw35p3[12,2]	:= ""
	//aBrw35p3[13,2]	:= "7101 - Venda Exportação"
	//aBrw35p3[14,2]	:= "(-) Venda Produto Não Comestível"
	//aBrw35p3[15,2]	:= ""
	//aBrw35p3[16,2]	:= "7101 - Venda Exportação de Frangos e Cortes"
	//aBrw35p3[17,2]	:= ""
	aBrw35p3[13,2]	:= "TOTAL SAÍDA"
	aBrw35p3[14,2]	:= ""
	aBrw35p3[15,2]	:= "1201 - Devolução Interna"
	aBrw35p3[16,2]	:= "(-) Devolução Graxaria e Não Comestível"
	aBrw35p3[17,2]	:= "(-) Devolução Embutidos"
	aBrw35p3[18,2]	:= ""
	//aBrw35p3[19,2]	:= "1201 Devolução Frango e Cortes" 
	//aBrw35p3[20,2]	:= ""
	aBrw35p3[19,2]	:= "(-) Total de Devolução de Venda Estadual"
	aBrw35p3[20,2]	:= ""
	aBrw35p3[21,2]	:= "Base de Cálculo"
	aBrw35p3[22,2]	:= ""
	aBrw35p3[23,2]	:= "Valor do Crédito Outorgado - "+Alltrim(_cMVCON4)+"% - Venda"

	///////////////////////////////////////////////////////////////
	//CREDITO PRESUMIDO ESTADUAL 5% DEMONSTRATIVO DGCA           //
	///////////////////////////////////////////////////////////////
	//Inicializa Array Estadual 2,8%
	aBrw35dm	:= Array(17,3)
	For _i := 1 to 17
		aBrw35dm[_i,1]	:= IIF(Len(aBrw35Rs) > 0,aBrw35Rs[1,1],0)
		aBrw35dm[_i,3]	:= 0
	Next _i
	
	aBrw35dm[01,2]	:= "5101 - Venda Interna de Frango e Cortes"
	aBrw35dm[02,2]	:= "5105 - Venda Interna - Saída Armazém"
	aBrw35dm[03,2]	:= "5118 / 5122 - Venda Ordem de Frango e Cortes"
	aBrw35dm[04,2]	:= "7101 / 7105 - Venda Exportação de Frangos e Cortes"
	aBrw35dm[05,2]	:= ""
	aBrw35dm[06,2]	:= "TOTAL SAÍDA"
	aBrw35dm[07,2]	:= ""
	aBrw35dm[08,2]	:= "1201 Devolução Frango e Cortes" 
	aBrw35dm[09,2]	:= "3201 Devolução Frango e Cortes" 
	aBrw35dm[10,2]	:= ""
	aBrw35dm[11,2]	:= "(-) Total de Devolução de Venda Estadual"
	aBrw35dm[12,2]	:= ""
	aBrw35dm[13,2]	:= "Base de Cálculo"
	aBrw35dm[14,2]	:= ""
	aBrw35dm[15,2]	:= "1151 - Entrada de Aves - Internas"
	aBrw35dm[16,2]	:= ""
	aBrw35dm[17,2]	:= "Valor do Crédito Outorgado - "+Alltrim(_cMVCON3)+"% - Venda"
Return

/*/{Protheus.doc} Static Function xRelBr35
	Gera Relatório Ref. Crédito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function xRelBr35()
	Local aSays			:= {}
	Local aButtons		:= {}
	Local nOpca			:= 0
	//+-----------------------------------------------+
	//|Monta Form Batch - Interface com o Usuario     |
	//+-----------------------------------------------+
	AADD(aSays,"Este programa tem a finalidade de Gerar um arquivo Excel " )
	AADD(aSays,"Relatorio de Crédito Outorgado Dec 65.255" )
    
	AADD(aButtons, { 1,.T.,{|o| nOpca:=1, o:oWnd:End(), Processa({||xRelB35b()},"Gerando arquivo","Aguarde...")    }})
	AADD(aButtons, { 2,.T.,{|o| nOpca:=2, o:oWnd:End() }})	
	FormBatch( cCadastr, aSays, aButtons )
	
	MsgInfo("Arquivo Excel gerado!")        
	
Return

/*/{Protheus.doc} Static Function xRelB35c 
	Gera Relatório Ref. Crédito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function xRelB35c()
	Local aSays			:= {}
	Local aButtons		:= {}
	Local nOpca			:= 0
	//+-----------------------------------------------+
	//|Monta Form Batch - Interface com o Usuario     |
	//+-----------------------------------------------+
	AADD(aSays,"Este programa tem a finalidade de Gerar um arquivo Excel " )
	AADD(aSays,"Relatorio de Crédito Outorgado - DADOS DGCA - Dec. 65.255/2020" )
    
	AADD(aButtons, { 1,.T.,{|o| nOpca:=1, o:oWnd:End(), Processa({||xRelB35d()},"Gerando arquivo","Aguarde...")    }})
	AADD(aButtons, { 2,.T.,{|o| nOpca:=2, o:oWnd:End() }})	
	FormBatch( cCadastr, aSays, aButtons )
	
	MsgInfo("Arquivo Excel gerado!")        
	
Return

/*/{Protheus.doc} Static Function xRelB35d  
	Gera Relatório Ref. Crédito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function xRelB35d()
	Private oExcel
	Private oMsExcel
	
	BEGIN SEQUENCE
	
		//5% Estadual Faturamento
		oExcel		:= FWMSEXCELEX():New()
		oMsExcel	:= NIL
		cArquivo	:= cPathRel +  'Relação de Notas Fiscais de Saída_' + MesExtenso(_mvpr02) + ' ' + Alltrim(Str(Ano(_mvpr02))) + '.XML'
		//IF .NOT.( ApOleClient("MsExcel") )   // se nao existir o excel sai fora..
		//    Alert("Nao Existe Excel Instalado")
    //        BREAK
		//EndIF
		Cab35P3b()
		GEx35P3b()
		SalvaXml()
		CriaExcel()

        //5% Estadual Devolução
		oExcel		:= FWMSEXCELEX():New()
		oMsExcel	:= NIL
		cArquivo	:= cPathRel +  'Relação de Notas Fiscais de Devolução_' + MesExtenso(_mvpr02) + ' ' + Alltrim(Str(Ano(_mvpr02))) + '.XML'
		Cab35P5b()
		GEx35P5b()
		SalvaXml()
		CriaExcel()

        //5% Estadual Exportação
		oExcel		:= FWMSEXCELEX():New()
		oMsExcel	:= NIL
		cArquivo	:= cPathRel +  'Relação Exportação_' + MesExtenso(_mvpr02) + ' ' + Alltrim(Str(Ano(_mvpr02))) + '.XML'
		Cab35P6b()
		GEx35P6b()
		SalvaXml()
		CriaExcel()

        //5% Estadual Compra Aves
		oExcel		:= FWMSEXCELEX():New()
		oMsExcel	:= NIL
		cArquivo	:= cPathRel +  'Relação de Notas Fiscais Entrada Aves_' + MesExtenso(_mvpr02) + ' ' + Alltrim(Str(Ano(_mvpr02))) + '.XML'
		Cab35P4b()
		GEx35P4b()
		SalvaXml()
		CriaExcel()
        
		//Demonstrativo Credito
		oExcel		:= FWMSEXCELEX():New()
		oMsExcel	:= NIL
		cArquivo	:= cPathRel +  'Demonstrativo Cred Outorgado_' + MesExtenso(_mvpr02) + ' ' + Alltrim(Str(Ano(_mvpr02))) + '.XML'
		Cab35PA()
		GEx35PA()
		SalvaXml()
		CriaExcel()
		
	END SEQUENCE

Return

/*/{Protheus.doc} Static Function xRelB35b  
	Gera Relatório Ref. Crédito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function xRelB35b()
	Private oExcel     := FWMSEXCELEX():New()
	//Private cArquivo	:= cGetFile("Arquivo XML", "Selecione o diretório para salvar o relatório",,'C:\',.T.,GETF_RETDIRECTORY + GETF_LOCALHARD + GETF_NETWORKDRIVE)	
	Private oMsExcel   := NIL
	
	cArquivo := cPathRel +  'ROUTORGADO_' + DTOS(DATE()) + STRTRAN(TIME(),':','') + '.XML'
	BEGIN SEQUENCE
		
		//IF .NOT.( ApOleClient("MsExcel") )   // se nao existir o excel sai fora..
		//    Alert("Nao Existe Excel Instalado")
    //        BREAK
		//EndIF
        	
		//Quadros
		Cab35P1()             
		GEx35P1()
			
		//Resumo
		Cab35P2()
		GEx35P2()

		//5% Estadual Faturamento 
		Cab35P3()
		GEx35P3()

		//5% Estadual Devolução
		Cab35P5()
		GEx35P5()

		//5% Estadual Exportação
		Cab35P6()
		GEx35P6()

		//5% Estadual Compra Aves
		Cab35P4()
		GEx35P4()

		//7% Interestadual Faturamento
		Cab35P7()
		GEx35P7()

			//7% Interestadual Devolucao
		Cab35P8()
			GEx35P8()
			
			//7% Estadual Faturamento 
		Cab35P9()
		GEx35P9()
			
			//7% Estadual Devolução
		Cab35P0()
		GEx35P0()
        
    SalvaXml()
		CriaExcel()
	
	END SEQUENCE

Return

/*/{Protheus.doc} Static Function Cab35P1  
	Gera Relatório Ref. Crédito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function Cab35P1()
	Local nColBr35	:= 0
	//PLANILHA 1 - QUADROS
    oExcel:AddworkSheet(cFld35)
	oExcel:AddTable(cFld35,cFld35t1)
	oExcel:AddColumn(cFld35,cFld35t1,"Filial"	,1,1)
	oExcel:AddColumn(cFld35,cFld35t1,"Descrição",1,1)
	oExcel:AddColumn(cFld35,cFld35t1,"Valor"	,2,2)
RETURN(NIL)  

/*/{Protheus.doc} Static Function Cab35P2  
	Gera Relatório Ref. Crédito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function Cab35P2()
	Local nColBr35	:= 0
	//PLANILHA 1 - RESUMO
    oExcel:AddworkSheet(cFld352)
	oExcel:AddTable(cFld352,cFld35t2)
	oExcel:AddColumn(cFld352,cFld35t2,"Filial"	,1,1)
	oExcel:AddColumn(cFld352,cFld35t2,"CFOP"		,1,1)
	
	For nColBr35 := 1 To nQNCM35
		oExcel:AddColumn(cFld352,cFld35t2,aBrw35Nc[nColBr35],2,2)
	Next nColBr35
	
	oExcel:AddColumn(cFld352,cFld35t2,"Total"	,2,2)

RETURN(NIL)  

/*/{Protheus.doc} Static Function Cab35P3  
	Gera Relatório Ref. Crédito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function Cab35P3()
	//PLANILHA 2 - DETALHE CREDITO OUTORGADO
	oExcel:AddworkSheet(cFld353)
	oExcel:AddTable(cFld353,cFld35t3)
	oExcel:AddColumn(cFld353,cFld35t3,"Filial"  	,1,1)
	oExcel:AddColumn(cFld353,cFld35t3,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld353,cFld35t3,"Dt.Emissao"	,1,1)
	oExcel:AddColumn(cFld353,cFld35t3,"Nota Fiscal"	,1,1)
	oExcel:AddColumn(cFld353,cFld35t3,"Serie NF"	,1,1)
	oExcel:AddColumn(cFld353,cFld35t3,"UF"			,1,1)
	oExcel:AddColumn(cFld353,cFld35t3,"Nome"		,1,1)
	oExcel:AddColumn(cFld353,cFld35t3,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld353,cFld35t3,"Insc.Est."	,1,1)
	oExcel:AddColumn(cFld353,cFld35t3,"CFOP"		,1,1)
	oExcel:AddColumn(cFld353,cFld35t3,"Vl. Contab."	,2,3)
	oExcel:AddColumn(cFld353,cFld35t3,"Base ICMS"	,2,3)
	oExcel:AddColumn(cFld353,cFld35t3,"ICMS"		,2,3)
	oExcel:AddColumn(cFld353,cFld35t3,"ICMS Isento"	,2,3)
	oExcel:AddColumn(cFld353,cFld35t3,"ICMS Outras"	,2,3)
	oExcel:AddColumn(cFld353,cFld35t3,"IPI"			,2,3)

	/*oExcel:AddColumn(cFld352,cFld35t2,"NCM"			,1,1)
	oExcel:AddColumn(cFld352,cFld35t2,"Clie/Forn"	,1,1)
	oExcel:AddColumn(cFld352,cFld35t2,"Loja"		,1,1)
	oExcel:AddColumn(cFld352,cFld35t2,"Nome"		,1,1)
	oExcel:AddColumn(cFld352,cFld35t2,"Vl. ICMS Ret.",2,3)
	oExcel:AddColumn(cFld352,cFld35t2,"Observ."		,1,1)
	oExcel:AddColumn(cFld352,cFld35t2,"Dt.Canc."	,1,1)	
	oExcel:AddColumn(cFld352,cFld35t2,"Conta Cont."	,1,1)	
	oExcel:AddColumn(cFld352,cFld35t2,"Cod.Produto"	,1,1)
	oExcel:AddColumn(cFld352,cFld35t2,"Descrição"	,1,1)
	oExcel:AddColumn(cFld352,cFld35t2,"Quant."		,2,2)
	oExcel:AddColumn(cFld352,cFld35t2,"Vl.Total"	,2,3)
	oExcel:AddColumn(cFld352,cFld35t2,"Espécie"		,1,1)
	oExcel:AddColumn(cFld352,cFld35t2,"Tipo Doc."	,1,1)*/

Return(NIL)

/*/{Protheus.doc} Static Function Cab35P3b  
	Gera Relatório Ref. Crédito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function Cab35P3b()
	//PLANILHA 2 - DETALHE CREDITO OUTORGADO
  oExcel:AddworkSheet(cFld353b)
	oExcel:AddTable(cFld353b,cFld35t3)
	oExcel:AddColumn(cFld353b,cFld35t3,"Filial"  	,1,1)
	oExcel:AddColumn(cFld353b,cFld35t3,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld353b,cFld35t3,"Dt.Emissao"	,1,1)
	oExcel:AddColumn(cFld353b,cFld35t3,"Nota Fiscal"	,1,1)
	oExcel:AddColumn(cFld353b,cFld35t3,"Serie NF"	,1,1)
	oExcel:AddColumn(cFld353b,cFld35t3,"UF"			,1,1)
	oExcel:AddColumn(cFld353b,cFld35t3,"Nome"		,1,1)
	oExcel:AddColumn(cFld353b,cFld35t3,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld353b,cFld35t3,"Insc.Est."	,1,1)
	oExcel:AddColumn(cFld353b,cFld35t3,"CFOP"		,1,1)
	oExcel:AddColumn(cFld353b,cFld35t3,"Vl. Contab."	,2,3)
	oExcel:AddColumn(cFld353b,cFld35t3,"Base ICMS"	,2,3)
	oExcel:AddColumn(cFld353b,cFld35t3,"ICMS"		,2,3)
	oExcel:AddColumn(cFld353b,cFld35t3,"ICMS Isento"	,2,3)
	oExcel:AddColumn(cFld353b,cFld35t3,"ICMS Outras"	,2,3)
	oExcel:AddColumn(cFld353b,cFld35t3,"IPI"			,2,3)

Return(NIL)

/*/{Protheus.doc} Static Function Cab35P4  
	Gera Relatório Ref. Crédito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function Cab35P4()
	//PLANILHA 2 - DETALHE CREDITO OUTORGADO
    oExcel:AddworkSheet(cFld354)
	oExcel:AddTable(cFld354,cFld35t4)
	oExcel:AddColumn(cFld354,cFld35t4,"Filial"  	,1,1)
	oExcel:AddColumn(cFld354,cFld35t4,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld354,cFld35t4,"Dt.Emissao"	,1,1)
	oExcel:AddColumn(cFld354,cFld35t4,"Nota Fiscal"	,1,1)
	oExcel:AddColumn(cFld354,cFld35t4,"Serie NF"	,1,1)
	oExcel:AddColumn(cFld354,cFld35t4,"UF"			,1,1)
	oExcel:AddColumn(cFld354,cFld35t4,"Nome"		,1,1)
	oExcel:AddColumn(cFld354,cFld35t4,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld354,cFld35t4,"Insc.Est."	,1,1)
	oExcel:AddColumn(cFld354,cFld35t4,"CFOP"		,1,1)
	oExcel:AddColumn(cFld354,cFld35t4,"Vl. Contab."	,2,3)
	oExcel:AddColumn(cFld354,cFld35t4,"Base ICMS"	,2,3)
	oExcel:AddColumn(cFld354,cFld35t4,"ICMS"		,2,3)
	oExcel:AddColumn(cFld354,cFld35t4,"ICMS Isento"	,2,3)
	oExcel:AddColumn(cFld354,cFld35t4,"ICMS Outras"	,2,3)
	oExcel:AddColumn(cFld354,cFld35t4,"IPI"			,2,3)
				
Return(NIL)

/*/{Protheus.doc} Static Function Cab35P4b  
	Gera Relatório Ref. Crédito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function Cab35P4b()
	//PLANILHA 2 - DETALHE CREDITO OUTORGADO
  oExcel:AddworkSheet(cFld354b)
	oExcel:AddTable(cFld354b,cFld35t4)
	oExcel:AddColumn(cFld354b,cFld35t4,"Filial"  	,1,1)
	oExcel:AddColumn(cFld354b,cFld35t4,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld354b,cFld35t4,"Dt.Emissao"	,1,1)
	oExcel:AddColumn(cFld354b,cFld35t4,"Nota Fiscal"	,1,1)
	oExcel:AddColumn(cFld354b,cFld35t4,"Serie NF"	,1,1)
	oExcel:AddColumn(cFld354b,cFld35t4,"UF"			,1,1)
	oExcel:AddColumn(cFld354b,cFld35t4,"Nome"		,1,1)
	oExcel:AddColumn(cFld354b,cFld35t4,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld354b,cFld35t4,"Insc.Est."	,1,1)
	oExcel:AddColumn(cFld354b,cFld35t4,"CFOP"		,1,1)
	oExcel:AddColumn(cFld354b,cFld35t4,"Vl. Contab."	,2,3)
	oExcel:AddColumn(cFld354b,cFld35t4,"Base ICMS"	,2,3)
	oExcel:AddColumn(cFld354b,cFld35t4,"ICMS"		,2,3)
	oExcel:AddColumn(cFld354b,cFld35t4,"ICMS Isento"	,2,3)
	oExcel:AddColumn(cFld354b,cFld35t4,"ICMS Outras"	,2,3)
	oExcel:AddColumn(cFld354b,cFld35t4,"IPI"			,2,3)
				
Return(NIL)

/*/{Protheus.doc} Static Function Cab35P5  
	Gera Relatório Ref. Crédito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function Cab35P5()
	//PLANILHA 2 - DETALHE CREDITO OUTORGADO
    oExcel:AddworkSheet(cFld355)
	oExcel:AddTable(cFld355,cFld35t5)
	oExcel:AddColumn(cFld355,cFld35t5,"Filial"  	,1,1)
	oExcel:AddColumn(cFld355,cFld35t5,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld355,cFld35t5,"Dt.Emissao"	,1,1)
	oExcel:AddColumn(cFld355,cFld35t5,"Nota Fiscal"	,1,1)
	oExcel:AddColumn(cFld355,cFld35t5,"Serie NF"	,1,1)
	oExcel:AddColumn(cFld355,cFld35t5,"UF"			,1,1)
	oExcel:AddColumn(cFld355,cFld35t5,"Nome"		,1,1)
	oExcel:AddColumn(cFld355,cFld35t5,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld355,cFld35t5,"Insc.Est."	,1,1)
	oExcel:AddColumn(cFld355,cFld35t5,"CFOP"		,1,1)
	oExcel:AddColumn(cFld355,cFld35t5,"Vl. Contab."	,2,3)
	oExcel:AddColumn(cFld355,cFld35t5,"Base ICMS"	,2,3)
	oExcel:AddColumn(cFld355,cFld35t5,"ICMS"		,2,3)
	oExcel:AddColumn(cFld355,cFld35t5,"ICMS Isento"	,2,3)
	oExcel:AddColumn(cFld355,cFld35t5,"ICMS Outras"	,2,3)
	oExcel:AddColumn(cFld355,cFld35t5,"IPI"			,2,3)
				
Return(NIL)

/*/{Protheus.doc} Static Function Cab35P5b  
	Gera Relatório Ref. Crédito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function Cab35P5b()
	//PLANILHA 2 - DETALHE CREDITO OUTORGADO
  oExcel:AddworkSheet(cFld355b)
	oExcel:AddTable(cFld355b,cFld35t5)
	oExcel:AddColumn(cFld355b,cFld35t5,"Filial"  	,1,1)
	oExcel:AddColumn(cFld355b,cFld35t5,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld355b,cFld35t5,"Dt.Emissao"	,1,1)
	oExcel:AddColumn(cFld355b,cFld35t5,"Nota Fiscal"	,1,1)
	oExcel:AddColumn(cFld355b,cFld35t5,"Serie NF"	,1,1)
	oExcel:AddColumn(cFld355b,cFld35t5,"UF"			,1,1)
	oExcel:AddColumn(cFld355b,cFld35t5,"Nome"		,1,1)
	oExcel:AddColumn(cFld355b,cFld35t5,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld355b,cFld35t5,"Insc.Est."	,1,1)
	oExcel:AddColumn(cFld355b,cFld35t5,"CFOP"		,1,1)
	oExcel:AddColumn(cFld355b,cFld35t5,"Vl. Contab."	,2,3)
	oExcel:AddColumn(cFld355b,cFld35t5,"Base ICMS"	,2,3)
	oExcel:AddColumn(cFld355b,cFld35t5,"ICMS"		,2,3)
	oExcel:AddColumn(cFld355b,cFld35t5,"ICMS Isento"	,2,3)
	oExcel:AddColumn(cFld355b,cFld35t5,"ICMS Outras"	,2,3)
	oExcel:AddColumn(cFld355b,cFld35t5,"IPI"			,2,3)
				
Return(NIL)

/*/{Protheus.doc} Static Function Cab35P6  
	Gera Relatório Ref. Crédito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function Cab35P6()
	//PLANILHA 2 - DETALHE CREDITO OUTORGADO
  oExcel:AddworkSheet(cFld356)
	oExcel:AddTable(cFld356,cFld35t6)
	oExcel:AddColumn(cFld356,cFld35t6,"Filial"  	,1,1)
	oExcel:AddColumn(cFld356,cFld35t6,"Dt.Emissao"	,1,1)
	oExcel:AddColumn(cFld356,cFld35t6,"UF"			,1,1)
	oExcel:AddColumn(cFld356,cFld35t6,"Espécie"		,1,1)
	oExcel:AddColumn(cFld356,cFld35t6,"Serie NF"	,1,1)	
	oExcel:AddColumn(cFld356,cFld35t6,"Nota Fiscal"	,1,1)
	oExcel:AddColumn(cFld356,cFld35t6,"CFOP"		,1,1)	
	oExcel:AddColumn(cFld356,cFld35t6,"Nome"		,1,1)
	oExcel:AddColumn(cFld356,cFld35t6,"Vl. Total"	,2,3)
	oExcel:AddColumn(cFld356,cFld35t6,"Destino"		,1,1)
	oExcel:AddColumn(cFld356,cFld35t6,"Nro.DU-E"	,1,1)
	oExcel:AddColumn(cFld356,cFld35t6,"Dt.Embarque"	,1,1)
	oExcel:AddColumn(cFld356,cFld35t6,"Nro. BL"		,1,1)
Return(NIL)

/*/{Protheus.doc} Static Function Cab35P6b  
	Gera Relatório Ref. Crédito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function Cab35P6b()
	//PLANILHA 2 - DETALHE CREDITO OUTORGADO
  oExcel:AddworkSheet(cFld356b)
	oExcel:AddTable(cFld356b,cFld35t6)
	oExcel:AddColumn(cFld356b,cFld35t6,"Filial"  	,1,1)
	oExcel:AddColumn(cFld356b,cFld35t6,"Dt.Emissao"	,1,1)
	oExcel:AddColumn(cFld356b,cFld35t6,"UF"			,1,1)
	oExcel:AddColumn(cFld356b,cFld35t6,"Espécie"		,1,1)
	oExcel:AddColumn(cFld356b,cFld35t6,"Serie NF"	,1,1)	
	oExcel:AddColumn(cFld356b,cFld35t6,"Nota Fiscal"	,1,1)
	oExcel:AddColumn(cFld356b,cFld35t6,"CFOP"		,1,1)	
	oExcel:AddColumn(cFld356b,cFld35t6,"Nome"		,1,1)
	oExcel:AddColumn(cFld356b,cFld35t6,"Vl. Total"	,2,3)
	oExcel:AddColumn(cFld356b,cFld35t6,"Destino"		,1,1)
	oExcel:AddColumn(cFld356b,cFld35t6,"Nro.DU-E"	,1,1)
	oExcel:AddColumn(cFld356b,cFld35t6,"Dt.Embarque"	,1,1)
	oExcel:AddColumn(cFld356b,cFld35t6,"Nro. BL"		,1,1)
Return(NIL)

/*/{Protheus.doc} Static Function Cab35P7  
	Gera Relatório Ref. Crédito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function Cab35P7()
	//PLANILHA 2 - DETALHE CREDITO OUTORGADO
  oExcel:AddworkSheet(cFld357)
	oExcel:AddTable(cFld357,cFld35t7)
	oExcel:AddColumn(cFld357,cFld35t7,"Filial"  	,1,1)
	oExcel:AddColumn(cFld357,cFld35t7,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld357,cFld35t7,"Dt.Emissao"	,1,1)
	oExcel:AddColumn(cFld357,cFld35t7,"Nota Fiscal"	,1,1)
	oExcel:AddColumn(cFld357,cFld35t7,"Serie NF"	,1,1)
	oExcel:AddColumn(cFld357,cFld35t7,"UF"			,1,1)
	oExcel:AddColumn(cFld357,cFld35t7,"Nome"		,1,1)
	oExcel:AddColumn(cFld357,cFld35t7,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld357,cFld35t7,"Insc.Est."	,1,1)
	oExcel:AddColumn(cFld357,cFld35t7,"CFOP"		,1,1)
	oExcel:AddColumn(cFld357,cFld35t7,"Vl. Contab."	,2,3)
	oExcel:AddColumn(cFld357,cFld35t7,"Base ICMS"	,2,3)
	oExcel:AddColumn(cFld357,cFld35t7,"ICMS"		,2,3)
	oExcel:AddColumn(cFld357,cFld35t7,"ICMS Isento"	,2,3)
	oExcel:AddColumn(cFld357,cFld35t7,"ICMS Outras"	,2,3)
	oExcel:AddColumn(cFld357,cFld35t7,"IPI"			,2,3)

Return(nil)

/*/{Protheus.doc} Static Function Cab35P8  
	Gera Relatório Ref. Crédito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function Cab35P8()
	//PLANILHA 2 - DETALHE CREDITO OUTORGADO
  oExcel:AddworkSheet(cFld358)
	oExcel:AddTable(cFld358,cFld35t8)
	oExcel:AddColumn(cFld358,cFld35t8,"Filial"  	,1,1)
	oExcel:AddColumn(cFld358,cFld35t8,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld358,cFld35t8,"Dt.Emissao"	,1,1)
	oExcel:AddColumn(cFld358,cFld35t8,"Nota Fiscal"	,1,1)
	oExcel:AddColumn(cFld358,cFld35t8,"Serie NF"	,1,1)
	oExcel:AddColumn(cFld358,cFld35t8,"UF"			,1,1)
	oExcel:AddColumn(cFld358,cFld35t8,"Nome"		,1,1)
	oExcel:AddColumn(cFld358,cFld35t8,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld358,cFld35t8,"Insc.Est."	,1,1)
	oExcel:AddColumn(cFld358,cFld35t8,"CFOP"		,1,1)
	oExcel:AddColumn(cFld358,cFld35t8,"Vl. Contab."	,2,3)
	oExcel:AddColumn(cFld358,cFld35t8,"Base ICMS"	,2,3)
	oExcel:AddColumn(cFld358,cFld35t8,"ICMS"		,2,3)
	oExcel:AddColumn(cFld358,cFld35t8,"ICMS Isento"	,2,3)
	oExcel:AddColumn(cFld358,cFld35t8,"ICMS Outras"	,2,3)
	oExcel:AddColumn(cFld358,cFld35t8,"IPI"			,2,3)
				
Return(NIL)

/*/{Protheus.doc} Static Function Cab35P9  
	Gera Relatório Ref. Crédito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function Cab35P9()
	//PLANILHA 2 - DETALHE CREDITO OUTORGADO
  oExcel:AddworkSheet(cFld359)
	oExcel:AddTable(cFld359,cFld35t9)
	oExcel:AddColumn(cFld359,cFld35t9,"Filial"  	,1,1)
	oExcel:AddColumn(cFld359,cFld35t9,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld359,cFld35t9,"Dt.Emissao"	,1,1)
	oExcel:AddColumn(cFld359,cFld35t9,"Nota Fiscal"	,1,1)
	oExcel:AddColumn(cFld359,cFld35t9,"Serie NF"	,1,1)
	oExcel:AddColumn(cFld359,cFld35t9,"UF"			,1,1)
	oExcel:AddColumn(cFld359,cFld35t9,"Nome"		,1,1)
	oExcel:AddColumn(cFld359,cFld35t9,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld359,cFld35t9,"Insc.Est."	,1,1)
	oExcel:AddColumn(cFld359,cFld35t9,"CFOP"		,1,1)
	oExcel:AddColumn(cFld359,cFld35t9,"Vl. Contab."	,2,3)
	oExcel:AddColumn(cFld359,cFld35t9,"Base ICMS"	,2,3)
	oExcel:AddColumn(cFld359,cFld35t9,"ICMS"		,2,3)
	oExcel:AddColumn(cFld359,cFld35t9,"ICMS Isento"	,2,3)
	oExcel:AddColumn(cFld359,cFld35t9,"ICMS Outras"	,2,3)
	oExcel:AddColumn(cFld359,cFld35t9,"IPI"			,2,3)
				
Return(NIL)

/*/{Protheus.doc} Static Function Cab35P0  
	Gera Relatório Ref. Crédito Outorgado
	@author Abel Babini Filho
	@since 01/04/2019
	@version 01
	/*/
Static Function Cab35P0()
	//PLANILHA 2 - DETALHE CREDITO OUTORGADO
  oExcel:AddworkSheet(cFld350)
	oExcel:AddTable(cFld350,cFld35t0)
	oExcel:AddColumn(cFld350,cFld35t0,"Filial"  	,1,1)
	oExcel:AddColumn(cFld350,cFld35t0,"Dt.Entrada"	,1,1)
	oExcel:AddColumn(cFld350,cFld35t0,"Dt.Emissao"	,1,1)
	oExcel:AddColumn(cFld350,cFld35t0,"Nota Fiscal"	,1,1)
	oExcel:AddColumn(cFld350,cFld35t0,"Serie NF"	,1,1)
	oExcel:AddColumn(cFld350,cFld35t0,"UF"			,1,1)
	oExcel:AddColumn(cFld350,cFld35t0,"Nome"		,1,1)
	oExcel:AddColumn(cFld350,cFld35t0,"CNPJ"		,1,1)
	oExcel:AddColumn(cFld350,cFld35t0,"Insc.Est."	,1,1)
	oExcel:AddColumn(cFld350,cFld35t0,"CFOP"		,1,1)
	oExcel:AddColumn(cFld350,cFld35t0,"Vl. Contab."	,2,3)
	oExcel:AddColumn(cFld350,cFld35t0,"Base ICMS"	,2,3)
	oExcel:AddColumn(cFld350,cFld35t0,"ICMS"		,2,3)
	oExcel:AddColumn(cFld350,cFld35t0,"ICMS Isento"	,2,3)
	oExcel:AddColumn(cFld350,cFld35t0,"ICMS Outras"	,2,3)
	oExcel:AddColumn(cFld350,cFld35t0,"IPI"			,2,3)
				
Return(NIL)

/*/{Protheus.doc} Static Function Cab35PA  
Gera Relatório Ref. Crédito Outorgado
@author Abel Babini Filho
@since 01/04/2019
@version 01
/*/
Static Function Cab35PA()
	Local nColBr35	:= 0
	//PLANILHA 1 - QUADROS
  oExcel:AddworkSheet(cFld35)
	oExcel:AddTable(cFld35,cFld35ta)
	oExcel:AddColumn(cFld35,cFld35ta,"Filial"	,1,1)
	oExcel:AddColumn(cFld35,cFld35ta,"Descrição",1,1)
	oExcel:AddColumn(cFld35,cFld35ta,"Valor"	,2,2)
RETURN(NIL)  

/*/{Protheus.doc} Static Function GEx35P1  
Gera Relatório Ref. Crédito Outorgado
@author Abel Babini Filho
@since 01/04/2019
@version 01
/*/
Static Function GEx35P1()
	Local nExcel1
	oExcel:AddRow(cFld35,cFld35t1,{"","CRÉDITO OUTORGADO INTERESTADUAL "+Alltrim(_cMVCON2)+"%",""})
	FOR nExcel1 := 1 TO Len(aBrw35p1)
		oExcel:AddRow(cFld35,cFld35t1,aBrw35p1[nExcel1])
	Next nExcel1
	//Linha Em branco
	oExcel:AddRow(cFld35,cFld35t1,{"","",""})
	//
	oExcel:AddRow(cFld35,cFld35t1,{"","CRÉDITO OUTORGADO ESTADUAL "+Alltrim(_cMVCON3)+"%",""})
	FOR nExcel1 := 1 TO Len(aBrw35p2)
		oExcel:AddRow(cFld35,cFld35t1,aBrw35p2[nExcel1])
	Next nExcel1
	//Linha Em branco
	oExcel:AddRow(cFld35,cFld35t1,{"","",""})
	//
	oExcel:AddRow(cFld35,cFld35t1,{"","CRÉDITO OUTORGADO ESTADUAL "+Alltrim(_cMVCON4)+"%",""})
	FOR nExcel1 := 1 TO Len(aBrw35p3)
		oExcel:AddRow(cFld35,cFld35t1,aBrw35p3[nExcel1])
	Next nExcel1
	//Linha Em branco
	oExcel:AddRow(cFld35,cFld35t1,{"","",""})
Return(NIL)

/*/{Protheus.doc} Static Function GEx35P2  
Gera Relatório Ref. Crédito Outorgado
@author Abel Babini Filho
@since 01/04/2019
@version 01
/*/
Static Function GEx35P2()
	Local _nTLin	:= 0
	Local _nTGer	:= 0
	Local nCol		:= 0
	Local nPos		:= 0
	Local aExRow	:= {}
	Local aExTt		:= {}
	Local aExVz		:= {}
	Local nExcel1
	
	//Inicializa Array da Linha em Branco
	AADD(aExVz,{})
	//AADD(aExVz[1],"")
	//AADD(aExVz[1],"")
	FOR nCol := 1 TO nQNCM35+3
		AADD(aExVz[1],"")
	NEXT nCol
	
	//Inicializa Array do Total das Colunas
	AADD(aExTt,{})
	AADD(aExTt[1],"")
	AADD(aExTt[1],"TOTAL")
	FOR nCol := 1 TO nQNCM35+1
		AADD(aExTt[1],0)
	NEXT nCol
	
		
	FOR nExcel1 := 1 TO Len(aBrw35Rs)
		
		//AADD(aExRow,{})
		nPos 	:= Len(aExRow)
		_nTLin	:= 0
		
		FOR nCol := 1 TO nQNCM35+2

			//AADD(aExRow[nPos], aBrw35Rs[nExcel1,nCol])
			If nCol > 2
				//_nTLin			+= aBrw35Rs[nExcel1,nCol]
				_nTGer			+= aBrw35Rs[nExcel1,nCol]
				aExTt[1,nCol] 	+= aBrw35Rs[nExcel1,nCol]
			Endif
		NEXT nCol
		//AADD(aExRow[nExcel1],_nTLin)
		//oExcel:AddRow(cFld352,cFld35t2,aExRow[nExcel1])
		oExcel:AddRow(cFld352,cFld35t2,aBrw35Rs[nExcel1])
	NEXT nExcel1
	
	oExcel:AddRow(cFld352,cFld35t2,aExVz[1])
	
	aExTt[1,nQNCM35+3] := _nTGer
	IF Len(aBrw35Rs) > 0
		oExcel:AddRow(cFld352,cFld35t2,aExTt[1])
	ENDIF
	
Return

/*/{Protheus.doc} Static Function GEx35P3  
Gera Relatório Ref. Crédito Outorgado
@author Abel Babini Filho
@since 01/04/2019
@version 01
/*/
Static Function GEx35P3()
	Local nExcel1
	//PLANILHA 2 - FATURAMENTO		
	FOR nExcel1 := 1 TO Len(aBrw35x1)
		oExcel:AddRow(cFld353,cFld35t3,aBrw35x1[nExcel1])
	NEXT nExcel1
	oExcel:AddRow(cFld353,cFld35t3,{"","","","","","","","","","","","","","","",""})

Return

/*/{Protheus.doc} Static Function GEx35P3b  
Gera Relatório Ref. Crédito Outorgado
@author Abel Babini Filho
@since 01/04/2019
@version 01
/*/
Static Function GEx35P3b()
	Local nExcel1
	//PLANILHA 2 - FATURAMENTO		
	FOR nExcel1 := 1 TO Len(aBrw35x1)
		oExcel:AddRow(cFld353b,cFld35t3,aBrw35x1[nExcel1])
	NEXT nExcel1
	oExcel:AddRow(cFld353b,cFld35t3,{"","","","","","","","","","","","","","","",""})

Return

/*/{Protheus.doc} Static Function GEx35P4  
Gera Relatório Ref. Crédito Outorgado
@author Abel Babini Filho
@since 01/04/2019
@version 01
/*/
Static Function GEx35P4()
	Local nExcel1
	//PLANILHA 2 - FATURAMENTO		
	FOR nExcel1 := 1 TO Len(aBrw35x2)
		oExcel:AddRow(cFld354,cFld35t4,aBrw35x2[nExcel1])
	NEXT nExcel1
	oExcel:AddRow(cFld354,cFld35t4,{"","","","","","","","","","","","","","","",""})

Return

/*/{Protheus.doc} Static Function GEx35P4b  
Gera Relatório Ref. Crédito Outorgado
@author Abel Babini Filho
@since 01/04/2019
@version 01
/*/
Static Function GEx35P4b()
	Local nExcel1
	//PLANILHA 2 - FATURAMENTO		
	FOR nExcel1 := 1 TO Len(aBrw35x2)
		oExcel:AddRow(cFld354b,cFld35t4,aBrw35x2[nExcel1])
	NEXT nExcel1
	oExcel:AddRow(cFld354b,cFld35t4,{"","","","","","","","","","","","","","","",""})

Return

/*/{Protheus.doc} Static Function GEx35P5  
Gera Relatório Ref. Crédito Outorgado
@author Abel Babini Filho
@since 01/04/2019
@version 01
/*/
Static Function GEx35P5()
	Local nExcel1
	//PLANILHA 2 - FATURAMENTO		
	FOR nExcel1 := 1 TO Len(aBrw35x3)
		oExcel:AddRow(cFld355,cFld35t5,aBrw35x3[nExcel1])
	NEXT nExcel1
	oExcel:AddRow(cFld355,cFld35t5,{"","","","","","","","","","","","","","","",""})

Return

/*/{Protheus.doc} Static Function GEx35P5b  
Gera Relatório Ref. Crédito Outorgado
@author Abel Babini Filho
@since 01/04/2019
@version 01
/*/
Static Function GEx35P5b()
	Local nExcel1
	//PLANILHA 2 - FATURAMENTO		
	FOR nExcel1 := 1 TO Len(aBrw35x3)
		oExcel:AddRow(cFld355b,cFld35t5,aBrw35x3[nExcel1])
	NEXT nExcel1
	oExcel:AddRow(cFld355b,cFld35t5,{"","","","","","","","","","","","","","","",""})

Return

/*/{Protheus.doc} Static Function GEx35P6  
Gera Relatório Ref. Crédito Outorgado
@author Abel Babini Filho
@since 01/04/2019
@version 01
/*/
Static Function GEx35P6()
	Local nExcel1
	//PLANILHA 2 - FATURAMENTO		
	FOR nExcel1 := 1 TO Len(aBrw35x4)
		oExcel:AddRow(cFld356,cFld35t6,aBrw35x4[nExcel1])
	NEXT nExcel1
	oExcel:AddRow(cFld356,cFld35t6,{"","","","","","","","","","","","",""})

Return

/*/{Protheus.doc} Static Function GEx35P6b  
Gera Relatório Ref. Crédito Outorgado
@author Abel Babini Filho
@since 01/04/2019
@version 01
/*/
Static Function GEx35P6b()
	Local nExcel1
	//PLANILHA 2 - FATURAMENTO		
	FOR nExcel1 := 1 TO Len(aBrw35x4)
		oExcel:AddRow(cFld356b,cFld35t6,aBrw35x4[nExcel1])
	NEXT nExcel1
	oExcel:AddRow(cFld356b,cFld35t6,{"","","","","","","","","","","","",""})

Return

/*/{Protheus.doc} Static Function GEx35P7  
Gera Relatório Ref. Crédito Outorgado
@author Abel Babini Filho
@since 01/04/2019
@version 01
/*/
Static Function GEx35P7()
	Local nExcel1
	//PLANILHA 2 - FATURAMENTO		
	FOR nExcel1 := 1 TO Len(aBrw35x5)
		oExcel:AddRow(cFld357,cFld35t7,aBrw35x5[nExcel1])
	NEXT nExcel1
	oExcel:AddRow(cFld357,cFld35t7,{"","","","","","","","","","","","","","","",""})

Return

/*/{Protheus.doc} Static Function GEx35P8  
Gera Relatório Ref. Crédito Outorgado
@author Abel Babini Filho
@since 01/04/2019
@version 01
/*/
Static Function GEx35P8()
	Local nExcel1
	//PLANILHA 2 - FATURAMENTO		
	FOR nExcel1 := 1 TO Len(aBrw35x6)
		oExcel:AddRow(cFld358,cFld35t8,aBrw35x6[nExcel1])
	NEXT nExcel1
	oExcel:AddRow(cFld358,cFld35t8,{"","","","","","","","","","","","","","","",""})

Return

/*/{Protheus.doc} Static Function GEx35P9  
Gera Relatório Ref. Crédito Outorgado
@author Abel Babini Filho
@since 01/04/2019
@version 01
/*/
Static Function GEx35P9()
	Local nExcel1
	//PLANILHA 2 - FATURAMENTO		
	FOR nExcel1 := 1 TO Len(aBrw35x7)
		oExcel:AddRow(cFld359,cFld35t9,aBrw35x7[nExcel1])
	NEXT nExcel1
	oExcel:AddRow(cFld359,cFld35t9,{"","","","","","","","","","","","","","","",""})

Return

/*/{Protheus.doc} Static Function GEx35P0  
Gera Relatório Ref. Crédito Outorgado
@author Abel Babini Filho
@since 01/04/2019
@version 01
/*/
Static Function GEx35P0()
	Local nExcel1
	//PLANILHA 2 - FATURAMENTO		
	FOR nExcel1 := 1 TO Len(aBrw35x8)
		oExcel:AddRow(cFld350,cFld35t0,aBrw35x8[nExcel1])
	NEXT nExcel1
	oExcel:AddRow(cFld350,cFld35t0,{"","","","","","","","","","","","","","","",""})

Return

/*/{Protheus.doc} Static Function GEx35PA  
Gera Relatório Ref. Crédito Outorgado
@author Abel Babini Filho
@since 01/04/2019
@version 01
/*/
Static Function GEx35PA()
	Local nExcel1
	//
	oExcel:AddRow(cFld35,cFld35ta,{"","DEMONSTRATIVO CRÉDITO OUTORGADO ESTADUAL "+Alltrim(_cMVCON3)+"%",""})
	FOR nExcel1 := 1 TO Len(aBrw35dm)
		oExcel:AddRow(cFld35,cFld35ta,aBrw35dm[nExcel1])
	Next nExcel1
	//Linha Em branco
	oExcel:AddRow(cFld35,cFld35ta,{"","",""})
	//
Return(NIL)
// FIM n.040923  - Relatorio Crédito Outorgadoa - Abel Babini - 20/08/2019

/*/{Protheus.doc} Static Function xLoadPar  
Carrega Parâmetros utilizados no fechamento do painel
@author Abel Babini Filho
@since 23/04/2021
@version 01
/*/
Static Function xLoadPar()
	Local cVerAnt		:= ''
	Local cAlLdPar	:= ''

	//Verifica a última versão do período atual
	cVerAnt := xRecVer('99')

	IF cVerAnt != ''
		If Select(cAlLdPar) > 0
			(cAlLdPar)->(dbCloseArea())
		Endif
		cAlLdPar:=GetNextAlias()
		
		BeginSQL Alias cAlLdPar
			SELECT
				ZFU.ZFU_FILIAL	AS FILIAL,
				ZFU.ZFU_TABELA	AS TABELA,
				ZFU.ZFU_CHAVE		AS CHAVE,
				ZFU.ZFU_PERIOD	AS PERIODO,
				ZFU.ZFU_VERSAO	AS VERSAO,
				ZFU.ZFU_USUARI	AS USUARIO,
				ZFU.ZFU_DTGRV	AS DATAGRV,
				ZFU.ZFU_STATUS	AS STATUS,
				ZFU.ZFU_KEYDOC	AS KEYDOC,
				ZFU.ZFU_VALOR		AS VALOR
			FROM %TABLE:ZFU% ZFU (NOLOCK)
			WHERE ZFU.ZFU_FILIAL = %xFilial:ZFU%
				AND ZFU.ZFU_PERIOD = %Exp:_cAnoI+_cMesI%
				AND ZFU.ZFU_TABELA = '99'
				AND ZFU.ZFU_VERSAO = %Exp:cVerAnt%
				AND ZFU.ZFU_STATUS = '2'
				AND ZFU.%notDel%			
		EndSQL
	
		DbSelectArea(cAlLdPar)
		(cAlLdPar)->(dbGoTop())
		while !(cAlLdPar)->(eof())

			aParZFU := strtokarr ((cAlLdPar)->KEYDOC, "||") 
			IF aParZFU[1] == "MV_#PNUSPR"
				_cMVUsPr := aParZFU[2]
				_lMVUsPr	:= IIF(__cUserId $ Alltrim(_cMVUsPr),.T.,.F.)

			ELSEIF aParZFU[1] == "MV_#PNUSMR"
				_cMVMstr := aParZFU[2]
				_lMsUser	:= IIF(__cUserID $ _cMVMstr, .T., .F.)

			ELSEIF aParZFU[1] == "MV_#CFNM01"
				_cCfNM01 := aParZFU[2]

			ELSEIF aParZFU[1] == "MV_#CFNM02"
				_cCfNM02 := aParZFU[2]

			ELSEIF aParZFU[1] == "MV_#CFNM03"
				_cCfNM03 := aParZFU[2]

			ELSEIF aParZFU[1] == "MV_#CFNM04"
				_cCfNM04 := aParZFU[2]

			ELSEIF aParZFU[1] == "MV_#CFNM05"
				_cCfNM05 := aParZFU[2]

			ELSEIF aParZFU[1] == "MV_#CFNM06"
				_cCfNM06 := aParZFU[2]

			ELSEIF aParZFU[1] == "MV_#ESTIST"
				_cMVEIST := aParZFU[2]

			ELSEIF aParZFU[1] == "MV_#CMEXCF"
				_cMVCFCE := aParZFU[2]
				_cCFCmEx	:= '%'+FormatIn(_cMVCFCE,",")+'%'

			ELSEIF aParZFU[1] == "MV_#CMEXP1"
				_cMVPRC1 := aParZFU[2]
				_cPRCmE1	:= '%'+FormatIn(_cMVPRC1,",")+'%'

			ELSEIF aParZFU[1] == "MV_#CMEXP2"
				_cMVPRC2 := aParZFU[2]
				_cPRCmE2	:= '%'+FormatIn(_cMVPRC2,",")+'%'

			ELSEIF aParZFU[1] == "MV_#DFNCCF"
				_cMVCFDN := aParZFU[2]
				_cCFDFNC	:= '%'+FormatIn(_cMVCFDN,",")+'%'

			ELSEIF aParZFU[1] == "MV_#CFDFAL"
				_cMVCFDA := aParZFU[2]
				_cCFDFAL	:= '%'+FormatIn(_cMVCFDA,",")+'%'

			ELSEIF aParZFU[1] == "MV_#CPDFAL"
				_cMVCPDA := aParZFU[2]
				_cCPDFAL	:= '%'+FormatIn(_cMVCPDA,",")+'%'

			ELSEIF aParZFU[1] == "MV_#CROUCF"
				_cMVCFCO := aParZFU[2]
				_cCFCrOu	:= '%'+FormatIn(_cMVCFCO,",")+'%'

			ELSEIF aParZFU[1] == "MV_#OSFRCB"
				_cMVFrCB := aParZFU[2]

			ELSEIF aParZFU[1] == "MV_#OSLJCB"
				_cMVLjCB := aParZFU[2]

			ELSEIF aParZFU[1] == "MV_#OSPRFR"
				_cMVPrFr := aParZFU[2]

			ELSEIF aParZFU[1] == "MV_#OSFDCB"
				_cMVFDCB := aParZFU[2]

			ELSEIF aParZFU[1] == "MV_#OSLDCB"
				_cMVLDCB := aParZFU[2]

			ELSEIF aParZFU[1] == "MV_#DCCFIN"
				_cMVCFIn := aParZFU[2]
				_cCFInsu	:= '%'+FormatIn(_cMVCFIn,",")+'%'

			ELSEIF aParZFU[1] == "MV_#DCCFMC"
				_cMVCFMc := aParZFU[2]
				_cCFMcim	:= '%'+FormatIn(_cMVCFMc,",")+'%'

			ELSEIF aParZFU[1] == "MV_#POLENT"
				_cPolent := aParZFU[2]
				_cInPol		:= '%'+FormatIn(_cPolent,"|")+'%'

			ELSEIF aParZFU[1] == "MV_#EMBUTI"
				_cEmbuti := aParZFU[2]
				_cInEmbu	:= '%'+FormatIn(_cEmbuti,"|")+'%'

			ELSEIF aParZFU[1] == "MV_#ALMOND"
				_cAlmond := aParZFU[2]
				_cInAlmo	:= '%'+FormatIn(_cAlmond,"|")+'%'

			ELSEIF aParZFU[1] == "MV_#GRAXAR"
				_cMVGrax := aParZFU[2]
				_cGraxar	:= '%'+FormatIn(_cMVGrax,"|")+'%'

			ELSEIF aParZFU[1] == "MV_#LENHPR"
				_cMVPrLn := aParZFU[2]
				_cInPrLn	:= '%'+FormatIn(_cMVPrLn,",")+'%'

			ELSEIF aParZFU[1] == "MV_#LENHCF"
				_cMVCfLn := aParZFU[2]
				_cInCfLn	:= '%'+FormatIn(_cMVCfLn,",")+'%'

			ELSEIF aParZFU[1] == "MV_#AVESPR"
				_cMVPrAv := aParZFU[2]
				_cInPrAv	:= '%'+FormatIn(_cMVPrAv,",")+'%'

			ELSEIF aParZFU[1] == "MV_#AVESCF"
				_cMVCfAv := aParZFU[2]
				_cInCfAv	:= '%'+FormatIn(_cMVCfAv,",")+'%'

			ELSEIF aParZFU[1] == "MV_#LEGUME"
				_cMVLegu := aParZFU[2]
				_cInLegu	:= '%'+FormatIn(_cMVLegu,",")+'%'

			ELSEIF aParZFU[1] == "MV_#CFLEGU"
				_cMVCfLg := aParZFU[2]
				_cInCfLg	:= '%'+FormatIn(_cMVCfLg,",")+'%'

			ELSEIF aParZFU[1] == "MV_#DTUNIF"
				_dUnifor := STOD(aParZFU[2])

			ELSEIF aParZFU[1] == "MV_#UNIFOR"
				_cMVUnif := aParZFU[2]
				_cUnifor	:= '%'+FormatIn(_cMVUnif,"|")+'%'

			ELSEIF aParZFU[1] == "MV_#NAOCOM"
				_cMVNCom := aParZFU[2]
				_cNaoCom	:= '%'+FormatIn(_cMVNCom,"|")+'%'

			ELSEIF aParZFU[1] == "MV_#NCOMCF"
				_cMVCFNC := aParZFU[2]
				_cNComCF	:= '%'+FormatIn(_cMVCFNC,",")+'%'

			ELSEIF aParZFU[1] == "MV_#DTREMI"
				_dRemInd := STOD(aParZFU[2])

			ELSEIF aParZFU[1] == "MV_#CRIFOR"
				_cMVRIFo := aParZFU[2]
				_cRIForn	:= '%'+FormatIn(_cMVRIFo,",")+'%'

			ELSEIF aParZFU[1] == "MV_#CFRVTB"
				_cMVCFRT := aParZFU[2]
				_cCFRvTr	:= '%'+FormatIn(_cMVCFRT,",")+'%'

			ELSEIF aParZFU[1] == "MV_#DTINDT"
				_dIndTer := STOD(aParZFU[2])

			ELSEIF aParZFU[1] == "MV_#INDEMB"
				_cMVIndE := aParZFU[2]
				_cCFInEm	:= '%'+FormatIn(_cMVIndE,",")+'%'

			ELSEIF aParZFU[1] == "MV_#P3FORN"
				_cMVP3Fo := aParZFU[2]
				_cP3Forn	:= '%'+FormatIn(_cMVP3Fo,",")+'%'

			ELSEIF aParZFU[1] == "MV_#IECOMP"
				_cMVIECP := aParZFU[2]
				_cCFIECP	:= '%'+FormatIn(_cMVIECP,",")+'%'

			ELSEIF aParZFU[1] == "MV_#IEINDU"
				_cMVIEIN := aParZFU[2]

			ELSEIF aParZFU[1] == "MV_#IEREMI"
				_cMVIERM := aParZFU[2]

			ELSEIF aParZFU[1] == "MV_#IERESU"
				_cMVIERS := aParZFU[2]

			ELSEIF aParZFU[1] == "MV_#PRDNRM"
				_cMVPRDF := aParZFU[2]

			ELSEIF aParZFU[1] == "MV_#IERETI"
				_cMVIERI := aParZFU[2]

			ELSEIF aParZFU[1] == "MV_#IERTNA"
				_cMVIERN := aParZFU[2]

			ELSEIF aParZFU[1] == "MV_#IEDEVI"
				_cMVIEDI := aParZFU[2]

			ELSEIF aParZFU[1] == "MV_#IEENTB"
				_cMVIEEB := aParZFU[2]

			ELSEIF aParZFU[1] == "MV_#IEOUTE"
				_cMVIEOE := aParZFU[2]

			ELSEIF aParZFU[1] == "MV_#IEOUTS"
				_cMVIEOS := aParZFU[2]

			ELSEIF aParZFU[1] == "MV_#IENFNC"
				_cMVNFNC := aParZFU[2]
				_cIENFNC	:= '%'+FormatIn(_cMVNFNC,",")+'%'

			ELSEIF aParZFU[1] == "MV_#IENFIN"
				_cMVNFIN := aParZFU[2]
				_cIENFIN	:= '%'+FormatIn(_cMVNFIN,",")+'%'

			ELSEIF aParZFU[1] == "MV_#IEALEB"
				_cMVIEAE := aParZFU[2]

			ELSEIF aParZFU[1] == "MV_#IEALEI"
				_cMVIEAD := aParZFU[2]

			ELSEIF aParZFU[1] == "MV_#CFFRET"
				_cMVCFFr := aParZFU[2]
				_cCFFret	:= '%'+FormatIn(_cMVCFFr,",")+'%'

			ELSEIF aParZFU[1] == "MV_#CCFREX"
				_cMVFrEx := aParZFU[2]

			ELSEIF aParZFU[1] == "MV_#CCFRTF"
				_cMVFrTF := aParZFU[2]

			ELSEIF aParZFU[1] == "MV_#CFFRAN"
				_cMVFrAn := aParZFU[2]
				_cCFFrAn	:= '%'+FormatIn(_cMVFrAn,",")+'%'

			ELSEIF aParZFU[1] == "MV_#ALFRST"
				_nAlFrST := Val(aParZFU[2])

			ELSEIF aParZFU[1] == "MV_#FRTPRD"
				_cMVFrPr := aParZFU[2]

			ELSEIF aParZFU[1] == "MV_#PRFRTF"
				_cMVPrTF := aParZFU[2]

			ELSEIF aParZFU[1] == "MV_#CRFRT"
				_lMVCrFt := IIF(aParZFU[2] == 'T',.T.,.F.)

			ELSEIF aParZFU[1] == "MV_#APFR"
				_lMVAPF := IIF(aParZFU[2] == 'T',.T.,.F.)

			ELSEIF aParZFU[1] == "MV_#DTCELU"
				_dCelula := STOD(aParZFU[2])

			ELSEIF aParZFU[1] == "MV_#DTCEPN"
				_dCelPn := STOD(aParZFU[2])

			ELSEIF aParZFU[1] == "MV_#CELULA"
				_cMVCelu := aParZFU[2]
				_cCelula	:= '%'+FormatIn(_cMVCelu,"|")+'%'

			ELSEIF aParZFU[1] == "MV_#OEFDCB"
				_cMVOEFC := aParZFU[2]

			ELSEIF aParZFU[1] == "MV_#IVANCF"
				_cMVCfIV := aParZFU[2]
				_cCFNIVA	:= '%'+FormatIn(_cMVCfIV,",")+'%'

			ELSEIF aParZFU[1] == "MV_#CFCIAP"
				_cMVCfCI := aParZFU[2]
				_cCFCIAP	:= '%'+FormatIn(_cMVCfCI,",")+'%'

			ELSEIF aParZFU[1] == "MV_#COMPMP"
				_cMVCPMP := aParZFU[2]
				_cCFCPMP	:= '%'+FormatIn(_cMVCPMP,",")+'%'

			ELSEIF aParZFU[1] == "MV_#VENDFV"
				_cMVVDFV := aParZFU[2]
				_cCFVDFV	:= '%'+FormatIn(_cMVVDFV,",")+'%'

			ELSEIF aParZFU[1] == "MV_#CLISD"
				_cMVClSd := aParZFU[2]
				_cCliSd	:= '%'+FormatIn(_cMVClSd,",")+'%'

			ELSEIF aParZFU[1] == "MV_#FOREN"
				_cMVFrEn := aParZFU[2]
				_cForEn	:= '%'+FormatIn(_cMVFrEn,",")+'%'

			ELSEIF aParZFU[1] == "MV_#FILEN"
				_cMVFlEn := aParZFU[2]
				_cFilEn	:= '%'+FormatIn(_cMVFlEn,",")+'%'

			ELSEIF aParZFU[1] == "MV_#TESNFS"
				_cMVTNFS := aParZFU[2]
				_cTESNFS	:= '%'+FormatIn(_cMVTNFS,",")+'%'

			ELSEIF aParZFU[1] == "MV_#PMILHO"
				_cMVPMIL := aParZFU[2]

			ELSEIF aParZFU[1] == "MV_#PSORGO"
				_cMVPSOR := aParZFU[2]

			ELSEIF aParZFU[1] == "MV_#PPROTE"
				_cMVPPRO := aParZFU[2]

			ELSEIF aParZFU[1] == "MV_#ENSACF"
				_cMVCfES := aParZFU[2]
				_cInCfES	:= '%'+FormatIn(_cMVCfES,",")+'%'

			ELSEIF aParZFU[1] == "MV_#TPENSA"
				_cMVTPES := aParZFU[2]
				_cInTPES	:= '%'+FormatIn(_cMVTPES,",")+'%'

			ELSEIF aParZFU[1] == "MV_#CFBONI"
				_cMVCfBN := aParZFU[2]
				_cCfBoni	:= '%'+FormatIn(_cMVCfBN,",")+'%'

			ELSEIF aParZFU[1] == "MV_#PRBONI"
				_cMVPrBN := aParZFU[2]
				_cPrBoni	:= '%'+FormatIn(_cMVPrBN,",")+'%'

			ELSEIF aParZFU[1] == "MV_#DEVVEN"
				_cMVDVVD := aParZFU[2]
				_cCFDVVD	:= '%'+FormatIn(_cMVDVVD,",")+'%'

			ELSEIF aParZFU[1] == "MV_#CROUN1"
				_cMVCON1 := aParZFU[2]

			ELSEIF aParZFU[1] == "MV_#CROUN2"
				_cMVCON2 := aParZFU[2]

			ELSEIF aParZFU[1] == "MV_#CROUN3"
				_cMVCON3 := aParZFU[2]

			ELSEIF aParZFU[1] == "MV_#CROUN4"
				_cMVCON4 := aParZFU[2]

			ENDIF
	
			(cAlLdPar)->(dbSkip())
		EndDo
	
		(cAlLdPar)->(dbCloseArea())
	ENDIF

Return

/*/{Protheus.doc} u_FIS028A0
Substituicao de funcao Static Call por User Function MP 12.1.33
@type function
@version 1.0
@author Edvar   / Flek Solution
@since 16/03/2022
@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
/*/
Function u_FIS028A0( uPar1 )
Return( CriaExtr( uPar1 ) )

/*/{Protheus.doc} u_FIS028A1
Substituicao de funcao Static Call por User Function MP 12.1.33
@type function
@version 1.0
@author Edvar   / Flek Solution
@since 16/03/2022
@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
/*/
Function u_FIS028A1( uPar1 )
Return( CriaInd( uPar1 ) )

/*/{Protheus.doc} u_FIS028A2
Substituicao de funcao Static Call por User Function MP 12.1.33
@type function
@version 1.0
@author Edvar   / Flek Solution
@since 16/03/2022
@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
/*/
Function u_FIS028A2( uPar1, uPar2, uPar3 )
Return( CriaTmpT( uPar1, uPar2, uPar3 ) )

/*/{Protheus.doc} u_FIS028A3
Substituicao de funcao Static Call por User Function MP 12.1.33
@type function
@version 1.0
@author Edvar   / Flek Solution
@since 16/03/2022
@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
/*/
Function u_FIS028A3()
Return( SalvaXml()) 

/*/{Protheus.doc} u_FIS028A4
Substituicao de funcao Static Call por User Function MP 12.1.33
@type function
@version 1.0
@author Edvar   / Flek Solution
@since 16/03/2022
@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
/*/
Function u_FIS028A4()
Return( CriaExcel()) 

/*/{Protheus.doc} u_FIS028A5
Substituicao de funcao Static Call por User Function MP 12.1.33
@type function
@version 1.0
@author Edvar   / Flek Solution
@since 16/03/2022
@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
/*/
Function u_FIS028A5( uPar1 )
Return( xRecVer( uPar1 )) 

/*/{Protheus.doc} u_FIS028A6
Substituicao de funcao Static Call por User Function MP 12.1.33
@type function
@version 1.0
@author Edvar   / Flek Solution
@since 16/03/2022
@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
/*/
Function u_FIS028A6()
Return( xABrw05()) 

/*/{Protheus.doc} u_FIS028A7
Substituicao de funcao Static Call por User Function MP 12.1.33
@type function
@version 1.0
@author Edvar   / Flek Solution
@since 16/03/2022
@history Ticket 70142  - Edvar   / Flek Solution - 23/03/2022 - Substituicao de funcao Static Call por User Function MP 12.1.33
/*/
Function u_FIS028A7()
Return( xABrw27()) 
